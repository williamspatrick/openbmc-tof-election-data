{
    "project": "openbmc/openbmc",
    "branch": "master",
    "topic": "sbp1",
    "id": "Id3fee63e4079a145319c3f35563b59657152f317",
    "number": 65556,
    "subject": "meta-ibm/sbp1: Parse CPU PIROM for inventory",
    "owner": {
        "name": "Patrick Rudolph",
        "email": "patrick.rudolph@9elements.com",
        "username": "PatrickRudolph"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openbmc/+/65556",
    "hashtags": [],
    "createdOn": 1690787138,
    "lastUpdated": 1693324297,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1690787138,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1690787693,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690787693,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1690793756,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/18845/"
        },
        {
            "timestamp": 1690794461,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/18845/ : FAILURE"
        },
        {
            "timestamp": 1690877450,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1690878017,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690878017,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1690915711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/18890/"
        },
        {
            "timestamp": 1690916797,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/18890/ : FAILURE"
        },
        {
            "timestamp": 1692626231,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1692626427,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692651321,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692684521,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692705709,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692852442,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692861586,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693193834,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693205437,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693205994,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Abandoned\n\nNeeds to be implemented in C++"
        },
        {
            "timestamp": 1693206017,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693316162,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693324297,
            "reviewer": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "208848dfdb9c40a8f91b28eac0c95a1187a410ef",
            "parents": [
                "92f2ec03920fb7e08348e04f7f75efc0928c4aad"
            ],
            "ref": "refs/changes/56/65556/1",
            "uploader": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "createdOn": 1690787138,
            "author": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/packagegroups/packagegroup-obmc-apps.bbappend",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/70-intel-pirom-parser.rules",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser.bb",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/decode-pirom.sh",
                    "type": "ADDED",
                    "insertions": 163,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/intel-pirom-parser@.service",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 232,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "c112ecbbb5f4deb0d0eb370e72a701ebf4316c55",
            "parents": [
                "11cc54e3702cc45ab918460c66e5e0bf133958fb"
            ],
            "ref": "refs/changes/56/65556/2",
            "uploader": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "createdOn": 1690877450,
            "author": {
                "name": "Patrick Rudolph",
                "email": "patrick.rudolph@9elements.com",
                "username": "PatrickRudolph"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Can we use the open power vpd-parser to do the parsing as the base infrastructure is already there. we just need to add the new parser."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "Just wondering why the open power code would do Intel CPU specific parsing?\nShould this be moved to a generic non open power based tool?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "smbios-mdr has some PIROM parsing over at https://github.com/openbmc/smbios-mdr/blob/21cb0e8750b76fff5860b985d8122fd653ca8a1f/src/cpuinfo_main.cpp#L188. Not documented super well though so it's not clear how much it supports. So yeah, we can:\n- Look into enhancing that smbio-mdr code\n- Look into getting this support into entity-manager\n- Look into breaking out the non-openpower specific code from openpower-vpd-parser into a separate repo (although this PIROM seems pretty specific to x86 so not sure that would belong in a generic repo either)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "This is a question for the OpenBMC architects: Where should inventory data read from i2c EEPROMs be decoded?\n\nYes, smbios-mdr is another example of \"bash is bad, let's merge some C++ somewhere\". The utility was designed to read SMBIOS over PECI, while PIROM is read over I2C. The utility only reads one string out of the PIROM, only when PECI is working, only one some specific platforms and only when using some anchient OpenBMC kernel fork.\n\nThe same goes for open power vpd-parser. Why is it able to parse JEDEC DIMM SPD data, as it was designed for reading proprietary VPD data? Why isn't JEDEC DIMM SPD parsing done in entity-manager or some generic repo, to be used by every board that has JEDEC comaptible DIMMs?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> This is a question for the OpenBMC architects: Where should inventory data read from i2c EEPROMs be decoded?\n\nI'm not sure we have such a thing as \"openbmc architects\". \ud83d\ude0a\n\nWhere would you suggest it be done in a common way?  Net is you just need to propose what you think is better and get buy-in from the appropriate maintainers."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "The repo used for vpd parser is open power as the initial repo was used for open-power only parser, we later started use this for IBM products and so have enhanced it with open-power supported vpd parsers , IPZ (IBM based) vpd parsers . DDIMM (DDr5 and DDR4) based parsers, keyword based vpd parsers, Standard DDR4 and DDR5 based vpd parsers.\nI am willing to add this parser also to it, \n\nFurther as Patrick Williams mentioned above , you could also suggest where you would like to put this so that it is in a common place.\nI am open to ideas."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "As an OpenBmc user I would expect certain tools to be available. I would expect a DIMM SPD parser to be available for general use. It should be *documented*, *easy to add to the build* and *easy to configure*.\nThe assumption is that probably 100% of all supported boards use DDR4 DIMMs or DDR5 DIMMs, though I cannot tell how many could be directly accessed over I2C from the BMC. With a marketshare of 80% Intel's CPUs are far more common than others, so I would expect an Intel PIROM parser to be available as well.\n\n\n*Documentation:*\n\nThe state of documentation is very poor and it's almost impossible to use OpenBMC without deep knowledge/reading the source code of every single package.\nLooking at openpower-vpd-parser neither the Readme nor the filenames suggest it's capable of parsing DIMM SPD data.\nSimilar state when looking at smbios-mdr. It doesn't mention DIMMs, PIROM or inventory, so it's impossible to understand what it does.\n\n\n*Easy to build:*\n\nopenpower-vpd-parser is easy to build:\n`RDEPENDS:${PN}-inventory:append = \" openpower-fru-vpd\"`\n\n\n*Easy to configure:*\n\nCurrently it's not. openpower-vpd-parser requires writing systemd services, another config file beside entity-manger, udev-rules to start the systemd service on driver loading.\n\nMy expectation would be that I don't have to touch anything in the tool that does the parsing. As an exmaple, the smbios-mdr cpuinfo works without any additional configuration files.\n\n\n**Summary:**\nI'd suggest moving openpower-vpd-parser to openbmc/vpd-parser, get rid of custom udev rules and config files, update the documentation and extend entity-manager to support VPD parsing.\nopenbmc/vpd-parser should read entity-manager published config, load drivers on it's own, decode the VPD data and publish it on dbus.\n\nThe VPD data provided by entity-manager would hold:\n* I2C bus\n* I2C address\n* driver\n* VPD type (\"SPD\", \"IPZ\", \"keyword\", \"PIROM\", \"IPMI\", ...)\n* Inventory path\n* Extra Interfaces\n* optional map of keywords to map VPD entries to inventory properties\n* optional presence gpio\n\nI know that this is lot's of work and might not be feasible on short term basis."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "So how do we go about fixing this for sbp1 ? Just wanted to know your take on the matter. yes currently moving the parsers to work on entity manager is not feasible in the time specified, but having said that we do have the same done in the long run where this will be done. I am leaning towards having it in the open-power parser currently for this system , what are your thought ?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "Will update openpower vpd-parser and use that instead of bash script."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "Had a look at openpower vpd-parser and I don't see how to autodetect the PIROM VPD. It has no identifier or position fixed and well known bits."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "ahh, that's a bummer , let me also take a look, meanwhile any documentation for this PIROM VPD ?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Rudolph",
                        "email": "patrick.rudolph@9elements.com",
                        "username": "PatrickRudolph"
                    },
                    "message": "The older ones are available without NDA, for example here:\nhttps://www.intel.com/content/dam/www/public/us/en/documents/datasheets/2nd-gen-xeon-scalable-datasheet-vol-1.pdf"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/packagegroups/packagegroup-obmc-apps.bbappend",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/70-intel-pirom-parser.rules",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser.bb",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/decode-pirom.sh",
                    "type": "ADDED",
                    "insertions": 163,
                    "deletions": 0
                },
                {
                    "file": "meta-ibm/meta-sbp1/recipes-phosphor/vpd/pirom-parser/intel-pirom-parser@.service",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 232,
            "sizeDeletions": 0
        }
    ]
}