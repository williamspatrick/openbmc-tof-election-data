{
    "project": "openbmc/openpower-debug-collector",
    "branch": "master",
    "id": "I0beacaa3172d0e6a430519adf1dabce813bc8ecd",
    "number": 64281,
    "subject": "Functional state check removed in dump collection",
    "owner": {
        "name": "Dhruvaraj S",
        "email": "dhruvaraj@gmail.com",
        "username": "dhruvibm"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openpower-debug-collector/+/64281",
    "hashtags": [],
    "createdOn": 1687165173,
    "lastUpdated": 1699259582,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1687165173,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1687165192,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1687165192,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1687165228,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/69185/ : SUCCESS"
        },
        {
            "timestamp": 1687173910,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687174323,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687185053,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1687185105,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687231017,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687262897,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687269121,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1687272453,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687275294,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687275808,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687276091,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687285479,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687324972,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687355878,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687357518,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687358054,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687367329,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687374730,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687377925,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687441719,
            "reviewer": {
                "name": "Dan Crowell",
                "email": "dcrowell@us.ibm.com",
                "username": "dcrowell77"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687443684,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1687443738,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1699259543,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Removed reviewer Jayanth Othayoth <ojayanth@gmail.com> with the following votes:\n\n* Code-Review+1 by Jayanth Othayoth <ojayanth@gmail.com>\n"
        },
        {
            "timestamp": 1699259548,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1699259582,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Removed cc Jayanth Othayoth <ojayanth@gmail.com> with the following votes:\n\n* Code-Review+1 by Jayanth Othayoth <ojayanth@gmail.com>\n"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "e1d82e3161b8bd626a26f94a54def815b10dc9a3",
            "parents": [
                "1feb4ebf200b98c1028c030b575e88dd163fcaa2"
            ],
            "ref": "refs/changes/81/64281/1",
            "uploader": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "createdOn": 1687165173,
            "author": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "idle for long time. Add me back once this is ready for review."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "MARRI DEVENDER RAO",
                        "email": "devenrao@in.ibm.com",
                        "username": "devenrao"
                    },
                    "message": "is this functional check intentional, I thought we do not want to check this?"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "this is needed, mentioned in the commit message too"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "MARRI DEVENDER RAO",
                        "email": "devenrao@in.ibm.com",
                        "username": "devenrao"
                    },
                    "message": "ok did not read the last statement now good"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "By design BMC/Host never sets Primary processor functional sate to nonfunctional.  Once system booted.  Looks like this is hack to cover some under cover issues in the code."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "No, The host may set functional state of the processor to non-functional after a TI in such cases if the dump is attempted to collect that will be skipped even if the SBE is ready to collect the dump. This is a bug in the code.\n\nIn fact the checking for the functional state was workaround when the SBE state checking was not available, so that needs to be removed."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": ">The host may set functional state of the processor to non-functional after a TI\nIf this is valid case BMC will fail to boot the step0 , becasue istep runs on the functional processor only.\n\n@dan \nDuring intial development time , based on hostboot team's request , BMC disbled to set non functional primary processor , to keep IPL moving. Is there design assumption chnage happend now?"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "If hostboot sets non-functional after the step0, how that is stopping the boot at step0?"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "TI -> you said hostboot sets to non functional ( primary processor) -> BMC attempt 3 reboot attempts usally in this path. Question is are we expecting fail  next boot here? That is the part i want to clear from your statement."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "between hostboot TI and reboot there can be a hostboot dump collection"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dan Crowell",
                        "email": "dcrowell@us.ibm.com",
                        "username": "dcrowell77"
                    },
                    "message": "The specific scenario we saw was that for some reason HB was unable to detect processor 0 (I think it was a vpd issue) and somehow we eventually we TIed.  As part of every shutdown path we push our version of data into the BMC's devtree.  So in this case we pushed down the fact that proc0 wasn't installed.  This is obviously a lie because HB was running on it at the time.\n\n> BMC disbled to set non functional primary processor , to keep IPL moving. Is there design assumption chnage happend now?\n\nThe request to make dumps work all the time is orthogonal to the BMC behavior to change the bootproc state or not.  PHAL isn't able to intercept the state change from Hostboot since it is just a file write, so our (incorrect in this case) state wins and breaks the dump that we need to debug the mistake."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Thanks for the update . Are we ok to stop the ipl in this case? In case VPD read failure is intermittent issue and and detected at first boot, system may end-up with quiesce state."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dan Crowell",
                        "email": "dcrowell@us.ibm.com",
                        "username": "dcrowell77"
                    },
                    "message": "This is in the dump path, so the ipl should already be stopped.  One the dump is collected, the reboot policy should apply as normal."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "in the BMC reboot path , ( aka reconfigure loopam refering here). BMC is not going to honor the host updated functional state. Looks like IPL is going to fail in this case . basically hwp executes only on functional processor."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dan Crowell",
                        "email": "dcrowell@us.ibm.com",
                        "username": "dcrowell77"
                    },
                    "message": "You can continue to ignore the state for proc0 in all of the current cases."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "This seems to b breaking the design direction from Host vs BMC . BMC is setting presence based on fsi presence and able to cleanly do harwadre access here. Due to fix host side issues deviating from original design direction seems to be not reasonable here. \nWondering why host is setting primary processor non-functional here .As per design direction agreed initally , both Host/BMC is not going set primary [rocessor non-functional to keep ipl moving. am i missing something here?"
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dan Crowell",
                        "email": "dcrowell@us.ibm.com",
                        "username": "dcrowell77"
                    },
                    "message": "Hostboot's state reflects what it sees.  I believe that in the case I saw there was some kind of issue reading the module vpd.  If we can't read the vpd then we mark the associated part as non-existent.  Hostboot does not have a bunch of special-case code to keep booting if the bootproc isn't functional since that would be invalid.  Hostboot will kill the boot if we detect a nonfunctional bootproc regardless of the reason.  The BMC on the other hand needs to gather FFDC on whatever parts make sense."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "I don't think a hostboot dump will be requested in a reconfig loop path, if a hostboot dump is requested and the proc0 is updated as non-functional then we will end up skipping the hostboot dump collection.\n\nMore than that, since we implemented sbe states, the checking of functional state of the proc may not be necessary."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Dan Crowell",
                        "email": "dcrowell@us.ibm.com",
                        "username": "dcrowell77"
                    },
                    "message": "> the proc0 is updated as non-functional then we will end up skipping the hostboot dump collection\n\nNo.  That is exactly the request I'm making.  I want the dump to be attempted regardless of the state no matter what the scenario is."
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "@dhruv"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "dump/dump_collect.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -33
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 33
        }
    ]
}