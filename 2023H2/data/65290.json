{
    "project": "openbmc/phosphor-logging",
    "branch": "master",
    "id": "I1db88139406eb617aa713740d5ccb6c9420ca773",
    "number": 65290,
    "subject": "lg2: Add mutex to avoid stderr line corruption",
    "owner": {
        "name": "Josh Lehan",
        "email": "krellan@google.com",
        "username": "Krellan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-logging/+/65290",
    "hashtags": [],
    "createdOn": 1689904086,
    "lastUpdated": 1690322512,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1689904086,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1689904115,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1689904115,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1689904181,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1689904674,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/71640/ : SUCCESS"
        },
        {
            "timestamp": 1689904704,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1689904853,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1689913304,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1689918620,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1689933785,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1689934641,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1690054171,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1690054209,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690054209,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1690054310,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1690054774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/71718/ : SUCCESS"
        },
        {
            "timestamp": 1690060354,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690066825,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690077285,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690077331,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690219380,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690221655,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1690241560,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1690241591,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1690241608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690241608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1690241623,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1690241648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690241648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1690241649,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/71869/ : ABORTED"
        },
        {
            "timestamp": 1690242016,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1690242209,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/71870/ : SUCCESS"
        },
        {
            "timestamp": 1690242223,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1690242267,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1690242267,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1690242343,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1690242797,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1690242828,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/71871/ : SUCCESS"
        },
        {
            "timestamp": 1690248836,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1690322156,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1690322512,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8f892adc7701fd84f1b0943116cb291326ff39f9",
            "parents": [
                "a561ff6add616059eb759a32cc73ec2113f09283"
            ],
            "ref": "refs/changes/90/65290/1",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1689904086,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I think you need to link against pthreads in the library for this to work universally."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm. I looked around online and found conflicting documentation. The general consensus seems to be that newer C++ year standards include thread support \"for free\", while older C++ standards require `-lpthread` and/or simply `-pthread`. There are legacy reasons why a separate library might be required, just like `-lm` for math functions.\n\nI think I found a way to do it correctly in Meson, so that threading dependencies will be added automatically if found, and if not found, this mutex feature will be disabled entirely (as it is not needed on a system without threading support)."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: prefer you move this into the cerr function too."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Done."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: std::mutex isn\u2019t necessary here."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Nice, did not know that. Fixed."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Take the lock here, not earlier than needed."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "doesn\u2019t endl do a flush?"
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There are outputs earlier though. We need the lock before the while."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "If it's anything like C, stderr is unbuffered, so every write would \"flush\" even before the `endl` (a quick search isn't finding an authoritative confirmation of that, but a few non-authoritative sources seem to agree).  So yeah, adding an explicit flush here seems redundant."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Yes"
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Right..."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Inserts a newline character into the output sequence os and flushes it as if by calling os.put(os.widen('\\n')) followed by os.flush().\n\nhttps://en.cppreference.com/w/cpp/io/manip/endl"
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Nice, good to know that `std::endl` includes the effect of `std::flush` \"for free\" already, so I don't need to flush it separately here. Fixed."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "There are many outputs to `std::cerr` throughout this function, the lock needs to cover all of them.\n\nI thought of something. Making many separate calls to `std::cerr` seems wasteful, it would be better to build up a `stringstream` first, then write that all at once to stderr. I'll try that instead. It's faster, also!"
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It would be good to see if there is a performance / size trade off for eliminating the cerr calls. since it is buffered-IO, I would expect similar performance, but maybe data would show me wrong. (sstream will end up with allocations instead of writing to the existing buffer space)"
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I did a little of that already, when testing. It's faster now, to build it all up in a stringstream first, then write it out all at once. It was 900ms in the first version of this patch, now it's 600ms, compared with not having the mutex at all, which is 500ms (but thread-unsafe). However, part of that speedup might be due to eliminating the extra flush that I had before."
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "std::cerr is not buffered, it just calls write() every `<<` operator. So yeah, we should see a speedup from building a memory string first."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "deef236fbf7d63fff11994b18dbdfcdaf6dc26e4",
            "parents": [
                "1cb59f70f1fa1caa10c700ba954e9b5fd85afed5"
            ],
            "ref": "refs/changes/90/65290/2",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1690054171,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Code is fine by me."
                },
                {
                    "file": "lib/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Don't make it optional, there is no good way to enforce that dependent things do / don't use threads."
                },
                {
                    "file": "lib/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "This is the intention. I don't want to enforce a threads requirement. I want to make it work both with and without threads enabled, to minimize disruption to any dependent."
                },
                {
                    "file": "lib/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not sure we need the extra complexity around making it selectable, which is what wak is referring to.  Most modern libstdc++ depend on thread anyhow, so it isn't really adding anything new to the dependency.  We're going to end up enabling this by default and in all our Yocto recipes.  So, what advantage do we gain in the meson complexity?"
                },
                {
                    "file": "lib/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, I thought there was a requirement to minimize disruption.\n\nIf we want to change it so that threads are always required, that does make things simpler. Changed it accordingly, so now, threads are required."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 57,
            "sizeDeletions": 9
        },
        {
            "number": 3,
            "revision": "0e53c5cb43e027d467f3a41bc649e990d4361e95",
            "parents": [
                "9f5c7349233ee7f2d52d893409d00bac68558958"
            ],
            "ref": "refs/changes/90/65290/3",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1690241560,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 9
        },
        {
            "number": 4,
            "revision": "9ddad5c4a704f4cee022e153f0ed6c5bda8359ff",
            "parents": [
                "1cb59f70f1fa1caa10c700ba954e9b5fd85afed5"
            ],
            "ref": "refs/changes/90/65290/4",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1690241623,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "lib/meson.build",
                    "line": 9,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: this is the default, just use `dependency('threads')`"
                },
                {
                    "file": "lib/meson.build",
                    "line": 9,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Did not know that. Done."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 43,
            "sizeDeletions": 9
        },
        {
            "number": 5,
            "revision": "230f9f94b8d6e37c4c1fb65bfd9dab76851a8d71",
            "parents": [
                "1cb59f70f1fa1caa10c700ba954e9b5fd85afed5"
            ],
            "ref": "refs/changes/90/65290/5",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1690242223,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "lib/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "lib/lg2_logger.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 9
        }
    ]
}