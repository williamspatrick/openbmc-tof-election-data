{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I712be53aa4bd1b5bb1c5df1db3de4abd9e166046",
    "number": 67015,
    "subject": "designs: Split nvmesensor from dbus-sensors",
    "owner": {
        "name": "Andrew Jeffery",
        "email": "andrew@codeconstruct.com.au",
        "username": "amboar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/67015",
    "hashtags": [],
    "createdOn": 1697005820,
    "lastUpdated": 1698110071,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1697005820,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1697005864,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1697005922,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1697006115,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1697024993,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1697025616,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1697030706,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1697031237,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Unset private"
        },
        {
            "timestamp": 1697032015,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7: Ok-To-Test+1"
        },
        {
            "timestamp": 1697032042,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/74889/ : FAILURE"
        },
        {
            "timestamp": 1697032120,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697032149,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697032150,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1697032172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74890/ : SUCCESS"
        },
        {
            "timestamp": 1697406668,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1697499950,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697604837,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1697606690,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(5 comments)"
        },
        {
            "timestamp": 1697611653,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1697612130,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1698110071,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Abandoned\n\nWe can defer this for a bit and experiment with some of the strategies outlined by Ed. If we still have practical concerns we can re-open this proposal and bolster the arguments with experience."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b3c5a6d8956757e930d8fba4c81a9f10511d4b72",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/1",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697005820,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "2e8f59369c7608167aa3198a03fa769a01faf9d3",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/2",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697005864,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "0a2059207c91f9381887cd7e2ed0fe93ee3f8c86",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/3",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697005922,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "d3d20cb0c672d87a32bb2aeb131389fc87b42387",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/4",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697006115,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "c842775d68523533a1bc99a85af8ae57e772bc87",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/5",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697024993,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "bde61c4b1b45e1753ed7e0e6dd22f7fde467cf8d",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/6",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697025616,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 261,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 271,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "3574a01e9302e36b9a80bd118e9b08b3292cf478",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/7",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697030706,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 407,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 417,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "c42c13186e21fab6b5ec171d818e10422344ef6f",
            "parents": [
                "717d273cf8bceac3868a278aeb34d19e8d74c1b3"
            ],
            "ref": "refs/changes/15/67015/8",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1697032120,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, I don't really get what we're trying to accomplish here.  As it stands, the project routinely gets the complaint that we have too much duplication, and there's no documentation of which daemons people should be using.  This is obviously not the fault of this design doc, but it's just \"yet another thing\" that people now have to decide.\n\nI'm also a little worried about duplication of code in the thresholds, util, and sensor libraries within dbus-sensors.  I don't see any plan for breaking those out, so I'm assuming the plan is to just duplicate the code?  That doesn't sound great.\n\nOverall, I'm not following what problem it's solving, and I'd like to propose a simpler compromise:\n\ndbus-sensors repository gets renamed to dbus-reactors.  This needed to happen a long time ago, as there's a lot of non-sensor logic in dbus-sensors today, and already people are confused by the name.\n\nnvmesensor gets renamed in meson to nvmed, and moved into a sub folder in dbus sensors (and for that matter, we should move each sensor under its own folder anyway).  Andrew gets added in the OWNERS file.\n\nDoes that address that concerns?  The only technical reason I could think of for needing a repo would be if we intend on using this outside of OpenBMC, in which case, it would have my full support, but as-written, this really feels like it's just making things more complicated for developers."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hey Ed, thanks for the thoughts. I'm digesting your feedback. I'll respond once I feel I have something coherent."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Overall, I don't really get what we're trying to accomplish here.\n\nThis sentence is a bit of a tar-pit for me mentally. I thought I made some reasonable arguments for wanting to separate nvmesensor out from dbus-sensors. Maybe they're not air-tight or fully substantiated. I could improve that, but I'm not sure it's worth the effort if there are underlying fundamental disagreements. It feels like there are. I think we need to understand that before I tackle the other points here."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Overall, I don't really get what we're trying to accomplish here.\n> \n> This sentence is a bit of a tar-pit for me mentally. I thought I made some reasonable arguments for wanting to separate nvmesensor out from dbus-sensors. \n\nThe arg\n\n> Maybe they're not air-tight or fully substantiated. I could improve that, but I'm not sure it's worth the effort if there are underlying fundamental disagreements. It feels like there are. I think we need to understand that before I tackle the other points here."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "To be clear, Andrew has done many good things for the project, and I believed he comes that this with good intentions.  My only request was to see if something simpler would also solve the problem.  Clearly that's not believed to be the case, so I'm fine with a new repo so long as we can sort out the shared code problems."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Thanks. The proposal should be able to account for any counter-arguments - my arguments need to stand on their own. I think where we've landed is that I've made a case, but not a compelling case, for splitting out nvmesensor.\n\nThat's okay. I think we can set this proposal aside for now. We can make some of the improvements you've suggested (move daemon-specific code into daemon-specific subdirectories, rename the project to reset expectations, adjust OWNERS settings to control merge capabilities of maintainers) and see if they address my concerns. If not, we can reassess when we have more data.\n\nI'll leave this open for a couple of days to allow for other comments. If there's nothing further I'll abandon the proposal and close the issue on the TOF repository.\n\nThanks for the feedback!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wow.... forgive my previous typos.....  Clearly it's too late to be reviewing this stuff."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are these problems for the current setup?  Just make nvme a folder, and be done with it?"
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think with your background of wanting a monorepo[[1][],[2][]] it doesn't appear as a problem to you. I don't share the view that monorepos are an obvious win, and we've struggled to find common ground on the concept in the past. I'm concerned your perspective there is the sticking point and any more detailed arguments I make here won't matter in comparison to that broad brush.\n\n[1]: https://lore.kernel.org/openbmc/CAH2-KxAJS_U8=meCxp8ue7n0bmnzeRpyZOPZpy0h1cFEbbz-HA@mail.gmail.com/\n[2]: https://lore.kernel.org/openbmc/3df049fc-e5ec-449e-b696-a2ca86c37ed3@www.fastmail.com/\n\nHowever, to try to address your question:\n\nRegarding 1, perhaps this is solved by renaming the repository to acknowledge its role as you suggest. However, it would be good to substantiate the claim that it has gone beyond just sensors already so we have a shared understanding of the scope of the problem.\n\nRegarding 2, if a particular daemon dominates the codebase it can become a bit of an activity distraction for people not working on it. Separating out the code helps separate the distraction.\n\nRegarding 3, dbus-sensors is currently home to 11 daemons. Refactorings in one can easily escalate to a generalised solution that should be applied across many or all of them. The (comparative, future) complexity of something like nvmesensor makes me wary of such refactorings. Separating out the code isolates it in space. Anyone contributing to the isolated codebase are specifically there to contribute to nvmesensor and the burden of testing it is a basic expectation. That's less true if a refactoring motivated by something in psusensor escalates to also touching nvmesensor.\n\nA particular concern is that much of the (future) function of nvmesensor is driven by a number of complex standards documents. Having some familiarity with them all is not an expectation we can level at all dbus-sensors contributors, but can be expected of anyone needing to contribute to an isolated codebase. In my opinion the separation addresses social and maintenance concerns rather than a specific technical deficiency that can be solved by just making nvme a folder and being done with it."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I think with your background of wanting a monorepo[[1][],[2][]] it doesn't appear as a problem to you.\n\nI think my background on being a dbus-sensors maintainer also helps.  I do think having all the em reactors in one place has helped dbus sensor to have intelligent defaults (all sensors included by default) and get adoption faster than would've otherwise happened if it was a bunch of repos.\n\n> I don't share the view that monorepos are an obvious win, and we've struggled to find common ground on the concept in the past. I'm concerned your perspective there is the sticking point and any more detailed arguments I make here won't matter in comparison to that broad brush.\n\nLike we talked about on chat, my opinions here aren't strong.  If you'd like a repo, I'm not here to stand in the way, I just want to understand the reasoning, and make sure we actually get the result we're looking for.  As-is, we're having trouble finding folks to review and test nvme commits [1].  Maybe this repo makes folks more willing to contribute?\n\n[1] https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/63777\n\n> \n> [1]: https://lore.kernel.org/openbmc/CAH2-KxAJS_U8=meCxp8ue7n0bmnzeRpyZOPZpy0h1cFEbbz-HA@mail.gmail.com/\n> [2]: https://lore.kernel.org/openbmc/3df049fc-e5ec-449e-b696-a2ca86c37ed3@www.fastmail.com/\n> \n> However, to try to address your question:\n> \n> Regarding 1, perhaps this is solved by renaming the repository to acknowledge its role as you suggest. However, it would be good to substantiate the claim that it has gone beyond just sensors already so we have a shared understanding of the scope of the problem.\n> \n> Regarding 2, if a particular daemon dominates the codebase it can become a bit of an activity distraction for people not working on it. Separating out the code helps separate the distraction.\n> \n> Regarding 3, dbus-sensors is currently home to 11 daemons. Refactorings in one can easily escalate to a generalised solution that should be applied across many or all of them. The (comparative, future) complexity of something like nvmesensor makes me wary of such refactorings. \n\n\nWhy are generalized refactorings a problem?  Maybe I misunderstood the above, but making refactorings apply to a generalized solution seems like a good thing?\n\n> Separating out the code isolates it in space. Anyone contributing to the isolated codebase are specifically there to contribute to nvmesensor and the burden of testing it is a basic expectation. That's less true if a refactoring motivated by something in psusensor escalates to also touching nvmesensor.\n\nThis is a very fair point, but this is also true if there's any shared code.  We'll have to figure out where to draw the line on shared code versus test/refactor burden.\n\n> \n> A particular concern is that much of the (future) function of nvmesensor is driven by a number of complex standards documents. Having some familiarity with them all is not an expectation we can level at all dbus-sensors contributors,\n\nThis is fair, but the OWNERS files have a inherit flag that I think covers this?  We can give subfolder maintainership that's exclusive to those with the spec understanding?\n\n> but can be expected of anyone needing to contribute to an isolated codebase. In my opinion the separation addresses social and maintenance concerns rather than a specific technical deficiency that can be solved by just making nvme a folder and being done with it.\n\nI'm not sure I agree, but that's fine.  My opinions here aren't strong."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I think my background on being a dbus-sensors maintainer also helps. I do think having all the em reactors in one place has helped dbus sensor to have intelligent defaults (all sensors included by default) and get adoption faster than would've otherwise happened if it was a bunch of repos.\n\nThat's a fair point. I wasn't intending to exclude your experience there, but did want to highlight your preference for a significant reduction in repos \ud83d\ude0a\n\n> Why are generalized refactorings a problem? Maybe I misunderstood the above, but making refactorings apply to a generalized solution seems like a good thing?\n\nThe paragraph was meant to be taken in context with the one following it :) Refactorings are good, though I have concerns about some of the complexities involved, that's all.\n\n> This is fair, but the OWNERS files have a inherit flag that I think covers this? We can give subfolder maintainership that's exclusive to those with the spec understanding?\n\nThat sounds like it's worth an experiment."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?????  nvmed is surely going to reuse the existing sensor, thresholding, and utils code?  That's going to have api impact, right?"
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 251,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You're considering the exposed D-Bus interfaces as the API here? Or something else? If we can clarify that then I think we can improve this section."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are 3 shared libraries in the dbus-sensors today.  They contain the utils code that's shared across all sensors (there's other shared code in headers as well).\n\nSpecifically these:\n\nhttps://github.com/openbmc/dbus-sensors/blob/e98adf5bf33c6651fd9e854a37cc5056df5f683b/src/meson.build#L8\n\nI'm ok with a little ambiguity here, so long as the plan isn't \"reimplement thresholding and EM dbus scanning/update code in an nvme specific way.\""
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 251,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm not sure how you intended \"reimplement\" to be interpreted, but the rough intent was to duplicate the existing code into the separate repo \ud83d\ude0a"
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like the exact opposite of what we want.  I've heard many times developers complaining that we have too many repositories, and it's difficult to find stuff."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> This seems like the exact opposite of what we want. I've heard many times developers complaining that we have too many repositories\n\nI'm familiar with your concerns here. However, much of this seemed to stem from internal discussion. I haven't seen much of it in the community itself. Can we substantiate this with first-hand commentary in the community so we can be confident it's something the community cares about? If you could provide a few references that would be helpful.\n\nOtherwise, we're going to rat-hole ourselves about exactly what it is that \"we\" want.\n\n> it's difficult to find stuff.\n\nI feel the problem is that we have a lot of stuff. One way or another stuff is difficult to find because of the volume. I'm not following the leap that it's a lot of repositories that are causing that. Github code search exists. One way or another someone's going to have to either enable the `nvmesensor` `PACKAGECONFIG` for `dbus-sensors` or add the `nvmesensor` package to their `IMAGE_INSTALL` (via whatever mechanism they choose). It's the same amount of typing one way or another. It's not clear to me that splitting it out makes the integration worse."
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > This seems like the exact opposite of what we want. I've heard many times developers complaining that we have too many repositories\n> \n> I'm familiar with your concerns here. However, much of this seemed to stem from internal discussion. I haven't seen much of it in the community itself.\n\nIt's been talked about several times on discord, and was one of the questions asked in OSFC at Patricks talk last week.\n\n> Can we substantiate this with first-hand commentary in the community so we can be confident it's something the community cares about? If you could provide a few references that would be helpful.\n> \n> Otherwise, we're going to rat-hole ourselves about exactly what it is that \"we\" want.\n> \n> > it's difficult to find stuff.\n> \n> I feel the problem is that we have a lot of stuff. One way or another stuff is difficult to find because of the volume. I'm not following the leap that it's a lot of repositories that are causing that. Github code search exists. One way or another someone's going to have to either enable the `nvmesensor` `PACKAGECONFIG` for `dbus-sensors` or add the `nvmesensor` package to their `IMAGE_INSTALL` (via whatever mechanism they choose). It's the same amount of typing one way or another. It's not clear to me that splitting it out makes the integration works\n\nI will concede here that most of it is undocumented, but has been discussed many times.  This is the wrong place to have a generalized discussion around repo count, so I will close this specific comment."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/nvmesensor-code-migration.md",
                    "type": "ADDED",
                    "insertions": 430,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 440,
            "sizeDeletions": 0
        }
    ]
}