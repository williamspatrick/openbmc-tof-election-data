{
    "project": "openbmc/docs",
    "branch": "master",
    "topic": "design",
    "id": "Ica393277e4e65d24df33c0e812bd664192488f26",
    "number": 61256,
    "subject": "Add Redfish device enablement design document",
    "owner": {
        "name": "Harsh Tyagi",
        "email": "harsh23tyagi11@gmail.com",
        "username": "harsh23tyagi11"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/61256",
    "hashtags": [],
    "createdOn": 1677637918,
    "lastUpdated": 1689804807,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1677637918,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1677637950,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677637950,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1677637974,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61884/ : SUCCESS"
        },
        {
            "timestamp": 1677638294,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677638330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677638330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1677638353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61885/ : SUCCESS"
        },
        {
            "timestamp": 1677638509,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Topic set to design"
        },
        {
            "timestamp": 1677644650,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(4 comments)"
        },
        {
            "timestamp": 1677697056,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1677697879,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1677698945,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1678252736,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1679295625,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1679331316,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1679331983,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679332027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679332027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1679332053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62945/ : FAILURE"
        },
        {
            "timestamp": 1679332478,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679332516,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679332517,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1679332539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62946/ : FAILURE"
        },
        {
            "timestamp": 1679332606,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679332656,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679332657,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1679332683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62947/ : SUCCESS"
        },
        {
            "timestamp": 1679332730,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1679340683,
            "reviewer": {
                "name": "Nikhil Jain C S",
                "email": "nikhil.jain.c.s@intel.com",
                "username": "njaincs"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1679356242,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1679382462,
            "reviewer": {
                "name": "PrithviAPai",
                "email": "prithvi.a.pai@intel.com",
                "username": "PrithviAPai"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1679382495,
            "reviewer": {
                "name": "PrithviAPai",
                "email": "prithvi.a.pai@intel.com",
                "username": "PrithviAPai"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1679419004,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1679534453,
            "reviewer": {
                "name": "PrithviAPai",
                "email": "prithvi.a.pai@intel.com",
                "username": "PrithviAPai"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1679609203,
            "reviewer": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1679632298,
            "reviewer": {
                "name": "PrithviAPai",
                "email": "prithvi.a.pai@intel.com",
                "username": "PrithviAPai"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1680507379,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1683734316,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1689804807,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "314ff98029f6929d05f4d32c70090763e4e35c94",
            "parents": [
                "223193951d3c45670a8a415ac0e87b5ea97e71fb"
            ],
            "ref": "refs/changes/56/61256/1",
            "uploader": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "createdOn": 1677637918,
            "author": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "a85ecdf9931178d1676321af92ac139583244681",
            "parents": [
                "223193951d3c45670a8a415ac0e87b5ea97e71fb"
            ],
            "ref": "refs/changes/56/61256/2",
            "uploader": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "createdOn": 1677638294,
            "author": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Thank you for the proposal, I think we need some more details on the daemon design though."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "The implementation details should be in a different section. \"Problem description\" should just list requirements and describe what functionality we need, not how the solution will be organized or written."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Do you mean the existing pldm daemon would be extended to handle RDE as well? Or is this a new daemon proposal? If it is the former case, I suggest we call it pldm daemon itself and not RDE daemon."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "It is a new daemon. RDE daemon is a sub directory in the `pldm` repo itself."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "It would be good to mention the operations supported by RDE daemon(GET, HEAD, POST, PATCH, DELETE).\nThe phases in which the operations would be supported etc"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Sounds good! I will add more information about the operations. We are planning to start with GET request and then expand further (with PATCH, POST, etc) with different request. \n\nI can add a section of implementation rollout plan for different operations supported by RDE Daemon."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "Please, that would be very helpful."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "typo: CRUD (also I recommend spelling it out on first use)"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Can you capture the design details of the daemon? This should preferably include:\n(1) D-Bus interfaces hosted by the objects of the daemon\n(2) RDE is a special protocol that converges PLDM and Redfish worlds. I would like to see how do you plan to converge the *proposed daemon* and bmcweb(current Redfish server). In my mind, bmcweb is the right place to host the user facing part of the RDE specification, and there should be an abstraction layer in bmcweb that handles an underlying RDE device.\n(3) How do you plan to handle the Redfish payload <-> BEJ translations?\n(4) How do you plan to model the different type of RDE devices? Ex: NIC RDE devices could have network related schemas where as RAID controllers might have storage related schemas- so the question is how does the daemon design model the different types of possible RDE devices?\n(5) Usually RDE devices will have PLDM Type 2 as well (Monitoring and Control) - this is to facilitate the RDE PDRs. Currently the PLDM Type 2 is already handled by pldm daemon; so can you capture the flow of type 2 and type 6 during RDE initialisation phase?"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "This design is focusing majorly on the requester library and RDE daemon iteraction.\n\nBut to summarize, that is correct we will receive the requests via BMCWeb and the BMCWeb Aggregator design is focusing on handling the multiple RDE devices, as it will forward the request over DBus call, with parameters such as URI, payload, etc.\nI would rather write a separate design doc, that captures BMCWeb and RDE daemon interactions, etc.; and maybe keep this as an interaction between RDE Daemon and requester library, but I am open to suggestions.\n\n--\nTo answer a couple of questions: \n- We are thinking of something called an RDE translator (which would be nothing but a couple of cpp files within the rde subdirectory) that takes care of converting the payload or any data received from Redfish request into a RDE compatible format. \nWe already have `libbej` in openbmc that encodes and decodes the"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "-- Continuing the previous comment--\n* Yes the RDE devices have PLDM Type 2, where we need to get the PDRs from the RDE device. Since we were keeping the RDE as a completely separate entity, we were currently sending the type 2 and 6 requests directly from RDE daemon to the rde devices and storing them within itself during the initialization phase (That is again using the requester library).\n\nAlso, when you say PLDM already handles Type2, does it mean PLDM has facility to send the request to the RDE device and store the PDRs?"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "-- On PLDM supporting PDR --\nI am not sure if PLDM daemon is requesting for PDRs from RDE device.\n\nI think in the case of RDE, we request the RDE device for Device PDRs and store them to use for URI-resource id mapping, hence it would be exclusively handled by the RDE daemon itself. \n\nYou can correct me if my understanding seems wrong w.r.t PLDM PDR implementation."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Added a lot of the other information in the latest patchset (Patchset 5) about the RDE Daemon, RDE Device fetching etc."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "PLDM Type 2 implementation is in review - https://gerrit.openbmc.org/c/openbmc/pldm/+/53961\n\nYou can find more patches if you look at the relation chain. And doing PLDM type 2 operations inside a separate RDE daemon can be destructive (eg: A case where 2 daemons are sending getPDR command in parallel to same PLDM device)"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "We already have a PLDM discovery part(PLDM base) implementation under review \nhttps://gerrit.openbmc.org/c/openbmc/docs/+/47252/18/designs/pldm-stack.md#340\nhttps://gerrit.openbmc.org/c/openbmc/pldm/+/51443/\n\nAdding the same here might be a duplicate. Also, 2 separate daemons handling same device (assigning TID etc..) might not be a good idea. I believe, PLDM RDE can be an extension of existing PLDM daemon itself."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Does this support setting up PLDM on multiple RDE devices? If yes, how will it distinguish between RDE devices?\n\nRight now it seems like it is sending a message to an Eid, what if we have same EID and the only way to distinguish between devices is netid?\n\nAlso when you say that PLDM RDE `can be an extension`, do you mean not having a separate daemon??\n\nBecause RDE needs to do a lot of work- \n\n* RDE Discovery including RDE Negotiate parameters, RDE medium parameters and then catering to RDE requests **on demand**, such as read, update, etc.\n\n* Also, there could be multiple RDE devices that would need that setup which would require setting up the PLDM Base discovery on each of them and (as I mentioned) could be having same EID but diff netID (which we could produce randomly on start up etc.). \n\n* The discovery of RDE Devices would also be a bit challenging: For instance, lets say there are USB devices that are RDE devices, one needs to discover/monitor them (maybe via `Detector` in EntityManager) and having a `Reactor` somewhere at the RDE side. We would need to tie up Dbus methods to the interfaces for each RDE device to cater to the read/update etc. request. Hence there would be a lot more processes that would be RDE specific (& not just PLDM per se) in this case. \n * Just a quick summary on detector-reactor design for RDE Devices:\n   * Each of the RDE device detected would be put up as an object path in the Entity Manager based on some probe logic\n   * Then the reactor, would detect those object paths (at the RDE end) and create rde specific object paths for each RDE device with DBus methods exposed for each of the CRUD operations.\n   * Then the DBus methods will be executed during any CRUD operation requests.\n \nI think having RDE within the PLDM daemon can convolute a lot of things and would strongly propose having a separate RDE daemon.\n\nLet me know what you think about it!"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": ">Does this support setting up PLDM on multiple RDE devices? If yes, how will it distinguish between RDE devices?\n\nToday it doesn't support RDE. But the changes to support multiple PLDM devices on different network is under review. Few major changes\nhttps://gerrit.openbmc.org/q/topic:AF_MCTP\nhttps://gerrit.openbmc.org/c/openbmc/pldm/+/51443\n\n>Right now it seems like it is sending a message to an Eid, what if we have same EID and the only way to distinguish between devices is netid?\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/47519\nAbove terminus manager implementation will introduce transport layer abstraction and introduce TID for device identification in PLDM layer. And in multinetwork MCTP transport layer, we will have network id and EID to identify a device but on PLDM layer TID alone should be good enough.\n\n>Also when you say that PLDM RDE can be an extension, do you mean not having a separate daemon??\n\nYes. The reason being 2 daemons will not be able to perform terminus discovery (TID assignment). Also, if PDR handling (https://gerrit.openbmc.org/c/openbmc/pldm/+/53961/40) is implemented by one daemon and RDE is done by other, how do we manage cases where PDRs(Eg: Redfish resource PDR) needs to be shared etc..\n\nBasically, even if we are going with separate RDE daemon, we should handle interdependency with other PLDM types, and it should coexist with existing PLDM daemons.\nExample: As first step, PLDM base discovery (TID assignment by TerminusManager) should happen and then based on the supported PLDM types, corresponding subtype functionalities needs to be performed. Thus, avoiding duplicate TID assignment."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "CRUD ?"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Primarily create, read, update operations. I can change it to read and update operations for now. Since that is what we are focussing on."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "(I think Sumanth was just pointing out the typo)"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "Please add some alternative design ideas and why they're not as good.\n\ne.g., integrate directly into bmcweb, use a separate daemon for the requester library and talk to it over D-Bus, etc"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 140,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "372ed9b656879b432549c55b6877859d325aad68",
            "parents": [
                "223193951d3c45670a8a415ac0e87b5ea97e71fb"
            ],
            "ref": "refs/changes/56/61256/3",
            "uploader": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "createdOn": 1679331983,
            "author": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "type": "ADDED",
                    "insertions": 224,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 234,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "67b50e4f8bd4f43c7b6eebbca841adaacbaaf2e1",
            "parents": [
                "223193951d3c45670a8a415ac0e87b5ea97e71fb"
            ],
            "ref": "refs/changes/56/61256/4",
            "uploader": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "createdOn": 1679332478,
            "author": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "type": "ADDED",
                    "insertions": 228,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 238,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "4e6fea98b634ba94de34cd3dd770727253b436fe",
            "parents": [
                "223193951d3c45670a8a415ac0e87b5ea97e71fb"
            ],
            "ref": "refs/changes/56/61256/5",
            "uploader": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "createdOn": 1679332606,
            "author": {
                "name": "Harsh Tyagi",
                "email": "harsh23tyagi11@gmail.com",
                "username": "harsh23tyagi11"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "Is the intent that other management interfaces (IPMI, SNMP, CIM, OEM or whatever the new management interface of the day happens to be) are generating RDE requests?  It would be good to see another management interface represented in the diagram."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 56,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What dbus interface(s) are relevant here?  This seems to be an important aspect of the design that I don't see any details on other than this one block in the diagram."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 107,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "Here, after receiving the response from RDE device it is mentioned that we use \"Stored Dictionaries\" to decode the response. \n1) Suggestion would be to fetch the required dictionaries on the fly so that we will save some space. \n2) If plan is to move with the approach of using stored dictionaries how are we planning to delete the same when the device is removed ? Could you please share some info on that ?"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "1) Yes, the dictionaries would be eventually stored on the fly as they are part of RDE Discovery phase. For getting dictionaries we require a set of resource IDs. The resource IDs will be retrieved when we implement PLDM PDR type for RDE daemon. (This design is not including the PLDM PDR as of now- which would take care of getting the resource ids, resource id to URI mapping etc.). But for sure the dictionaries would be populated in maps dynamically for all the required resource IDs supported by the RDE device.\n\n2) We are running a Detector-Reactor architecture for monitoring RDE Devices. Once the reactor gets a signal (using a DBus matcher) that a RDE device is removed, we can clean up the Dictionaries in the map. That should not be much of a problem (more of an implementation thing). \n\nShort answer: Our reactor should take care of cleaning up object paths and any related data for the removed RDE device. Correspondingly, the reactor should also take care of creating paths, doing discoveries when a new device is found."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 107,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 127,
                    "reviewer": {
                        "name": "Nikhil Jain C S",
                        "email": "nikhil.jain.c.s@intel.com",
                        "username": "njaincs"
                    },
                    "message": "existing ??"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 127,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "pldm_recv() is a function exposed by libpldm for receiving pldm packets. I can add some links here."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 184,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "Hope we need PDR information of each device also. So it would be good to include that as well"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 184,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Technically we do need PDR information for each device. But for starters, out of the PDR information what we actually need is just a mapping from URI to a resource Id (since RDE device only recognizes resources by Resource ID and every Redfish URI must have a corresponding Resource ID in an RDE Device).\n\nWe can definitely work on PDR information storage in further phases."
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 184,
                    "reviewer": {
                        "name": "PrithviAPai",
                        "email": "prithvi.a.pai@intel.com",
                        "username": "PrithviAPai"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 184,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Nikhil Jain C S",
                        "email": "nikhil.jain.c.s@intel.com",
                        "username": "njaincs"
                    },
                    "message": "beginning?"
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Harsh Tyagi",
                        "email": "harsh23tyagi11@gmail.com",
                        "username": "harsh23tyagi11"
                    },
                    "message": "Sorry i did not understand this! Would you elaborate the question?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-device-enablement.md",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 237,
            "sizeDeletions": 0
        }
    ]
}