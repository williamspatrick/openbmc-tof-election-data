{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "Iffae59106e88461740c22d6a19fddee6964ee12a",
    "number": 66981,
    "subject": "Add Inventory.Item interface to global schema",
    "owner": {
        "name": "Chau Ly",
        "email": "chaul@amperecomputing.com",
        "username": "chaul-ampere"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/66981",
    "hashtags": [],
    "createdOn": 1696858689,
    "lastUpdated": 1702391931,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1696858689,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1696858713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1696858713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1696858989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74816/ : SUCCESS"
        },
        {
            "timestamp": 1696862597,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1696931176,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1697134636,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1697534997,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697535029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697535029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1697535298,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75041/ : SUCCESS"
        },
        {
            "timestamp": 1698436099,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1698632820,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1698681798,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1698737768,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1702309964,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1702391931,
            "reviewer": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Abandoned"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "fd7b83dcc8cc67d42cc040d0c43df74f9fa5ad8f",
            "parents": [
                "35215e9418e14f0b3832166b99a86297a9795930"
            ],
            "ref": "refs/changes/81/66981/1",
            "uploader": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "createdOn": 1696858689,
            "author": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "There is code that made a half-hearted attempt to create the inventory.item interface on every single entity here: https://github.com/openbmc/entity-manager/blob/master/src/entity_manager.cpp#L605\n\nHowever, it doesn't add any properties to that interface, nor call initialize() to actually put it on D-Bus.  It would be pretty easy to just fix up that and then every entity gets that interface.  Frankly I'm surprised that isn't actually needed by redfish code already, but I guess it isn't.\n\nSo I'm not sure if it would be better to add it for everyone, or for just the people that need it like you did."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Chau Ly",
                        "email": "chaul@amperecomputing.com",
                        "username": "chaul-ampere"
                    },
                    "message": "Yeah, Redfish only cares about the `Presence` property under `xyz.openbmc_project.Inventory.Item` for others but not chassis.\n\nBut PDI says it is required by all objects within the inventory namespace (https://github.com/openbmc/phosphor-dbus-interfaces/blob/5e7bca41c4460abb6f513ae8e0a67c551d6192a5/yaml/xyz/openbmc_project/Inventory/Item.interface.yaml#L2). How should this be rephrased?.\n\nIf it was to be added for every chassis, I wonder what is the difference between it and `xyz.openbmc_project.Inventory.Item.Board/Chassis` that is strong enough to force this, and what should be used to put in `PrettyName` (configurable or the same as Name under xyz.openbmc_project.Inventory.Item.Board/Chassis).\n\nI wish I knew the reason behind https://github.com/openbmc/entity-manager/blob/master/src/entity_manager.cpp#L605."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I suspect that EM author was trying to match what phosphor-inventory-manager did, but just didn't get it quite right.  EM doesn't have much use for a 'Present' property because anything that has successfully probed can be considered present.\n\nI know there is quite a bit of bmcweb code that uses the Present property that IBM wrote because we use PIM, which can still have objects on d-bus even if they aren't they have been removed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "schemas/openbmc-dbus.json",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "5a06d6ab64d2211f7ea71717c4e05bc72c8cb1af",
            "parents": [
                "1c850f77503bf80fcc6a1a029e1f65453bd8a2d8"
            ],
            "ref": "refs/changes/81/66981/2",
            "uploader": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "createdOn": 1697534997,
            "author": {
                "name": "Chau Ly",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I brought up in discord about how EM is almost creating the inventory.item interface today, and proposed finishing that off.  If nobody complains, we can do that and then we'd just automatically get it for everything, with the PrettyName just being set to the Name of the entity."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Chau Ly",
                        "email": "chaul@amperecomputing.com",
                        "username": "chaul-ampere"
                    },
                    "message": "Thanks for that. Although in my personal opinion it's more reasonable and makes work light to let whoever needs the interface configure it, having Name and PrettyName of different strings under one object path looks redundant. I'll see for a few more days if there's any reply and then push a patch for it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "i would suggest using inventory.item.board, but the actual PDI implementation doesn't have a Name property, unlike the EM one."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Chau Ly",
                        "email": "chaul@amperecomputing.com",
                        "username": "chaul-ampere"
                    },
                    "message": "If we use inventory.item.board, phosphor-fan-presence then does GetSubTreePaths for inventory.item.board and inventory.item.chassis interfaces and uses the file_name of the paths achieved to look for configs? That results in the sub-folder name also being the name of the board configured in Name. That wouldn't depend on PDI because we just get the file_name of the path, right?. However, I'm thinking if there's any case that we might not want it that way.\n\nLet's say in IBM case, the name you configure for Rainier 4U is \"Rainier 4U Chassis\" and the sub-folder for fan configs is \"ibm,rainier-4u\" or \"ibm,rainier\".\n\nIn Ampere with platform-based fan config selection support in the future, we might have cases that we set the same string in Name for different configuration files. \nLet's say we want the same Motherboard installed on different SKUs (with different number of NVMes and backplanes etc...) to have different EntityManager config files (Motherboard_SKU1.json, Motherboard_SKU2.json,... because they have a field in FRU that separates them) but have the same Name exposed on DBus and Redfish (MotherBoard - because they don't necessarily appear with different names - this is not concrete and just optional), in this case, the two use different fan configs but phosphor-fan can't tell them apart if we use Name.\n\nAnother case is when users configure different Name(s) for different boards in EM but want them to share the same fan config set, using Name to find config causes them to hold different sub-folders with the same content.\n\nBut if we still want to use PrettyName, I think there's still a need for enabling users to configure another PrettyName other than using Name, given that it's \"Prettier\" than Name (which is suitable for a sub-folder) and there's no use of exposing another interface into an object path when it only provides the property value that is the same as the object path's name.\n\nThose are just cases I think of but might be bias. I really appreciate your feedback and hope to hear your thoughts."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I don't think you need this anymore right?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "schemas/openbmc-dbus.json",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 1
        }
    ]
}