{
    "project": "openbmc/fb-ipmi-oem",
    "branch": "master",
    "id": "I9598f71775936cea9a860a091bc74aefea8701f3",
    "number": 62844,
    "subject": "Support dimm loop detection for the AMD platform",
    "owner": {
        "name": "DelphineCCChiu",
        "email": "Delphine_CC_Chiu@wiwynn.com",
        "username": "DelphineCCChiu"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/fb-ipmi-oem/+/62844",
    "hashtags": [],
    "createdOn": 1685694273,
    "lastUpdated": 1691409387,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1685694273,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1685694299,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685694299,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1685694392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/67913/ : FAILURE"
        },
        {
            "timestamp": 1685695207,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685695218,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685695218,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1685695362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67917/ : SUCCESS"
        },
        {
            "timestamp": 1685706847,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(22 comments)"
        },
        {
            "timestamp": 1685956852,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1686016030,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1686016049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1686016049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1686016176,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/68053/ : FAILURE"
        },
        {
            "timestamp": 1686016393,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1686016429,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1686016429,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1686016523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/68054/ : FAILURE"
        },
        {
            "timestamp": 1686016690,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1686016724,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1686016724,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1686016869,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/68055/ : SUCCESS"
        },
        {
            "timestamp": 1686017951,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 5:\n\n(19 comments)"
        },
        {
            "timestamp": 1686964698,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review-1\n\n(8 comments)"
        },
        {
            "timestamp": 1687331345,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1687763299,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1687763315,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1687763316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1687763572,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/69554/ : SUCCESS"
        },
        {
            "timestamp": 1687763833,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1691409384,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1691409387,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 14ddea58be2119d6ae5e4f68838e2e68fe9bdf04"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2c2edc4e8052a423dc056351649c17885cf2c206",
            "parents": [
                "2405ae98b39a97e9d7753d8dc5c673a4a8885b85"
            ],
            "ref": "refs/changes/44/62844/1",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1685694273,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
            "parents": [
                "2405ae98b39a97e9d7753d8dc5c673a4a8885b85"
            ],
            "ref": "refs/changes/44/62844/2",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1685695207,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/types.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "size_t"
                },
                {
                    "file": "include/types.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not sure what \"maxHost\" refers to.  Below it looks like you're using this as an array size for post codes attached to a single host."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick, \nI rename maxHost to numOfHosts for the initial size of the array used as below, to record each host dimm loop detect status."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Does this need to be explicitly typed?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please refer to AMD in this magic."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "unordered_map?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why do we need a separate parameter for this if we already have a vector?\n\nWhy is this sized to uint8_t?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "No need for const on POD types as function arguments."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Should this one be a const&?  Are we really modifying the vector?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "if (postCodeSize != amdPostCodeSize) return;\n\nIs this `if constexpr`?  I seem to recall postCodeSize being a meson compile option."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 87,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you document what a \"byte group\" is here?  When I read this initially I was expecting just 2 bytes as if these were fields but then when I read the code below it doesn't seem like that is the case."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are these static variables?  Please refactor."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\nBecause the postcode is a group of incoming from bic, so we have to declare it as static to remain the previous status.\nAfter we got the whole dimm loop pattern, it will store in the global variable dimmLoops."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Prefer to avoid C-style casts in C++ code."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there an explicit reason for using `at` instead of `[]`?  `at` does bounds checking but I thought you already did that."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "static constexpr?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This code kind of implies to me that you're expecting `data` to be exactly 4 bytes long.  If that is the case then please take it as a `std::array` for clarity.\n\nIf it isn't exactly 4 bytes long then I don't know how this comparison ends up being successful."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\nYes, it must be 4 byte. It already filters at the beginning of this detection function.\nI didn't modify anchorTag to array, because I think comparing vector and array will be more complicated."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is especially confusing where we have a struct to store some data but then we have global/static variables in other cases.  Please make this consistent."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 154,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "spelling.  `detection`"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 154,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 158,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Are we dropping the dimm locations and the major/minor codes?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 158,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\nThe entire the dimm pattern is stored. (Anchor Tag , Total Error Count, Number of Error DIMM, Dimm location, major code, minor code)"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 177,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "My general preference is to use `auto` whenever possible.  I think findHost returns a `std::optional<size_t>` so there is no need to repeat that here."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 177,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 181,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Would be good for us to consider refactoring all the logging calls to use the lg2 interfaces.  You can certainly ensure new code is using lg2 even if the originally logging APIs are used elsewhere in the file."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 181,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 419,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why did we end up with two different IPMI commands doing the same thing?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 419,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\nBecause of in bic code different systems (e.g. HD or CL) they use different drivers and cmd to send postcode for different CPU (Intel or AMD). And for compatibility and not affect to the different systems I register this handler."
                },
                {
                    "file": "src/usb-dbg.cpp",
                    "line": 971,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest putting this as a separate commit because I can't tell how it is related to the rest of the commit and it seems like it is a fix for something."
                },
                {
                    "file": "src/usb-dbg.cpp",
                    "line": 971,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\nI modified this because of CI would fail and told me to initialize hostPosition."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/usb-dbg.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 155,
            "sizeDeletions": 3
        },
        {
            "number": 3,
            "revision": "1910ab4b53099d65908add972be22ea2e282f8e8",
            "parents": [
                "2405ae98b39a97e9d7753d8dc5c673a4a8885b85"
            ],
            "ref": "refs/changes/44/62844/3",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1686016030,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 149,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "7001d0c17560a7724b7d527bfb0ab915f1edd9f5",
            "parents": [
                "2405ae98b39a97e9d7753d8dc5c673a4a8885b85"
            ],
            "ref": "refs/changes/44/62844/4",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1686016393,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 150,
            "sizeDeletions": 1
        },
        {
            "number": 5,
            "revision": "9cbebde0fb40e600d00ef7b6e30bc9f7a6cf520f",
            "parents": [
                "2405ae98b39a97e9d7753d8dc5c673a4a8885b85"
            ],
            "ref": "refs/changes/44/62844/5",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1686016690,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/biccommands.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "`auto`?  I don't think `size_t` is appropriate for a byte-pattern.\n\nI mentioned later on that maybe an `array<uint8_t, 2>` (or 4) might be more appropriate here."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Generally we shouldn't see a constant like this being used to initialize an array.  Use a dynamic structure of some sort if that's what you need.  Especially because we have 8 hosts and you're allocating over a page of memory as a result of this structure.\n\nYou've already got the dimmLoops structure which is looked up by hostId.  That seems sufficient."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 106,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Still see a static function member.  Why can't we add this to the `dimmLoop` structure?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Pretty sure size_t isn't what you intended to use here.  You can use `auto`  or uint16?\n\nHonestly I'm surprised we don't just use a uint32_t for everything here since the post codes are 32 bit in size.  Or an `array<uint8_t, 2>`.  We can construct the array directly from the position in the original `data` array."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 126,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How can you be certain that we won't get 2 DIMM loops in a row?  Is there something that ensures after \"DDEE + minor code\" we get something other than a `DDEE`?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 126,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick, when we got 2 dimm loops the postcode will keep looping like this:\n[DDEE0000][DDEE0002][DDEE0001][DDEE0A10][DDEE0009][DDEE4001][DDEE0000][DDEE0002][DDEE0002][DDEE00A2][DDEE0009][DDEE4001] ....\nAnd it won't stop, keep repeating postcode pattern as above. And I ask from Bios team and they said it won't happen with postcode without DDEE prefix showing up when dimm loop error happens."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can this be constexpr?\n\nMight want to make it a `std::array<uint8_t, 4>`.\n\nYou can also look at `std::ranges::equal` and `std::ranges::starts_with` for some of the comparisons you need to do.  Unfortunately, `starts_with` isn't available until C++23, but the documentation for it gives an alternative approach using `std::ranges::mismatch`.  That might be too much work."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems strange to push back the vector of data just to keep a count?"
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 145,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick, the dimm loop patterns were being stored and used for decode and show its description on debug card (This will be the next feature. still ongoing). This commit is for dimm loop detection."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I still don't understand this code.  Why are there going to be 6 * error count for remaining buffers?\n\nWhy can't we save the error count right away in line 142?  Still not enough documentation as to what is going on here."
                },
                {
                    "file": "src/biccommands.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick, here is the process and example of this code design:\n\nHere is the postcode continuously into this function:\n[DDEE0000] <= get anchor flag, which mean dimm loop pattern is starting\n[DDEE0002] <= which meaning there will be 2 dimm loops pattern coming, \n              total 12 postcodes. (6 byte as a group)\n[DDEE0001] <= keep counting and storing.\n[DDEE0A10] <= keep counting and storing.\n[DDEE0009] <= keep counting and storing.\n[DDEE4001] <= keep counting and storing.\n[DDEE0000] <= keep counting and storing.\n[DDEE0002] <= keep counting and storing.\n[DDEE0002] <= keep counting and storing.\n[DDEE00A2] <= keep counting and storing.\n[DDEE0009] <= keep counting and storing.\n[DDEE4001] <= keep counting and this is 12th postcode. And set up the error \n             count in structure,  which means I got the whole patterns and \n\t     all being stored. After that, this dimm loop pattern will keep\n\t     repeating, no need to check again"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/usb-dbg.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 151,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "c9483118943ad31ede5c8cf464ec3f10a474f27b",
            "parents": [
                "21a79235d372dcbd8282f09dfc819c24bd080183"
            ],
            "ref": "refs/changes/44/62844/6",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1687763299,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 146,
            "sizeDeletions": 1
        },
        {
            "number": 7,
            "revision": "14ddea58be2119d6ae5e4f68838e2e68fe9bdf04",
            "parents": [
                "7c24dde3522d4d6916fbdf4055bcb791651081d5"
            ],
            "ref": "refs/changes/44/62844/7",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1691409387,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/biccommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": -1
                },
                {
                    "file": "include/biccommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/types.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 146,
            "sizeDeletions": 1
        }
    ]
}