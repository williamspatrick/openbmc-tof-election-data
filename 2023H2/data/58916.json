{
    "project": "openbmc/phosphor-debug-collector",
    "branch": "master",
    "id": "I76710fa9b8d23344cf979bd8f3bdcc331e663264",
    "number": 58916,
    "subject": "Correct the timing of emit_object_added",
    "owner": {
        "name": "Lei YU",
        "email": "mine260309@gmail.com",
        "username": "mine260309"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/58916",
    "hashtags": [],
    "createdOn": 1669183240,
    "lastUpdated": 1689948457,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1669183240,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1669183249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669183249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1669183305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55982/ : SUCCESS"
        },
        {
            "timestamp": 1669187228,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1669207691,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1669267350,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1669271801,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1669272344,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1669273172,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1669283430,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1670908279,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671127394,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671156865,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671627257,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671627545,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671629001,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671629922,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671631352,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1671631981,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1689833500,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1689834617,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1689870614,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1689925565,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1689934993,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1689938944,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1689938967,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1689938967,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1689939016,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/71672/ : SUCCESS"
        },
        {
            "timestamp": 1689939653,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1689940590,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1689948423,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1689948457,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9289509fa257a6c7e5bc2d960f97d1a33df534c8",
            "parents": [
                "cdb589774594347de95972652e02bbb58d1297f7"
            ],
            "ref": "refs/changes/16/58916/1",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1669183240,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "With this change, I am not sure if the inherited objects (e.g. bmc_dump_entry) should keep using `defer_emit` or should be modified to use `emit_no_signals`?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This commit is not correct as-is.  Something else must be going on.\n\nWhat kind of Entry was it you were having trouble with?  A `bmc_dump_entry.hpp:Entry`?\n\nThe constructor of dump_entry::Entry purposefully does no-emit because the expectation is that it is always inherited from (with additional interfaces added).\nThe bmc::Entry correctly does defer-emit and then at the end of the constructor does an `emit_object_added` call, which will trigger the creation signals.  Having called `emit_object_added` it should also trigger the destruction signals when the object is destructed.  This is what you don't seem to be seeing?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "> it should also trigger the destruction signals when the object is destructed.  This is what you don't seem to be seeing?\n\nNo, it's not working as expected. As noted in the \"Tested\", the destruction does not emit signal, that leaves the mapper still see the object, while it's gone on DBus.\n\nYou should be able to reproduce the issue by just creating a dump and delete it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "As mentioend by Patrick , https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/40518 is used for this support.  @dhruvaraj verified also."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Could you help to confirm the signal for the destruction of the dump entries?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "I attempted to create a BMC dump and delete it, and the interface removed signal is coming, please provide details\n\n\u2023 Type=signal  Endian=l  Flags=1  Version=1 Cookie=96  Timestamp=\"Thu 2022-11-24 06:56:06.070563 UTC\"\n  Sender=:1.116  Path=/xyz/openbmc_project/dump  Interface=org.freedesktop.DBus.ObjectManager  Member=InterfacesRemoved\n  UniqueName=:1.116\n  MESSAGE \"oas\" {\n          OBJECT_PATH \"/xyz/openbmc_project/dump/bmc/entry/2\";\n          ARRAY \"s\" {\n                  STRING \"org.freedesktop.DBus.Peer\";\n                  STRING \"org.freedesktop.DBus.Introspectable\";\n                  STRING \"org.freedesktop.DBus.Properties\";\n                  STRING \"xyz.openbmc_project.Dump.Entry.BMC\";\n                  STRING \"xyz.openbmc_project.Common.GeneratedBy\";\n          };\n  };"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Tried to monitor the signal, it does emit the above signal, but mapper still does not erase the object.\nChecking the code https://github.com/openbmc/phosphor-objmgr/blob/master/src/main.cpp#L764, it does only erase the interfaces, and because the above signal does not indicate that all interfaces are removed, it still keep the object `/xyz/openbmc_project/dump/bmc/entry/2`.\n\nTo properly make mapper to erase the object, a service should emit \"interfacesRemoved\" signal for **all** the interfaces. With `emit_no_signals` here, it fails to do so and cause the issue.\n\n@Patrick @Dhruvaraj"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "@Patrick could you comment on the above scenario?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What interfaces were not emitted by an \"emit_object_removed\" in the parent class?  I am not understanding what the scope of the bug is.  I see a busctl monitor output from Dhruv and he says it appears to be working, but I don't see data from you (Lei YU) on what is not working on your machine.  What interface is still left around in \"entry/2\"?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "We do see below interfaces are removed via InterfacesRemoved signal:\n```\n                 STRING \"org.freedesktop.DBus.Peer\";\n                  STRING \"org.freedesktop.DBus.Introspectable\";\n                  STRING \"org.freedesktop.DBus.Properties\";\n                  STRING \"xyz.openbmc_project.Dump.Entry.BMC\";\n                  STRING \"xyz.openbmc_project.Common.GeneratedBy\";\n```\nBut the object has other interfaces:\n```\nxyz.openbmc_project.Common.OriginatedBy\nxyz.openbmc_project.Common.Progress\nxyz.openbmc_project.Dump.Entry\nxyz.openbmc_project.Object.Delete\nxyz.openbmc_project.Time.EpochTime\n```\n\nThese interfaces do not emit InterfacesRemoved signal.\n\nAnd see mapper's code https://github.com/openbmc/phosphor-objmgr/blob/master/src/main.cpp#L764, as long as an object has interfaces, the object is not deleted.\n\nSo this results in the inconsistency between DBus and mapper:\n* The object is deleted on DBus, part of the interfaces emit removed signal.\n* mapper keeps the object because not all the interfaces are removed."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is this \"Common.GeneratedBy\" that you and Dhruv are referring to?  Do you two have some downstream patches that aren't available?  I don't see that interface in either PDI or this repository, so it's really hard to debug this for you."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I suspect part of the issue is that the bmc::Entry class has \"virtual children\" but not a virtual destructor.  There is likely something funny going on with this diamond inheritance structure."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "Yes Patrick there are downstream commits, but that is mostly for open power dumps and Common.GeneratedBy is already in the master right?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "destructors are declared as\n~Entry() = default;\nchanging to virtual ~Entry() = default;  should fild?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Common.GeneratedBy is already in the master right?\n\nIt is not.\n\n> There is likely something funny going on with this diamond inheritance structure.\n\nI hacked at this a bit so I could run the constructor/destructor and see what was going on.  The issue is that the `phosphor::dump::Entry` destructor runs before the `EntryIfaces`, but `EntryIfaces` is what we called emit_object_added on.  The result is that the `dump::Entry` destructor has already cleaned up the sd_bus slots and sd_bus doesn't know anything about that interface anymore by the time the `emit_object_removed` is called.\n\nSomething needs to be adjusted in either the inheritance order or which underlying interface(s) we call `emit_object_added` against.  The `emit_object_added` needs to be called on the first object_t to be destructed."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "sorry, Common.OriginatedBy is in master, not GeneratedBy\n\nThanks Patrick, got the issue, will do some experiments with changes"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "The patch lost track for a long while, I am catching it back.\n\nThe issue here is that (for phosphor::dump::bmc::Entry)\n1. The InterfacesRemoved signal does not remove the interfaces created by the base class (phosphor::dump::Entry)\n2. This results in mapper does not clear the object when the object is deleted.\n\nThe fix in this patch makes sure the `emit_object_added()` is sent for the base class, so that the InterfacesRemoved signal could indicate that all the interfaces are removed.\n\n@Patrick you mentioned some \"virtual children\" without \"virtual destructor\", could you elaborate?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "1e1b09fc044e3b39b618b39a79a58213b936d9a7",
            "parents": [
                "94adf6852565a470154335edb31b55bcf669a03f"
            ],
            "ref": "refs/changes/16/58916/2",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1689833500,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "dump::Entry is never intended to be created on its own, but always as a sub-class of some other dump type.  Since the class is inherited, `emit_no_signals` is correct because the child class should be the one emitting the signals.\n\n```\nbmc_dump_entry.hpp:class Entry : virtual public EntryIfaces, virtual public phosphor::dump::Entry\ndump-extensions/openpower-dumps/resource_dump_entry.hpp:class Entry : virtual public EntryIfaces, virtual public phosphor::dump::Entry\ndump-extensions/openpower-dumps/system_dump_entry.hpp:class Entry : virtual public EntryIfaces, virtual public phosphor::dump::Entry\ndump_entry.hpp:class Entry : public EntryIfaces\nfaultlog_dump_entry.hpp:class Entry : virtual public phosphor::dump::Entry\n```\n\nbmc_dump_entry.hpp as an example has `defer_emit` and a call to `emit_object_added` later in the constructor.\n\nI don't see this proposal as correct or solving the problem.  If you're missing the signal for the bmc::Entry, we need to investigate that."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Tested with a minimal code example, it turns out that the \"virtual children\" without \"virtual destructor\" statement is true, that the inheritance sequence is critical here.\n\nSee below code\n\n\tclass BMCEntryOK : public Entry, public BMCEntryIfaces\n\t{\n\t  public:\n\t\tBMCEntryOK(sdbusplus::bus_t& bus, const std::string& objPath) :\n\t\t\tEntry(bus, objPath),\n\t\t\tBMCEntryIfaces(bus, objPath.c_str(), BMCEntryIfaces::action::defer_emit)\n\t\t{\n\t\t\tBMCEntryIfaces::emit_object_added();\n\t\t}\n\t};\n\tclass BMCEntryKO : public BMCEntryIfaces, public Entry\n\t{\n\t  public:\n\t\tBMCEntryKO(sdbusplus::bus_t& bus, const std::string& objPath) :\n\t\t\tBMCEntryIfaces(bus, objPath.c_str(),\n\t\t\t\t\t\t   BMCEntryIfaces::action::defer_emit),\n\t\t\tEntry(bus, objPath)\n\t\t{\n\t\t\tBMCEntryIfaces::emit_object_added();\n\t\t}\n\t};\n\nFor `BMCEntryKO`, we can NOT get InterfaceRemoved signal for `xyz.openbmc_project.Dump.Entry`, while for `BMCEntryOK`, its InterfaceRemoved signal removes all the interfaces as expected.\n\nWill submit a new patch for this."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need \u201cvirtual ~classname() = default\u201d?  I\u2019m surprised that inheritance order matters when it should be the child-level destructor that does the signal. Must be that the destructor isn\u2019t happening?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "05ef81639c1fb7fc2fc78b29ca7e7486a86ddfb2",
            "parents": [
                "7d7e00146d89a28b7205ba2ef2a942b8a9208d78"
            ],
            "ref": "refs/changes/16/58916/3",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1689938944,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "dump-extensions/openpower-dumps/system_dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "bmc_dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 9
        }
    ]
}