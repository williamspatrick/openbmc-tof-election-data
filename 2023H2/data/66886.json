{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I4b846b678a0f90f60d182ac38f1becd21265cdd2",
    "number": 66886,
    "subject": "Check sensor DBus properties in getState",
    "owner": {
        "name": "MattSimmering",
        "email": "matthew.simmering@intel.com",
        "username": "MattSimmering"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/66886",
    "hashtags": [],
    "createdOn": 1696434500,
    "lastUpdated": 1701384047,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1696434500,
            "reviewer": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1696434566,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1696434566,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1696434632,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/74703/ : FAILURE"
        },
        {
            "timestamp": 1696434727,
            "reviewer": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1696434785,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1696434785,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1696435968,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74704/ : SUCCESS"
        },
        {
            "timestamp": 1696875214,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1697150879,
            "reviewer": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1697478662,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1698774238,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1701286285,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1701384047,
            "reviewer": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "59a97e304b53be9042befd6b324ca39cc89c263b",
            "parents": [
                "b8ad583f70f3f4acb9fb3883857a5f8d7af29fd3"
            ],
            "ref": "refs/changes/86/66886/1",
            "uploader": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "createdOn": 1696434500,
            "author": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "8cd06b8923197bc197b192c2540da29173c1a2a8",
            "parents": [
                "b8ad583f70f3f4acb9fb3883857a5f8d7af29fd3"
            ],
            "ref": "refs/changes/86/66886/2",
            "uploader": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "createdOn": 1696434727,
            "author": {
                "name": "MattSimmering",
                "email": "matthew.simmering@intel.com",
                "username": "MattSimmering"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "On which interface?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why would a user use this value?  You list a lot of things for code (like getState), but don't really relate them to redfish, the behavior, the user-api, or why it needs to exist.  Can you take another attempt at this?  Reading through the patchset, I don't really understand why we want anything but \"enabled\" supported."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "MattSimmering",
                        "email": "matthew.simmering@intel.com",
                        "username": "MattSimmering"
                    },
                    "message": "Hi Ed,\n\nMy thinking was that we could add some more granular info regarding the sensors.  I didn't make sense to me that a sensor would be considered \"Enabled\" when it's reading null because it requires host power.  But if \"Enabled\" is what we want then I can delete this patchset."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I didn't make sense to me that a sensor would be considered \"Enabled\" when it's reading null because it requires host power.\n\nThe above isn't captured in your commit message.  I wasn't saying we don't want this, but \"Redfish Sensors should read unavailable if the reading is null, and that difference is useful to the user.\" is much more clear than what's in the commit message now.  It references what we're changing, and why a user cares.\n\nAlso, we should double check with DMTF that the intent is for sensors to go unavailable if the status is null.  I forget what the intent was there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What system/sensor are you testing on?  I suspect this line can be removed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Redfish tests?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Any progress here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Any progress here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "MattSimmering",
                        "email": "matthew.simmering@intel.com",
                        "username": "MattSimmering"
                    },
                    "message": "Hi Ed, \n\nChecking with some folks about the schema for the Resource State."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 603,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why does this need to be a default parameter?  Generally this isn't how we would model this.  We would parse out the interfaces in the dbus scope, then pass down the parsed values."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 614,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Unpacking needs to be done in the scope above, and avoid passing the direct raw dbus dicts through too many layers."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 2
        }
    ]
}