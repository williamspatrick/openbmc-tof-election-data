{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Iad280d785972c5acd39ff80cbb418aaee3083f7f",
    "number": 63875,
    "subject": "Add DBus to Redfish converter design",
    "owner": {
        "name": "Abhilash Raju",
        "email": "abhilash.kollam@gmail.com",
        "username": "abhilashraju"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/63875",
    "hashtags": [],
    "createdOn": 1685595608,
    "lastUpdated": 1697003487,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1685595608,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1685595617,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685595617,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1685595750,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/67754/ : FAILURE"
        },
        {
            "timestamp": 1685599022,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1685600141,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 2: Commit message was updated.\n\nCopied Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685600157,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685600157,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1685600182,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/67760/ : FAILURE"
        },
        {
            "timestamp": 1685600244,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 3: Commit message was updated.\n\nCopied Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685600273,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685600273,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1685600298,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/67761/ : FAILURE"
        },
        {
            "timestamp": 1685605617,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685605628,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685605628,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1685605651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67773/ : SUCCESS"
        },
        {
            "timestamp": 1685613510,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 5: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685613553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685613554,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1685613578,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67788/ : SUCCESS"
        },
        {
            "timestamp": 1685613640,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 5:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1685613701,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 6: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685613733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685613733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1685613757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67789/ : SUCCESS"
        },
        {
            "timestamp": 1685619289,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1685621139,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 7: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685621159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685621159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1685621183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67801/ : SUCCESS"
        },
        {
            "timestamp": 1685633939,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(12 comments)"
        },
        {
            "timestamp": 1685719723,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1685955557,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685955590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685955590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1685955615,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/68030/ : SUCCESS"
        },
        {
            "timestamp": 1685974284,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 8:\n\n(17 comments)"
        },
        {
            "timestamp": 1685975028,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685975061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685975061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1685975087,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/68034/ : SUCCESS"
        },
        {
            "timestamp": 1685976304,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1685983039,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(10 comments)"
        },
        {
            "timestamp": 1686009658,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1686858579,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1691604071,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1697003487,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Set Work In Progress"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "a4d2e03a79a91c976264408200590d3be4944fd0",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/1",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685595608,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 298,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "afa7dc9947c1c049c56232d2c95bf0359e9e976b",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/2",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685600141,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 298,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "c5d6f78390ea1edea0131ca68a77aa35b6ca8934",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/3",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685600244,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 298,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "9070c6a3e243d9dddfac74384f9699513335f809",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/4",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685605617,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 374,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 389,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "2e1dc44f7ceaa29414d1cf1676d0ad31ba97ffc9",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/5",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685613510,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 374,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 389,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "1ce382d25d30de208a3d3087affd291f0c6357c4",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/6",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685613701,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "document"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Utility is more suitable than API"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I can see a special character/space here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Similar space/character here as well"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Adding Ed and Gunnar to review"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 219,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Its better to add an example for th eenums as well"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 219,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 374,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 389,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "eb3e2713c2cdf31ef9a44e2ee9305e4992c508ab",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/7",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685621139,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I haven't read through the entire document but I wanted to leave one high-level remark.\n\nThere is work underway to significantly improve the dbus library in order to add support for asynchronous operations with C++ coroutines.  Once this is applied in applications like bmcweb it should significantly reduce the callback-nesting we current have there.\n\nThere is already a generator for the client bindings using C++ coroutines.  The two major features I need to add yet in order to make this useful for bmcweb migration are:\n\n  - Add an equivalent of a \"get-all-properties\" call which returns back some kind of struct containing all the properties from the remote interface.\n  \n  - Port the ASIO service we have in sdbusplus to build on top of the C++ coroutine context so that boost code and co-routine support can co-exist.\n  \nI hope to have both of these done by the end of the month, but it could be up to 2 months before this is completed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Nice! I would like to know more about it. It seems we are talking about the callbacks passed as completion-token to the async calls here. But the current proposal is about the nesting involved in transformation routines to map Dbus properties to Redfish attributes.  Would like to see if coroutines will help in this. Do you have any WIP to have a look at?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "https://github.com/openbmc/sdbusplus/blob/master/example/calculator-client.cpp\n\nhttps://github.com/openbmc/sdbusplus/blob/master/example/coroutine-example.cpp"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, I would really like to foster this kind of experimental development, regardless of whether I think it will help.  My recommendations for proceeding are:\n\n1. Hash out the non-trivial examples.  This doc cherry-picks one example in the existing code that has not been moved over to the latest unpack methods, picks an example that doesn't handle errors properly, and example where an exact string conversion is allowed (which is not the majority of our code).  If these are the only cases handled, I think we're better off being consistent with the old code.  Any such solution will need to handle:\n1. Enumerations\n2. Cases where a DBus error is not an internal error, and vice versa\n3. Cases where we need to call the mapper.\n4. The PATCH path\n5. Cases where keys exist on multiple objects.\n\n\n2. Start porting code over, and measure:\n  a. the speed.  Unless we change the sdbusplus interfaces, I'd be surprised if we could get significantly faster than what's there (a few simple loops), so whatever solution we come up with would need to be equivalent.\n  b. Binary size impact: how much larger does it make the binaries.\n  c. Developer impact.\n  d. Memory impact."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "1) I will add examples that handle errors. This is WIP.\n2) Example for enumeration has been added.\n3) Can you elaborate on this(\"where a DBus error is not an internal error, and vice versa\") . Will 1) cover this?\n4) The code will be mainly used in places where DbusManged object to Redfish Json conversion is required. This is similar to how STL hides the looping construct and gives callbacks with unwrapped values to do the necessary transformation. So calling Mapper directly is not needed.\n5) I think by PATCH you are referring to conversion from redfish to Dbus. The utility is for doing the conversion the other way around. Perhaps, we can take this up after finishing the current one. \n6) I was thinking about it as a post-processing phase where we can merge multiple parser results into single Json. Need to see how Nlohmann does the Json merge for the same key. If that works then we can do the merge within  single pass. WIP\n\n7) The utility was written to use in a new requirement. Yes, will do the porting for an existing use case to measure the regression caused in performance and memory front. Do we have any existing benchmark available?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> 1) I will add examples that handle errors. This is WIP.\n> 2) Example for enumeration has been added.\n> 3) Can you elaborate on this(\"where a DBus error is not an internal error, and vice versa\") . Will 1) cover this?\n\nPlease take a look at the code, there are plenty of examples of this.\n\n> 4) The code will be mainly used in places where DbusManged object to Redfish Json conversion is required. This is similar to how STL hides the looping construct and gives callbacks with unwrapped values to do the necessary transformation. So calling Mapper directly is not needed.\n\nI'm not sure how calling dbus objects avoids calling the mapper.  Can you elaborate?  The existing state of the art already gets rid of the loops (at least most of them) so I'm not sure what the advantage is here, but once you have a non-trivial example ported, that will be more obvious.\n\n> 5) I think by PATCH you are referring to conversion from redfish to Dbus. The utility is for doing the conversion the other way around. Perhaps, we can take this up after finishing the current one. \n\nWe will have to evaluate if only solving one direction is worth the overhead here.\n\n> 6) I was thinking about it as a post-processing phase where we can merge multiple parser results into single Json. Need to see how Nlohmann does the Json merge for the same key. If that works then we can do the merge within  single pass. WIP\n> \n> 7) The utility was written to use in a new requirement. Yes, will do the porting for an existing use case to measure the regression caused in performance and memory front. Do we have any existing benchmark available?\n\nPlease take a look at the commit messages where the existing mechanisms were added for the tests we generally run."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please add the existing ways we solve this today."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 30,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "In the proposed design if you wanted to process a property then you will make an entry in handler table. I think this will be equal to absense of the \"if\" statement in processing loop for the property in the current code."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "we don't always have an IF.  We only have an if if it's possible that the property potentially doesn't exist, or we have to merge two properties with some rules."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I disagree with this statement.  Just because it's non-trivial to do a conversion does not mean that doing properties one at a time is desirable."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "In the current design also properties are handled one at a time in an \"if block\". In new design each if block is converted into a callback. And the loop that driving the parser process is hidden behind the parser Object, which gives illusion of a property at time."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> In the current design also properties are handled one at a time in an \"if block\".\n\nThere's only an if block if the properties are optional.  If they're required, there is no if block.\n\n> And the loop that driving the parser process is hidden behind the parser Object, which gives illusion of a property at time.\n\nIMO, this abstracts in a way that people won't be able to debug as easily, and doesn't integrate as well with our secure coding style.\n\nWith that said, I'm happy to see you start to port the non-trivial examples, and I'd love to be surprised."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "The meaning is there in the next line. At present we need to look at at least two places to see full transformation of a property .1) Inside the if block where debus values are stored in an intermediate structure. 2) From the structure to redfish Json conversion located at some other place."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The meaning is there in the next line. At present we need to look at at least two places to see full transformation of a property .1) Inside the if block where debus values are stored in an intermediate structure. 2) From the structure to redfish Json conversion located at some other place.\n\nYou keep saying this \"inside the if block\" which doesn't exist if the properties are non-optional.  And if they're optional, I think the IF is a good abstraction to make sure that we can handle errors properly."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 110,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're looking at nearly the oldest example we have.  Please use as your example code that relies on sdbusplus::unpackPropertiesNoThrow, which is the current state of the art for this kind of thing, and is greatly reduced in size compared to your example.\n\nAlso, please add an example that handles errors per DBUS_USAGE.md.  The above does not, which makes the problem appear simpler."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 110,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "sdbusplus::unpackPropertiesNoThrow will be able to unpack the data into given variable for a given Interface. But that does not avoid the for loops and if checks in the code. I have seen in some places unpackPropety is being used to just handle one property at a time, which may not be optimal as the unpackPropety will again search for the property value from the available properties. The API call tend to get longer if you wanted to unpack multiple properties using single call. After unpacking you need to write code to convert the variable value to refish json again with necessary error handling."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 110,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> sdbusplus::unpackPropertiesNoThrow will be able to unpack the data into given variable for a given Interface. But that does not avoid the for loops and if checks in the code.\n\nPlease take a look at something like:\nhttps://github.com/openbmc/bmcweb/blob/472bd202da308ea7ba6c9f5606e025367b52fccc/redfish-core/lib/cable.hpp#L27\n\nIt does avoid at least one level of loop.\n\n\n> I have seen in some places unpackPropety is being used to just handle one property at a time, which may not be optimal\n\nDo you have data to back this up?  a loop of a single entry seems like a case that we wouldn't normally need to optimize for, because we'd be calling org.freedesktop.DBus.Properties.Get.\n\n> as the unpackPropety will again search for the property value from the available properties.\n\nThis was profiled quite a bit.  The N^2 algorithm actually ended up faster, and considerably more binary-size dense.\n\n> The API call tend to get longer if you wanted to unpack multiple properties using single call\n\n> After unpacking you need to write code to convert the variable value to refish json again with necessary error handling.\n\nIn the above example, the \"convert the variable value to refish json\" doesn't go away."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is:\n1. Missing error handling.\n2. Cherry picks a case where a property is 1:1\n3. does not include any request or response structures, so it's not clear to me how this could work."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "1) WIP \n2) I have mentioned non-trivial example where 1:1 mapping is not possible.\n3) I think you are referring to the additional header attributes in redfish schema. You can always add any additional properties to the final json. Perhaps, an example port will make it all clear."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> 1) WIP \n> 2) I have mentioned non-trivial example where 1:1 mapping is not possible.\n\nIt would be good if you could add an example of, say, sensors.\n\n> 3) I think you are referring to the additional header attributes in redfish schema. You can always add any additional properties to the final json. Perhaps, an example port will make it all clear.\n\nNo, I'm saying that the underlying HTTP types we use are Request (which represents the user request) and Response (which represents a users response).  If these aren't passed in somewhere, I don't see how this can actually effect the result."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Non trivial lambdas are disallowed in the coding standard."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "I am not sure about what you mean by non trivial lambda. The parser API gets its inspiration from BMCWEB_ROUTE. Here you can see that lengthy callbacks are registered for handling specific URL. The frame-work takes care of routing and parameter un-wrappping for you.  The Parser in the proposal does similar work for you."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I am not sure about what you mean by non trivial lambda.\n\nLambdas that are more than a line or two are difficult to debug.\n\n> The parser API gets its inspiration from BMCWEB_ROUTE. Here you can see that lengthy callbacks are registered for handling specific URL.\n\ngenerally not as lambdas, and in the cases where they're still lambdas, we're working on porting them to normal functions.\n\n> The frame-work takes care of routing and parameter un-wrappping for you.  The Parser in the proposal does similar work for you.\n\nUnderstood, but large lambdas doing actual computation are still not allowed."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please do not use \"onSuccess\" and \"onFailure\" type callbacks.\n\n1. Because consistency with boost asio keeps the mental load low.\n2. Because in many cases, splitting the callback handlers requires all parameters to be reference counted, which is extra overhead and code."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Reworked on the API. On-succes handler is removed. Now the parse function takes completion token callbacks similar to boost APIs."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 283,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This requires memory all times given its static nature.  Have you compared the memory usage between the existing approach and this one?"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 283,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "you need not always create objects in global scope. You can choose to create it as local. Yes, will check memory and performance impacts."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 283,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think you're understanding.  I'm not commenting on the scope of the variable, I'm commenting on the fact that it's static, so it will malloc and use memory all the time."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 305,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please actually include error handling"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 305,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 346,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The intent of this is to manage the user facing api, which I agree, you can just say no user facing API impact."
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 346,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 363,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Binary size impact?  Memory impact?"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 363,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 374,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 388,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "573623d26061ede94f3ec4355705f781cc493cf8",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/8",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685955557,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "see ref implementation [here](https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63609)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "you can see ref implimentation [here](https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63609)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 416,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 431,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "08da8c87a16573020886b72d1003012e73086f11",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/75/63875/9",
            "uploader": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "createdOn": 1685975028,
            "author": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "please wrap at 50/72, not a custom length \nhttps://cbea.ms/git-commit/"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've replied to a number of the comments.  I think the best path forward is to continue on the actual patch.\n\nPlease ensure that while you are doing this work, you are reviewing other peoples patchsets, so that when you come up with a final version of this non-trivial change to core flows, you will have people ready and willing to help you review it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this still being worked?"
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Most of the D-Bus to Redfish conversions I feel are pretty straightforward and are contained in one function, \nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/power_supply.hpp#L254\n\nI am struggling with this \"jump around several functions or files\""
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/dbus_to_redfish_converter.md",
                    "type": "ADDED",
                    "insertions": 410,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 425,
            "sizeDeletions": 0
        }
    ]
}