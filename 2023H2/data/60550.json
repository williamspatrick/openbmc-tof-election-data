{
    "project": "openbmc/libbej",
    "branch": "main",
    "id": "I7894e7c10e4db2ad02a79b01bb4d7a48d5a197cd",
    "number": 60550,
    "subject": "Add BEJ tree API.",
    "owner": {
        "name": "Kasun Athukorala",
        "email": "kasunath@google.com",
        "username": "kasunathg"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libbej/+/60550",
    "hashtags": [],
    "createdOn": 1675204817,
    "lastUpdated": 1689723952,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1675204817,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1675204829,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675204829,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1675204851,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59931/ : FAILURE"
        },
        {
            "timestamp": 1675205251,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675205264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675205264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1675205285,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59932/ : FAILURE"
        },
        {
            "timestamp": 1675274202,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675274212,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1675274228,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675274228,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1675274293,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60006/ : SUCCESS"
        },
        {
            "timestamp": 1675356536,
            "reviewer": {
                "name": "Nikhil Namjoshi",
                "email": "nikhilnamjoshi@google.com",
                "username": "namjoshiniks"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1675357688,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1675391384,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1675901770,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 4: New patch set was added with same tree, parent tree, and commit message as Patch Set 3.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675901785,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1675901803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675901803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1675901865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60526/ : SUCCESS"
        },
        {
            "timestamp": 1675902077,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675902098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675902098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1675902166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60528/ : SUCCESS"
        },
        {
            "timestamp": 1675902982,
            "reviewer": {
                "name": "Nikhil Namjoshi",
                "email": "nikhilnamjoshi@google.com",
                "username": "namjoshiniks"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1675903547,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1688487968,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1688759216,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1688934051,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1689723251,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1689723952,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Change has been successfully rebased and submitted as 2ebe82f5a858c7ed5d567ac526fc698f84fcf6ee"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9e78931690f6e02e4518a0173ed261d72d7ae5fc",
            "parents": [
                "c14fab6eebc3455bc4111bba2ebcd41f7c52be97"
            ],
            "ref": "refs/changes/50/60550/1",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1675204817,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 221,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 318,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d2f9b96ff30ececa3bd7147cdac74f4249795a2d",
            "parents": [
                "c14fab6eebc3455bc4111bba2ebcd41f7c52be97"
            ],
            "ref": "refs/changes/50/60550/2",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1675205251,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/bej_tree_test.cpp",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 426,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "af8d2d0ceea5ee18a5132a5f7e1a28e8bf209161",
            "parents": [
                "42627cab5c87a25540e004ccae3077461e1480bb"
            ],
            "ref": "refs/changes/50/60550/3",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1675274202,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 81,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: (drop more)"
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 81,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 83,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I think the wording of this is a little funny - what I think you mean to convey here is why we have firstChild pointer and the lastChild pointer as well? With the reasoning that if only had the firstChild pointer, we would only be able to push_front vs. push_back - where push_back means we can give the \"first\" element first. FIFO vs. LIFO"
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 83,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Yes. I changed the description."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/bej_tree_test.cpp",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 426,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "d4b5826c32a46efcb6c2204ad5adf45a50c88183",
            "parents": [
                "42627cab5c87a25540e004ccae3077461e1480bb"
            ],
            "ref": "refs/changes/50/60550/4",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1675901770,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/bej_tree_test.cpp",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 426,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "dda677ca15c655f6bd9d95e69eb8ae042d0b6be2",
            "parents": [
                "42627cab5c87a25540e004ccae3077461e1480bb"
            ],
            "ref": "refs/changes/50/60550/5",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1675902077,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 115,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Since this is adding the API before a user, I am speculating here.  I anticipate that RDE responders will need to run the BEJ encoder as the encoded lengths are dynamic with the actual value.  \n\nWhile representing an enum as a string is convenient when translating from a JSON string, in a constrained system I would hope to supply an enum value as an integer and avoid having the encoder doing a string comparison each time let alone searching for the matching string in a table.\n\nAs an alternative (to avoid requiring the value provider to have to match the  values from the dictionary) we could have the enum node store an integer and a pointer to a table of struct (string, dictionary enumeration) with a count of elements and a count of pre-matched values.  The encoder would cache the enumerated values.  A resource constrained caller would supply a table with all supported enum values, and a general translator could set a table with one entry.\n\nAnother alternative would be supply two APIs, one enum value based that is the known dictionary (since its defined to be stable across versions) and the keep current proposed string enum value."
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 115,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Thanks for reviewing this change and for your feedback.\n\nI agree that this is not the most performance efficient implementation for resource constrained systems. I did it this way because it is simpler for the API users provided that the system is good enough to handle it (acceptable latency).\n\nTo avoid string matching, the user needs to provide the corresponding sequence number from the dictionary. Or as you suggested (if I understood it correctly), a table where the encoder will cache [enum integer value -> seq number mapping] relationship in the first run and use it for the corresponding runs. \n\nMy only concern is the extra memory usage per resource. Especially if you need to avoid dynamic memory allocations (something I did in my application). We need pre allocated memory for every resource we handle apart from the dictionary memory.\n\nBut if this is a better trade-off for someones use case, as you have suggested we can add another specialized node or more info to this node to inform the encoder."
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 115,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "I'm fine with deferring until a use case arrives.   If you refresh or when you update the documentation a note to future readers would be appreciated."
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "line": 115,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Good idea. I will add this to the documentation."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/bej_tree_test.cpp",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "2ebe82f5a858c7ed5d567ac526fc698f84fcf6ee",
            "parents": [
                "0686fd9fab1994aeb21a3a9c310823173b61fd43"
            ],
            "ref": "refs/changes/50/60550/6",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1689723952,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/bej_tree.c",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libbej/bej_tree.h",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/bej_tree_test.cpp",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 0
        }
    ]
}