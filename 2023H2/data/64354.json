{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Iac86dfc63c85af04985a61ba52161301134e8f2b",
    "number": 64354,
    "subject": "Add Attestation related D-bus Interface",
    "owner": {
        "name": "sunzc",
        "email": "zhichuang@google.com",
        "username": "sunzc"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/64354",
    "hashtags": [],
    "createdOn": 1687450960,
    "lastUpdated": 1704477125,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1687450960,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1687450990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1687453278,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(12 comments)"
        },
        {
            "timestamp": 1687454364,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687455009,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687556897,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 1:\n\n(11 comments)"
        },
        {
            "timestamp": 1689119735,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1689119758,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1689120549,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 2:\n\n(11 comments)"
        },
        {
            "timestamp": 1689699448,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1689707233,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(7 comments)"
        },
        {
            "timestamp": 1689792847,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 2:\n\n(8 comments)"
        },
        {
            "timestamp": 1689801695,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1689807300,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1689807347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1690415267,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1690433192,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1690475648,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1692143941,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1693406872,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1693749440,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1693903099,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1695680524,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1695680528,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1695682029,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1699952953,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1699984160,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1699984178,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1699986026,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1699986037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1699986037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1699986184,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/76222/ : FAILURE"
        },
        {
            "timestamp": 1699986412,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1699986437,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1699986437,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1699986747,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/76225/ : FAILURE"
        },
        {
            "timestamp": 1699988690,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1699988712,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1699988712,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1699989026,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/76231/ : FAILURE"
        },
        {
            "timestamp": 1699999121,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1699999138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1699999138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1699999451,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76237/ : SUCCESS"
        },
        {
            "timestamp": 1701286560,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(9 comments)"
        },
        {
            "timestamp": 1703199005,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1703199029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1703199030,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1703199123,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 7:\n\n(9 comments)"
        },
        {
            "timestamp": 1703199183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/77282/ : FAILURE"
        },
        {
            "timestamp": 1703199464,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1703199504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1703199504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1703199826,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77283/ : SUCCESS"
        },
        {
            "timestamp": 1703593576,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1704394863,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1704441281,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1704477125,
            "reviewer": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "c511683040e75a9485d0977b971b2b37908a91c6",
            "parents": [
                "3bbd4827527ae41ea9e20c499506ff3a83027534"
            ],
            "ref": "refs/changes/54/64354/1",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1687450960,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Just wanted to add more context, all the interface and properties added here are based on Redfish Spec https://www.dmtf.org/sites/default/files/standards/documents/DSP2046_2022.3.pdf page 216, ComponentIntegrity schema. \n\nRedfish defined the ComponentIntegrity schema, the properties.\n\nI'm trying to translate the Redfish spec to DBus spec, so that when dbus daemon collecting properties for redfish request, it will be consistent and no extra work is needed to convert the data."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I'm trying to translate the Redfish spec to DBus spec, so that when dbus daemon collecting properties for redfish request, it will be consistent and no extra work is needed to convert the data.\n\nThis isn't what we do though.  If we did that, the BMC codebase would just become a big Redfish engine.  AMI tried that with IPMI and their codebase was stuck as a big out-of-date IPMI engine.  We're not going to make that same mistake with s/IPMI/Redfish/."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Thanks a lot for your detailed review, very helpful! I will work on a updated version soon."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Definitely don't want this to be at the top-level.\n\nIs this considered \"Inventory\"?  Maybe \"State\"?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "The updated version put ComponentIntegrity under Inventory/Decorator, as explained in the updated commit msg."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do any of these properties need a \"readonly\" flag?  I suspect most of them you are _not_ expecting other daemons to modify."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Yes, a few of them are read/write, many are read-only. Thanks for the reminder! I will update it:\n- read/write: Enabled\n- read-only:Type, TypeVersion, LastUpdated,ComponentsProtected, TargetComponentURI"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What ends up being the utility of this?  We generally don't like raw strings that might end up being interpreted by other code.  Maybe this is just for humans.\n\nYou might want to document the format here.  Are you expecting something like \"1.3\" for a TPM?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "It is for humans, just like the example you give: \"1.3\" for a TPM, or \"1.1\" for a SPDM-capable device. So should be ok to use string type."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What does \"updated\" mean in this context?  Some kind of firmware update applied or a state change?  This is ambiguous enough that we at least need more words in the description and potentially a different property name."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Good point! This could be any component integrity information change, including a firmware update, certificate change, security protocol version update. I will add more description."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 40,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please look at Associations.  You shouldn't directly hold a object_path like this to a static peer object."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 40,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "I took a look at association. I agree it is a better option. Let me test the association based implementation."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 40,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This probably belongs in an association as well."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack. The same as the above. Let me test the association."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you need an \"Unknown\"?\n\nThe result of putting OEM first is that that ends up being the default value for the property (Type).  I'm not sure if that's what you desire."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 63,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "This looks good to me. SPDM and TPM are the well known one. If we don't know, it could be OEM-specific (similar to unknown), which sounds like a safe assumption to me."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "line": 63,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What ends up being the utility of this?  We are generally trying to avoid protocol-specifics bleeding out into other applications so when I see an interface named the same as a protocol it stands out."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Removed it in the latest patch."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM.interface.yaml",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Looks like this is an association."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM.interface.yaml",
                    "line": 6,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/IdentityAuthentication.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Lots of SPDM-specific stuff is showing up on dbus.  I haven't reviewed this  interface because it just looks like associations.\n\nNeed to see a design doc to understand what you're trying to accomplish by exposing SPDM directly onto dbus."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/IdentityAuthentication.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "So the idea is to allow a remote attester to do SPDM-based authentication to a device. It is a very useful feature in data center where remote attestation is needed everywhere to authenticate the device's firmware integrity or hardware identity. Typically, the BMC will get the attestation request(typically over a redfish request) and then the device dbus agent can handle the attestation request. That's why we have the properties defined here. We have the requester info, responder, responder's authentication(which is a certificate object).\n\nSPDMGetMeasurements is a SPDM-specific interface to get measurements (firmware or hardware config) of devices.\n\n Hope this help answer your question."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/IdentityAuthentication.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "size, not uint32."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "got it, thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "size, not uint32."
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "line": 25,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM.interface.yaml",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/ComponentIntegrity/SPDM/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/ComponentIntegrity/SPDM/meson.build",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/ComponentIntegrity/SPDM/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 295,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
            "parents": [
                "88902e67bcd86b2122b4c1f3b1eaa550b329b08a"
            ],
            "ref": "refs/changes/54/64354/2",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1689119735,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Hi Patrick, I've uploaded a newer version of patchset, where I addressed all your comments. Could you please take a look? I've verified it by testing on a dbus daemon using the dbus interfaces defined here, especially the associations."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "@patrick@stwcx.xyz Hi Patrick, could you help review this updated version? Thanks!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Could you help take a look and give feedback on the new proposal of where should all integrity measurement interfaces go? Thanks!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Proposing creating a directory Attestation in DBus and put all integrity/identity/measurement related interfaces under it. See details in newly added comment."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You've called this an Inventory.Decorator, but it isn't obvious to me which inventory object(s) you expect this to be a decorator for.  You've listed associations, but it kind of seems like his would be on one of the two items you've listed potential associations to?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Initially,I thought \"Integrity\" info seems to be a decorator of an Item. However, it is not like the other decorator info that are static info collected from hardware items.\n\nI did a exhaustive search under /xyz/openbmc_project/ and found no good place for these integrity attestation related interfaces. For example:\n\ntop candidates considered:\nState : it's for power state management of BMC, HOST, CHASSIS for phosphor-state-manager\nInventory: it is for static inventory information of items\n\ndbus management:\nAssociation \nObject\nTime\nUser\nCommon\nCollection\n\n\nsubsystem management:\nMemory\nNetwork \nMemory\nLed\nChassis \nChannel\nBIOSConfig\nSensor\nSmbios\nCerts\nSoftware\nHardwareIsolation: information of isolated hardware\n\nspecific protocol:\nPLDM\nMCTP\nIpmi \n\nOther:\nPFR: platform firmware resiliency\nCondition: Host firmware condition\nTelemetry\nDump\n\n\nGiven Integrity measurement is a piece of important security information that is orthogonal to other categories defined under /xyz/openbmc_project/. Would it make sense to create a \"Integrity\" directory under /xyz/openbmc_project/ to provide integrity measurement related interfaces and put ComponentIntegrity, IdentityAuthentication, MeasurementSet interface under it. We will have something like below:\n\nyaml/xyz/openbmc_project/Integrity/ComponentIntegrity.interface.yaml\nyaml/xyz/openbmc_project/Integrity/IdentityAuthentication.interface.yaml\nyaml/xyz/openbmc_project/Integrity/MeasurementSet.interface.yaml\n\nWhat do you think?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "I am thinking about a better name to group these integrity/identity/measurement related interfaces, like Attestation. We can put those interfaces related to attestation management here. For example, attest the component integrity, component identity, or firmware/hardware configuration from secure measurement. \n\nyaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml\nyaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml\nyaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml\n\nIn the future, if we have other security protocols that does attestation and need to expose attestation status/results over dbus, they can use existing interfaces or add new interfaces under Attestation/."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I suspect this should be readonly also?  Do you really want another daemon to be able to write this property?\n\nThere might be some confusion between:\n  * normal\n  * readonly\n  * const\n  \nconst won't send signals because the implementation is not allowed to change the value once the object is constructed.  readonly means that a dbus-client cannot write to the value."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Make sense, Will do. No client should be allowed to update it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 60,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please also add these to the other end for documentation."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "line": 60,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Will do"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This isn't an Inventory.Decorator.  Inventory shouldn't have state changes like this.  It isn't obvious to me where you expect this to live in dbus."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want 18 and 27 to be the same?\n\nPlease document the reverse link in the Certs.Certificate."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you need 'Unknown'?\n\nThe default for ResponderVerificationStatus is going to end up being Failed, unless you set a default on line 8."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "line": 36,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Make sense, let me add an unknown status here, which will give more info about the attestation status in D-Bus.\n\nTo be noted, this is security authentication, an \"Unknown\" status is almost equal to \"FAILED\" to the authenticator as the authenticator can not trust it. The Redfish spec only have Success and Failed defined, so both the \"Unknow\" and \"Failed\" will be merged and reported as \"Failed\" to the authenticator."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/MeasurementSet.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think this belongs in Inventory.  Inventory should be for static data."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/MeasurementSet.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/meson.build",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 281,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "6cb7066e342eb2b70b675353c44a570eaeb310db",
            "parents": [
                "d1484a1499bc241316853934e6e8b735166deee2"
            ],
            "ref": "refs/changes/54/64354/3",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1689807300,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Hi Patrick, could you help take a look at this updated version? Thanks!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Hi Patric, could you help review this updated version? Thank you!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Adding Nan Zhou, Nancy Yuen and William Kennington to help with the review, thanks!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "@patrick@stwcx.xyz, Hi Patrick, thanks a lot for your constructive feedback! I have fixed the comments accordingly. Now I also get it reviewed with Nan who has rich experience in openbmc and get a +1. Could you help review it again and +2 it if it looks good to you? Thanks!"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Not typically how I see dates here. \nDoes uint64 work?\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/4f6fbeab36c23cce3816f0f6de4c92b9b87774b7/yaml/xyz/openbmc_project/State/BMC.interface.yaml#L19"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Prefer string here: this LastUpdated date here is for human readers. If we store it as string here, it will avoid transforming it again from uint64 to string."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "bmcweb could convert the timestamp to human readable strings, but on dbus, uint64 epoch timestamp looks more suitable here, which is also consistent with other interfaces (e.g. dump entry)"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "If uint64 epoch for timestamp is the d-bus convention, I'm happy to follow it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Should this be `array[byte]`?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "`size` here represents the \"size\" of the measurementindices array. `byte` will put a limit on the number of possible measurement blocks(limit to 256). Even though the current SPDM spec does have a limit of 256 max blocks, I'm not sure if we want to have a hard limit here given the spec may change to accept more blocks."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "The `size` here is the data type in the array, not the size of the array.\nWith `size`, it effectively becomes std::vector<size_t> in C++, but I think it makes more sense for `std::vector<uint8_t>` for this property."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "As explained in the previous comment, the idea of using `size` type (`size_t` effectively in C++, which is also compatible with redfish spec) is that we don't want to put a hard tight limit on the array size, thus making this interface more stable. For example, if we use byte here, it will be tightly binded to the current SPDM spec. If anything changed in the SPDM spec, there will be a chain reaction to the bmcweb, dbus interface."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": ">  we don't want to put a hard tight limit on the array size, thus making this interface more stable.\n\nAs indicated in above comment, the size here is not for the array size, but the type of the object in the array."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "I mean if the data type is uint8_t or byte, then the biggest array size is (2**8-1) which is 255. If it is size_t, we don't have such a limit."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Possibly refer this as Certificate object path, so it is more clear"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "make sense, will change the description"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Could throw other errors, e.g. internal failure, or some other errors?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Good point, will add it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "line": 96,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Currently certificates supports X.509 public certificate in PEM format. PEM wiki -\nhttps://en.wikipedia.org/wiki/Privacy-Enhanced_Mail . Is this certificate also comes under the same format?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "line": 96,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Yes. If the original device certificate is not in PEM format, the d-bus daemon should convert it to PEM format and create a certificate dbus certificate object for it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "3e4fcff57d2dca84e2c573958a23b10398b6010d",
            "parents": [
                "d1484a1499bc241316853934e6e8b735166deee2"
            ],
            "ref": "refs/changes/54/64354/4",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1699986026,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 308,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "265eb4a9da73fccf8efd70f41e3884793fe3c959",
            "parents": [
                "d1484a1499bc241316853934e6e8b735166deee2"
            ],
            "ref": "refs/changes/54/64354/5",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1699986412,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "6e49f581f88892f7a5e0014e41405dd0e5a11231",
            "parents": [
                "7daf2d7d5a702a08e601c9841e41e9a254e90cdf"
            ],
            "ref": "refs/changes/54/64354/6",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1699988690,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
            "parents": [
                "7daf2d7d5a702a08e601c9841e41e9a254e90cdf"
            ],
            "ref": "refs/changes/54/64354/7",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1699999121,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please make sure to rebase this when submitting the next patch set also."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Sorry for the late update!\n\nI've addressed all the comments, please see the updated patchset. Thanks!"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Are we expecting anyone to parse this inside the BMC or is this only going to be used externally via Redfish?  Generally we don't like parsing/matching on arbitrary strings."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 30,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "No parsing needed inside BMC, this TypeVersion will be used externally via Redfish."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "in milliseconds since the epoch?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Yes, let me add it in the description."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why does this matter?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 45,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "It should not matter from d-bus point-of-view. The date format in string is specified by the Redfish spec. let me remove it from here to make the d-bus interface more generic."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You haven't introduced TrustedComponent yet.  Probably should move this to the next commit."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Make sense. let me move it to next commit."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 64,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need to add the reverse to Inventory.Item?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "line": 64,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Yes. I actually find a more proprietary name for this association. ComponentIntegrity object authenticates the integrity of the component (e.g., GPU, or other devices). I changed the association name to \"authenticating/authenticated_by\" and add the reverse in Inventory.Item."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The dbus code allows multiple returns, which automatically turns it into a tuple.  This is really equivalent to the code you have except that we can natively document each return value instead of having them embedded in the description.  Can you try that?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Yes, updated. Thanks!"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really don't like seeing new InternalFailures added.  What is a caller expected to do with this?  There isn't anything they can do to recover, so why tell them?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "My understanding is this error type provide more info for debugging. \nFor example, in the implementation of this dbus method, it will check whether parameters are valid, if not, report InvalidArgument error. \nIf error happens inside the device, e.g., something goes wrong inside the RoT(root of trust) while preparing measurements, by reporting InternalFailure, we know it is an internal error within the device. So it is about providing accurate debug info, not for recovery. Does it make sense?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "line": 103,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These aren't the association names you added to IdentityAuthentication."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "line": 103,
                    "reviewer": {
                        "name": "sunzc",
                        "email": "zhichuang@google.com",
                        "username": "sunzc"
                    },
                    "message": "Updated to match the associations added to IdentityAuthentication."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "38c7a66c31628974d9332292f3b341a6f1cb2994",
            "parents": [
                "800f708024fa74404f325b04892e276fdc118c62"
            ],
            "ref": "refs/changes/54/64354/8",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1703199005,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 62,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 327,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "e7f02d8f951bda8fdfd49b395a719f95e396306e",
            "parents": [
                "800f708024fa74404f325b04892e276fdc118c62"
            ],
            "ref": "refs/changes/54/64354/9",
            "uploader": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "createdOn": 1703199464,
            "author": {
                "name": "sunzc",
                "email": "zhichuang@google.com",
                "username": "sunzc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/ComponentIntegrity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/IdentityAuthentication/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/MeasurementSet/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Attestation/meson.build",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
                    "type": "ADDED",
                    "insertions": 62,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 327,
            "sizeDeletions": 0
        }
    ]
}