{
    "project": "openbmc/pldm",
    "branch": "master",
    "id": "I9756e1029b41a297a8f73e2ab7be47bc143ef710",
    "number": 65701,
    "subject": "requestHandler: Queue the request messages to one endpoint",
    "owner": {
        "name": "Thu Nguyen",
        "email": "thu@os.amperecomputing.com",
        "username": "ThuBaNguyen"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/pldm/+/65701",
    "hashtags": [],
    "createdOn": 1691026392,
    "lastUpdated": 1702022418,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1691026392,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1691026440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691026440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1691026492,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1691026496,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/72389/ : FAILURE"
        },
        {
            "timestamp": 1691468551,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1691468599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691468599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1691468827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72610/ : SUCCESS"
        },
        {
            "timestamp": 1691631825,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1691675893,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 3: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1691675921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691675921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1691676034,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1691676136,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72727/ : SUCCESS"
        },
        {
            "timestamp": 1691724311,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1691728408,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1691728440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691728441,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1691728465,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1691728661,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72754/ : SUCCESS"
        },
        {
            "timestamp": 1692237806,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1692246691,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1692338608,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1692340685,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1692699757,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1692741486,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1692741513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1692741513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1692741531,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1692741748,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73310/ : SUCCESS"
        },
        {
            "timestamp": 1692747234,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1692948508,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1692950127,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1692952853,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1692953406,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1693283717,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1693308292,
            "reviewer": {
                "name": "sagar srinivas",
                "email": "sagar.srinivas@ibm.com",
                "username": "sagisin"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1693393513,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693393563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693393563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1693393790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73641/ : SUCCESS"
        },
        {
            "timestamp": 1693400749,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1695087447,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1695114327,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1697596528,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697596593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697596594,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1697596862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75083/ : SUCCESS"
        },
        {
            "timestamp": 1697596887,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 7:\n\n(6 comments)"
        },
        {
            "timestamp": 1697599087,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1697599364,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1697601244,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1697613795,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697613845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697613845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1697614120,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75096/ : SUCCESS"
        },
        {
            "timestamp": 1697632532,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697667028,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697674803,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697676009,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697676903,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1697792708,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697792762,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697792762,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1697792781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/75170/ : FAILURE"
        },
        {
            "timestamp": 1697792900,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697792936,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697792936,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1697793174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75171/ : SUCCESS"
        },
        {
            "timestamp": 1697793225,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1698034621,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10: Code-Review+2"
        },
        {
            "timestamp": 1698217859,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Change has been successfully rebased and submitted as 4ddee3a0fda62e647cadafe07062d10e9db275b4"
        },
        {
            "timestamp": 1698222133,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1702020769,
            "reviewer": {
                "name": "Archana Kakani",
                "email": "archana.kakani@ibm.com",
                "username": "ArchanaKakani"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1702022418,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8b974c6f7b672fd2ec273bc8550e90f145aa099b",
            "parents": [
                "fc81a437dd13d97409ebebabcc3befd1832cfcf0"
            ],
            "ref": "refs/changes/01/65701/1",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1691026392,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Support queue the request message to one endpoint in pldmd"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 153,
                    "deletions": -63
                }
            ],
            "sizeInsertions": 172,
            "sizeDeletions": 63
        },
        {
            "number": 2,
            "revision": "9bc32340e7e7f8d68edbf82584fb60cdf4cc393d",
            "parents": [
                "82257922c1442d3bee1a3d2a42885c7e1d5908e3"
            ],
            "ref": "refs/changes/01/65701/2",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1691468551,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why do we need a mutex to protect the queue? Are we operating on more than one thread?\n\nCan you please outline more of the specifics of the problem in your commit message? What's the big picture that compels this approach?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "> Why do we need a mutex to protect the queue? Are we operating on more than one thread?\nI think, the pldmd will be the requester and responser at the same time. So it is possible that the `registerRequest()` and `handleResponse()` can be called at the same time. That why I add the mutex to protect the queue.\n\n> \n> Can you please outline more of the specifics of the problem in your commit message?\nI updated the commit message.\n\n> What's the big picture that compels this approach?\nWhen a sensor manager is added to pldmd daemon to manage the sensors\nof one terminus, the sensor manager will support the sensor polling\ntimers. The timers will polling the PLDM sensors with different\nintervals so there can be many `getSensorReading` requests to one\nendpoint to get the sensor values. Moreover, BMC also sends\n`PollForPlatformEventMessage` requests to get the event data when it\nreceives the `pldmMessagePollEvent` event from terminus. So those TX\nrequest messages have to be queued."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I think, the pldmd will be the requester and responser at the same time. So it is possible that the registerRequest() and handleResponse() can be called at the same time. That why I add the mutex to protect the queue.\n\nA mutex relates to managing parallel threads of execution though, and that's not implied by multiple roles (requester and receiver - those roles can be implemented with single-threaded async IO, for instance). If mutexes must be used then the patch also needs to articulate the threads involved and their responsibilities. If that can't be articulated then my confidence in the locking isn't high \ud83d\ude1e"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I updated to remove the mutexes."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "But can you describe why that approach is correct? Really that's the issue. One way or another we need justification as to why an approach is correct, and that requires describing the execution contexts involved."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Adding `mutexes` is just addition protection for `endpointMessageQueues`. Because having mutexes does not effect in the performance that why I added it. It is not wrong but just does not require so I'm ok with removing `mutexes`"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right, there should be no contention if the execution model is purely async. But I guess I'm after confirmation that we actually have that case (there are no threads)."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 153,
                    "deletions": -63
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 65
        },
        {
            "number": 3,
            "revision": "8b04d40f88b9d68479f9df5276ef33d16c90c277",
            "parents": [
                "82257922c1442d3bee1a3d2a42885c7e1d5908e3"
            ],
            "ref": "refs/changes/01/65701/3",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1691675893,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 153,
                    "deletions": -63
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 182,
            "sizeDeletions": 65
        },
        {
            "number": 4,
            "revision": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
            "parents": [
                "82257922c1442d3bee1a3d2a42885c7e1d5908e3"
            ],
            "ref": "refs/changes/01/65701/4",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1691728408,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "@Thu Nguyen \nPLDM right now has the asynchronous approach to respond to a request message, will this queuing of request messages not deviate from the asynchronous approach and move back to the synchronous one?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "About handling the respond to a PLDM request message, we still keep asynchronous approach. The caller of `registerRequest` still registers the request and when the response message comes the callback functions `responseHandler` will be called. No need to wait for the response.\n\nBut for sending/receiving the PLDM Messages we have to move back to \"synchronous approach\" to meet \"Requirements for requesters\" as DSP0240 spec."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "> But for sending/receiving the PLDM Messages we have to move back to \"synchronous approach\" to meet \"Requirements for requesters\" as DSP0240 spec.\nActually, we still keep the asynchronous approach in sending/receiving the PLDM Messages. Handler sends the message and handles response when it is available. It does not wait for the response."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "@Thu Nguyen, Was this intended to solve the instance ID expiration problem on PLDM requests?\nHow is Queue helping us solve this issue? Is there any other use case you are trying to solve using a queue?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "> @Thu Nguyen, Was this intended to solve the instance ID expiration problem on PLDM requests?\n\nThis patch set only makes the current implementation of PLDM request message handler to follow the spec.\nIt was not intended to solve the problem you said.\nWhat is your issue in the instance ID expiration? Can we discuss in #pmci discord to save time?\n\n> How is Queue helping us solve this issue? Is there any other use case you are trying to solve using a queue?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "I assumed this commit was pertaining to the discord conversation - https://discord.com/channels/775381525260664832/778790638563885086/1138703165588512778 onwards where @arj mentioned it would be a partial solution to the instance ID expiration problem."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "There is no instanceID expiration problem. We thought that we can order the request to one endpoint by the expiration of instanceID because the pldmtool and pldmd are using the same instanceID pool.We will only response new InstanceID when the allocated one is free.\nBut there are some problems/tricky with that approach and we can't finalize the solution.\nThis patch set will handle the request message queue for pldmd only, it is a partial solution because it will not queue the request from PLDMtool."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "Ack"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 186,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "Can we have both these above `if` checks in a single `if` condition?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 186,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 186,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 138,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 167,
            "sizeDeletions": 66
        },
        {
            "number": 5,
            "revision": "377dd587d62ab891e3f054eb339c6b0721ab327d",
            "parents": [
                "acf2c8c3afb2928e98501ba0f7a426bb578a6813"
            ],
            "ref": "refs/changes/01/65701/5",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1692741486,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "sagar srinivas",
                        "email": "sagar.srinivas@ibm.com",
                        "username": "sagisin"
                    },
                    "message": "typo"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 166,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "Can we have an error statement before assert?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 166,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "About these codes, I just move them from the old code to new function. I don't not change any things."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 136,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 66
        },
        {
            "number": 6,
            "revision": "31020d6d4b8b524c8f9a6d930e7956e7a00e7bfb",
            "parents": [
                "19fdb45ba28835686b70f27c9819ff34145a1794"
            ],
            "ref": "refs/changes/01/65701/6",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1693393513,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "@Thu - have couple of questions on the testing : \n\n\n1) I have seen cases in the past where , we could not write code like this :\n\n```\nfor(sensor : sensorslist)\n{\n  pldm_send(get_state_sensorreading_command, sensor.sensorId);\n}\n\n```\n\nbecause if the sensors list is more than 32, then we would run out of free instance ids.\n\nNow with your code , does this pattern work ? without we running into the instance id problem ? at a glace on the code - it does not look like it ? \n\n2) There is code in the pldm repo, that would key off of the dbus properties to drive sensor events, for example : a physical led state change would result in a sensor event being generated (if we model led as a PLDM sensor). With this code in place, do we think that the sensor event could be delayed based on the running transactions ?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "About 1 points.\n\nWe can't write the code like that.\nThe above code should be\n```\nfor(sensor : sensorslist)\n{\n  if (eid=getInstanceID())\n  {\n      pldm_send(get_state_sensorreading_command, sensor.sensorId);\n  }\n}\n```\nWith the current PLDM code, after sending 32 PLDM the registered request messages to one points without the response from endpoints the next `pldm_send` will be failed because there is no free InstanceID.\n\nAfter my patch set, after there are 32 registered request messages to endpoints, the registered messages will be queued and send one by one. The 33th message will be failed when there are no response message for the sent message to one endpoint because no free InstanceID.\n\nSo the pattern still is failed.\n\nAbout point 2th,\nWhich is the source of the event? If the source of the event is BMC, I think it should be one effecter setting from BMC right?\n\nIf the source is from BMC then the answer is yes. But I don't think the delay is too long. One PLDM transaction takes only 1-2ms to be done. The response time of host can be different but I don't think it more than 10ms for sensor reading."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "@ManojKiran Eda, does your MCU support multi threads in handling the pldm request? And support multi threads collecting the data to response for the pldm request?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> @ManojKiran Eda, does your MCU support multiple threads in handling the pldm request? And support multiple threads collecting the data to respond for the pldm request?\n\nWhat's MCU ? All the apps written under openbmc(including pldmd) work only in single thread mode, but they use the concept of event loops to emulate the parallelism in handling the pldm messages. If you are asking about the remote endpoint that talks to bmc, our remote endpoint supports multi threading.\n\n> After my patch set, after there are 32 registered request messages to endpoints, the registered messages will be queued and send one by one. The 33th message will be failed when there are no response message for the sent message to one endpoint because no free InstanceID.\n\n> So the pattern still is failed.\n\nI was expecting your patch to also solve this problem, because as long as the message is sitting in queue - the instance id which is grabbed in the messages is of no use right ?\n\nI feel the correct design is that the queue that we are forming should not have an instance id in them , rather that instance id should be added just before we send the message to the remote endpoint - that way ..we can write patterns like what i have mentioned without running out of instance id's & the instance id expiration time also gets counted after the message is being sent rather than the message being added to the message queue."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I feel the correct design is that the queue that we are forming should not have an instance id in them , rather that instance id should be added just before we send the message to the remote endpoint\n\nagreed, however this requires fixing all the encode/decode APIs of libpldm first"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack.\n\n@arj & @thu - I am happy to merge this as-is for the moment (as this does not make things any worse than what we already have) & we can change this logic once we have the libpldm api's fixed. What do you suggest?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, I think it should go in. While it doesn't solve the problem in general, it at least prevents pldmd on its own from violating the spec, and doesn't prevent us from making things better in the future (by solving the problem generally). It's a solution we can have without yet having fixed libpldm."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Sure, Changes looks good to me."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "could we add little more documentation about this struct like above ?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Added."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "little more documentation on what this struct is about is needed."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Added."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "maybe `activeRequest`?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 182,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The request isn't started if one is already active though? What properties is this method trying to uphold with respect to the queue?\n\nPerhaps this method is better named `pollEndpointQueue()`?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 182,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 187,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Instead of the `waitForRespMsg` boolean maybe we could use `std::optional<std::shared_ptr<RegisteredRequest>>`? If it's empty there's no active request, and if it's populated then there is an active request."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 187,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I gave this a try and it's not worth the change. Don't worry about it for now, but it would be nice if the code were refactored down the track so we're not splitting up ownership of the fields of `RegisteredRequest`"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 253,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "use map.contains() instead and make it more readable ?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 253,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 335,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Would we have fewer headaches if this were an array of std::deque instead? What's the cost of that vs having to dynamically manage the map? Feels like there are more runtime penalties and more scope for UAF of the deque instance."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 335,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Because each endpoint with eid needs one messageQueues and also activeRequest state so I don't think using `an array of std::deque` is possible."
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 335,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 136,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 66
        },
        {
            "number": 7,
            "revision": "45f8c38e0b3923a9720503ec30fef010fa9e9947",
            "parents": [
                "8b82f8f8ccfef127a100e50a9bbad0c37edf5f5a"
            ],
            "ref": "refs/changes/01/65701/7",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1697596528,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The system"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 145,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 66
        },
        {
            "number": 8,
            "revision": "ef8931da48ba62820c1e18a86aaa078b7259413c",
            "parents": [
                "ebf8bb54afa616ce6caa379fb8be3239d4ad7cd1"
            ],
            "ref": "refs/changes/01/65701/8",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1697613795,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "@tom - mind taking a look at this ?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 145,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 66
        },
        {
            "number": 9,
            "revision": "b205a169ffcbc1154b389f7f7bc9dfe975f96ecb",
            "parents": [
                "96af8cb2c4438070e8c64cd00f0bfd67040c549d"
            ],
            "ref": "refs/changes/01/65701/9",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1697792708,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 146,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 175,
            "sizeDeletions": 66
        },
        {
            "number": 10,
            "revision": "3f2af245da9027a816796840460b4ae2469b0589",
            "parents": [
                "96af8cb2c4438070e8c64cd00f0bfd67040c549d"
            ],
            "ref": "refs/changes/01/65701/10",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1697792900,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Rebased."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 146,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 175,
            "sizeDeletions": 66
        },
        {
            "number": 11,
            "revision": "4ddee3a0fda62e647cadafe07062d10e9db275b4",
            "parents": [
                "a675662c8b90c1de2862de2bcce45f6aaeafae2b"
            ],
            "ref": "refs/changes/01/65701/11",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1698217859,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "requester/handler.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Archana Kakani",
                        "email": "archana.kakani@ibm.com",
                        "username": "ArchanaKakani"
                    },
                    "message": "Do we need this?"
                },
                {
                    "file": "requester/handler.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "It seems we don't. The patch uses `dequeue` instead of `queue`."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "requester/handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 146,
                    "deletions": -64
                },
                {
                    "file": "requester/test/handler_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 175,
            "sizeDeletions": 66
        }
    ]
}