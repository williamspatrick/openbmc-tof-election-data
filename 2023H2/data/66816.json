{
    "project": "openbmc/phosphor-virtual-sensor",
    "branch": "master",
    "id": "Ib323f6e18ef9f3317437753018857ad53732f54b",
    "number": 66816,
    "subject": "exprkt: Add ifNan to ignore the NaN value",
    "owner": {
        "name": "Lei YU",
        "email": "mine260309@gmail.com",
        "username": "mine260309"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-virtual-sensor/+/66816",
    "hashtags": [],
    "createdOn": 1695871939,
    "lastUpdated": 1696723668,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1695871939,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1695871961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1695871961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1695872049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74532/ : SUCCESS"
        },
        {
            "timestamp": 1695936414,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1696628496,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1696669476,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1696672104,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1696672357,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1696672370,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1696672370,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1696672576,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74788/ : SUCCESS"
        },
        {
            "timestamp": 1696723562,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1696723668,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9ea1b0ef9929791e2f181fe18cd8ef8df3244020",
            "parents": [
                "bc490beef1f1cf99b7b89f578b77d5d6acb6c2cb"
            ],
            "ref": "refs/changes/16/66816/1",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1695871939,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "nit: \"nan\""
                },
                {
                    "file": "exprtkTools.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is reference actually beneficial here?  If these are really float, double, etc. you're making more work by indirecting through a reference.  If these end up being some type-indirection struct for lazy evaluation, then maybe it makes sense for them to be references."
                },
                {
                    "file": "exprtkTools.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Currently it is double in most cases, so let's use value directly."
                },
                {
                    "file": "exprtkTools.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Oh, if we change it to T here, it gets compile error:\n\n error: call of \u2018(FuncIfNan<double>) (double&, double&)\u2019 is ambiguous\n\nUsing `const T&` resolves the issue."
                },
                {
                    "file": "exprtkTools.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't really understand why that is necessary but it is probably some intricacy of exprtk.  I was really trying to get rid of the pass-by-reference because it would end up with worse code for a POD type like a double."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "exprtkTools.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "virtualSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "virtualSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 46,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "c77b6b3f91030c54bb5dd73076e10dfbd2d213a9",
            "parents": [
                "87d351153bc4aab46f61221aab67bc98b8a40e1e"
            ],
            "ref": "refs/changes/16/66816/2",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1696672357,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "exprtkTools.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "virtualSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "virtualSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 46,
            "sizeDeletions": 0
        }
    ]
}