{
    "project": "openbmc/libbej",
    "branch": "main",
    "id": "I50f2ccec155434639dfecd96193608cf6c5a1787",
    "number": 53707,
    "subject": "Add helper functions for BEJ dictionaries",
    "owner": {
        "name": "Kasun Athukorala",
        "email": "kasunath@google.com",
        "username": "kasunathg"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libbej/+/53707",
    "commitMessage": "Add helper functions for BEJ dictionaries\n\nSigned-off-by: Kasun Athukorala <kasunath@google.com>\nChange-Id: I50f2ccec155434639dfecd96193608cf6c5a1787\n",
    "createdOn": 1652397116,
    "lastUpdated": 1654027682,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1652397116,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1652397334,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1652397633,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1652401369,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1652401414,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 3:\n\n(6 comments)"
        },
        {
            "timestamp": 1652413706,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1652453946,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1652459765,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1652459930,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1652465877,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652465928,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1652473625,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\n(1 comment)"
        },
        {
            "timestamp": 1652481503,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652484932,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(6 comments)"
        },
        {
            "timestamp": 1652656072,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1652656090,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1652657738,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 6: New patch set was added with same tree, parent, and commit message as Patch Set 5."
        },
        {
            "timestamp": 1652852061,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1653333952,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Uploaded patch set 7: New patch set was added with same tree, parent, and commit message as Patch Set 6."
        },
        {
            "timestamp": 1653333989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653333989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1653334038,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43630/ : SUCCESS"
        },
        {
            "timestamp": 1653335043,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 7: Code-Review+2"
        },
        {
            "timestamp": 1653372997,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Change has been successfully merged"
        },
        {
            "timestamp": 1653699860,
            "reviewer": {
                "name": "Nikhil Namjoshi",
                "email": "nikhilnamjoshi@google.com",
                "username": "namjoshiniks"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1654027682,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ac2b6afe4dd329dc798e89909e9cdcac21d0088e",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/1",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652397116,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Add Google Copyright.\n\noh. probably should have added for the other one too.. oops"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Do you have an example for this?"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "sent it to you internally."
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Hmmm since this is in openbmc/ repo instead of meta-google or google-misc, I'm not sure how correct it is to check in the Google copyright - let's check up with Ed on that"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Unfortunately we couldn't verify this with Ed today. Brandon and I thought that we can go ahead without the copyright header for now and add it later if necessary."
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Other company have their copyright in phosphor-* repos. Should be fine."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 66,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I believe the practice in C is to define all of the variable on top? not too sure."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 66,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "It doesn't have to be. We don't do that in EC code base."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 310,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d30d4d3a7d39f533cdfe89bd3ddd3163cb47bf1d",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/2",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652397334,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/bej_dictionary.c",
                    "line": 16,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "do we need to check if this is 0?"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 16,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "propertyOffset has to be a valid offset. So it can't be 0. I mentioned this in the param description. Since this function can't be accessed from another file I decided to do it this way."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 35,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I would prefer to split them so they can have seperate error messsage."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 35,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "But the return message is the same, isn't it? Invalid offset value?\n\nI am checking this (propertyOffset < bejDictGetPropertyHeadOffset()) first because (propertyOffset - bejDictGetPropertyHeadOffset()) can be negative otherwise.\n\nLets say headoffset = 10 and property size is 5.\n\nthen bejValidatePropertyOffset(0) is invalid offset.\nbejValidatePropertyOffset(11) is invalid offset."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 35,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I think we can have more detailed error message.\n\n1, \"Invalid property offset: Pointing to BEJ header data\"\n2, \"Invalid property offset: Does not point to beginning of property\"\n\nSomething like that."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 35,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 43,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "doesn't the return type not match here? I guess its fine here."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 43,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 85,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nameLengh == 0\n\ninstead?"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 85,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 310,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "3819942a498e7b136a8db344f3366fad9014f44b",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/3",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652401369,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 310,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "e004b56d185e836182e290b435f755c1ca955f87",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/4",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652459765,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/bej_dictionary.h",
                    "line": 23,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "These indentation seems possibly wrong?"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 23,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "This is produced by clang-format. I think this is because of the,\n\n#ifdef __cplusplus\nextern \"C\"\n{\n#endif\n\npart."
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I think enum members are supposed to be lowerCamelCase https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 80,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "same nit as below, would be good to have [in] / [out]"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 80,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 10,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: here and below, would be good to indicate where it's [in] or [out] (or both)"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 10,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 59,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: I think for ease of understanding, having the RDE headers that we are using / expecting being included either in the .c / .h or in README would be good so that it's easier to read along"
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 59,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Good point. But we are not using RDE headers for this. This is like one level below. For BEJ, I did not want to add too much information that we can get from the standard easily. If someone is trying to edit this code, I assumed that person would read the standard first to understand BEJ first."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 93,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "No need to check out of bounds or something with nameLength? I guess since these are just pointer, there's no way to do that.."
                },
                {
                    "file": "src/bej_dictionary.c",
                    "line": 93,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Yea. As long as we are using nameOffset and nameLength read from the dictionary, this is safe."
                },
                {
                    "file": "test/meson.build",
                    "line": 21,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "wait.. why are the presubmit tests not working?"
                },
                {
                    "file": "test/meson.build",
                    "line": 21,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "I asked about this on discord. Apparently they have to set it up. Meanwhile I ran the unit tests on the latest patch locally and it passed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 320,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "b2f6fe4f5a961165f259848d7e9bbb2fae23b085",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/5",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652656072,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "include/rde_common.h",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 366,
            "sizeDeletions": 44
        },
        {
            "number": 6,
            "revision": "e09b78627baf317dedf1661af1ed94f9e8b00610",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/6",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1652657738,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "include/rde_common.h",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 366,
            "sizeDeletions": 44
        },
        {
            "number": 7,
            "revision": "d073aa1a55932850bf850599920dd38497518a08",
            "parents": [
                "7ffd30aaa5b4d87d631b91715c9af66f72462c3a"
            ],
            "ref": "refs/changes/07/53707/7",
            "uploader": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "createdOn": 1653333952,
            "author": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "include/bej_dictionary.h",
                    "line": 35,
                    "reviewer": {
                        "name": "Nikhil Namjoshi",
                        "email": "nikhilnamjoshi@google.com",
                        "username": "namjoshiniks"
                    },
                    "message": "Can we typedef all the structs ? \n\nstruct _BejDictionaryProperty_\n{\n} BejDictionaryProperty;\n\n\nThis will avoid repeated used of struct BejDictionaryProperty* and instead we can use BejDictionaryProperty*"
                },
                {
                    "file": "include/bej_dictionary.h",
                    "line": 35,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "We could. I just preferred this style because it tells me that a particular variable is a struct."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/bej_dictionary_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/bej_dictionary.h",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/bej_dictionary.c",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "include/rde_common.h",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 366,
            "sizeDeletions": 44
        }
    ]
}