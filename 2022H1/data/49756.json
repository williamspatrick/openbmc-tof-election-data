{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I1e9cf03ebdcdeff490478f364de10a7c58fea197",
    "number": 49756,
    "subject": "bmcweb: New feature ExternalStorer",
    "owner": {
        "name": "Josh Lehan",
        "email": "krellan@google.com",
        "username": "Krellan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/49756",
    "commitMessage": "bmcweb: New feature ExternalStorer\n\nThis is my first draft of a new feature, ExternalStorer.\nIt will be described in a forthcoming document.\n\nThis is WIP, just to make sure I'm on the right track.\n\nChange-Id: I1e9cf03ebdcdeff490478f364de10a7c58fea197\nSigned-off-by: Josh Lehan <krellan@google.com>\n",
    "createdOn": 1639651653,
    "lastUpdated": 1649110251,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1639651653,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1639651687,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639651864,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1:\n\nThis is a WIP and is an example of 2 instances at various URL's. There's no user data yet, everything is read-only."
        },
        {
            "timestamp": 1639652144,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32137/ : SUCCESS"
        },
        {
            "timestamp": 1639735713,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1639735730,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639735771,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\nGetting farther along, you can POST data now, and GET it back later."
        },
        {
            "timestamp": 1639736193,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32203/ : SUCCESS"
        },
        {
            "timestamp": 1641286889,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1641286904,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641286904,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1641286994,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1641287361,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/34852/ : SUCCESS"
        },
        {
            "timestamp": 1641409411,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1641415729,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(20 comments)"
        },
        {
            "timestamp": 1642121813,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1642122838,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(20 comments)"
        },
        {
            "timestamp": 1643141674,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(15 comments)"
        },
        {
            "timestamp": 1643143691,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(15 comments)"
        },
        {
            "timestamp": 1649110251,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Abandoned\n\nSuperceded by https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/51303"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "212e01072eb53e364c9b278a075aca0dd4261a0d",
            "parents": [
                "6fbdbcabc3ae43dc372459c6c5ae4d53657267f5"
            ],
            "ref": "refs/changes/56/49756/1",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1639651653,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/registries/privilege_registry.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer_entry.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "40d2eb6aa4af3ce9d664c4a4588c1d1bac6f03e7",
            "parents": [
                "f451bec02f7ec14b18c5df7065aff90e67637107"
            ],
            "ref": "refs/changes/56/49756/2",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1639735713,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/registries/privilege_registry.hpp",
                    "line": 2,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You seem to have ignored this comment."
                },
                {
                    "file": "redfish-core/include/registries/privilege_registry.hpp",
                    "line": 2,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "How are privileges generated, then? I'm not sure how to add it otherwise. This is example code, regardless."
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is on purpose.  See COMMON_ERRORS.md for why.\n\nConstexpr strings can work though."
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, will consider changing it to constexpr string, if the compiler lets me."
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't in the Redfish schema, and will fail the validator.  Please follow the redfish spec."
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It seems to be following the model of other services. Not sure what is being done wrong here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/registries/privilege_registry.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "type": "ADDED",
                    "insertions": 315,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 543,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "5dbca30654472b4d0f440cccb42c1e3075be3a6a",
            "parents": [
                "85ffe86a60f50ce9ad5728caf384a0dd0c8cc6a5"
            ],
            "ref": "refs/changes/56/49756/3",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1641286889,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Added PUT and DELETE methods. Query parameters for GET are the only feature still missing.\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I had some comments from a while back.  Might not apply to latest patchset."
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is explicitly called out in COMMON_ERRORS.md why we don't \"minimize duplication\""
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, I missed that. Will have to re-read it."
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Definitely not the right values, but I get this is WIP."
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, thanks. I made the names obviously example values."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets add limits in another patch."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I need these variables for use during storage size calculation, though."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect once we've moved the storage limits to another patch, these won't be needed."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, will defer the \"purge oldest to keep memory under predefined limit\" feature, until a subsequent patch."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just inline this."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, not sure what you mean. Please give an example?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's no need for a using definition, just put int64_t in the places you need it."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, for type safety, and ease of making future changes, I'd much rather wrap sequence number in a \"using\" typedef, instead of just having it be a bare integer. That will help catch bugs, make it easier to audit for correct semantic usage, and also make it easier to have it become a class if it needs to be in the future (for doing sequence number arithmetic and such)."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Maybe a better class name here?  \"Instance\" isn't very descriptive."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It's in the namespace ExternalStorer, so the class name is ExternalStorer::Instance which seems descriptive enough in full."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no need to explicitly construct things with no arguments."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I like doing that anyway, for cleanliness, and to make sure it's constructed in proper order."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please follow what cpp guidelines says on the topic, which is what I suggested.  The compiler will fail to build if things are constructed in the wrong order, so no worries there."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I couldn't find this in the C++ guidelines. Have a link to it? I can remove the empty/default initializers if desired."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These are pretty important todos.  As written, this won't really have the intended behavior (ie, type and all fields are provided by user)."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Yep, it's an example here, and they will be filled out later. Where should the values for these fields come from, if not hardcoded?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The schema that's being used?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "These are only example values. In production code, these values will either come from the user (if it's a user-created ExternalStorer subdirectory), or these values will be hardcoded to better match the appropriate schema for their location."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This makes the assumption that all resources are collections, which doesn't seem right to me."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "What else would it be? By definition, an ExternalStorer instance uses a Redfish Collection type to hold all of its entries."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> What else would it be?\n\nResources, Complex object types, or any of the subsidaries beneath those classes of object."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, will have to talk about this more. I'm not quite sure what you mean. I thought we were adding ExternalStorer instances to pre-existing Collection usages in Redfish, to avoid breaking existing schemas?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is just iterating all entries?  Doesn't there need to be some matching on URL?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Yes, that would be added later. A subset of entries would be returned, when query parameters are implemented, and the user uses query parameters."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Remove.  Expand is handled at a higher level, and wouldn't be storer specific."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It would need to be honored here, though, as the code here needs to know to include all the other fields here, or just the \"@odata.id\" field."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> It would need to be honored here, though,\n\nNo, it needs to be honored at higher levels of the stack, which are capable of calling your code recursively.  Adding expand handling to every individual handler will duplicate a lot of code."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, I will change the TODO comment to mention that $expand handling will be added at a higher level, sometime in the future."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, not all resources are collections."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, again I'm not sure how a resource would not be a collection. Uploading arbitrary standalone content seems beyond the scope of ExternalStorer, which is designed to let the user upload content and have that content become a member of a collection."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Hmm, again I'm not sure how a resource would not be a collection.\n\nIn CSDL, Resource and collection are different types.\n\n> Uploading arbitrary standalone content seems beyond the scope of ExternalStorer, which is designed to let the user upload content and have that content become a member of a collection.\n\nI think we clarified this in person.  Let me know if this is still in question."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm still confused here, maybe we should talk about it more. What's CSDL? I still am under the assumption that ExternalStorer works on JSON dictionaries, letting the user read and write them, exposing each of them as members of a Redfish Collection."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets add round trip parsing in another patchset to keep this patchset simple."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I still need to know the size of it. Is there a way in nlohmann::json to get the size? I'm using the size of the dumped string as a proxy for the size of the internal JSON object here."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I still need to know the size of it.\n\nWhy do you need to know the size if you're not size checking it in the first patch?\n\n> Is there a way in nlohmann::json to get the size? I'm using the size of the dumped string as a proxy for the size of the internal JSON object here."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, will defer the \"purge oldest to keep memory under predefined limit\" feature, until a subsequent patch.\n\nI still want to know if there's a way in nlohmann::json to get the total size, in bytes, taken by a JSON object. I'm using size() of the dumped string as a proxy here, which is incorrect, but all I could find to work with."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 259,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is expclicitly called out in COMMON_ERRORS.md.  Please read and understand that doc and do as it asks."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 259,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Unfortunately, I couldn't find a way to do the dump() without an exception, as that seems a limitation in the nlohmann library there's no way to call it in a non-throwing way (as there is for some other commands)."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 259,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are several examples in the codebase of how to do this, and this one is called out by name in common_errors."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 259,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I don't think dump() has a non-throwing alternative, unfortunately. If you can find one, let me know. I'm using a minimal try/catch block here that doesn't permit the exception to escape the block. This should minimize the blast radius of any throwing."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Empty dictionary might be valid."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, what's a use case for allowing an empty dictionary? Seems like an error to me."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "User might just want to create an empty object as a placeholder for future data.  Even if we were to require certain fields, it should be a field requirement, not \"not empty\" as a check."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, I will allow empty objects."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You probably want is_object() here.  this will return a valid value if the user writes an array."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I thought we were only allowing a JSON dictionary. See the design document. If user wants to upload an arbitrary type, they can wrap it in a dictionary, right?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We are following the redfish schema, which yes, has all endpoints return an object.  My point is you've used the wrong nlohmann API to check for the \"is it a json dictionary\".  Take a look at the docs for begin().  It will return valid values for json arrays."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, will check it. The intention is to make sure the user is passing in a JSON dictionary, and not any other kind of JSON data type.\n\nIn \"all endpoints return an object\", for \"object\" do you mean \"JSON dictionary\", or do you mean something else?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 293,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This makes the assumption that all collections are sequenced by numbers, which isn't true."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 293,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "How else would they be sequenced by? Please provide some detail to as to how this would work. Would they be alphabetical strings?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 293,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> How else would they be sequenced by? Please provide some detail to as to how this would work. Would they be alphabetical strings?\n\nThey wouldn't be sequenced at all generally."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 293,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I have proposed a new feature for storing unsequenced data. I called it \"Mailbox Mode\", and it is addressed by string ID, not by numeric ID. Would this meet your needs?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 295,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "String copy."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 295,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Good catch, will do construction instead."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Seems odd we would need to special case this at this level.  Should we validate the input earlier?"
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "BmcWeb seems strange in that it wants trailing suffix \"/\" on the URL. I tried not adding this check, but then it would be wrong in some situations. I could try to do without it, but it obfuscates code elsewhere."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> BmcWeb seems strange in that it wants trailing suffix \"/\" on the URL. I tried not adding this check, but then it would be wrong in some situations. I could try to do without it, but it obfuscates code elsewhere.\n\nLets try to understand why we need to special case this.  bmcweb routes don't require a trailing suffix, but it's recommended in most cases.  When accepting user input, we can be more strict."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The goal is that the user's usage of the trailing slash would be optional.\n\nI removed this block of code, that auto-added the slash when necessary. In doing so, it made the URL acceptance much more brittle. It broke that goal."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 340,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "lets worry about oldest invalidation in a future patch to keep this patchset simple.  Getting storage correct will be difficult enough without adding everything in a single patch."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 340,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, without oldest invalidation, the user will quickly run the BMC out of memory."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 340,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Hence why we will solve it eventually, but in the interest of keeping this patch simple and incremental, it's not needed."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 340,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, will defer the \"purge oldest to keep memory under predefined limit\" feature, until a subsequent patch."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no need for mutexes in single threaded code."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I still wanted the code to be correct (Jun Yao also mentioned the need for locking)."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The code is correct without mutexes, given it's only being called from a single threaded context.  If bmcweb starts supporting multi-threading, that will be much biggger task than any individual subsystem, so for the moment, lets remove it.  Jun is incorrect that mutexes are needed here.  There is only 1 thread."
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, sounds reasonable, I will remove locking, under the assumption that BmcWeb is only single-threaded and will remain that way for some time."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/registries/privilege_registry.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer_instance.hpp",
                    "type": "ADDED",
                    "insertions": 368,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/external_storer.hpp",
                    "type": "ADDED",
                    "insertions": 201,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 598,
            "sizeDeletions": 0
        }
    ]
}