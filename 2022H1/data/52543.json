{
    "project": "openbmc/google-misc",
    "branch": "master",
    "id": "I70c8a4955e53b64d47f67181dac2d96759699b65",
    "number": 52543,
    "subject": "usb-network: Add project",
    "owner": {
        "name": "William A. Kennington III",
        "email": "wak@google.com",
        "username": "wak-google"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/google-misc/+/52543",
    "commitMessage": "usb-network: Add project\n\nThis adds an initial build of the dynamic usb detection code that spins\nup new usb interfaces when a configuration is published on DBus.\n\nChange-Id: I70c8a4955e53b64d47f67181dac2d96759699b65\nSigned-off-by: William A. Kennington III <wak@google.com>\n",
    "createdOn": 1648779492,
    "lastUpdated": 1651683306,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1648779492,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1648779505,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648779505,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1648779531,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/40291/ : FAILURE"
        },
        {
            "timestamp": 1648779996,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1648780003,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648780003,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1648780280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40293/ : SUCCESS"
        },
        {
            "timestamp": 1648823175,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1648823993,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1648830436,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1648835967,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1649194378,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1649194388,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649194388,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1649194698,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40584/ : SUCCESS"
        },
        {
            "timestamp": 1649203762,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1649206805,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1651683306,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Set Work In Progress"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "b1d282b1190c9776e32d45f31d2b44bd34910c12",
            "parents": [
                "a7af2e087e642083af7efe637e163a1408306ecd"
            ],
            "ref": "refs/changes/43/52543/1",
            "uploader": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "createdOn": 1648779492,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "type": "ADDED",
                    "insertions": 371,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "usb-network",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/meson.build",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/subprojects",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 444,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "0629a3a613e19e9dcb59bcaeef1f1203df819e9b",
            "parents": [
                "a7af2e087e642083af7efe637e163a1408306ecd"
            ],
            "ref": "refs/changes/43/52543/2",
            "uploader": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "createdOn": 1648779996,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't really seem google specific.  There are other systems that host a USB network interface.  Does this need a design doc?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "This daemon does assume some properties of the USB device that are google specific, and integrates with the google specific usb network setup code.\n\nWe could probably come to an agreement on a more flexible configuration, but right now this adequately extends dynamic configuration of google-usb-network and would allow us to drop in an \"openbmc\" version that operates similarly."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets get a design doc written up, and sent to the other maintainers that have usb links on their BMCs.  Sure, there are some google-specific configuration bits, but those seem like a good design could abstract away into configure time options, and that's definitely something to discuss."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 282,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this will break on 64 bit systems.  Explicitly declare as an int32_t (either in a static cast or as its own lvalue variable)"
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 282,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "It won't because int's are always 32bit in c world even for 64bit, but I can change it to be more explicit."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 282,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, I guess that's a good point.  I swear we've hit that in other contexts, but I must've been thinking of stuff getting implicitly cast to size_t.\n\nACK"
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 283,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Per comment below, this is doing a blocking call in an event driven reactor, which in the past, as a design pattern, can deadlock daemons external facing interfaces, is this something we should be using asio for?"
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 283,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "The reactor isn't running yet, and it's a fixed time duration of calls that only happen during startup. I wasn't worried about this as making everything async would also require re-entrancy in the DeviceManager. We don't enumerate so many USB devices that this would ever be a concern anyway as objmgr will only return the USB objects."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 283,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, I buy that."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 310,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this something we should be using the asio bindings for?  It seems likely we'll want to do non-trivial non blocking calls in the future, especially considering this is doing IO that could block."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 310,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "It doesn't really make a difference which bindings I use, I can make async calls / waitpid with sdevent already. I chose not to in order to avoid having to deal with re-entrant synchronization in the DeviceManager object above."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 310,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I guess we don't really expect there to ever be more than one device attached to a single bmc, maybe that's a little overkill."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 327,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You need more than just interfaces added and interfaces removed to handle all the races properly for an interface being added.  NameOwnerChanged handling I think is missing?  I forget all the possible signals.\n\nAlso, you really should be using a more specific match here.  As written this will fire anytime anything gets added to the system, which is a bit wasteful of startup cycles, and if every daemon took that approach, we'd slow the system considerably."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 327,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "This doesn't actually care about who owns an object, and properties changed could be handled but isn't currently needed.\n\nYou can't make an InterfacesAdded signal more specific to the interesting interfaces and it's not really that many events (I think on the order of a few thousand)."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 327,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm saying if the daemon you're relying on shuts down or crashes, InterfacesAdded doesn't always get sent out.  Maybe it's not important in this context, but it's been important in other contexts like dbus-sensors, which seemed similar.  It helps to debug crashes without a lot of debugging interfaces on the bmc."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 327,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I actually think in this case it's better to ignore daemon failures, as those would cause an outage in the USB link. When the daemon restarts or another conflicting config gets added, this daemon would replace it if needed."
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "line": 327,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I actually think in this case it's better to ignore daemon failures, as those would cause an outage in the USB link. When the daemon restarts or another conflicting config gets added, this daemon would replace it if needed.\n\nIn other contexts the \"replace\" operation has caused conflicts (ie, you can't have two sensors of the same name), but maybe because this is a singleton its' different?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "type": "ADDED",
                    "insertions": 371,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "usb-network",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/meson.build",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/subprojects",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 444,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "1629ca5104f10b559daf9f6ef7bd86265144fe45",
            "parents": [
                "a7af2e087e642083af7efe637e163a1408306ecd"
            ],
            "ref": "refs/changes/43/52543/3",
            "uploader": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "createdOn": 1649194378,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/google-usb-dynamic.cpp",
                    "type": "ADDED",
                    "insertions": 369,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "usb-network",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/meson.build",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "subprojects/usb-network/subprojects",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 442,
            "sizeDeletions": 0
        }
    ]
}