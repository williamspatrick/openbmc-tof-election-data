{
    "project": "openbmc/estoraged",
    "branch": "master",
    "id": "Ie78ad427de1aa75472fc7ddd72d094866fe14b66",
    "number": 50309,
    "subject": "Add zero write and verify",
    "owner": {
        "name": "John Broadbent",
        "email": "jebr@google.com",
        "username": "jebr224"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/estoraged/+/50309",
    "commitMessage": "Add zero write and verify\n\nThis code implements the zero verify and zero write dbus interface. The\ngoal is to fill the whole block device with zeros, then check to make\nsure the operation worked correctly.\n\nTested:\n$ systemctl stop emmc.service\n$ ./eStoraged -b /dev/mmcblk0 &\n$ time busctl call xyz.openbmc_project.eStoraged.mmcblk0 /xyz/openbmc_project/storage/mmcblk0 xyz.openbmc_project.Inventory.Item.Volume Erase s\nxyz.openbmc_project.Inventory.Item.Volume.EraseMethod.ZeroOverWrite --timeout=1200\nErasing encrypted eMMC                                                                                                                                                   <6> Starting erase\n\nreal    5m59.695s\nuser    0m0.000s\nsys     0m0.030s\n\nroot@ytbaz20-nfd01:~/jebr# hexdump /dev/mmcblk0\n0000000 0000 0000 0000 0000 0000 0000 0000 0000\n*\n$ time busctl call xyz.openbmc_project.eStoraged.mmcblk0 /xyz/openbmc_project/storage/mmcblk0 xyz.openbmc_project.Inventory.Item.Volume Erase s\nxyz.openbmc_project.Inventory.Item.Volume.EraseMethod.ZeroVerify  --timeout=1200\nErasing encrypted eMMC\n<6> Starting erase\n\nreal    5m46.920s\nuser    0m0.010s\nsys     0m0.010s\n$ echo \"not zero\" > /dev/mmcblk0\n$ time busctl call xyz.openbmc_project.eStoraged.mmcblk0 /xyz/openbmc_project/storage/mmcblk0 xyz.openbmc_project.Inventory.Item.Volume Erase s\nxyz.openbmc_project.Inventory.Item.Volume.EraseMethod.ZeroVerify  --timeout=1200\nErasing encrypted eMMC\n<6> Starting erase\n<3> Estoraged erase zeros block is not zero\nCall failed: The operation failed internally.\n\nreal    0m0.022s\nuser    0m0.000s\nsys     0m0.020s\n\nChange-Id: Ie78ad427de1aa75472fc7ddd72d094866fe14b66\nSigned-off-by: John Edward Broadbent <jebr@google.com>\n",
    "createdOn": 1641944502,
    "lastUpdated": 1649805926,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1641944502,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1641944514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641944514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1641944736,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35368/ : SUCCESS"
        },
        {
            "timestamp": 1641950497,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1641961349,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1642021753,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1642021761,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642021761,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1642021951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35440/ : SUCCESS"
        },
        {
            "timestamp": 1642022496,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1642022506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642022506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1642022696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35441/ : SUCCESS"
        },
        {
            "timestamp": 1642036102,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1642036122,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642036122,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1642036202,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(7 comments)"
        },
        {
            "timestamp": 1642036318,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35455/ : SUCCESS"
        },
        {
            "timestamp": 1642047043,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642111706,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1642112810,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642114029,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642182046,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1642189910,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1642189920,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642189920,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1642189936,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 5:\n\n(7 comments)"
        },
        {
            "timestamp": 1642190111,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35577/ : SUCCESS"
        },
        {
            "timestamp": 1642194023,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1642194479,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1642205896,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1642205906,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642205906,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1642205918,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1642206102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35594/ : SUCCESS"
        },
        {
            "timestamp": 1642206867,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1642206964,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1642206976,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642206981,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1642207166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35595/ : SUCCESS"
        },
        {
            "timestamp": 1642207427,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7: Code-Review+2"
        },
        {
            "timestamp": 1642207597,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1642207851,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1642207861,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642207861,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1642207909,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 8: Code-Review+2"
        },
        {
            "timestamp": 1642208058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35598/ : SUCCESS"
        },
        {
            "timestamp": 1642208071,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Change has been successfully rebased and submitted as 4bc8a10caff8d7154d9ad789b9d0fc01499fa02e"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a021dd84cb8ef8694b0a198f4554a902c4bfaf06",
            "parents": [
                "972c3faae9092f8a513222d0b24c36ad79f4119f"
            ],
            "ref": "refs/changes/09/50309/1",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1641944502,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "to"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Oh wow, this operation takes 6 minutes? I wonder if we should chunk / make it asynchronous.\n\nWhat happens if you were to run this busctl call in the background with & and then call another eStoraged command? (most likely timeout).\n\nI noticed that you ran this command with timeout - do you plan to enforce calling this api with a long default timeout?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "The plan is to enforce the long timeout, until we have some time to address it."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Should the ManagedFd object be a member of this class? You could create it in the constructor, since the caller passes in the device path anyway.\n\nOf course, changing this would affect your unit tests. You could have the tests just write to a test file."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "The ManagedFd is opened with writeOnly (for write zero) and readOnly for (verify).\nAnd this design allows the calling code to open the file and specify. This declaration matches the patternWrite, and patternVerify design.\n\nLet me know if you want me to change it."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "It seems a little cleaner to have the ManagedFd managed internally, since the class already has the filepath. If you're concerned about WriteOnly vs. ReadOnly, you could have it open the file in the respective member functions.\n\nBut to keep it consistent with the pattern class, you can leave this as-is for now. We can change it later (in both classes), if we want."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "This block size seems to be the same as the other one I reviewed. Is this common - should be extracted out to a header?"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: blockSize"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "4096 (4K) is a very common size. It is the default linux page size, often it is the optimal value for kernel block operations. 64K (65536) Might be the future. \n\nThey could be extracted. But the ideal block size for the different erase types could be different. So I don't mind keeping it the cpp file."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: Should this be const std::array with const std::byte since we don't want the value of 0s to change?\n\nIf so, maybe we can move it to the header as a static member and use it for memcmp below? (more explanation below - but this is probably optional)"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "added it the header, just found out static members can't be const."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "oh even static constexpr std::array? This is a neat though"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit*\n\nAlso, if putting it in the header is not possible, it's probably better to extract it out to be defined at the top of this file along with the blocksize as constexpr (so that we don't need 2 of these in the 2 functions)."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "It looks like it is possible to have static const member varaibales. Last time I was trying a consexpr and it was give me issues.\n\nMoved back to the header file."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I was thinking maybe there's a clever way to do a quick comparison for all 0s but I couldn't find one\n\nOne thing I could think of is doing a memcmp with a blockOfZeros in case it's readily available (comment above) - but I actually don't know if it's any faster / less resource intensive and I do like this because it's easier to read and understand. Let me know what you think, this is more of a weak suggestion"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "memcmp should be faster, because it igors the types, and will comapare 64 bits at a time. However most time is spent in the read/read call. I just test this and it is not any faster (new 5m46.966s) (original 5m46.920s)\n\nIdeas to make this faster.\n\n1) adjust the block blocksSize, to find an optimum value. I changed this value to 32768, and the timing stayed the same.\n\n2) We could mmap the part of the drive to ram. This is a different set of kernel systems calls. Which will require one less kernel copy then read/read. I will try this next and report back"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I tested the mmap code and it is slower\n\n`            void* map = ::mmap(NULL, writeSize, PROT_WRITE, MAP_SHARED,\n                               fd.get(), currentIndex);\n            memset(map, 0, writeSize);\n            munmap(map, writeSize);\n`"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I guess if we can't make this faster, we may need to consider making this call asynchronous or doing chunked calls instead."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "chunked calls does not sounds good to me. Making a call that would zero 32768 bytes starting at a specified address, sounds like trouble.  \n\nI think asynchronous is going to be the way to go. What/where should I look for best practices when setting up a asynchronous dbus method. (Lambdas like bmcweb?) \n\nAlso, pattern write, and verify have similar time issues, I will convert them also."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "You may want to sync up with John Wedig on this and maybe perhaps another Maintainer (William) to see if perhaps this isn't a big issue.\n\nWe'll be upstreaming hothd \"soon\" I guess so maybe I'm ok to mention that they have some implementation of async dbus calls."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I chatted with Wedig, WAK, and you.\n1) The long term fix is a change the the generate in sdbusplus. That allows us the return a call asynchronously. \n2) the medium term fix is to change the interface to allow a simplistic  asynchronously calls.\n3) The fastest solution is to allow the the long timeouts for this daemon.\n\nThe consensus was to allow the long timeouts for now, until we can go back and make asynchronous returns easy from sdbusplus."
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Is this necessary? Could you just use ManagedFd directly?"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "The managedFd is smart and prevents you from manually setting the raw fd (which is what I need to do), so I needed a modify a private member variable at construction."
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "To make it work, I think you just need to use std::move(fd), like you're already doing in the constructor for MockManagedFd."
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "good call, I missed the && constructor.\nI will remove it from pattern in another cl"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: I guess you don't need Test suffix since this is already the test?"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "spelling"
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/erase.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 272,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "22329bd2428d66b18f9ae76935fab3655a0a70dc",
            "parents": [
                "972c3faae9092f8a513222d0b24c36ad79f4119f"
            ],
            "ref": "refs/changes/09/50309/2",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642021753,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/erase.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "36245fec0c704bee2b3594661697d9f224573a23",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/3",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642022496,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I will see if the speed improves using mmap"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "eaa7a305fbd2173237a93d82a4cd206e645bb46c",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/4",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642036102,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/zero.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Should we be having a namespace for these? I forget if we did for other files"
                },
                {
                    "file": "include/zero.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "We did not for the other erase functions. Let me know if you think it is important"
                },
                {
                    "file": "include/zero.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "https://google.github.io/styleguide/cppguide.html#Namespaces Unless we have exceptions, we should be placing all our code in some named namespace from my understanding.\n\nSince we may have missed this in several other files, we can do the clean up in a separate CL for all the others."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done"
                },
                {
                    "file": "include/zero.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Maybe we'll narrow the scope of this constant by putting it as a member variable of class Zero?"
                },
                {
                    "file": "include/zero.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "It can't be accessed in the initialization in the zero constructor if it is a member variable. I will move it back the the cpp file.\nAfter moving blockSize to cpp I can't create the array as a member variable, so I moved that back also."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "take out the commented out code - I thought since this was a member variable, this would have to be static constexpr? But maybe since it's an array it's not quite right (I always get tripped up by that)."
                },
                {
                    "file": "include/zero.hpp",
                    "line": 42,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 273,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "31e4700498a3fd8fc6448d3d378f7c2ba34c6db0",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/5",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642189910,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/erase/zero.cpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: double space"
                },
                {
                    "file": "src/erase/zero.cpp",
                    "line": 17,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 77,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 264,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "ab106904a3aeb485dc549eea654e1ca4852aa05e",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/6",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642205896,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: For tests, you can just use an anonymous namespace"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 284,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "f3183beb106e1344917d209a2519e11eeedfe17e",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/7",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642206964,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/zero.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: this could be constexpr"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 282,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "337ce875a9021c3191f3c85f4ff4b4376f1575c7",
            "parents": [
                "7f2ab6432a5f3aeb2ecf131169a3d44569007f1c"
            ],
            "ref": "refs/changes/09/50309/8",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642207851,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 282,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "4bc8a10caff8d7154d9ad789b9d0fc01499fa02e",
            "parents": [
                "b17f82519d4a912c9bc2aa47499126f4a84aace0"
            ],
            "ref": "refs/changes/09/50309/9",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1642208071,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/erase/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/test/erase/zero_test.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/erase/zero.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "include/zero.hpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "src/test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 282,
            "sizeDeletions": 0
        }
    ]
}