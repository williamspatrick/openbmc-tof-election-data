{
    "project": "openbmc/intel-ipmi-oem",
    "branch": "master",
    "id": "If0f70377f7c2612dff2813d6d4787b343a594c1b",
    "number": 49469,
    "subject": "Disable/Enable SSH in Manufacturing mode",
    "owner": {
        "email": "ananth.cg@intel.com",
        "username": "ananthcgintelcom"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/intel-ipmi-oem/+/49469",
    "commitMessage": "Disable/Enable SSH in Manufacturing mode\n\nProviding a way to disable/enable SSH feature in\nManufacturing mode for BMC access. This helps a user\nget access to BMC console.\n\nTested:\n1) Enter Manufacturing mode using IPMI command over KCS.\n- cmdtool.efi 20 C0 B4 3 2 or ipmitool raw 0x30 0xB4 3 2\n2) Choose to disable/enable the SSH feature\nin this manufacturing mode using IPMI command over KCS.\n- Disable: ipmitool raw 0x30 0xA4 2 2 0 0 0\n- Enable: ipmitool raw 0x30 0xA4 2 3 0 0 0\n- Stop/Start : Not supported\n3) Disable/enable of a SSH session is permanent and\nwill be retained even after a BMC reboot.\n4) Exit Manufacturing mode using IPMI command over KCS.\n- cmdtool.efi 20 C0 B4 3 0 or ipmitool raw 0x30 0xB4 3 0\n5) Tested for all users connected over ssh.\n\nSigned-off-by: Ananth C G <ananth.cg@intel.com>\nChange-Id: If0f70377f7c2612dff2813d6d4787b343a594c1b\n",
    "createdOn": 1638964612,
    "lastUpdated": 1652723902,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1638964612,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1638964624,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1638964903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31548/ : SUCCESS"
        },
        {
            "timestamp": 1639109138,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641440067,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641471737,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1641471818,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641541665,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641541768,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1642695426,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1643882740,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1643883907,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1645012799,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1645012814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645012814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1645012835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/37364/ : FAILURE"
        },
        {
            "timestamp": 1645095423,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/37472/ : FAILURE"
        },
        {
            "timestamp": 1645096141,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1645096154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645096154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1645096174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/37475/ : FAILURE"
        },
        {
            "timestamp": 1645096399,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1645096409,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645096409,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1645096709,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37476/ : SUCCESS"
        },
        {
            "timestamp": 1645170687,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1645579034,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1650537825,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652723902,
            "reviewer": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "message": "Abandoned\n\nAbandoning this change due to security challenges this commit brings."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "bdffaad4a2c4c333f329c60c2569818495637b7f",
            "parents": [
                "f23fd543404a948ae436a5cf4092354dcb60a366"
            ],
            "ref": "refs/changes/69/49469/1",
            "uploader": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "createdOn": 1638964612,
            "author": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "nit: Please add byte definitions for the command."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "email": "ananth.cg@intel.com",
                        "username": "ananthcgintelcom"
                    },
                    "message": "Will add the following commands and steps for verification in the commit message as well:\nEnter MTM mode : cmdtool.efi 20 C0 B4 3 2 -> ipmitool raw 0x30 0xB4 3 2\nExit MTM mode : cmdtool.efi 20 C0 B4 3 0 -> ipmitool raw 0x30 0xB4 3 0\n\nStop service    : ipmitool raw 0x30 0xA4 2 0 0 0 0\nStart service   : ipmitool raw 0x30 0xA4 2 1 0 0 0\nDisable service : ipmitool raw 0x30 0xA4 2 2 0 0 0\nEnable service  : ipmitool raw 0x30 0xA4 2 3 0 0 0"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Also, need a test invoking the command when the BMC is not in manufacturing mode.\n\nThis command should not work in normal BMC operation."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "email": "ananth.cg@intel.com",
                        "username": "ananthcgintelcom"
                    },
                    "message": "Yes, verified this step."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Tested with which user? root? how about other IPMI/Redfish users configured in the BMC- can they ssh as well?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Any update on this?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "email": "ananth.cg@intel.com",
                        "username": "ananthcgintelcom"
                    },
                    "message": "Tested with 2 users - root and debuguser. The action will be applied on all the users."
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1152,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I don't think directly using system call in the code for all these operations is a good idea. Can we leverage special mode manager implementation by exposing its existing functionality over the D-bus. https://github.com/intel-innersource/firmware.bmc.openbmc.applications.special-mode-manager/blob/7dc05af0adc32e0f16cd2e4f47956a6b2a470790/src/specialmodemgr.cpp#L150\nLet special mode manager handle all the intelligent part. From here we can just make the D-Bus call and perform the action."
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1152,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Also, it will help to avoid having same functionality at 2 places."
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1152,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "May be consider the possibility of just using enable-disable ssh script?"
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1152,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "+1.  We might consider not supporting the start/stop functionality for SSH and only use enable/disable with the existing script.  Then we don't need as much special handling.\n\nOn that thought, does the existing startOrStopService() function not work for the socket?"
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1152,
                    "reviewer": {
                        "email": "ananth.cg@intel.com",
                        "username": "ananthcgintelcom"
                    },
                    "message": "So with startOrStopService we can start/stop the dropbear.socket, but we can't use wildcard entries here to start/stop all the active dropbear services, without which the already active and connected ssh sessions will not be disconnected. Hence the usage of systemctl.\n\nIf we are not supporting start/stop of ssh in this manufacturing mode we can go with using enable-ssh script only."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 122,
                    "deletions": 0
                },
                {
                    "file": "include/manufacturingcommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 148,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "8264babf348da1c2e4fb1d1790a2f21fc1aa91f5",
            "parents": [
                "3a1be321da23b2201ac19441c429a26e2412ebc4"
            ],
            "ref": "refs/changes/69/49469/2",
            "uploader": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "createdOn": 1645012799,
            "author": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "include/manufacturingcommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 87,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "e9be527ff5c5e608e75b796e55ddc797e5985fc0",
            "parents": [
                "3a1be321da23b2201ac19441c429a26e2412ebc4"
            ],
            "ref": "refs/changes/69/49469/3",
            "uploader": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "createdOn": 1645096141,
            "author": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "include/manufacturingcommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 87,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "c4ddc97522a09010584de72de84df59848e82392",
            "parents": [
                "3a1be321da23b2201ac19441c429a26e2412ebc4"
            ],
            "ref": "refs/changes/69/49469/4",
            "uploader": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "createdOn": 1645096399,
            "author": {
                "email": "ananth.cg@intel.com",
                "username": "ananthcgintelcom"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "This is going to be a security concern. If SSH is enabled and if someone forgets to disable it, then we keep the SSH door open for attackers."
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1140,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Please do a null check on *cmd"
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1147,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit: It might be more informative to log the cmd that failed!"
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "line": 1171,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "rather than fork/exec this sort of thing can be done through the systemd procces control API - https://www.freedesktop.org/wiki/Software/systemd/dbus/\n\nThat eliminates the dangers of what is likely under the covers a call to system(). It also allows for a separation of responsibility, letting systemd do its job and ipmid do its job."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/manufacturingcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "include/manufacturingcommands.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 87,
            "sizeDeletions": 0
        }
    ]
}