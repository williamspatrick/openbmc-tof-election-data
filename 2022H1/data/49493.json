{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ice87800fbe31e923e2bbad6a7214bf0f437e665b",
    "number": 49493,
    "subject": "otp-6: inventory architecture",
    "owner": {
        "name": "Andrei Kartashev",
        "email": "a.kartashev@yadro.com",
        "username": "alatarum"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/49493",
    "commitMessage": "otp-6: inventory architecture\n\nResolves openbmc/technical-oversight-forum#6.\n\nSigned-off-by: Andrei Kartashev <a.kartashev@yadro.com>\nChange-Id: Ice87800fbe31e923e2bbad6a7214bf0f437e665b\n",
    "createdOn": 1639000155,
    "lastUpdated": 1650485717,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1639000155,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1639073927,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(21 comments)\n\nI made it halfway through this review, and I'm struggling a bit.  Most of this \"design\" comes down to\n\n1. Entity-manager has some bugs.\n2. Not all interfaces and use cases got documented upfront, and code is difficult to read.\n3. Some daemons ignored the EM reactor design when they got built because of the technical barrier to entry for reading/writing config entries on dbus.\n4. The reactor design needs better documented for things like the component add/remove event.\n5. There exist reactor daemons that don't have accompanying EM config examples (ie peci-pcie, because most add-in-card type devices tend to be \"secret\").\n\nWhere I struggle is that there's efforts to fix some of these that are in review and clearly you have an interest.  If this design doc is asking for help in documenting and making things more consistent, I'm all for it.  If this design CCed the maintainers of the repos that it calls out and asked for design changes to be made, I'm all for it.  If this is asking the TOF to universally say \"this is how it shall be\" without discussion with the maintainers of those repos, I can't really get behind that.\n\nConsidering I'm the EM maintainer these days, and a lot of these complaints are things that I hadn't heard before, I worry that we haven't messaged this enough.  There will always be a class of things that are works in progress (ie peci-pcie).  If they do what you need, use them.  If they cause you problems, don't use them or push patches to fix them.  If you don't understand the design or think it's inconsistent, ask.\n\nI'm really glad that you're using EM, and are working to improve it, I just struggle with how broad this document is, while still lacking critical understanding of a number of the use cases.  This is somewhat telling me that I need to write more docs for EM use cases, as well as start enforcing that new features get at least one example of use (ie peci-pcie) so that we don't have this misunderstanding.  FWIW, this has been on my list for a while now.  If you're interested in helping, always happy to have the help, let me know what you're interested in tackling and I can likely give you some pointers.\n\nWill finish reviewing this doc tomorrow."
        },
        {
            "timestamp": 1639078439,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(23 comments)"
        },
        {
            "timestamp": 1640364008,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(32 comments)\n\nThank you for taking a look and give you feedback.\n\n> Where I struggle is that there's efforts to fix some of these that are in review and clearly you have an interest.  If this design doc is asking for help in documenting and making things more consistent, I'm all for it.  If this design CCed the maintainers of the repos that it calls out and asked for design changes to be made, I'm all for it.  If this is asking the TOF to universally say \"this is how it shall be\" without discussion with the maintainers of those repos, I can't really get behind that.\n\nThis is both asking for help in documenting and trying to find consensus on now to be consistent.\nI see this as a positive feedback, so will try to move forward with this."
        },
        {
            "timestamp": 1641851484,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(27 comments)"
        },
        {
            "timestamp": 1649882485,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1650485717,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "aafc3d03185f89f0abfdf95dd46a370ba428c42e",
            "parents": [
                "b5cddbb2c96cca6ae055575fa6580f06b9a1a844"
            ],
            "ref": "refs/changes/93/49493/1",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1639000155,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Replied to most things."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's a lot of topics here, and a lot of things that we could ideally break out into their own discussions.  Lets tackle this from an incremental \"I see architecture problem in inventory in modeling X\" and tackle them one at a time making incremental progress and documenting decisions as we go."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For what it's worth, this wasn't the original design, but the effort to instantiate and interface the probe statements was non-trivial, so a number of daemons opted out of it.  Ideally we'd make the barrier to entry lower for that, ideally making the code more consistent, but I dont think anyone has taken that up yet.  If you're interested, ping me on discord and we can chat about it, or send me some patches."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 27,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Sorry, don't get it clear. Are you trying to say, it was supposed all the inventory should go thought EM and we can try to go there?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "All inventory MANAGED BY THE BMC would ideally go through entity-manager for EM enabled systems.  This is not to say that other remote controllers couldn't publish their own inventory items."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "PLDM is managing a sub-controller, so it SHOULD have its own inventory tree in the current design, because it's the one with in-depth access to that inventory information for devices on the other end of that bus.  I think the subtlety that's being missed here is that EM is designed to manage the resources within the BMC.  That doesn't mean that it needs to be the ONLY thing managing resources for the system.  There are other sub controllers that need accounted for, and can have complex inventory hierarchies."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As you mention later, peci-pcie doesn't publish inventory items.  This is correct and by design.  If you'd like to publish a pcie inventory item based on peci-pcie detection, add an entity-manager config file that matches on the PCIe device interfaces, and you'll get the behavior you're looking for.  Unfortunately, given the secret nature of a lot of accelerators, we never got a concrete example of this, but if you ping me on discord I'll bet we can put one together pretty quickly."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "peci-pcie get entire list of PCIe devices in the system and in bmcweb you do have code to get all the PCI devices, found by peci-pcie. Taking this I'm make a conclusion that peci-pcie is inventory of PCIe itself. Well, for the and customer prospective, it should somehow filter out built-in devices, but otherwise this do exactly what we need: show each plugged device regardless of whether we know about each particular device.\nI tried to bring EM configuration file to add all items found by peci-pcie to EM, but this was weird."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> peci-pcie get entire list of PCIe devices in the system and in bmcweb you do have code to get all the PCI devices, found by peci-pcie. Taking this I'm make a conclusion that peci-pcie is inventory of PCIe itself.\n\nI see the confusion.  A PCIe device is not an inventory item.  It's literally a PCIe device available at the phy layer.  It intentionally does not differentiate between add in cards, boards, ect, which ARE inventory items.  Maybe that clears some things up?\n\n\n> Well, for the and customer prospective, it should somehow filter out built-in devices,\n\nI don't necessarily agree with that.  Defining what devices are \"built-in\" versus which devices aren't is subtle.  Is a PCIe device on the CPU complex \"built-in\"?  IMO, PCIeDevice should show all logical pcie devices available to the PCIe complex.  Any filtering would be subtle to define correct behavior of, and I don't think anyone has proposed how to do that, so for the moment, we publish all devices.\n\n> but otherwise this do exactly what we need: show each plugged device regardless of whether we know about each particular device.\n\nCorrection: Show every logical PCIe device.  the PCIeDevice schema does not require the device to be a separate plug in.  If you want to identify a specific device as a plugin, write an EM config for it, matching off the PCIe vendor ID, and add Type: Board to it to create a PCIe device.\n\n> I tried to bring EM configuration file to add all items found by peci-pcie to EM, but this was weird.\n\nI'm open to suggestions for how this could be made better, but \"weird\" isn't the best description to key off to how we could make this better."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you talk more to this?  The mapper has the full inventory, and I wouldn't really call it \"difficult\" to use.  Is there something about that pattern specifically that's not working?  Please address and answer in your doc."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "whitespace."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I disagree with the statement \"primary\".  Entity-manager is designed to detect and configure inventory items."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 34,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Is it? My impression after log time work with EM was that one use it when it is needed to provide configuration for reactors, (e.g. dbus-sensors) but if you don't need this, it's better/easier to expose Inventory by yourself.\nWhat was the critical issue of the PIM then?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Is it? My impression after log time work with EM was that one use it when it is needed to provide configuration for reactors, (e.g. dbus-sensors) but if you don't need this, it's better/easier to expose Inventory by yourself.\n\nNope, the intention was that every reactor requires some kind of configuration, and that configuration would come from one place.  Because of the complications of enabling both EM and non-EM systems, some things choose to pick per-machine config files, but that wasn't the intent.\n\n> What was the critical issue of the PIM then?\n\nPIM has no mechanisms for forwarding on the Asset interfaces from probed interfaces (it's a push model), PIM had no concept of per-device configuration, and PIM didn't allow the runtime addition of interfaces.  That's from what I remember, but there was probably more.  James would be the best to ask if he were still on the project."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should this read, \"most (all) of the inventory items have configuration nodes that are not inventory items\""
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "While a lot of the patches these days are redfish, there is definitely the rest-dbus APIs that still function and work."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No.... the generic code lives in the mapper, which bmcweb calls to get this information."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Right, but mapper handle not only Inventory objects, so you need to know, how to request information. My point here just to highlight that we should have documented rules on that."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Isn't it was deprecated year ago? I was sure, no one use that rest-dbus API today."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Right, but mapper handle not only Inventory objects, so you need to know, how to request information. My point here just to highlight that we should have documented rules on that.\n\nI'm struggling to understand what kind of documented rules we'd have?  Maybe we need another review for these rules?   \"Use the mapper\" is a rule that we generally have, but I'm not sure we've written it down anywhere, we just require it in code review."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are people that still use it, despite us \"deprecating\" it.  Regardless, the design intent is that we don't encode any protocol specific things on dbus, to give us the ability to map the various interfaces into it.  There are other uses of Invetory outside of bmcweb."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs reworded, because as written, this is outright false.  Redfish definitely has inventory items, in fact, the lack of configuration separated by inventory items is exactly why we build entity-manager in the first place."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree on this point.  I'm all for making things more consistent, but if we had strict rules, entity-manager wouldn't have existed in the first place, and we wouldn't have had Redfish.  At the end of the day, people are trying to solve problems, and occasionally rules need to be changed to solve those problems.  Also, \"rules\" implies that we're not looking at the code.  The code contains the \"rules\" for how we operate.  If you want to change/add to them, we have a well defined process for doing so."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I strongly agree that rules need to be changed sometime to achieve new goals and work in new conditions. But if we don't have rules at all, there is nothing to change.\n\nWhat about looking to the code: well, in ideal world probably everyone in community should know entire code base, but that is kind of unreal.\nOther thing, the existing code in not always represent the \"rules\" on \"how it supposed to be\", it more \"how it happens to be\". E.g. take a look on x86-power-control: it is here, but it definitely not how one should write new application (it uses lot of undocumented interfaces, and those interfaces which are documented, used wrong)."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I strongly agree that rules need to be changed sometime to achieve new goals and work in new conditions. But if we don't have rules at all, there is nothing to change.\n> \n> What about looking to the code: well, in ideal world probably everyone in community should know entire code base, but that is kind of unreal.\n\nLets rephrase.  The people in the community that care about a given subsystem should be able to read and understand that subsystem from code.  If it's too complex for that, we should prioritize simplifying the code rather than writing down documentation that will quickly be out of date.  I have no illusions that the codebase is large, but there isn't that much code for the inventory system, and it's pretty reasonable to look at code and understand it.\n\nTo that end, I do have patches to continue to simplify it in the mapper.\n\n> Other thing, the existing code in not always represent the \"rules\" on \"how it supposed to be\", it more \"how it happens to be\". E.g. take a look on x86-power-control: it is here,\n\nWe probably disagree on how important documenting interfaces are outside of the code.  The great part about open source is that you can just go look at the code to understand how an interface works, and there's less need for contracts.\n\n>  but it definitely not how one should write new application (it uses lot of undocumented interfaces, and those interfaces which are documented, used wrong).\n\nThat's hard to say, given that x86-power-control is used quite heavily and fulfills a need (at this point AMD, Ampere, and intel systems use it) so this is a great example of utility being more important than documentation.\n\nRegardless, we're going on a tangent.  This doc isn't about power control, and x86-power-control doesn't have inventory interfaces."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Would like to get more concrete estimates on who is planning on doing this refactoring, and what effort it's going to take.  You mention several repos above (I'm sure there's more) have you reached out to the maintainers of those repos need to get them onboard with this plan?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "No, I didn't yet. I'm interested in this work but first I want to understand if we (first TOF, then maintainers) can get to agreement on that this is right thing."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, you've reversed the order.  The TOF isn't for first address, it's for sorting out things when maintainers can't agree.  That helps to keep maintainers engaged.  If the TOF can just take a vote and override maintainers without any discussion, people will be a lot less likely to be a maintainer, given that we've essentially overridden their authority without their input.  We should avoid that."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 64,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs more detail.  From the existing entity-manager requirements:\n\n1. enumerate hardware in the system\n2. Items can be added or removed at any time, and should be atomic, without impacts to other hardware being added or removed."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like you're going off the entity-manager definitions, which is fine, but when you point out inconsistency, you might want to point out that PIM doesn't use Type"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This one has always been subtle, and one of the reasons EM punted on it is \"what does absent mean?\"  Technically all supported hardware is absent until it's found, so listing every possible piece of hardware that could be in the system, then listing it as absent is kind of a waste.  IMO, this is really there for drive slots and Pcie slots, which a slot can be unfilled, but that's a different interface."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Agree"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Asset isn't required, and should not be required.  The information isn't always available."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Can you give examples? The only thing came to my mind right now it that upcoming \"cables\". But I agree, it can be optional."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Cables is a good example, PCIe slots with GPIO is another example, SAS/SATA drives (which don't have an OOB interface) is a third example."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a subtle one.  The inventory system can't always know these associations given how complex they can be in a system."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Right, but when it known, it should be possibly to indicate."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, but you're trying to document requirements here, and it sounds like this isn't a requirement."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "more whitespace issues."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was never the intent of entity-manager.  There WILL be sub processors that have their own inventory (example, publishing the SDR from an IPMB device).  That use case should be doable, and have resilience against crashing (ie, if the underlying daemon crashes, the resources should be cleaned up).  If there's a way to get both behaviors, I'm open to design changes, but thusfar I haven't seen any code that accomplishes both."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I disagree with statement \"if the underlying daemon crashes, the resources should be cleaned up\": the fact daemon crashed doesn't mead item removed from the system. Item should be removed once detection daemon detect removal.. Can you elaborate this statement?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> the fact daemon crashed doesn't mead item removed from the system.\n\nNo, but it provides much better user-facing indications that the device subsystem as a whole has failed, and was one of the primary requirements around dbus-sensors, and is why dbus-sensors isn't just one monolithic application.  If you disagree with that, lets discuss, but this isn't the right forum for that."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like a very easily fixable problem with a couple interface changes.  This feels a lot more like a bug than a design question."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Is there a better way to fix this then just place same code to each daemon? Probably to have some library/wrapper to work with Inventory Items.\nOtherwise we should state this in architecture document that each demon should do this on Inventory Item exposing/Removal.\n\nBTW, I'm not very happy with this messages from EM on each BMC reboot and sometimes even on i2c bus rescans: we don't \"install\" all this items each time. IMHO this log entries should be only sent on actual removal/changes, but this is completely another question."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Is there a better way to fix this then just place same code to each daemon? \n\nAs i suggested earlier, model your devices as entity-manager configs, and the appropriate log messages will be sent.\n\n> Probably to have some library/wrapper to work with Inventory Items.\n\nThis is the mapper.  If it's interfaces aren't ideal, we should improve them, (I have at least one patchset out in this regard) rather than just invent a new library.\n\n> Otherwise we should state this in architecture document that each demon should do this on Inventory Item exposing/Removal.\n\nBy design, entity-manager should be aware of devices, and do the add/remove logic.  Happy to discuss changes to this model, but this isn't the right forum for that.\n\n> \n> BTW, I'm not very happy with this messages from EM on each BMC reboot and sometimes even on i2c bus rescans: we don't \"install\" all this items each time. \n\nThat sounds like a bug, and I'm guessing that you're not persisting the EM configuration files properly on your systems.  The intended behavior is that on reboot, EM only signals the \"new\" devices, but given the complexities of that, it requires a tight integration with power control to do this properly.\n\n> IMHO this log entries should be only sent on actual removal/changes, but this is completely another question.\n\nHappy to discuss this in the context of an entity-manager review, not in the TOF.  I don't think there's anything to vote on here."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 96,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you give examples of use cases that don't work?  peci-pcie doesn't expose inventory items, so that shouldn't ever work until there's a config with a peci-pcie probe statement in it.\n\nSMBIOS-mdr, yeah, that's an issue that needs a lot of cleaning up.  The complexity there is that smbios-mdr has a lot of interfaces that don't necessarily need to go in entity-manager (at least, that author didn't think so).  cleaning that up probably deserves its own design doc.\n\nCPU info is another daemon that somewhat goes outside the initial intent of the design.  Ideally because CPUs are themselves \"entities\", CPUs should have an entity-manager config file that contains the XeonCPU exposes record in it.  In the current set of config files, XeonCPU is attached to the motherboard, which complicates this.  if this is something you're interested in tackling, I can give you some pointers on how to go about it."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 96,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Right, that is what I mostly had in my mind."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 96,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd love to see your patches in this regard."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree here.  This is why the mapper exists.  If it's hard to use, lets add interfaces to make it easier."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Right, it's something to improve."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You say this, yet there are designs and code in review to add exactly this.  Yes, it doesn't represent hierarchy as a path, but does have associations."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Does it already have associations or they are in proposal state? I probably miss something."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Between gerrit and github, you should be able to determine where they're at."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes, connectors haven't been implemented, but there are several designs in review.  I'd recommend looking at them."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Are you talking about https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/41468 ?\nIt is stalled and one of my goals is to push it forward."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's the cables proposal, that you've seen, Vijay was pushing some slot abstractions, and there was one more that I recall."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have no idea why you think this.  Yes, Fans were the first thing that James and I implemented, and we know that it's non-ideal, but as a design pattern, EM is fully capable of representing these things.\n\nFWIW, gpiopresencesensor isn't merged yet, for exactly this reason (it didn't model its inventory interfaces properly, nor write a config file.).\n\nIf you're interested in how this gets modeled, please help to review."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "So, what's the right way to model fans in EM if I want them to be Inventory Items? \nYou already mentioned it somewhere, but I don't remember you to show solution."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> So, what's the right way to model fans in EM if I want them to be Inventory Items? \n\nHappy to have it, but a TOF review isn't the right place for this discussion.  There are definitely non TOF members that care about the result of this work.\n\n> You already mentioned it somewhere, but I don't remember you to show solution."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't true.  Code exists to exposes those two items, although it does break dbuses rule of \"no protocol specific interfaces\" but it does work."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Are you talking about \"xyz.openbmc_project.Inventory.Decorator.Ipmi\" interface? I saw this code in getFruSdrs function, but I not really sure it works: there is no any documentation on what does in do, no any usage examples and even interface itself doesn't exists in phosphor-dbus-interfaces.\nMy bad, I didn't try it by myself and my impression was this is a legacy code from some unsuccessful experiment. As I see, this strictly related to FruDevice (and to what have real I2C FRU EEPROM) and very limited in flexibility.\nSaying about the rule: I generally agree with it, but there is a problem and there should be solution for it. For now the only real way to solve it is to go back to static sensors with YAML-based configs.\nFor this moment I have no proposals here, but this work somewhere in my plans."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Are you talking about \"xyz.openbmc_project.Inventory.Decorator.Ipmi\" interface? I saw this code in getFruSdrs function, but I not really sure it works: there is no any documentation on what does in do, no any usage examples and even interface itself doesn't exists in phosphor-dbus-interfaces.\n\nBest advice I have is to read the code to determine how it works.\n\n> My bad, I didn't try it by myself and my impression was this is a legacy code from some unsuccessful experiment. As I see, this strictly related to FruDevice (and to what have real I2C FRU EEPROM) and very limited in flexibility.\n\nLike I said, I don't like how it was designed, but to my understanding it does work.\n\n> Saying about the rule: I generally agree with it, but there is a problem and there should be solution for it. For now the only real way to solve it is to go back to static sensors with YAML-based configs.\n> For this moment I have no proposals here, but this work somewhere in my plans.\n\n\nProposing a fix in either a code review, or a design doc is the right path to get that solved.  Once you have proposals, we can talk further.  If you want ideas, I'm always on discord to help support."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Aren't these already defined in phosphor-dbus-interfaces?  \"All kinds\" implies that we're going to fix all of our designs in one commit.  I would much rather this read something like \"Write design docs or patches for specific cleanups that are needed\"."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "PDI doesn't define paths structure, only interfaces, isn't it?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Maybe I misunderstood what this was saying?  Can you clarify this?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't this already true?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I think, now it is (excluding peci-pcie, which we discussed above), smbios-mdrv2 was fixed some time ago."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So, this can be removed?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This can't be mandatory.  Not all devices have this present, or have access to a FRU.  (SAS/SATA drives on most systems for example)."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Well, any SAS/SATA drives still have vendor and model, we just don't know them. This mean, the interface should present, but values would be empty. At least because same drives on other system can have this information.\nProbably there are some items which really have no model and so on, but this not a case for drives.\n\nBTW, all EM configuration files doesn't implement all properties of xyz.openbmc_project.Inventory.Decorator.Asset interface. I don't know it there any issues with this. PIM will always create all properties, defined in PDI and also will reject properties that are not defined in the interface. IMHO this is good feature."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Well, any SAS/SATA drives still have vendor and model, we just don't know them. This mean, the interface should present, but values would be empty.\n\nNo, they shouldn't.  If we don't know the information, we shouldn't expose the interface.  There's a difference between \"we know the manufacturer, and it's empty string\" and \"we can't determine the manufacturer\" that needs to be representable at interface level.\n\n> At least because same drives on other system can have this information.\n> Probably there are some items which really have no model and so on, but this not a case for drives.\n\n\n\"Have no model\" and \"BMC doesn't have access to the model\" are the same thing from an openbmc perspective.\n\n> \n> BTW, all EM configuration files doesn't implement all properties of xyz.openbmc_project.Inventory.Decorator.Asset interface. I don't know it there any issues with this. PIM will always create all properties, defined in PDI and also will reject properties that are not defined in the interface. IMHO this is good feature.\n\nHappy to help review patches if you want to make this more consistent."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is described in code.  If you want to change it, that's fine, but I don't think just rewriting the code to interpret an inventory item in a doc is worthwhile, versus just making the code more consistent with its own design principals."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "In the cases, where different code acts differently, to make everything to be consistent you need to know what is right way, e.g. someone should say: app1 do it right, but app2 should be fixed to be consistent with app1.\nI now mostly speak about this three:\n`xyz.openbmc_project.Inventory.Item->Present`\n`xyz.openbmc_project.State.Decorator.Availability->Available`\n`xyz.openbmc_project.State.Decorator.OperationalStatus->Functional`\nand also `xyz.openbmc_project.Inventory.Item->Present` vs `name` from the object path\n\nGenerally, there are descriptions in PDI itself, but I feel sometimes they are missused."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The above interfaces have always been difficult, and it's unlikely that we'll be able to document all the complexities of managing those interfaces in a doc, hence why I suggest looking at code and patches.  If two applications don't match, we can certainly try to make them consistent, but it's quite likely that they're inconsistent for a good reason (as you've found with peci-pcie)."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have no idea what this means in terms of change.  This interface already exists, if a device has it, we use it.  If it doesn't, we assume the device is always \"ok\".  I'm not sure what the change would be here."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Nothing to change, just document that we use it this way."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We already document it in PDI, hence why I'm confused.  Can you update the doc to be more clear on what this means in terms of changes?"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  I'm not really following this one.  If they're not implemented, I have no desire to enforce how they \"should\" be used, because that presumes that we understand every possible use case and architectural direction that openbmc might go.  If we're having a consistency issue, lets get it resolved, but I don't want to call out \"here's how to do drives\" \"here's how to do CPU\" without examples of said things, and if we have examples on master, they're the way to go."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These already exist, so I'm not sure what the actions are here."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I meant is to give examples: drive should have interface \".Item.Drive\" and CPU - \".Item.CPU\". But likely you right that this is obvious and should not be documented unless we have some special case."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "whitespace."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This one I can agree with, we should ideally be more consistent, but most of the inconsistency was caused by difficulty in implementation, so it's hard to document the \"right way\" when whatever exists on master is itself, the defined \"right way\" because it's on master.  If we're wanting to change things, lets define what change we want to make, but if we document a bunch of things that nobody can implement, that's worse than no documentation at all."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "agree"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is already the case in code, but logging this information is non-trivial to \"diff\" properly, so I'm sure there are bugs, or your system is configured badly.  I'm happy to take patches that improve EM in this regard.  The system configuration json file that's written to disk is supposed to guarantee this, but it has certain requirements of the power state system to function correctly, which not all systems do today."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Agreed, we should look into this, but I don't think anyone has landed on a design that works for all use cases.  The closest I've seen is agreements on naming conventions (ie, CPU1, CPU2, DIMM1, ect) so that the items \"merge\", but this has obvious maintenance problems, and we tend to have trouble getting people to agree on names."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "We do something like this in our design. Item name should be same for merged Items for sure, but... You can't force to use CPU1, CPU2, DIMM1 as names unless you use PrettyName everywhere to represent names for end users: e.g. we count CPUs from 0 and name DIMMs like DIMM_CPU0_A0"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep, you clearly understand the problem.  I haven't seen a proposal that can improve this, but I've very open to one if someone wants to go do the work to define and make applications consistent."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are no designs for this that I'm aware of, and this kind of thing really deserves its own design doc, given the complexities of how status needs implemented."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "The only way I can imagine how to do this is proposal below on host all information in PIM. But I agree, it could be tricky."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets remove it from here, and plan on having it in its own design doc."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have no idea what this means.  Do you mean the Exposes records for xyz.openbmc_project.EntityManager.Configuration interfaces?  I'm happy to field other designs if you think they can be improved without breaking things, but what's there is the design we have today."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Sometime you need to model something that will always present in the given system, but should be represented as different Inventory Items for end user and/or other software. In our case that could be \"chassis\" which is defined in same system FRU with baseboard or fans, which we can't actually detect (we have no hardware presence pin) but can can say that system A always have FAN1, FAN2 and FAN3.\n\nOnce again, if you have good way to solve this, please, point an example. I tried to model this with match rule \"FOUND\", but that didn't work well for me."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Sometime you need to model something that will always present in the given system, but should be represented as different Inventory Items for end user and/or other software. In our case that could be \"chassis\" which is defined in same system FRU with baseboard or fans, which we can't actually detect (we have no hardware presence pin) but can can say that system A always have FAN1, FAN2 and FAN3.\n> \n> Once again, if you have good way to solve this, please, point an example. I tried to model this with match rule \"FOUND\", but that didn't work well for me.\n\n\n\nBasically, you would write a chassis config that probes based on the existence of another item using FOUND.  Given that EM is entirely runtime driven and intentionally doesn't have any system-specific code (only configuration), there's no such thing as something that's \"always present\" in an EM sense.\n\n\"didn't work well for me\" isn't enough description to go on to propose something better.  Lets continue on discord."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Repeating myself, these exist, although I don't really like the design, I wasn't a part of it when it got checked in, and I don't have the bandwidth to clean it up.  If this is something you're interested in working on, lets talk and I can give you my thoughts on it, or send me patches to make it better."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "As I said above, I didn't investigate this well, yet. But I know that this is not only my problem, I heard from several other community member that they also complain about this issue. Some of them found this critical and stay on YAML-based ipmi configuration."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "To repeat..... if this is important to multiple community members, tell them to send in patches to improve the behavior.  If it's not important enough to spend time investigating and fixing, there's no need to bring it up in a design doc."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 167,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, I disagree on this point very adamantly.  Entity-managers goal was to tie system-level configuration items to inventory items such that they can be reused throughout the system, and we can trace things like \"Sensor X belongs to card Y\".  Statements like this aren't really true."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd be interested to see how such a design would work in code.  A key point of the reactors is that they're able to associate back to the physical inventory item that produced them (ie, sensor X is on card Y).  If PIM owns the Inventory item in the future, this makes the pointer much more complex (at least in my mind).  If there are patches that do this, and prove it's simpler, please, send them so they can be reviewed."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I'd be interested too ) The idea come to my mind recently, and I had no chance to test it yet. Unfortunately, there is a new release cycle coming for us, so I'll be busy on internal fork again for next month, but it is in my plans to make some PoC. I will keep in mind you points on sensor relation."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you're busy, and I don't see anyone else pushing this, I see this item as inactionable for the moment.  As always, happy to review patches to improve stuff."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 174,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think one of the misunderstandings here is that EM was intended to be a replacement for PIM, such that you didn't need BOTH components to build a functioning system, and therefore didn't take the dependency and binary size hit.  Once we have patches that do the above, we should evaluate them for complexity and impact to binary size, given that most systems are at the limit already."
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 174,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "agree"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 178,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Agreed here.  Looking forward to seeing the patches \ud83d\ude0a"
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "line": 178,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "=)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "tof/proposals/otp-6.md",
                    "type": "ADDED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 0
        }
    ]
}