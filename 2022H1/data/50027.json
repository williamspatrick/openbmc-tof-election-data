{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I5b40ef6889b5af8c045ec0d35a758967e53dbed2",
    "number": 50027,
    "subject": "Fixed timestamp in telemetry service",
    "owner": {
        "name": "Krzysztof Grobelny",
        "email": "krzysztof.grobelny@intel.com",
        "username": "krzysztof-i"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50027",
    "commitMessage": "Fixed timestamp in telemetry service\n\nTelemetry service is using timestamp with milliseconds accuracy. Bmcweb\ncode assumed that timestamp is in seconds which produced a bad result.\nThis patchset updates the APIs, and adds a getDateTimeUintMs method,\nwhich can be used to convert a millisecond timestamp into a string.  In\nthe future, this can be used to get more precision out of the API.\n\nReference: '9.4.3. Date-Time values'\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.8.0.pdf\n\nTested:\n- Telemetry service timestamp show correct timestamp with milliseconds\n  precission. Example: 2022-01-11T13:06:58.648000+00:00\n- Other timestamps in bmcweb did not change\n- All unit tests are passing\n\nReference: Properties.Readings\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Telemetry/Report.interface.yaml\n\nSigned-off-by: Krzysztof Grobelny <krzysztof.grobelny@intel.com>\nSigned-off-by: Ed Tanous <edtanous@google.com>\nChange-Id: I5b40ef6889b5af8c045ec0d35a758967e53dbed2\n",
    "createdOn": 1640774248,
    "lastUpdated": 1641925371,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1640774248,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640774293,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640774742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/33033/ : SUCCESS"
        },
        {
            "timestamp": 1641488900,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641489127,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1641806917,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1641835832,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1641839098,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1641839110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641839110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1641839166,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641839561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35210/ : SUCCESS"
        },
        {
            "timestamp": 1641841661,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1641896868,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1641903867,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1641903867,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1641920325,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1641920353,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        },
        {
            "timestamp": 1641925371,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b419c7eac25e73fec60342581ac86b1425901a1e",
            "parents": [
                "638e239e85cdb906b9949758647fc16843415ba9"
            ],
            "ref": "refs/changes/27/50027/1",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1640774248,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/utility.hpp",
                    "line": 582,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why do we accept by std::chrono, then immediately convert to boost::posix_time::seconds.  Should we just use boost::posix_time::milliseconds throughout?"
                },
                {
                    "file": "http/utility.hpp",
                    "line": 582,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if we're going to use this directly now outside of this file, can we call this getDateTimeMs?"
                },
                {
                    "file": "http/utility.hpp",
                    "line": 582,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Sure I will rename it."
                },
                {
                    "file": "http/utility.hpp",
                    "line": 582,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Reason was that std::chrono is more flexible.\n\n#include <boost/date_time.hpp>\n#include <chrono>\n\nvoid testBoost(boost::posix_time::milliseconds ms) {\n\n}\n\nvoid testChrono(std::chrono::milliseconds ms) {\n\n}\n\nint main() {\n    testBoost(boost::posix_time::milliseconds(10));\n    testBoost(boost::posix_time::seconds(10)); // does not compile\n\n    testChrono(std::chrono::milliseconds(10));\n    testChrono(std::chrono::seconds(10));\n\n    return 0;\n}"
                },
                {
                    "file": "http/utility.hpp",
                    "line": 582,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Reason was that std::chrono is more flexible.\n\nI'd rather we just have explicit overloads for each type then.  I also think that's better, as you'll never implicitly convert a boost::posix_time_milliseconds to boost::posix_time::seconds on accident, and for the millisecond case, ideally it should be generating a different string (with milliseconds precision)."
                },
                {
                    "file": "http/utility.hpp",
                    "line": 587,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is going to round all the results into a second duration, which almost definitely isn't what you want."
                },
                {
                    "file": "http/utility.hpp",
                    "line": 587,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "As a first step I wanted to round all results to seconds. As a second step I wanted to start discussion whatever we want to increase timestamp precession in bmcweb (either whole or some parts).\n\nSo there are two questions:\n\nShould whole bmcweb use timestamp with milliseconds precission?\nIf not should telemetry service use timestamp with milliseconds precission or round all timestamps to seconds?"
                },
                {
                    "file": "http/utility.hpp",
                    "line": 587,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> As a first step I wanted to round all results to seconds. As a second step I wanted to start discussion whatever we want to increase timestamp precession in bmcweb (either whole or some parts).\n> \n> So there are two questions:\n> \n> Should whole bmcweb use timestamp with milliseconds precission?\n\nYes, For the APIs that support milliseconds precision, yes.\n\n> If not should telemetry service use timestamp with milliseconds precission or round all timestamps to seconds?\n\nNo."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/ut/utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "http/utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 57,
            "sizeDeletions": 5
        },
        {
            "number": 2,
            "revision": "7caa0ee5cb01808f88493d96f6c4652ba539ab95",
            "parents": [
                "914e2d5d5dbeddca9f48504256f7089efe86fc65"
            ],
            "ref": "refs/changes/27/50027/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1641839098,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've pushed the code with the changes that I think need to be done to expedite this getting merged.  Please help to review, and if you disagree, feel free to revert back to a patch that you think should be merged."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Thank you."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "http/utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -11
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 13
        },
        {
            "number": 3,
            "revision": "45c367e066d36ed0f7a38a12c80c1a40930efdfb",
            "parents": [
                "914e2d5d5dbeddca9f48504256f7089efe86fc65"
            ],
            "ref": "refs/changes/27/50027/3",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1641903867,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "@Nan, there's still an issue here in that the getDateTimeMs methods throw if you overflow the input on them.  Can you take a look and propose a fix?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "http/utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -11
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 13
        }
    ]
}