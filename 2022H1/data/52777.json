{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "topic": "hypervisor-option",
    "id": "I233dbad610870520882a51b932f80c05212cd88c",
    "number": 52777,
    "subject": "Add build option for IBM hypervisor feature",
    "owner": {
        "name": "Jiaqing Zhao",
        "email": "jiaqing.zhao@intel.com",
        "username": "jiaqingz-intel"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/52777",
    "commitMessage": "Add build option for IBM hypervisor feature\n\nHypervisor is an IBM-only feature, but now it is built in all bmcweb\nreleases. This patch makes it optional by adding a build option named\n'redfish-ibm-hypervisor-feature'. It is disabled by default, only IBM\nsystems need to enable it.\n\nOn non-IBM systems, this saves ~14KB (~1.6%) of compressed binary size.\n\nResolves issue #180 (https://github.com/openbmc/bmcweb/issues/180).\n\nTested:\nBuild pass. GET /redfish/v1/Systems returns the same data as before.\n\nChange-Id: I233dbad610870520882a51b932f80c05212cd88c\nSigned-off-by: Jiaqing Zhao <jiaqing.zhao@intel.com>\n",
    "createdOn": 1649582553,
    "lastUpdated": 1653906914,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1649582553,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1649582570,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649582570,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1649583156,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40867/ : SUCCESS"
        },
        {
            "timestamp": 1649627775,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649646053,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649683379,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649686910,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649687307,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1649689433,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649691098,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1649694526,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1649694555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649694555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1649694557,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1649695162,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40900/ : SUCCESS"
        },
        {
            "timestamp": 1649695952,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1649706104,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1649706193,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1649711311,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1649711438,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1649717392,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1649743919,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1649743934,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649743934,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1649744587,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40999/ : SUCCESS"
        },
        {
            "timestamp": 1649744912,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1649784126,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1649871753,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1649873025,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1649954582,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1649954597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649954597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1649955057,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1649955428,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41232/ : SUCCESS"
        },
        {
            "timestamp": 1649959770,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1649960644,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1649960672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649960672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1649960945,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1649961103,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41245/ : FAILURE"
        },
        {
            "timestamp": 1649961209,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1649961222,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649961222,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1649961648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41246/ : FAILURE"
        },
        {
            "timestamp": 1649961739,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1649961757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649961757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1649962359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41247/ : SUCCESS"
        },
        {
            "timestamp": 1649967210,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1653906914,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
            "parents": [
                "bacb216228c45ca715163f4c81717b1af39889ab"
            ],
            "ref": "refs/changes/77/52777/1",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649582553,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "@Jia - If there are systems who support the dbus property "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Please ignore this. Seems like I typed half sentence"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I left a long comment in one of the threads, but haven't looked at the full content of the patch in depth.  Lets figure out what we'd like to do long-term about this hypervisor node (and ComputerSystem collection in general) which will need input from the other maintainers, then, once we have a reasonable direction, we can start talking about what specific patches get us from point A to point B.\n\nI find it very likely that we'll need something like this patch as an intermediate step, but I really don't want it to spawn into a design pattern of if(ibm_oem), if(google_oem) for anything more than the <oem>/v1 namespaces (and even in that case, it's a mediocre design pattern, for the moment it's the best we have)."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Currently, only IBM has implemented Hypervisor management but my understanding is that the DBus interfaces are generically defined so that others could support this in the future. Do we really want \u201cIBM\u201d here?  If so, should this be OEM code of some sort?  I\u2019m not sure if it is good to add additional \u201conly compiles on one machine that isn\u2019t CI\u201d code if we can help it."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "The dbus interfaces are only defined in meta-ibm. e.g. https://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager/HypervisorInterface-default-p10bmc.override.yml\n\nThough other vendors can implement their own \"hypervisor\", but the API might be different. That's why I added IBM here.\n\nI'm not familar with the CI, but by checking the CI logs, some other features are also not compiled like redfish-cpu-log, redfish-bmc-journal. If we need CI support, it might be better to add some CI rules to enable all meson options?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I'm not familar with the CI, but by checking the CI logs, some other features are also not compiled like redfish-cpu-log, redfish-bmc-journal. If we need CI support, it might be better to add some CI rules to enable all meson options?\n\nMy opinion is yes, but I'm not the maintainer of this repo.  In most cases we want CI to cover the maximum code it can so we enable all options and then disable them as necessary in the bitbake recipe(s)."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here's my take on this:\nAs a design principal in bmcweb, Redfish collections should:\n1. Call the mapper to determine what dbus interfaces exist on the system\n2. Use those dbus interface listings to construct the appropriate resources on Redfish.\n\nWe do that to avoid code duplication, and to avoid the exact problem being seen here, where because we've duplicated a bunch of code, and hardcoded resource names, we're seeing inefficiencies in producing these interfaces properly, and having debates about a sea of options that are easily determined at runtime.  From my perspective, an OpenBMC system might have:\n\n1 host ComputerSystem resource\nN host ComputerSystem resources as is the case on yosemite and similar high density platforms\n0 host ComputerSystems, as is in the case of many JBOF BMC applications.\nMultiple classes of ComputerSystem (ie N \"hosts\" and M \"hypervisors\")\n1 host ComputerSystem representing the BMC itself (as has been discussed in DMTF before)\n\nAnd bmcweb will need to handle all of those cases;\n\nUnfortunately, the hypervisor code chose to do neither 1 or 2 of the above, and instead copied and pasted a bunch of code, hardcoding in the new resource.  This has been noted before, and why for the moment, the hypervisor code needs its own unique namespace to handle all the collisions.\nhttps://github.com/openbmc/bmcweb/blob/bacb216228c45ca715163f4c81717b1af39889ab/redfish-core/lib/hypervisor_system.hpp#L16\n\n\n> Though other vendors can implement their own \"hypervisor\", but the API might be different. That's why I added IBM here.\n\nThe DBus API should be, to the limits possible, the same;  This keeps business logic code (that likely needs to be changed per application) out of bmcweb, and in the specific instances of the daemons where it belongs, while still being able to produce the correct Redfish API.\n\n\n> If we need CI support, it might be better to add some CI rules to enable all meson options?\n\nWe already have ways to handle this, it's just this patchset chose not to implement them.  Not the fault of the author, as we have both patterns inside bmcweb at the moment (yay inconsistency).  Basically, put your option into the bmcweb_config.h file, and use if constexpr() to enable the logic needed.  This means that all code is \"compiled\" in all modes, then the code that we don't use gets deleted at link time.  For the things we've moved to this pattern, we're already seeing builds break a lot less, and we can avoid mixing the repos opinions on what the \"defaults\" should be from being able to make sure all the code compiles.\n\nWith that said, in the ideal case, we should not have an option at all, but I realize that this code is already here, so I'd like to get some input from the people that use it on:\nA. is it still being used?\nB. Are there any plans to refactor it in the future?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "> Basically, put your option into the bmcweb_config.h file, and use if constexpr() to enable the logic needed.\nCould you help explain this in more detail? I cannot figure out hot to do this. Any examples would be greatly appreciated."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Example that was checked in a couple days ago:\n\nhttps://github.com/openbmc/bmcweb/blob/142ec9aeb70c23a1aa98aa90d472ff11a76529ee/redfish-core/include/query.hpp#L28\n\nLots of other examples can be seen in the bmcweb_config.h file."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> The dbus interfaces are only defined in meta-ibm. e.g. https://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager/HypervisorInterface-default-p10bmc.override.yml\n\nImplemented there but the D-Bus interfaces all look to be defined in https://github.com/openbmc/phosphor-dbus-interfaces\n\nI don't see why this is an IBM feature, \nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/hypervisor_system.hpp\nAll xyz.openbmc_project. interfaces and I would think other companies might have this use case\n\n> A. is it still being used?\nYes\n\n> B. Are there any plans to refactor it in the future?\nLet me try to get someone to do this"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "And to be clear, by refactor you mostly mean addressing this comment, https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/hypervisor_system.hpp#L16 ?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Implemented there but the D-Bus interfaces all look to be defined in\n\nThe hardcoded dbus paths are not however, and considering those interfaces would conflict with the host based ones, that seems like something we should resolve at some point.\n\n> And to be clear, by refactor you mostly mean addressing this comment, \nI mean what I said earlier in the thread.  The interfaces for a \"hypervisor\" aren't really special in comparison to a host.  Given where we need to go into the future, I don't think we can survive hardcoding \"has a hypervisor\" at this level, because you have to answer too many questions.\n\nWhat if it has 2 hypervisors?\nWhat if we need to handle a different kind of hypervisor on the same system?\nWhat if a bmc has both both (2 different kinds of hypervisors)?\nWhat if we have one of each type of hypervisor on N host systems?\n\nWe have answers for that at design level for most other things:  Declare a well defined dbus interface, then use the mapper to determine if those collections, and how many of items need to exist in the collection.\n\nIn a perfect world (where software is easy) I'd love to see us completely remove the hardcoded dbus path names, and have the hypervisor guys participate in the design here: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 which is trying to abstract out how we deal with ComputerSystem collections.\n\nThat's really what I'm getting at with refactoring.\n\n\nYes, ideally deduplicating the code in the process would be good too, but I think that's less important;  The end goal is getting it to be like the other subsystems.  For example, bmcweb doesn't have a \"# of sensors\" configure option.  ComputerSystem should ideally work the same.\n\nI think the more we can do this, the easier it will be to extend things in the future when new hypervisor and host interface things come online."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "> Example that was checked in a couple days ago:\n> \n> https://github.com/openbmc/bmcweb/blob/142ec9aeb70c23a1aa98aa90d472ff11a76529ee/redfish-core/include/query.hpp#L28\n> \n> Lots of other examples can be seen in the bmcweb_config.h file.\n\nI'm personally not infavor of this solution. One point of having the build options is to save build time as unneeded code are not compiled. Is there any other solutions available to only enable features in CI build?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Example that was checked in a couple days ago:\n> > \n> > https://github.com/openbmc/bmcweb/blob/142ec9aeb70c23a1aa98aa90d472ff11a76529ee/redfish-core/include/query.hpp#L28\n> > \n> > Lots of other examples can be seen in the bmcweb_config.h file.\n> \n> I'm personally not infavor of this solution. One point of having the build options is to save build time as unneeded code are not compiled.\n\nAt this time, in the opinion of this maintainer, this requirement is less important than ensuring that CI can effectively build in all configurations.  In practice, the amount of actual code we turn on and off with the options doesn't significantly effect our compile time (if you have information to the contrary, please let me know).\n\n> Is there any other solutions available to only enable features in CI build?\n\nYes, the recommended way is to rely on your distro config, and not put code in bmcweb, as we do in many other subsystems to great effect (Sensors for example).  bmcweb should use dbus to determine resources, and should be as close to a Redfish to Dbus converter as is possible, which shouldn't really necessitate a lot of options for modifying behavior, given it doesn't contain a majority of the logic."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "I tried the constexpr way, but found it was hard to achieve it. Unlike insecure-enable-redfish-query that generates a value in bmcweb_config.h.in, features mapped in feature_map are defined by -D option in compile time. \n\nIf it is needed to make all these features compiled by making them as a value defined in bmcweb_config.h.in, I think this should be another patch."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please push your attempt as a patchset in this series, and we can work through what the issues are.  FWIW, it's on my list to put up a patch to completely remove the #ifdef variant of the options (as was stated in the original if constexpr patch)\n\nI'm happy to merge the ifdef version if there are technical issues, but I'd like to understand them before I do."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "I pushed the changes.\n\nOne interesting thing I'd like to mention is that, by creating some errors in hypervisor_system.hpp, the code is confirmed to be compiled in both #ifdef and if costexpr cases.\n\nThe probably reason is, I only wrapped the requestRoutesHypervisorSystems() call with #ifdef, not wrapped the #include or the whole hpp file, so it achieves the compiles but remove at linkage. I think a better solution for them might be only use #ifdef to wrap the function call, not function itself."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2665,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I pushed the changes.\n> \n> One interesting thing I'd like to mention is that, by creating some errors in hypervisor_system.hpp, the code is confirmed to be compiled in both #ifdef and if costexpr cases.\n\nthe bulk of the code, yes, but there are cases where the behavior changes (search for [[maybe_unused]] in the codebase for examples) between ifdef, that doesn't with if constexpr.\n\n> \n> The probably reason is, I only wrapped the requestRoutesHypervisorSystems() call with #ifdef, not wrapped the #include or the whole hpp file, so it achieves the compiles but remove at linkage. I think a better solution for them might be only use #ifdef to wrap the function call, not function itself.\n\nSee above, this still has issues in a general sense, although not in this specific case, given you're not passing any parameters to it, but I'd really like one pattern that works for all use cases here, otherwise there's a subtlety between which one should be used."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems to be the genesis of the problem here. These settings should not exist on any system that doesn\u2019t intend to support the feature.\n\nI suspect we have a mistake in the default setting somewhere and this is getting included in them."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "I checked the code, these settings are only defined in meta-ibm. In meta-phosphor, there is no such settings.\n\nhttps://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager_%25.bbappend\n\nI did a quick search, there is no hypervisor-related interface defined outside meta-ibm."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If that is the case, why is this code doing anything on your system?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "It adds specific handler for /redfish/v1/Systems/hypervisor. Though it always gives error, but the behavior is not the same as accessing /redfish/v1/Systems/<some_random_value>. And I'd like to reduce the binary size of bmcweb on systems that not support hypervisor."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, this is the only place where we use a settings string to determine whether something is supported.  The mapper is far more reliable and preferred.\n\nIf this is moving to an option flag, should we be checking settings at all?  I suspect not."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Yes checking the setting is strange here. I will remove the dbus call.\n\nFrom my personal opinion, I would suggest Hypervisor using a interface like xyz.openbmc_project.State.Host later for probing it dynamically. https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 This change implements such logic."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2668,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Yes checking the setting is strange here. I will remove the dbus call.\n> \n> From my personal opinion, I would suggest Hypervisor using a interface like xyz.openbmc_project.State.Host later for probing it dynamically. https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 This change implements such logic.\n\nYes, that's essentially what I said in the other comment (ie, use the mapper)."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2669,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Is this path implemented on a system which does not support the hypervisor ? And those systems do not want the hypervisor resource listed under Systems collection?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2669,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "It will not appear in SystemsCollection, but it implementes /redfish/v1/Systems/hypervisor and will give specific response (mostly errors)."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2698,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In terms of logic, please don't duplicate this between the paths.  This code is essentially the same as what's on 2679.  Please deduplicate"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2698,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
            "parents": [
                "bacb216228c45ca715163f4c81717b1af39889ab"
            ],
            "ref": "refs/changes/77/52777/2",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649694526,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "This would be a breaking change since this was enabled before.. What if it was enabled, allowing a period of time for meta layers who wanted this to enable it?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd be pretty amazed if any system that wasn't IBM enabled this.  Should be enough to just look through the meta layers and put in a patch to meta-ibm to add this?  Or is there a concern that we'd break something else?  I'm not against having a time period, just not sure why we need it when the fix for all known users is pretty easy."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "+1, I think only IBM need to enable this option in bbappend file."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> Should be enough to just look through the meta layers and put in a patch to meta-ibm to add this?\n\nThat should be fine. \n\nThere is OEM I would also like to have a build option for  \nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/managers.hpp#L289"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Should be enough to just look through the meta layers and put in a patch to meta-ibm to add this?\n> \n> That should be fine. \n> \n> There is OEM I would also like to have a build option for  \n> https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/managers.hpp#L289\n\nLets take that up in a different patchset/discussion forum, not in the context of this review.  Multiple companies use those bindings, and I agree, we need better rules for what goes in the OpenBMC OEM namespace (insert rant about oem schemas)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI, I'm not sure how you're measuring this, but I got a significantly different number.\n\nI measured with:\n\nbitbake obmc-phosphoor-image\nxz -zc $BBPATH/tmp/work/qemuarm-openbmc-linux-gnueabi/obmc-phosphor-image/1.0-r0/rootfs/usr/bin/bmcweb | wc -c\n865564\ncd <bmcweb dir>\ngit reset --hard HEAD~1\nbitbake obmc-phosphoor-image\nxz -zc $BBPATH/tmp/work/qemuarm-openbmc-linux-gnueabi/obmc-phosphor-image/1.0-r0/rootfs/usr/bin/bmcweb | wc -c\n880404\n\nThat shows a 15KB difference, not a 50KB difference.  Granted, it's still 1.6% (down from 5.6%), which is quite a nice chunk of change to get rid of for low flash-size systems, but differs 3.3X from what you posted, so it's probably worth examining whos number is correct."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "/s/phosphoor/phosphor/g"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Sorry I have some misunderstanding, I thought in tmp/work/<arch>-openbmc-linux-gnueabi/bmcweb/1.0+git999-r0/, the package/usr/bin/bmcweb is the uncompressed one and the image/usr/bin/bmcweb (identical to the file in tmp/work/<target>/<image>/1.0-r0/rootfs/usr/bin/bmcweb) is the compressed one. I'm not aware of this file is not the compressed one need to be compressed manually.\n\nI'm using a intel build of openbmc, it enables some other options in bmcweb, the result might be different from the qemu image. With xz it manually, the difference is 13332 (784640->771308) in this intel build.\n\nI also tried building a qemu obmc-phosphor-image with all default configs. The result is 14108 (763340->749232)\n\nSo your test result is right. I'll update the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please follow the patterns of the other header files that contain \"optional\" routes.  We didn't come to what's there on accident.  If you had good reasons for not doing that, please note it in your commit message."
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 51,
            "sizeDeletions": 38
        },
        {
            "number": 3,
            "revision": "2ed6eb84455c13d430236c93131d9f23c40f85b1",
            "parents": [
                "bacb216228c45ca715163f4c81717b1af39889ab"
            ],
            "ref": "refs/changes/77/52777/3",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649743919,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 37
        },
        {
            "number": 4,
            "revision": "eac790760371401814b0b4f61134bc3e436c374d",
            "parents": [
                "725525eaac83bb355fb34aec5513a0a499fb471c"
            ],
            "ref": "refs/changes/77/52777/4",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649954582,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 37
        },
        {
            "number": 5,
            "revision": "418ab472dcbd2ac562c00338c1f8e0e437d2ca91",
            "parents": [
                "725525eaac83bb355fb34aec5513a0a499fb471c"
            ],
            "ref": "refs/changes/77/52777/5",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649960644,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 38
        },
        {
            "number": 6,
            "revision": "172e5ff81f01c8902c3305adda7eecc44ef3cfab",
            "parents": [
                "725525eaac83bb355fb34aec5513a0a499fb471c"
            ],
            "ref": "refs/changes/77/52777/6",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649961209,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 38
        },
        {
            "number": 7,
            "revision": "5d71a32999b9da9df50acae50c2eac64e61cff0d",
            "parents": [
                "725525eaac83bb355fb34aec5513a0a499fb471c"
            ],
            "ref": "refs/changes/77/52777/7",
            "uploader": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "createdOn": 1649961739,
            "author": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Please check the commit https://gerrit.openbmc.org/c/openbmc/bmcweb/+/45063 where the hypervisor resource and its related network configuration is moved into a condition, where the system supports xyz.openbmc_project.Network.Hypervisor app.\n\nThis dbus app is enabled for IBM systems via https://gerrit.openbmc.org/c/openbmc/phosphor-networkd/+/43173\n\nThis is done as per Ed's concern of tying the bmcweb to the Bios manager which is mostly a system specific app, containing the customized bios table attributes.\n\nWith this, i think there is no need to have any build option for this hypervisor feature. Appreciate if you all can have a look at this commit and vote.\n\nBut yes, the commit https://gerrit.openbmc.org/c/openbmc/bmcweb/+/52075 looks interesting. Our need is to support the ethernet interface schema for the hypervisor(system resource). We will look into this commit and see if this can be extended to support the network config for the hypervisor"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 38
        }
    ]
}