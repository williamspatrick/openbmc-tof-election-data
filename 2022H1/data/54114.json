{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I9218e8263f31e519d76683822290dfe259c57192",
    "number": 54114,
    "subject": "Fixes for IBM Management Console usecases",
    "owner": {
        "name": "Sunitha Harish",
        "email": "sunithaharish04@gmail.com",
        "username": "sunharis"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54114",
    "commitMessage": "Fixes for IBM Management Console usecases\n\nThis commit fixes the below issues\n\n1. Close file after ConfigFile read/write operation\n   Adds the file close API for the config file read and write. The read\n   will check if file is open before copying contents to output buffer\n\n2. Bump up the ConfigFile directory max limit\n   For large configurations on the system, the current directory size\n   upper limit of 10MB was exceeding and BMC was sending the error back\n   to the client. This fails the entire large config support.\n   This commit Increases this upper limit of the configFile dir to 25MB\n\n3. Return 409 Error for a lock conflict\n\nTested by:\n1. ConfigFile read\n2. Single file upload\n3. AcquireLock from the same client returns 409\n\n\nSigned-off-by: Sunitha Harish <sunithaharish04@gmail.com>\nChange-Id: I9218e8263f31e519d76683822290dfe259c57192\n",
    "createdOn": 1653986423,
    "lastUpdated": 1656392268,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1653986423,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1653986449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653986449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1653987139,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44059/ : SUCCESS"
        },
        {
            "timestamp": 1653987662,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1654011417,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1654044979,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1654046093,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1654046133,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1654151204,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1654151279,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1654184000,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1654234409,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1654286037,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1654359720,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1654360014,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654492796,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654575405,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654620225,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654626857,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1654630760,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654660350,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654672993,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654704668,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656306093,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1656392240,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1656392268,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6f0f17e83e85ac3b51e2fee54839401cf807843f",
            "parents": [
                "1a1d5d6d06458f23e0c86aceda1c807c7553217a"
            ],
            "ref": "refs/changes/14/54114/1",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1653986423,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please read and follow the expectations and formatting for commit messages."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Why lump all these together?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Added file close() for cleanup which was missing earlier. Single line changes only. So pushed them together"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "why is close() required?  I thought we generally relied on RAII for closing files?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "We had some issues seen during the system test, where the file read writes are made back to back for a long time. We saw some race conditions that the next operation was attempted before the file is closed after the previous operation. this resulted in corrupting the file content. So added the close() and is_open() calls explicitly."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So, you had issues without close() and then when you tested, those issues went away when you added close()?  That makes no sense, considering that answers like this say that explicit close() calls are not required.\n\nhttps://stackoverflow.com/questions/748014/do-i-need-to-manually-close-an-ifstream\n\nI'm having trouble understanding why the behavior would be any different, given that.  Can you elaborate?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Please wrap the body at 72 characters"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Can you add a bit more on how this 25MB was reached?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Please use your full name here. :) \n\nFrom https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#formatting-commit-messages\n\nAll commit messages must include a \"Signed-off-by\" line, which indicates that you the contributor have agreed to the Developer Certificate of Origin (see below). This line must include the full name you commonly use, often a given name and a family name or surname. (ok: Sam Samuelsson, Robert A. Heinlein; not ok: xXthorXx, Sam, RAH)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I had my git setup messed up while pushing this. I have corrected it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "LGTM. Left a comment. Need to fix commit message. Otherwise changes are reasonable."
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Can this be from the |maxSaveareaDirSize| variable so we don't keep two copies?"
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ack. Will do in the later commits where i will be using this max limit at more places"
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "line": 318,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "isn't this code the same as what was there before functionally?"
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "line": 318,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Yeah. Same functionality. Different way of validation"
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "line": 318,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't understand what you mean by \"different way of validation\".  It's literally the same code, and more verbose code than what was there before.  (calling open after constructing the ifstream instead of just directly opening it in the constructor)\n\nyes, you've changed is_open, which is fine, but the line before that should go back to what it was, ie\n  std::ifstream readfile(loc.string());"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 38,
            "sizeDeletions": 7
        },
        {
            "number": 2,
            "revision": "013a0ba48b93f671ad939adeae3eee3a64657ed9",
            "parents": [
                "1a1d5d6d06458f23e0c86aceda1c807c7553217a"
            ],
            "ref": "refs/changes/14/54114/2",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1654151204,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I don't think anyone else is using. 25MB seems big but \ud83e\udd37"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Glad to see this stuff being moved forward;  Can we talk a little bit about the long term plans here?  Having this kind of code that directly manipulates the filesystem in bmcweb breaks the OpenBMC architecture in kind of unfortunate ways.  Per the other handlers, the business logic for this should be going into its own daemon and schema, which IBM can maintain, and bmcweb can just call the dbus interface to like we would anything else, which would remove me from most of the management console lock code reviews, and let ibm implement their business logic however they wanted \ud83d\ude0a\n\nCan we discuss timeframes on when/how that changeover can happen?  Considering that we're doing non-trivial business logic updates in this patch series, it seems like a good time to put together a long term plan for this code."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Sure. I would need Gunnar also to share his views. There is no dbus calls in this ibm_management_console use-cases. This is completely within bmcweb. We have the compiler flag since day 1. If there is any other better way to branch this out at upstream master, we can do that"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, We had an internal discussion with the design team. By 2Q 23 or 4Q 23 we either remove this code under /ibm/v1 or move to a D-Bus model as mentioned by you. \n\nDoes that sound ok ?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So, about 12-18 months out from any changes here?  Cool.  Seems like a lower priority then.  How do we want to handle the business logic updates until then?  Just wait until we get the architecture corrected, then merge the business logic updates when the IBM daemon is complete?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "+1\nIBM namespace, is domain of the IBM"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I was the one that suggested we need to make sure it is a realistic timeframe and we can meet it and we ended up at 12 -18 months. I know Sunitha's team is going to work on this here soon so I would call it \"medium priority\". I think that timeframe is more realistic than a timeframe like end of the year. \n\n> Just wait until we get the architecture corrected, then merge the business logic updates when the IBM daemon is complete?\n\nCould we merge these business logic changes for now? We can add an issue or a TODO in the code or both saying this is changing by the dates Sunitha mentioned.\n\nI think not accepting anymore business logic as we close in on that date is reasonable. I think commenting out the option with a notice to remove if we pass that date is also reasonable. \nhttps://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L174\nI think there is options if we don't address this. Would like a reasonable amount of time to address this though."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I guess I'm struggling a little bit.  I'm reading the above as \"We can't even start this for 12-18 months, but we can do a bunch of other stuff right now\" which really kinda feels like a push off, I'm sure that wasn't the intent.  I really do think you guys would move faster with your own application.  There's things like the an RAII object needing to explicitly call close that I don't understand, but because it's in a user facing application, i kind of do need to understand it if it's truly a problem we need to fix elsewhere (I really suspect it's not).  If it's in a separate app, go wild.  I kind of assumed this management console stuff was dead, given that I haven't seen many updates to it.\n\nIs there a path where we can do incremental progress, so you can get your patches merged, and we can make progress toward a better end solution, where IBM can maintain their application and interfaces the same as we would any other application.  Something like:\nFirst business logic change on bmcweb\nphosphor-dbus-interfaces defined and pushed\nsecond business logic change on bmcweb\nRepo requested and created\nthird business logic change in bmcweb\ndaemon created and ready for bmcweb port.\n\nThat way you can make progress, and in the end, we end up with a solution that looks like the rest of the system.\n\n> I think commenting out the option with a notice to remove if we pass that date is also reasonable. \n\nThat doesn't seem reasonable to me;  If I have to do that, we've failed.  Even when I did it in the virtual media case, it didn't have the desired effect, so it's not clear that pattern helps people to contribute."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "> There's things like the an RAII object needing to explicitly call close that I don't understand, but because it's in a user facing application, i kind of do need to understand it if it's truly a problem we need to fix elsewhere (I really suspect it's not)\n\nI can continue investigating to find that 'elsewhere'. Probably we could not recreate the original issue and this change really was not the 'fix'? But i don't see any harm in calling these file APIs explicitly. I can move these back to the old code if you strongly feel that there could be issues if i call the close() explicitly. \n\n> I kind of assumed this management console stuff was dead, given that I haven't seen many updates to it\n\nThese APIs are used by IBM systems, and we had not pushed any code upstream recently due to other priority work-items.\n\n> we can make progress toward a better end solution\n\nThe use-cases in this file does not have any dbus interactions. They are contained within the bmcweb only. So there will be no dbus change in future for this.\n\nI can see there is https://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L181 google-api compiler flag implementing /google/v1 at https://github.com/openbmc/bmcweb/blob/master/include/google/google_service_root.hpp. I will check more on what is different in that api implementations."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > There's things like the an RAII object needing to explicitly call close that I don't understand, but because it's in a user facing application, i kind of do need to understand it if it's truly a problem we need to fix elsewhere (I really suspect it's not)\n> \n> I can continue investigating to find that 'elsewhere'. Probably we could not recreate the original issue and this change really was not the 'fix'? But i don't see any harm in calling these file APIs explicitly.\n\nIt's extra code, and if our RAII model (suggested by cpp core guidelines) is broken in the std library, then this is important.\n\n> I can move these back to the old code if you strongly feel that there could be issues if i call the close() explicitly. \n\nI don't feel strongly either way, I'd like to understand why an explicit close() changes the code paths at all.  RAII should be covering us here, and the std library documentation backs that up, so we need to at least understand it.\n\n> \n> > I kind of assumed this management console stuff was dead, given that I haven't seen many updates to it\n> \n> These APIs are used by IBM systems, and we had not pushed any code upstream recently due to other priority work-items.\n> \n> > we can make progress toward a better end solution\n> \n> The use-cases in this file does not have any dbus interactions.\n\nMy point is that it should be calling dbus.  This code is doing blocking filesystem calls to a filesystem that could lock up (ie, not read only tmpfs that common_errors.md documents as ok and basically never blocks).  If the RW filesystem has any issues, bmcweb will effectively brick, which is a stability issue.\n\n> They are contained within the bmcweb only. So there will be no dbus change in future for this.\n> \n> I can see there is https://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L181 google-api compiler flag implementing /google/v1 at https://github.com/openbmc/bmcweb/blob/master/include/google/google_service_root.hpp. I will check more on what is different in that api implementations.\n\nGoogle V1 calls dbus for OEM-specific behavior, as does the Intel crashdump stuff which predates ibm/v1."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> \"We can't even start this for 12-18 months, but we can do a bunch of other stuff right now\"\n\nI think it was meant to convey complete in 12-18 months. \n\nI think we have a solution where most of this (ibm/v1/) goes away but we are still discussing. We can bring forward a more complete plan later with any phosphor-dbus-interfaces defined for anything that does stay.\n\nI guess I would prefer these go in, but if we want to hold off on merging these until there is more progress on moving to proper OpenBMC architecture (bmcweb call the dbus interface), I am okay with that. These patches are already in our fork downstream, I think Sunitha was just trying to get them upstream."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "> These patches are already in our fork downstream, I think Sunitha was just trying to get them upstream.\n\nYes. Thats right.\n\nWe would want to retain the implementation at https://gerrit.openbmc.org/c/openbmc/bmcweb/+/34208 at upstream master, and will remove the configFile and lock implementations in an years time."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 7
        },
        {
            "number": 3,
            "revision": "70c9818ff937d03acef4e76212916410fd361610",
            "parents": [
                "1a1d5d6d06458f23e0c86aceda1c807c7553217a"
            ],
            "ref": "refs/changes/14/54114/3",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1656392240,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/ibm/management_console_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 7
        }
    ]
}