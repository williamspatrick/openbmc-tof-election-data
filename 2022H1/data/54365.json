{
    "project": "openbmc/bios-bmc-smm-error-logger",
    "branch": "main",
    "id": "I3afaa96f1fab2dd160058e8127dcba494efe3ce7",
    "number": 54365,
    "subject": "buffer: Implement \"readBufferHeader\" and enforce endianness",
    "owner": {
        "name": "Brandon Kim",
        "email": "brandonkim@google.com",
        "username": "brandonkimbk"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bios-bmc-smm-error-logger/+/54365",
    "commitMessage": "buffer: Implement \"readBufferHeader\" and enforce endianness\n\nAdd buffer header reader and a getter API for the cachedBufferHeader for\ntesting.\n\nAlso update CircularBufferHeader with boost endian library.\n\nTested: Unit Tested\n\nSigned-off-by: Brandon Kim <brandonkim@google.com>\nChange-Id: I3afaa96f1fab2dd160058e8127dcba494efe3ce7\n",
    "createdOn": 1654661099,
    "lastUpdated": 1655310734,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1654661099,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1654661167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654661167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1654661243,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44552/ : SUCCESS"
        },
        {
            "timestamp": 1654661513,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1654661546,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654661546,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1654661623,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44553/ : SUCCESS"
        },
        {
            "timestamp": 1654662135,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1654662202,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654662202,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1654662278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44555/ : SUCCESS"
        },
        {
            "timestamp": 1654673523,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1654701379,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654701684,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654735329,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1654735936,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654736233,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1654736276,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654736276,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1654736353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44636/ : SUCCESS"
        },
        {
            "timestamp": 1654737763,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654755741,
            "reviewer": {
                "name": "ankita prasad",
                "email": "ankita.prasad@intel.com",
                "username": "ankitaprsad22"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1654794364,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654798460,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1655178807,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1655178812,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1655178825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655178825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1655178903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44963/ : SUCCESS"
        },
        {
            "timestamp": 1655186993,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1655219999,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1655221086,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1655222076,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1655222112,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655222112,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1655222191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45003/ : SUCCESS"
        },
        {
            "timestamp": 1655242455,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1655243309,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1655243442,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1655243454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655243454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1655243532,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45023/ : SUCCESS"
        },
        {
            "timestamp": 1655253356,
            "reviewer": {
                "name": "Nikhil Namjoshi",
                "email": "nikhilnamjoshi@google.com",
                "username": "namjoshiniks"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1655256590,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1655271665,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1655271775,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1655271810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655271811,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1655271887,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45065/ : SUCCESS"
        },
        {
            "timestamp": 1655272492,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1655310428,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1655310494,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 8: Code-Review+2"
        },
        {
            "timestamp": 1655310731,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1655310734,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2a1fb4899239cba5d89c6c68dd12f6ee4c2a5332",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/1",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654661099,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 86,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "97dcbbdff6a091815558254582b6f2df685dec6c",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/2",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654661513,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 86,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "78010a64e4973a99f4e3f76390c02eef4c2ccd5f",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/3",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654662135,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/buffer.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "rm std::"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Good catch, remnant of my old local code that I'm copying from"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "ankita prasad",
                        "email": "ankita.prasad@intel.com",
                        "username": "ankitaprsad22"
                    },
                    "message": "If I may ask, what is wrong in using std:: ?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "it is not technically wrong, but in an earlier patch, we agreed that having std:: everywhere was not good for readability (as it was becoming verbose)"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "add the expected read size"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "maybe\n```\nstruct CircularBufferHeader *bufferHeader = reinterpret_cast<CircularBufferHeader *>(bytesRead.data());\n\ncachedBufferHeader = *bufferHeader;\n```\nwill work.\n\nI think this avoid one copy."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just memcpying the data in has endian issues that you should account for.\n\nAlso, memcpy is generally banned within the project.  use memcpy_s instead (which takes two sizes, and should remove the need for the size variable as well)."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI for learning, list of banned functions and alternatives.\n\nhttps://github.com/intel/safestringlib/wiki/SDL-List-of-Banned-Functions"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Thanks, that's much cleaner and a pattern I meant to do (and forgot the last step)."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ah, I thought memcpy was not so safe (as I learned in college) but I saw it being used elsewhere and thought it was ok on the newer C++ (I definitely learned C++99 when I was in school). Good to know that the _s variant of functions are still the safer version of these functions, thanks!.\n\nGood point on the endianness, I think what Willy proposed may work better for us here."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what willy suggested has the same issues.  Casting to a struct doesn't fix endianness issues, and because it seems likely that we might have to share this struct between non biendian things (I'm not sure what smm is) it seems important to handle this.\n\n\nTechnically memcpy_s is no more \"safe\" than memcpy, it's just easier to use properly and wraps up the range checks a little more helpfully.  Also, FWIW, you can actually get rid of the size check, as memcpy_s will now do that for you."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Good point on endianness - is there a common OpenBMC practice? Or would using something like boost endian library to set each of the multi-byte variables in this struct as a set endian be enough?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, I generally tend to just do the braindead thing, and construct a new struct manually.\n\nint32_t myInt = bytes[0] << 24 + bytes[1] << 16 + bytes[2] << 8 + bytes[3];\n\nSo it's brutally obvious what the intended endianness is to someone reading it, and your in-process data structures aren't tied directly to the data structures that are being sent over the wire.  This works fine so long as you're not doing anything super performance sensitive (in practice the optimizer is pretty good about recognizing patterns like this for most architectures).\n\nFWIW, there are other approaches that involve doing the cast like willy suggests, then relying on the ntoh class of methods to convert any integers from network to native.\nhttps://linux.die.net/man/3/ntohl\n\nIf you're in a project that uses boost, boost endian wraps those functions in some \"endian safe\" numeric primitives (for example big_int32_buf_t) that make it brutally obvious to the reader what the encoding is, and makes them very hard to do wrong, as they overload all the numeric operators to convert the endianness on the way back out.\n\nAs with anything, lots of ways to solve it, do what makes sense to your sensibilities."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Apologies for getting to this review late. Thanks for the detailed answer - I'm actually not too familiar with the boost endian library and its magic so I'm not 100% sure, but would declaring the variables in the struct with the boost endian library and reinterpret_casting / memcpying be enough? Otherwise, the manual struct construction seems... pretty tedious with how many members this struct has.\n\nI did notice that William (wak@) has created and used stdplus::raw::copyFrom for structs with endianness (in our internal repo) although I wasn't 100% sure how as it seems to be a memcpy at its core: https://github.com/openbmc/stdplus/blob/master/src/stdplus/raw.hpp#L64-L83\n\nI'll update this patch assuming this stdplus::raw::copyFrom + boost:endian is magical."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> but would declaring the variables in the struct with the boost endian library and reinterpret_casting / memcpying be enough?\n\nyes.  In this case, i don't think you need copyFrom.  If you use it, you need to catch and handle the exception it throws."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Good point, thanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 86,
            "sizeDeletions": 4
        },
        {
            "number": 4,
            "revision": "dbc14c190d455e72834bf20f7c36aac2d37b002c",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/4",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654736233,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ankita prasad",
                        "email": "ankita.prasad@intel.com",
                        "username": "ankitaprsad22"
                    },
                    "message": "If I may ask, what is wrong in using std:: ?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -11
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 15
        },
        {
            "number": 5,
            "revision": "3d63b143db4ea1f46d5c2358f27aaf2cc0b4efcc",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/5",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655178807,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/buffer.cpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "uncomment?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ah, good catch"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -25
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -4
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 143,
            "sizeDeletions": 34
        },
        {
            "number": 6,
            "revision": "7a14f662efea0d48bc67b2f061b73d6bd57c11ae",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/6",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655222076,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/buffer.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Shall we add a static_assert to make sure the size is as expected at compile time?\n\nstruct CircularBufferHeader\n{\n...\n};\nstatic_assert(sizeof(CircularBufferHeader) == 48,\n              \"Size of CircularBufferHeader struct is incorrect.\");"
                },
                {
                    "file": "include/buffer.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/buffer.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "Should we change the padding to reserved?"
                },
                {
                    "file": "include/buffer.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "read(/*param name=*/0, headerSize) ?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -25
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -4
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 141,
            "sizeDeletions": 34
        },
        {
            "number": 7,
            "revision": "b82a89d3ad58847b29141c993e990c8760eceaf5",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/7",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655243442,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/buffer.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Nikhil Namjoshi",
                        "email": "nikhilnamjoshi@google.com",
                        "username": "namjoshiniks"
                    },
                    "message": "Do we need to memset the struct to 0 or maybe set the members to some default value, in a constructor ?"
                },
                {
                    "file": "include/buffer.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "That's a great catch!"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Nikhil Namjoshi",
                        "email": "nikhilnamjoshi@google.com",
                        "username": "namjoshiniks"
                    },
                    "message": "What about the rest of the CircularBufferHeader members like biosInterfaceVersion?\n\nSHouldn't we convert them to little endian too, wherever we set them ?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I guess you mean below with readBufferHeader - that's handled by the reinterpret_cast (I believe)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -25
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 144,
            "sizeDeletions": 34
        },
        {
            "number": 8,
            "revision": "17ee1a93779feba7794d17fdf5d84267f3ad2056",
            "parents": [
                "fcbc3db143de5e878f1c4465dcda724bcd5db371"
            ],
            "ref": "refs/changes/65/54365/8",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655271775,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Thank you for all the reviews!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -25
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 144,
            "sizeDeletions": 34
        }
    ]
}