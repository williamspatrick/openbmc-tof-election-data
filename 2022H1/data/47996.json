{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I1b15d9972509cdd8945ead8c86c54327c779b63b",
    "number": 47996,
    "subject": "Add Softshutdown and Hardshutdown threshold Interface support",
    "owner": {
        "name": "Kumar Thangavel",
        "email": "thangavel.k@hcl.com",
        "username": "HCL-BMC"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/47996",
    "commitMessage": "Add Softshutdown and Hardshutdown threshold Interface support\n\nAdded threshold interfaces like Softshutdown and Hardshutdown\ninterfaces in dbus-sensors. This is added similiar to thershold\nwarning and critical interfaces.\n\nTo enable this Softshutdown and Hardshutdown interfaces, need to\nset the Severity level in EM config.\n\nSeverity value as 2 for Softshutdown and Severity value as 3 for\nHardshutdown\n\nTESTED: Tested on Facebook YosemiteV2 hardware.\nVerified the Hardshutdown and Softshutdown interfaces are created\nand displaying in dbus objects.\n\nSigned-off-by: Kumar Thangavel <thangavel.k@hcl.com>\nChange-Id: I1b15d9972509cdd8945ead8c86c54327c779b63b\n",
    "createdOn": 1634712144,
    "lastUpdated": 1641971829,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1634712144,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634712156,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634712304,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28582/ : SUCCESS"
        },
        {
            "timestamp": 1634716083,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1634716889,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1634716950,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1634730776,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1634731797,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1634915525,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1634935001,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1634967616,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1635178083,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1635227923,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1635466602,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Removed reviewer Andrew Jeffery."
        },
        {
            "timestamp": 1641971829,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Abandoned\n\nRefactored and updated the logic with below patch.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50289"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "0dac58235da78d4d3915f768f0517b0102b2dafb",
            "parents": [
                "b782eec69267206863c07f9ea26b475be7f0f291"
            ],
            "ref": "refs/changes/96/47996/1",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1634712144,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sensor.hpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Hard ?"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Can we add condition to check whether severity is 3 ?"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "include/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 94,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "dcf92475c9ea911ee308d728fe5d09939f737a9d",
            "parents": [
                "b782eec69267206863c07f9ea26b475be7f0f291"
            ],
            "ref": "refs/changes/96/47996/2",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1634716950,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "include/Thresholds.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect these need to be combined into a single \"hasThresholdInterface\" method, that accepts an enum for the level (we already have the enum).\n\nSimply continuing to make more of these per type gets messy in a hurry."
                },
                {
                    "file": "include/Thresholds.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we DRY up all this logic?  Optionally you could look at what was done in phosphor-virtual-sensors because there we implemented a small template class to abstract this and make the inline code much less cluttered.\n\n// optionally turn this into an unordered_map-lookup.\nswitch (threshold.level) {\n    case Critical:\n        iface = thresholdInterfaceCritical;\n        level = \"Critical\";\n        break;\n\n    case Warning:\n        iface = thresholdInterfaceWarning;\n        level = \"Warning\";\n        break;\n\n    ....\n}\nalarm = level + \"Alarm\";\nif (direction == HIGH) {\n    level += \"High\";\n    alarm += \"High\";\n} else {\n    level += \"Low\";\n    alarm += \"Low\";\n}"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "If we go with template class, we need to refactor the code and code changes will be more. we need to change the places where we used the threshold levels, properties and interfaces. Optionally, code changes are minimal in the map lookup. just need to lookup the interfaces, properties, level based on the threshold levels and get those values from map.\n\nCould you please suggest the better approach to follow."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not entirely sure what your asking.\n\n> If we go with template class, we need to refactor the code and code changes will be more.\n\nMinimizing the amount of code touched is not something we should optimize for; improving the readability and maintainability  is.  Which ever approach is more readable is probably what I'd go for.\n\nIf you are going to do refactoring, it might be helpful to do the refactoring commit first and then add your new threshold feature on top of the refactored code."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Thanks Patrick. I will refactor the code and commit first. then will add this feature."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to patricks comment, especially about \"Minimizing the amount of code touched is not something we should optimize for\"\n\nIt was pointed out in another review that this code would need to be refactored to support more than two interfaces, and we shouldn't just be adding to the existing so hopefully this isn't a surprise."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "At some point I wonder if it is useful to have N variables for each threshold or if you should hold them in an array/vector."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you capture this in a variable?  It looks relatively expensive."
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 275,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest DRYing this out also."
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 275,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "include/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 94,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 2
        }
    ]
}