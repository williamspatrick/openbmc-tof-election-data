{
    "project": "openbmc/libpeci",
    "branch": "master",
    "id": "I6b2d0f81366ea77057e70d69c72be90ba4c4aeb9",
    "number": 49602,
    "subject": "Add D-Bus Raw PECI Daemon",
    "owner": {
        "name": "Jason Bills",
        "email": "jason.m.bills@linux.intel.com",
        "username": "jmbills"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpeci/+/49602",
    "commitMessage": "Add D-Bus Raw PECI Daemon\n\nThis adds a new D-Bus daemon to handle raw PECI requests over\nD-Bus.\n\nThe D-Bus interface provides a Send method that takes a\nvector of byte vectors where each byte vector contains the raw\ndata for a single PECI command.  This allows sending an array\nof raw PECI commands to execute in bulk to avoid issues with\nnetwork latency when sending multiple commands.\n\nThe method returns a vector of raw PECI responses corresponding\nto the vector of raw commands.\n\nTested:\nConfirmed that a single and multiple PECI commands correctly\nexecute and return when SendRawPeci is called.\n\nChange-Id: I6b2d0f81366ea77057e70d69c72be90ba4c4aeb9\nSigned-off-by: Jason M. Bills <jason.m.bills@linux.intel.com>\n",
    "createdOn": 1639173729,
    "lastUpdated": 1642800897,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1639173729,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1639173748,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639173776,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31774/ : SUCCESS"
        },
        {
            "timestamp": 1639176023,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1641948437,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1642023632,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1642023641,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642023641,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1642023668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35442/ : SUCCESS"
        },
        {
            "timestamp": 1642023784,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1642701201,
            "reviewer": {
                "name": "Nirav Shah",
                "email": "nirav.j2.shah@intel.com",
                "username": "njshah2"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642702340,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642706422,
            "reviewer": {
                "name": "Nirav Shah",
                "email": "nirav.j2.shah@intel.com",
                "username": "njshah2"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1642709327,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642709859,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642717818,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642718280,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642800881,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 3: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1642800897,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5434b21b5d415c457680bdf42959eff1aa7ccdff",
            "parents": [
                "6a00e9aa72f75d66eb8b9572c7fd3894f91c6bba"
            ],
            "ref": "refs/changes/02/49602/1",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1639173729,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "service_files/com.intel.peci.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 151,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "86855d36bbae12b1df0c3f6587a38b49f768db8c",
            "parents": [
                "6a00e9aa72f75d66eb8b9572c7fd3894f91c6bba"
            ],
            "ref": "refs/changes/02/49602/2",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1639176023,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Will there be times when something longer than 23s needs to be executed? What do we do there? I am fine with this for now, but we may need to have an extended response mechanism like redfish has for jobs. So we can kick off the long-running task and collect its response later."
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I don't expect to need anything longer than 23s.  Under normal conditions 23s allows thousands of commands to handled.  In the future, if this limit becomes an issue, we will need to define something like you have suggested."
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "do we need to call peci_SetDevName(NULL) here?"
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "service_files/com.intel.peci.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 151,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "bdefaa3c95d0a93928f8ebda1ce158172d3a4bcf",
            "parents": [
                "6a00e9aa72f75d66eb8b9572c7fd3894f91c6bba"
            ],
            "ref": "refs/changes/02/49602/3",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1642023632,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "What are the plans for the userspace PECI code w.r.t. Iwona's recent work on the kernel patches?  AFAIK the new version of the driver doesn't provide /dev/peci devices or any other mechanism for userspace to do raw PECI transfers."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "After the new driver is accepted into the kernel, we will update libpeci to support the new driver API.\n\nMy understanding is the command-specific ioctl interface will be replaced with more of a raw interface, and libpeci will be responsible for encoding the PECI command instead of populating the struct for the ioctl.  I haven't kept up on the latest driver status, though so I may be wrong."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "My understanding of the new driver is that it doesn't provide any peci-specific userspace interface at all (just hwmon sysfs files).  I don't know the details offhand about what necessitates userspace having access to lower-level operations (pings, raw send/receive); is that something we could get by without?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Ahh, that's right.  I think what is currently in review is just a part of the PECI driver (adapter?).  After that merges, I think there is still more work to do to get to the same functionality that we have today.\n\nUserspace PECI access is required and used by many applications today, so we'll have to enable that in some way before we can adopt the new driver."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Updated based on current feedback, so moving forward with +2.  If further changes are needed, we can add them in additional commits.  Thanks!"
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "Nirav Shah",
                        "email": "nirav.j2.shah@intel.com",
                        "username": "njshah2"
                    },
                    "message": "is a peci_lock needed here?"
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Not in this case.  The open/close is handled by the library.  peci_lock, which doesn't really work anymore, was added for cases in older systems when multiple PECI commands needed to be sent without interruption which we don't need for this case."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "dbus_raw_peci.cpp",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "service_files/com.intel.peci.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 152,
            "sizeDeletions": 0
        }
    ]
}