{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I1a3194bf3a6ca3936954b31439070dcc2f343411",
    "number": 51336,
    "subject": "Check PowerSupply availability prop for State/Hlth",
    "owner": {
        "name": "Matt Spinler",
        "email": "spinler@us.ibm.com",
        "username": "spinler"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/51336",
    "commitMessage": "Check PowerSupply availability prop for State/Hlth\n\nThis commit makes use of the Available property on the power supply\nD-Bus object when determining the power supply state and health in the\nPowerSupply response.  The power supply monitor code from phosphor-power\nwill set the property to false if it can determine that the power supply\nisn't able to provide power due to certain faults.\n\nIf the PS isn't available, then the Health property will be set to\nCritical, and the State will be set to UnavailableOffline (assuming it\nshouldn't be Absent instead).\n\nThis is necessary because on IBM systems the Functional property\ndetermines the fault LED state as well as the health value, and in\ncertain cases the fault LED needs to stay off even though the PS health\nis not OK.  A specific example of this is when the PS cord is unplugged:\nno fault LED is desired but it is desired for the Redfish output to show\nthat there is an issue with the PS.\n\nIf the Available property isn't present on D-Bus, it acts as if it had a\nvalue of true and behaves the same as it does today.\n\nTested:\nAvailable = false:\n    \"Health\": \"Critical\",\n    \"State\": \"UnavailableOffline\"\n\nAvailable = true, Functional = false:\n    \"Health\": \"Critical\",\n    \"State\": \"Enabled\"\n\nPS missing:\n    \"Health\": \"Critical\",\n    \"State\": \"Absent\"\n\nEverything OK:\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n\nNo Available property on D-Bus:\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n\nSigned-off-by: Matt Spinler <spinler@us.ibm.com>\nChange-Id: I1a3194bf3a6ca3936954b31439070dcc2f343411\n",
    "createdOn": 1645134811,
    "lastUpdated": 1645652379,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1645134811,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1645134826,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645134826,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1645135597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37584/ : SUCCESS"
        },
        {
            "timestamp": 1645234642,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1645396769,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1645539441,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1645586716,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1645601652,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1645652379,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "cfd95277ce08ac98dfb354a28842d816f79c173a",
            "parents": [
                "af153ccfe1221905978316d9b17f7d8120ec2645"
            ],
            "ref": "refs/changes/36/51336/1",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1645134811,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "It looks good to me"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "This will change the behavior on systems. \nIt would be possible to have a system in which the power supplies where not available, but their status was not critical. I worry about alerting tool that are using bmcweb/redfish to monitor for critical systems will have to change based on this behavior change in bmcweb. \nThat said, it does not hurt us, so if Ed is good, I am good. "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I don't think there's any existing PS code that implements this property, other than what I've done."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Johns point is a good one.  A power supply missing, is missing.  The criticality of it being missing is something that needs more subtle handling and is largely dependent on things not in the power supply.  I thought we solved a bunch of this in James code for parsing out the redundancy information and determining the number of failures and whether it was critical.  I'm assuming you looked at that?"
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "nit: Something is not right here. Comment says that Absent is default, code says that Enabled is default. Personally I would like to see local constexpr named defaultState. But it is not a common practice in bmcweb so comment above needs to be updated."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "the code that introduced that hasn't merged yet: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40326 so it can still get fixed there."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 198,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "... bringing the discussion about missing PSs being critical to the relevant code to make it easier for me to keep things straight...\n\nWhat I am trying to do is support the following:\n1) Health can be Critical even though Functional is true\nand \n2) State can be UnavailableOffline separately from Absent\n\nIf the PSU daemon defines the Available property to mean 'present but can't supply good power', then the code I have here accomplishes that.\n\nI'm open to suggestions if there's a better approach."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 215,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit: if you make this a bool* then you don't need a value on line 227"
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "He could, but then you'd have to have an extra null check (at least the way is written now).  I'm ok with either style."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "All 3 of the gets in this are calling from to the same connection name.  While not strictly correct (should be looking up on the mapper) if we're going to add a third, we should be using GetAll.  Admittedly, the other checks should've been using GetAll as well.\n\nI suspect once that's done, and the parsing isn't async, that's going to be a lot clearer."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Ack, will refactor after the questions/issues from line 198 are resolved in case changes are needed."
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The order in which we're doing this is a little odd.  Should we be checking for availability AFTER we verify it's present?"
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Ack, will refactor after the questions/issues from line 198 are resolved in case changes are needed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/power_supply.hpp",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -16
                }
            ],
            "sizeInsertions": 104,
            "sizeDeletions": 16
        }
    ]
}