{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "id": "I3dbd7333237a1373d784187951ad6abe217567d1",
    "number": 50321,
    "subject": "added support for optionals in unpackProperties",
    "owner": {
        "name": "Krzysztof Grobelny",
        "email": "krzysztof.grobelny@intel.com",
        "username": "krzysztof-i"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/50321",
    "commitMessage": "added support for optionals in unpackProperties\n\n- Added support for optionals\n- Added support for pointers\n- Removed support for moving data from input container\n- Removed support for container types other than std::vector\n\nTested:\n- Unit tests are passing\n- Examples which use unpackProperties are working correctly\n\nSigned-off-by: Krzysztof Grobelny <krzysztof.grobelny@intel.com>\nChange-Id: I3dbd7333237a1373d784187951ad6abe217567d1\n",
    "createdOn": 1641979805,
    "lastUpdated": 1653485934,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1641979805,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1641979814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641979814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1641980475,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35393/ : SUCCESS"
        },
        {
            "timestamp": 1642065792,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 2: Published edit on patch set 1."
        },
        {
            "timestamp": 1642065804,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642065804,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1642066123,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/35480/ : FAILURE"
        },
        {
            "timestamp": 1642164367,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1642164399,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642164399,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1642165064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35547/ : SUCCESS"
        },
        {
            "timestamp": 1645778046,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1645778057,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645778057,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1645778727,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/38047/ : SUCCESS"
        },
        {
            "timestamp": 1645822115,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1646035459,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1646139297,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1646139309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646139309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1646139325,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1646139975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/38227/ : SUCCESS"
        },
        {
            "timestamp": 1646225460,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1646225470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646225470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1646225497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/38345/ : FAILURE"
        },
        {
            "timestamp": 1646225806,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 6:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1646225817,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 7: Commit message was updated."
        },
        {
            "timestamp": 1646226047,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 8: Commit message was updated."
        },
        {
            "timestamp": 1646226076,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 9: Patch Set 8 was rebased."
        },
        {
            "timestamp": 1646226090,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646226090,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1646226738,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/38347/ : SUCCESS"
        },
        {
            "timestamp": 1646644109,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1646645565,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1646729229,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1646741428,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1646741447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646741447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1646741747,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1646741909,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1646741922,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646741922,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1646741927,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/38638/ : ABORTED"
        },
        {
            "timestamp": 1646741953,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1646742032,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1646742588,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/38640/ : SUCCESS"
        },
        {
            "timestamp": 1647038490,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 11:\n\n(11 comments)"
        },
        {
            "timestamp": 1647043693,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1647044853,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1647045252,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(14 comments)"
        },
        {
            "timestamp": 1647045585,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1647046183,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1647335643,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 11:\n\n(10 comments)"
        },
        {
            "timestamp": 1647354273,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1647354285,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647354285,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1647354394,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 12:\n\n(5 comments)"
        },
        {
            "timestamp": 1647354660,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1647354675,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647354675,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1647354679,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39016/ : ABORTED"
        },
        {
            "timestamp": 1647354685,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 12:\n\n(5 comments)"
        },
        {
            "timestamp": 1647355353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39017/ : SUCCESS"
        },
        {
            "timestamp": 1647433137,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 14: New patch set was added with same tree, parent, and commit message as Patch Set 13."
        },
        {
            "timestamp": 1647433148,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1"
        },
        {
            "timestamp": 1647433149,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647433149,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1647433825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39064/ : SUCCESS"
        },
        {
            "timestamp": 1647436435,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1647444246,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1647444264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647444265,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1647444368,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 15:\n\n(2 comments)"
        },
        {
            "timestamp": 1647444691,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1647444705,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647444705,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1647444710,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39068/ : ABORTED"
        },
        {
            "timestamp": 1647445360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39069/ : SUCCESS"
        },
        {
            "timestamp": 1647885133,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1647885822,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1648452890,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1648554408,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1648635057,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1648635074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648635074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1648635087,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1648635751,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40126/ : SUCCESS"
        },
        {
            "timestamp": 1649786605,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(6 comments)"
        },
        {
            "timestamp": 1649799132,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1649799527,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1649836573,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1649840600,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1649840609,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649840609,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1649840827,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1649841018,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1649841029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649841029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1649841033,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41138/ : ABORTED"
        },
        {
            "timestamp": 1649841716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41139/ : SUCCESS"
        },
        {
            "timestamp": 1649846189,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1649846219,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649846220,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1649846398,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1649846554,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41142/ : FAILURE"
        },
        {
            "timestamp": 1649846867,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1649846879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649846880,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1649847563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41143/ : SUCCESS"
        },
        {
            "timestamp": 1649857681,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 21: Code-Review+1"
        },
        {
            "timestamp": 1650431561,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1650431574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650431574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1650431912,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1650431924,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650431924,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1650431929,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41651/ : ABORTED"
        },
        {
            "timestamp": 1650431999,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 23:\n\n(10 comments)"
        },
        {
            "timestamp": 1650432611,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41652/ : SUCCESS"
        },
        {
            "timestamp": 1650642718,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 23: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1651642525,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1651771739,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 23: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1653288859,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1653485931,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 23: Code-Review+2"
        },
        {
            "timestamp": 1653485934,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as c8447d52245048934007ab74348c0e11947caf0d"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "d520d4b8a56ea7db8a84c3be8e3154aaa20778f3",
            "parents": [
                "6adfe948ee55ffde8457047042d0d55aa3d8b4a7"
            ],
            "ref": "refs/changes/21/50321/1",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1641979805,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -30
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -62
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 101
        },
        {
            "number": 2,
            "revision": "c742b06c9d9dfb24b20170823c6ea68ddaf92dc0",
            "parents": [
                "6adfe948ee55ffde8457047042d0d55aa3d8b4a7"
            ],
            "ref": "refs/changes/21/50321/2",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1642065792,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -30
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -62
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 101
        },
        {
            "number": 3,
            "revision": "d7a0d9f8c79ecc7ffdbae1fb4aa1de5dc62436d9",
            "parents": [
                "6adfe948ee55ffde8457047042d0d55aa3d8b4a7"
            ],
            "ref": "refs/changes/21/50321/3",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1642164367,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -16
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -33
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -13
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -32
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": -99
                }
            ],
            "sizeInsertions": 338,
            "sizeDeletions": 198
        },
        {
            "number": 4,
            "revision": "3fc775e71f9ce1b0e146c59b4eaeefcd0fa0b4fc",
            "parents": [
                "dce747bcd90cc3dbc5eb3410f112f4a6cea2e384"
            ],
            "ref": "refs/changes/21/50321/4",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1645778046,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "concepts have limited support in the project, and require c++20, which not all of the subprojects (phosphor-fan, obmc-ikvm, and PIM were the three that I hit when I tried to build this) have  moved to.  While unfortunately complex, if it's possible to do this without concepts, I would recommend doing that so you can separate this change from requiring all modules to move to c++20 (which while pretty doable, will take some time to find all of them)."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Thank you for pointing it out. I didn't notice it. I will make it work in C++17."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -16
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -43
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -13
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -32
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 130,
                    "deletions": -101
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 210
        },
        {
            "number": 5,
            "revision": "a4f27b6ef072d5da2778fde95c6913a611c3226d",
            "parents": [
                "dce747bcd90cc3dbc5eb3410f112f4a6cea2e384"
            ],
            "ref": "refs/changes/21/50321/5",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646139297,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -19
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 154
        },
        {
            "number": 6,
            "revision": "22b574bb79235e77cd7e70f185fb5f77746140ce",
            "parents": [
                "dce747bcd90cc3dbc5eb3410f112f4a6cea2e384"
            ],
            "ref": "refs/changes/21/50321/6",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646225460,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 298,
            "sizeDeletions": 152
        },
        {
            "number": 7,
            "revision": "defc29ccb03e9342a9006cc0f85c7999e3623e85",
            "parents": [
                "dce747bcd90cc3dbc5eb3410f112f4a6cea2e384"
            ],
            "ref": "refs/changes/21/50321/7",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646225817,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 298,
            "sizeDeletions": 152
        },
        {
            "number": 8,
            "revision": "0e0ee3d7dc9fdb8dfb5efd280a6995e6304cc3ac",
            "parents": [
                "dce747bcd90cc3dbc5eb3410f112f4a6cea2e384"
            ],
            "ref": "refs/changes/21/50321/8",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646226047,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 152
        },
        {
            "number": 9,
            "revision": "1db5d2b1127181810b0bf0612c3c3e5ba94a2fd5",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/9",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646226076,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Can't we just accept only const pointers?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "The thing is we can use get_if<int>, but can't get_if<const int>, it's API restriction. Container is const so get_if<int> will return const int* so everything is fine."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Oh, I read it wrong. This makes sense, thanks!"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "I assume pointers are added as optional-like alternative. Is it actually necessary?  While optional<> is self explaining, the same behavior for pointers (no error on failure) might come surprising to caller."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Yes it is necessary for bmcweb purposes. If we want to introduce this function in bmcweb it can't increase binary size and to do this we need to use pointers. Pointers behave exactly like optionals, so users can choose between them.\n\nBmcweb policy is that each pointer needs to be checked before using, so for bmcweb it would be more surprising that there is no need to check pointer before dereferencing."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Ack"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 96,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "If test should also serve as documentation, perhaps it's good idea to have testcases with const and/or ref?"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 96,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 152
        },
        {
            "number": 10,
            "revision": "847deca620d95cbbab59e197977cb389fd3540c2",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/10",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646741428,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "nit. Maybe some test-only wrapper for that would help in code clarity. Correct me if I'm wrong but maybe we could do in test body\n```\nusing traits = functor_traits<decltype(functor)>;\n``` \n?"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 311,
            "sizeDeletions": 152
        },
        {
            "number": 11,
            "revision": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/11",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1646741909,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Seems very useful. All my comments were resolved."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Doesn't forcing a std::function for a lambda increase the size?"
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I was actually playing with this in the context of some bmcweb callbacks, and it used to be the case a few years ago that templatized callbacks optimized/inlined more aggressively, but with our current set of libc++ and gcc, std::function produced the same code as a templated callback....   I can't fully explain that one, given that I would've expected the templated callback to inline differently given it has the exact type information, but from what I could tell, gcc is able to optimize through a type erased std;:function these days for most cases."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ok."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you're curious, here's my playing around with this recently.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/51585\n\nTL; DR, replacing a bunch of non-trivial templated callbacks with std::function produced the same binary."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "That was also the result of introducing getProperty in bmcweb, when std::function was used binary size was smaller than when lambda was used. To follow up this changes getAllProperties to follow same pattern."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Marking it as resolved. Please reopen it if needed."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think the fact that 'move' works here means that for l-value references on line 29 we ended up forcing the creation of a temporary std::function."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why's that?  I don't see it getting used another time?  With that said, I think if we captured the std::function by value on line 13, it would entirely remove the need for the line 23 overload."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't know what I was thinking.  l-value references can be converted to r-value references without any additional conversion.  I guess there might be a conversion if the T on line 22 is a const&, but that would be the only case.\n\nHaving said that, I'm not sure it is good practice to cast someone's l-value reference into an r-value reference that you give away somewhere else.  But, if they really wanted no guarantees that it wouldn't change, it should have been a const&."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In this context we have an rvalue reference as an input, so either the user gave us an rvalue explicitly, or a copy got made implicitly by the compiler so I don't think we're casting \"somone elses\" reference here."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The only use of this is to allow the user to pick their own data structure.  That seems kinda wrong.  Use of this call should require std::vector (or at least something iterable)"
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This can be performed in overload above.\n\nThis overload is only used to change all lambdas to common std::function_type. Thanks to that instead of calling async_method_call with different lambda types we are calling async_method_call with same template type."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I kinda think we don't even want this overload to be possible.  If you're loading things into a map, then parsing them to known-at-compile-time parameters, you're doing something that's inherently wasteful both performance-wise, and binary size-wise compared to just loading them into an unordered structure (ie vector<pair>) before doing the parameter readout.\n\nWe should help the user make the right data structure decisions by disallowing the structures that we know are less efficient and give the same result.  FWIW, I have patches out against bmcweb (one still left to merge of 10 or so) to basically consolidate on making this consistent."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not following you here.  Isn't the Container the stuff that came off the dbus?  This constexpr is just for cases where you're using a map and not a vector<pair> (flatmap?)."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep, this is the stuff that came off dbus, but my point is that there is no case where you should use any kind of map when using unpackProperties to pull stuff off of dbus, given that unpackProperties basically removes the need for find entirely, and saves you a log(n) (as well as a bunch of code size)."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Are you suggesting to force one most efficient container type?\n\nFrom my point of view it's ok. I didn't do any research related to which container will produce smaller binary size so if you could share which container should be used here I can implement it."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "unpackProperties was changed to accept vector only"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Are you suggesting to force one most efficient container type?\n\nYes, we should build an API that coerces users to do the right thing."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why'd you switch this?  Can't std::begin give a constant-iterator for constant containers?  Or should this have become cbegin?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "<bikeshedding> If we're going to change it anyway, we might as well change it to std::ranges::find_if and avoid the iterators entirely </bikeshedding>"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "container.begin() should also return const iterator in case where container is const, it  should work exactly like std::begin(container). I didn't notice many uses of std::begin in openbmc code and decided to change it."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Marking it as resolved. Please reopen it if needed."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, you're doing an N^2 loop over the incoming properties, given that findProperty calls find_if (which is the first N), then this is looping over each property (the second N)  maybe this isn't a huge deal?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It is N^2 but it is probably M^2 if you aggregate all the args.  Arguably that's smaller but the aggregation itself requires dynamic memory.  The number of properties is probably small enough to not worry about it now."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, take a look at the structure of readJson in the bmcweb code.  It does a very similar unpack on nlohmann::json objects, but does it with a single O(N) loop"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This has two benefits, code using find is much simpler and binary size is smaller. Number of properties is quite small so there should be no visible differences in performance. I would like to keep it this way, since there are no visible benefits.\n\n@Ed In one of the attempts I tried to do it with single loop, it worked fine, but it produced bigger bmcweb binary."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "didn't see your last reply before I hit send;; Last message was meant for Krzysztof.  The way we usually write this loop is O(N)\n\nfor (property : propertiesVector){\n   if property.first == \"FirstArg\":\n       Do firstargunpack on property.second.\n   if property.first == \"Secondarg\":\n       do secondArgUnpack.\n\n}\n\n\nThat's ideally the logic the template should be implementing.  Instead, right now it's doing more loops.  When we did this same thing for readJson, we found that the above optimized better if we unrolled the inner loop, and made sure that the inner loop was known at compile time.\n\nfor (property_name in {FirstArg, SecondArg}){\n   for (property in PropertiesVector){\n       if (propertyName == property.first){\n           // Do unpack.\n       }\n    } \n}"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Sure, I will give it a try"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Implementing it as you suggested increases binary size from 2632828 to 2649244"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How are you measuring?  bmcweb compressed size should be on the order of 850KB these days;  Maybe you were measuring uncompressed?  Is the patchset where we did the N loop instead of the N^2 loop available in the series somewhere?  I'd like to understand it, because what you're describing falls outside of what we've seen in the past, and in terms of code, an O(N) algorithm is better than O(N^2) so I'd like to understand where the difference lies."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I didn't push it to gerrit. Sure I will do it one more time."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Pleast take a look at Patchset 20"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Marking it as resolved. Please reopen it if needed."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want std::decay_t instead?  'remove_cv'?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we removing const here at all?  you can't unpack into a const out param."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ed is correct, remove_pointer_t should be enough."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "std::is_same_v<const int, std::remove_pointer_t<const int*>> this expression return true\n\nstd::is_same_v<const int*, std::decay_t<const int*>> this expression return true\n\nSo after all additional remove_const or cv is needed and decay cannot be used.\n\nDone"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If this decay is useful, put it in is_optional_v."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not sure why we would even want to decay here.  I think we want std::remove_reference?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I will put remove_reference inside is_optional_v"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't the if constexpr redundant if it has the same condition that's in the static_assert?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Without this if condition else branch wont compile. If condition has to stay, all I can do is move static_assert above this is and reverse condition."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "My bad, you were right I can delete this if condition.\n\nDone."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this function used anywhere?  Doesn't seem like it."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Should we add an assert string on this?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pursuant to the comment above, if we made that change to only support iterable data types that make sense, this could change to be std::span which might reduce the template overloading."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "unpackProperties was changed to accept vector only"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why can't we just throw directly from here?  Is there some concern that it makes the code-size bigger?  Can you please document the design decision because it isn't obvious and I'm worried someone else is going to come through and refactor it if you don't record why."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It is unit tested so it won't be changed by accident, but you are right it might not be clear.\n\nSince exceptions are forbidden in bmcweb we had to implement solution that doesn't throw exception and at the same time have common code for components that want to use exceptions. This way it is kept as small as possible for case where there are no exceptions."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "unpackPropertiesCommon is marked as noexcept that's only reason there is no direct throw in this lambda"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> unpackPropertiesCommon is marked as noexcept that's only reason there is no direct throw in this lambda\n\nOh, I understand now.  I'm not sure if it is actually necessary for unpackPropertiesCommon to be noexcept.  Can you remove it and see if it changes the binary size for the no-throw case?  I suspect the compiler will optimize through it anyhow and you're making this code more complex.  As long as you constexpr protect the possible-throw situations.\n\nOr, you can do a conditional \"nothrow if onErrorCallback is nothrow\"?  I forget the syntax off the top of my head."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Sure I will check it."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It increases binary size from 2632828 to 2636924, which personally I don't mind, but since this is something we want to use in bmcweb I need to keep it as small as possible.\n\nIf noexcept(false/true) is used it doesn't increase binarysize in bmcweb so I will apply this change."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there a reason for not reusing a single enum?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "You are right, I will use same enum."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this function already exists in boost under boost::function_traits, and considering the only use is in the asio stuff, I don't think it makes sense to duplicate it when the boost version handles a lot more corner cases than this does (see docs for all of its supported callable overloads, I think there's 6 you need to handle to have full callable support)\n\nWith that said, these days, we should use boost::callable, which is a similar struct, with different params, and reports most things as std::tuple, which is better.  I have a patch out to move bmcweb to move to boost callable if you need examples, but the docs are pretty good.\n\nFWIW, I'm pretty sure that async_method_call already uses callable_traits"
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "sizeof... already returns std::size_t.  If you included cstddef just to get this it isn't necessary.  Just use auto."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Arity doesn't even get used in non-test code.  This can just be removed."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "remove_cvref_t or decay_t ... you're missing volatile handling.  decay_t handles array paramters also, to decay them to a pointer."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, in the guarantees that this template should give, it should return the ACTUAL type that is accepted, with const, pointer, volatile and references.  if the calling code needs the decayed/non-const/non-pointer version, it should be calling decay in that scope, to keep this method as common as possible\n\nFWIW, this is how the boost implementations handle it."
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering the lambda takes std::string& as the third argument, this should be a reference."
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same here, this should be const int&"
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -85
                }
            ],
            "sizeInsertions": 308,
            "sizeDeletions": 152
        },
        {
            "number": 12,
            "revision": "dd33615208aed12f74059c37d43b458def34f17d",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/12",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1647354273,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": -108
                }
            ],
            "sizeInsertions": 330,
            "sizeDeletions": 175
        },
        {
            "number": 13,
            "revision": "28a8fd9d62f31e21ce7e870d0655842320710fc5",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/13",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1647354660,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": -108
                }
            ],
            "sizeInsertions": 300,
            "sizeDeletions": 175
        },
        {
            "number": 14,
            "revision": "0f3a679940e068f60c1dffb0bb3164a7fcdb1fa2",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/14",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1647433137,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -45
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -17
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": -108
                }
            ],
            "sizeInsertions": 300,
            "sizeDeletions": 175
        },
        {
            "number": 15,
            "revision": "d40fcaf9991ec0af764bf9e408a2753b3887a7e2",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/15",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1647444246,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 124,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 328,
            "sizeDeletions": 225
        },
        {
            "number": 16,
            "revision": "4a763a11405c5d0d9200c99a81cd4dd491cbb668",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/16",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1647444691,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What did Ed do? ;)\n\nI think you meant 'failed'."
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've long thought of \"ed\" as a synonym for \"failed\" \ud83d\ude04"
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I'm sorry, I guess when I copy pasted this string I didn't select whole word. I will fix it."
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 124,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 332,
            "sizeDeletions": 225
        },
        {
            "number": 17,
            "revision": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/17",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1648635057,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we have a better variable name here?  Something like \"VariantType\"\n\nAlso, should this be a variadic unpack within std::variant<Types...>, to avoid weird errors in the case where you try to unpack a non variant directly."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same as above, can this be a more descriptive variable name?  \"Handler\" was better here."
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This template parameter seems to be passed through multiple levels, but I don't see it used anywhere?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It is used in 35 ( `noexcept(Noexcept)` ), but I didn't expect this to be a template parameter like this.  We already have OnErrorCallback and we end up doing `onErrorCallback(...)`.  We should be able to automatically set `noexcept(onErrorCallback(...))` and then you need to mark the lambda as noexcept for the noexcept lambda."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "noexcept can... take... a template argument <twitch>  (brain breaks)\n\n\n+1 to what Patrick said."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These days, we shouldn't need a template for this.  It can just be std::function;  They seem to produce the same code."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "If we change to std::function they it won't be possible to remove `bool Noexcept` and use `noexcept(onErrorCallback(...))` instead."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 119,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 326,
            "sizeDeletions": 224
        },
        {
            "number": 18,
            "revision": "eb7963ce8d4ebb17dbcfbef93d81709bc76383de",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/18",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1649840600,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 124,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 331,
            "sizeDeletions": 224
        },
        {
            "number": 19,
            "revision": "b0bb05f9a92fbbd18315a0fce15335e6df9b8678",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/19",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1649841018,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 330,
            "sizeDeletions": 224
        },
        {
            "number": 20,
            "revision": "a47c089c85d6e72e8f463129bc9a7333ba63dec4",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/20",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1649846189,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 168,
                    "deletions": -124
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 375,
            "sizeDeletions": 225
        },
        {
            "number": 21,
            "revision": "e4f7509532cd4392d5391647431fbbbdb5051042",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/21",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1649846867,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -5
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 331,
            "sizeDeletions": 224
        },
        {
            "number": 22,
            "revision": "5da5007c5a5e3fd06cd83b070f4cd05ff229371c",
            "parents": [
                "9ca0c929d9ae80580c6d9f9bf7bce1231759c6bf"
            ],
            "ref": "refs/changes/21/50321/22",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1650431561,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 348,
            "sizeDeletions": 239
        },
        {
            "number": 23,
            "revision": "cff034c73c9cd7359f0b7806c62dc4c3fde3b501",
            "parents": [
                "1229576b7c19c6f5dea19f910aace4bab0e4f03a"
            ],
            "ref": "refs/changes/21/50321/23",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1650431912,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "- Resolved missed comments (renamed variables).\n- Marked all other comments as resolved.\n- Rebased to master."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'll leave this open for additional feedback until Monday morning (US CDT)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "@Ed, @Patrick do you have any other comments?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, I still don't like that it's an N^2 algorithm, and I'd like to understand that before we merge the bmcweb side of this, given that there are some interfaces that are quite big to the point where n^2 looping seemed to matter in the past, but as written, this does solve the problem, and any changes wouldn't effect the API/call side so we can treat anything else as incremental."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "@Patrick, Can w merge it?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -21
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 348,
            "sizeDeletions": 240
        },
        {
            "number": 24,
            "revision": "c8447d52245048934007ab74348c0e11947caf0d",
            "parents": [
                "b7329a90eef04a24c03a2afef43c2145a0033ae6"
            ],
            "ref": "refs/changes/21/50321/24",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1653485934,
            "author": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/utility/type_traits.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -68
                },
                {
                    "file": "example/get-all-properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -20
                },
                {
                    "file": "include/sdbusplus/asio/property.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -21
                },
                {
                    "file": "include/sdbusplus/utility/type_traits.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -123
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 348,
            "sizeDeletions": 240
        }
    ]
}