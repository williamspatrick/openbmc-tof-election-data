{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I6f743c27e7e6077f1c6c56e6958922027e4404e8",
    "number": 46991,
    "subject": "Add Support for privilege check in handleUpgrade",
    "owner": {
        "name": "P Dheeraj Srujan Kumar",
        "email": "p.dheeraj.srujan.kumar@intel.com",
        "username": "dheerajpdsk"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/46991",
    "commitMessage": "Add Support for privilege check in handleUpgrade\n\nThis commit enables privilege check for user(s) in case of upgraded\nconnections.\nCurrently users with no privileges will also be able to access\nWebsockets connections (Ex: KVM).\n\nThe privilege check was already in place for normal connections (i.e.\nrouter->handle()). This commit lifts off the privilege check code and\nmoves it into a common function (validatePrivilege()), which can be used\nboth by handle() and handleUpgrade() and register required callback to\nbe called.\n\nAlso, the const qualifier for Request in the handleUpgrade() function's\nsignature is removed to enable setting \"isConfigureSelf\" field of\nrequest. The signature of handleUpgrade() is made identical to handle()\n\nTested:\n - websocket_test.py Passed\n - Admin and Operator users are able to access KVM on WebUI\n - Readonly User was unable to access KVM on WebUI\n\nSigned-off-by: P Dheeraj Srujan Kumar <p.dheeraj.srujan.kumar@intel.com>\nChange-Id: I6f743c27e7e6077f1c6c56e6958922027e4404e8\n",
    "createdOn": 1631909993,
    "lastUpdated": 1657460891,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1631909993,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1631910011,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631910433,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/26542/ : SUCCESS"
        },
        {
            "timestamp": 1631910852,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 1:\n\nThis Commit is Tested in Conjunction with https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/46992"
        },
        {
            "timestamp": 1631911204,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1631913643,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1655381630,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1655845882,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1655845939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655845939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1655846257,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/45532/ : FAILURE"
        },
        {
            "timestamp": 1656407157,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1656407201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656407201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1656407713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46018/ : SUCCESS"
        },
        {
            "timestamp": 1657460891,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "0381b192f6840e609e256fa2c2a8b4851de112b3",
            "parents": [
                "8d0e77f08b98ec3720a567b3d9bfe39a0c8c077d"
            ],
            "ref": "refs/changes/91/46991/1",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1631909993,
            "author": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It also makes Request& req non-const for no reason that I can see or understand.  Please mention that here along with the reasoning."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "Ooh yes.. i missed that. will add it here"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "Updated commit message for the same"
                },
                {
                    "file": "http/app.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks wrong, but I don't understand why you did it.  At this context I would've expected request to be const.  The request is complete at this point, and only needs handled.  It shouldn't be modified after this point."
                },
                {
                    "file": "http/app.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "The reason i lifted off const here was because we have to assign \"req.userRole = userRole;\"\n\nIts only for this call that the const is removed. It is being retained in other places where changes are not permitted/required."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1210,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This has lifetime issues."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1210,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yeah, till the d-bus call finishes, authorization check completes inside call back, Its alive.\n\nAs said below, May be caching the user data locally to bmcweb will improve the performance and reduce the connection keep alive issue. But this commit adds authorization check for upgrade routes and  bring both (normal & upgrade) routes on to same page."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1312,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This code looks copied and pasted from somewhere."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1312,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "Yes.. its a direct liftoff from handle() section below. Line 1434 onwards."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1312,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Dheeraj, We can  move all this common code to single API and use it both places."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1312,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "Moved the common code to a new function (validatePrivilege)."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1346,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is doing a blocking dbus call for EVERY request.  That's unacceptable for performance."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1346,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "This could be a performance issue in case of handle() section below which gets called for each query to an URI.\nHere is it only called during upgraded connections.. i.e. either for Websockets or SSE sockets.. which is  only once to establish the connection. and once it is done, it wouldn't be checking this part right.\n\nSo, i feel it shouldn't be much of a bottle neck here in case of handleUpgrade()."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1346,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yeah Agree with Ed, This is blocking call and will impact the overall performance. \n\nBut this d-bus call is made only when establishing websocket connection ( one time). So this won't introduce much latency. Also Same problem exist even for Normal route handler() (https://github.com/openbmc/bmcweb/blob/master/http/routing.hpp#L1405-L1407).\n\nI believe this can be avoided by caching the information on bmcweb side. So I think we can do it as separate commit to address generic issue."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "http/app.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 139,
                    "deletions": -27
                }
            ],
            "sizeInsertions": 160,
            "sizeDeletions": 28
        },
        {
            "number": 2,
            "revision": "cfbf597f2c2768e2bd21b0633ee6868cfc75f32b",
            "parents": [
                "6846a70e45a59afbde396c9272621603bd1bf257"
            ],
            "ref": "refs/changes/91/46991/2",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1655845882,
            "author": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "http/app.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 168,
                    "deletions": -129
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 130
        },
        {
            "number": 3,
            "revision": "3a021d9730cc28a3d4e8b8988964f2ae39938a84",
            "parents": [
                "3d17720e3886973c566f9e0c3f5c437d463ba001"
            ],
            "ref": "refs/changes/91/46991/3",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1656407157,
            "author": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "http/app.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 168,
                    "deletions": -129
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 130
        }
    ]
}