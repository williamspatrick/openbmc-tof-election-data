{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Ib1621f1a1293e41bf5ff42be9d7e22c9744e8f97",
    "number": 51381,
    "subject": "Check for clang before logging",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/51381",
    "commitMessage": "Check for clang before logging\n\nWhile we don't use clang directly for project builds, building our code\nwith it can be quite adept at finding real coding problems, for example:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/51369\n\nUnfortunately, our lg2 dependency doesn't yet compile with clang, because\nof clangs missing support for std::source_location, which gives us a\nlinker error.  Given lg2s compile time checking of parameters, any\nattempts to wrap it in a common class resulted in a \"arg#0 is not a\nconstant parameter\" error that this author was not able to overcome.\n\nTo get code to compile, this commit wraps all of our logs in an ifndef\n__clang__.  While not ideal, this is arguably better than reverting\n0c42f40e55fd4fe6274962ea17e804f49f5de19e and going back to the raw\njournal calls, as once clang supports source location, we can clean\nthese up.  This keeps the codebase buildable on clang, which helps us to\nfind these kinds of errors.\n\nTested: Code compiles with clang.\n\nSigned-off-by: Ed Tanous <edtanous@google.com>\nChange-Id: Ib1621f1a1293e41bf5ff42be9d7e22c9744e8f97\n",
    "createdOn": 1645218222,
    "lastUpdated": 1646668408,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1645218222,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1645218234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645218234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1645218530,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37658/ : SUCCESS"
        },
        {
            "timestamp": 1645222968,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1645223873,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646149864,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646156768,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646328841,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646667009,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646668402,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1646668408,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Abandoned\n\nNot needed."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2ed3bae14fe7566d9cd00695edf7cdc8e2a81864",
            "parents": [
                "27cac0bec1c8bc2f84bd91d5e9f74f0459f5a8fa"
            ],
            "ref": "refs/changes/81/51381/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1645218222,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-logging/+/51708 merged, so are we good here? We can abandon this?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect so."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems rather unfortunate.  Can you give me a few days to see if I can come up with something better between this and lg2?\n\nHow are you testing compiling clang?  Are you leveraging meson subproject/wraps to do it?  I'm slightly surprised that it doesn't work if you are because then both lg2 and this should be compiled with clang and use the experimental::source_location instead.  I can see it not working if you're attempting to use an SDK or something for lg2."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This seems rather unfortunate.  Can you give me a few days to see if I can come up with something better between this and lg2?\n> \n> How are you testing compiling clang?  Are you leveraging meson subproject/wraps to do it?  I'm slightly surprised that it doesn't work if you are because then both lg2 and this should be compiled with clang and use the experimental::source_location instead.  I can see it not working if you're attempting to use an SDK or something for lg2.\n\n\n\nNo problem, I'm not in a super huge rush.  My overall goal is to get:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/51391\n\nmerged, which hopefully also answers how I'm testing compiling with clang.  For what it's worth, I've also pulled in meta-clang into my yocto builds, and compile with:\nTOOLCHAIN:pn-<recipename> = \"clang\"\nin my local.conf.  Each give roughly the same results.  Sometimes yocto will find clang-specific 32/64 bitness issues, but it's pretty rare.\n\nI totally agree, this patch is a lame solution, happy to have a better one."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "clang compiles, but it requires everything to compile with clang.  The failure with your openbmc-build-scripts attempt is that we end up with phosphor-logging compiled with GCC and then dbus-sensors compiled with clang.\n\nDo we really want to support that dual-compiler set up?  Are there likely to be an other ABI issues with attempting that?\n\nShould we use this (clang) as an opportunity to also test the subprojects workflows?  I tested dbus-sensors that way and it compiles fine except for needing a fix in sdbusplus:\n\nremote:   https://gerrit.openbmc-project.xyz/c/openbmc/sdbusplus/+/51648 asio: object_server: remove unused variable [NEW]"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ok, that's good to know.  To be clear, the goal here is just that the code compiles with clang, because it catches things that gcc doesn't (even with similar flags).  I have no real reason to actually use clang binaries on target, nor that they even give the same behavior when compiled with clang, with the exception of the occasional asan/msan run to try to debug something, but gcc supports sanitizers these days, so we still have a path there.\n\n> The failure with your openbmc-build-scripts attempt is that we end up with phosphor-logging compiled with GCC and then dbus-sensors compiled with clang.\n\nNeat, any idea why there's an ABI issue between them?  I realize it's a quagmire to try to dive into, but I would've expected it to work (maybe source_location is too new?)\n\n\n> Do we really want to support that dual-compiler set up?  \n\nI've been running dual compilers for the projects I maintain for a long time (bmcweb since basically commit 1), and this is the first ABI issue I've seen, although admittedly, bmcweb/dbus-sensors/entity-manager don't rely on hardly any compiled libraries.\n\n> Should we use this (clang) as an opportunity to also test the subprojects workflows?\n\nThat might work.  I can look at that;  We'll have to figure out how to cache, and at some point I worry a little that we'd be better off just building in yocto with meta-clang, but that's a bigger discussion."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-logging/+/51708 for a potential solution."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "src/IntrusionSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/TachSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 3
        }
    ]
}