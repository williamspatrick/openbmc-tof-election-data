{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I0e9b885e8c0494d46d39af965047a7582255a48e",
    "number": 43172,
    "subject": "Always fill both values for a threshold interface",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/43172",
    "commitMessage": "Always fill both values for a threshold interface\n\nIf one of the thresholds for a threshold dbus interface is provided we\nhave to set the other one as dbus properties are never optional.\n\nTested:\n  Before:\nxyz.openbmc_project.Sensor.Threshold.Warning    interface -      -\n.WarningAlarmHigh                               property  b      false\n.WarningHigh                                    property  d      14\n\n  After:\nxyz.openbmc_project.Sensor.Threshold.Warning    interface -      -\n.WarningAlarmHigh                               property  b      false\n.WarningAlarmLow                                property  b      false\n.WarningHigh                                    property  d      14\n.WarningLow                                     property  d      nan\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: I0e9b885e8c0494d46d39af965047a7582255a48e\n",
    "createdOn": 1620894452,
    "lastUpdated": 1652218070,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1620894452,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1620894464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620894586,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17185/ : SUCCESS"
        },
        {
            "timestamp": 1620917983,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1620919390,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nI like the result here, but I'd like to see if we can do a first pass optimization on the code.  Having a whole new method for this and having to do a second pass seems error prone."
        },
        {
            "timestamp": 1629157944,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641858084,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641912475,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641927487,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2: Patch Set 1 was rebased"
        },
        {
            "timestamp": 1641927498,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641927498,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1641927618,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641927810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35322/ : SUCCESS"
        },
        {
            "timestamp": 1641981475,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1641981484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641981484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1641981740,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35396/ : SUCCESS"
        },
        {
            "timestamp": 1642019700,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642019721,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642024081,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642037592,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1642062167,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1642062179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642062179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1642062223,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/35478/ : FAILURE"
        },
        {
            "timestamp": 1642062239,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1642062249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642062249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1642062501,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35479/ : SUCCESS"
        },
        {
            "timestamp": 1642063011,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1642096184,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1642096304,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1642107179,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1642186806,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1642188580,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1644483801,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1645135204,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1652207449,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6: Patch Set 5 was rebased"
        },
        {
            "timestamp": 1652207474,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652207474,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1652207718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42970/ : SUCCESS"
        },
        {
            "timestamp": 1652218053,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1652218070,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "e65e47ce5cdc67e7f74e43776892166121e295c9",
            "parents": [
                "13b63f8f597d396db8b5bd182ac2e5814d599e2f"
            ],
            "ref": "refs/changes/72/43172/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1620894452,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The threshold code has been significantly refactored recently, which should make this patch a lot cleaner.  Is this still desired or required?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I've checked the modern codebase, the issue is still present. And the patch still fixes it.\nI thought that not having some properties is the interface violation, so from my perspective, this change is desired and required.\nI don't know about every OpenBMC app, but at least phosphor-host-ipmid doesn't work properly without this patchset."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Great, can you please take a look at how the threshold interfaces were refactored, and work them into your patch?  At the moment there is now a common structure for all threshold interfaces, so there's no need to explicitly hardcode every single possible pair of properties, and in the current one, should be done as part of the newly created thresholdInterfaces struct.  Otherwise, this patch will immediately break when https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47996 is merged."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Latest patchset looks like it ignored this comment?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Maybe I've misunderstood it?\nI've updated my patchset exactly to use this new threshold interface (`thresholdInterfaces`) and adapt to possibilities of another threshold levels besides Critical and Warning.\nI just thought that is what I needed to do. If it is wrong, can you elaborate more what I need to do?"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The fact that we're looping over in a second pass would kind of imply that our data structure (vector<threshold>) is wrong, and we should be pairing together the thresholds such that we're not unrolling the second stage of this loop by hand.\n\nsomething like\n\nstd::vector<std::pair<Threshold, Threshold>>\n\nor maybe even move the severity to the higher level container so it can be shared.\n\nflat_map<Severity, std::pair<Threshold, Threshold>>\n\nWhich would allow us to initialize the paired threshold at the same time we initialize the first threshold, instead of having to add a second pass to sweep through and do it.  Additionally, it prepares us for having 5 thresholds in the future.\n\nI need to give this more thought, but I don't like that this method is going to double in size once we get the next three threshold severities supported (which is already in review)."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Feels like the issue is that the dbus objects is manually registered to match the yaml definition. Auto generated sdbusplus::server::object_t <Sensor::Threshold::Critical> etc. can be used to ensure all properties are initialized.\nDownside is that it requires a bigger change of existing code and different thresholds will be different object Critical/Warning/..."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Feels like the issue is that the dbus objects is manually registered to match the yaml definition. Auto generated sdbusplus::server::object_t <Sensor::Threshold::Critical> etc. can be used to ensure all properties are initialized.\n\nFor the moment, dbus-sensors intentionally doesn't take a hard dependency on the yaml definitions.  We could discuss changing that (I'd probably be opposed for reasons I've sent on the mailing list in the past), but I'm happy to talk about it outside the context of this patch, which is using the existing mechanisms to fix a bug.\n\n> Downside is that it requires a bigger change of existing code and different thresholds will be different object Critical/Warning/...\n\nYep, exactly.  Lets split the discussions."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I dug into this a little today, what if we did this (untested):\n\n    void fillMissingThresholds()\n    {\n        for (thresholds::Threshold& thisThreshold : thresholds)\n        {\n            bool foundOpposite = false;\n\n            thresholds::Direction opposite = thresholds::Direction::HIGH;\n            if (thisThreshold.direction == thresholds::Direction::HIGH)\n            {\n                opposite = thresholds::Direction::LOW;\n            }\n\n            for (thresholds::Threshold& otherThreshold : thresholds)\n            {\n                if (thisThreshold.level != otherThreshold.level)\n                {\n                    continue;\n                }\n\n                if (otherThreshold.direction != opposite)\n                {\n                    continue;\n                }\n                foundOpposite = true;\n            }\n\n            if (foundOpposite)\n            {\n                continue;\n            }\n            thresholds.emplace_back(thisThreshold.level, opposite,\n                                    std::numeric_limits<double>::quiet_NaN());\n        }\n    }"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "4bc142f72aff10533552539c5ed433e4f39667b8",
            "parents": [
                "3ec41c53ac70b69b023d7ed92bd2908104d7cdf4"
            ],
            "ref": "refs/changes/72/43172/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1641927487,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "e02bcd209e764480149f8dc80b27a0e60f88c24c",
            "parents": [
                "3ec41c53ac70b69b023d7ed92bd2908104d7cdf4"
            ],
            "ref": "refs/changes/72/43172/3",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1641981475,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 48,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 74,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "616734f5b057293df23eabc38058ff44ec84f37b",
            "parents": [
                "3ec41c53ac70b69b023d7ed92bd2908104d7cdf4"
            ],
            "ref": "refs/changes/72/43172/4",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1642062167,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 70,
            "sizeDeletions": 7
        },
        {
            "number": 5,
            "revision": "9b7ed0821ecf9c7f44194af64723f1ffb0630128",
            "parents": [
                "3ec41c53ac70b69b023d7ed92bd2908104d7cdf4"
            ],
            "ref": "refs/changes/72/43172/5",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1642062239,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets give Zhikui some time to review and see if I missed anything, but this is pretty straightforward to me."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 277,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Creating missing thresholds like this will effectively allow end user to change that thresholds value, but in current design it is not possibly to save the values, due to threshold EM configuration design.\n\nAlso adding a separate function with additional loops over threshold array looks like some workaround, bringing unnecessary work.\n\nI propose another implementation with refactoring of some related code to make this more clear:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50929"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 277,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "< Also adding a separate function with additional loops over threshold array looks like some workaround, bringing unnecessary work.\n\n+1\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50929 would accomplish the same. \nI will review there unless we come up with a reason this approach is better."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I've tested your solution, and it looks like it is working fine. I've only added this `break` instruction to your code snippet.\nYour solution doesn't have ugly `static_cast<thresholds::Level>(i)` that I have in my patchset 3.\nBut if I'm correct, complexity of this approach is O(n^2) vs O(n) in patchset 3.\nI'm fine either way."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes, this is N^2, but the old one was N * M on the fixed size data structures.  Considering the common case of N is 2-4, and the largest possible case of N is 8, N^2 is unlikely to matter much here.\n\nFWIW, I originally tried changing the Threshold class to include both a positive and negative component, but that got more involved than I wanted"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Actually, now that you've added the break to leave the second loop early, it's log(N) * N I think?"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "N * N/2 = O(N^2) still. ;)\n\nThe early break on the second loop is likely to \"in the middle\" \"on average\".  There isn't anything here that does a binary-search which would lead to a log(N) factor."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep.... good point.  Not sure what I was thinking"
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 573,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Is this safe to do within the for loop on thresholds?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 38,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 64,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "75872ef8011c22a419fbc0cff50aad8ae68faa4c",
            "parents": [
                "7c97730b4119d60853ff291ffb3d89ffc6bf6c98"
            ],
            "ref": "refs/changes/72/43172/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1652207449,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 38,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 64,
            "sizeDeletions": 0
        }
    ]
}