{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "IPMB-based-SDR",
    "id": "I5f808b68c3052ec5bf78d3d5c5495bd1f448ade3",
    "number": 52160,
    "subject": "Added support for IPMB based SDR detection dynamically.",
    "owner": {
        "name": "Jayashree Dhanapal",
        "email": "jayashree-d@hcl.com",
        "username": "Jayashree-D"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/52160",
    "commitMessage": "Added support for IPMB based SDR detection dynamically.\n\nSDR is a data record that provides platform management sensor type,\nlocations, event generation and access information.\n\nA data records that contain information about the type and the\nnumber of sensors in the platform, sensor threshold support,\nevent generation capabilities and information on what type\nof readings the sensor provides.\n\nHere, SDR of Type 1 records are implemented based on IPMB to read\nthe sensor information from each bus which can be configured\nusing IPMB FRU from the EM file.\n\nSample Config :\n{\n   \"Name\": \"$bus + 1 IPMB Device\",\n   \"Bus\": \"$bus\",\n   \"Class\": \"IpmbType1\",\n   \"Type\": \"IPMBDevice\"\n}\n\nThis configuration is based on the \"xyz.openbmc_project.Ipmb.FruDevice\"\nservice, which will read FRU information from each IPMB bus. \"$bus\"\nwill give the bus index for each IPMB bus.\n\nIf IPMB FRU is detected, SDR info and record count of the sensor in\neach bus will be identified. After getting the record count,\nReservation ID for each IPMB bus will be received.\n\nThen, data packet will be framed based on reservation ID to get the\nfull information of each sensor like sensor name, sensor type,\nsensor unit, threshold values, sensor unique number using IPMB.\n\nOnce all the sensor information is read, each data will be processed\nand stored in the structure. These data will be accessed in the\nbelow gerrit patch.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52164\n\nTested : Tested on YosemiteV2 platform and verified all the IPMB based\n         SDR Type 1 supported device data.\n\nSigned-off-by: Jayashree Dhanapal <jayashree-d@hcl.com>\nChange-Id: I5f808b68c3052ec5bf78d3d5c5495bd1f448ade3\n",
    "createdOn": 1647854513,
    "lastUpdated": 1657460879,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1647854513,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1647854532,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647854532,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1647854578,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39313/ : FAILURE"
        },
        {
            "timestamp": 1647854850,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 2: New patch set was added with same tree, parent, and commit message as Patch Set 1."
        },
        {
            "timestamp": 1647854861,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1"
        },
        {
            "timestamp": 1647854862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647854862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1647854912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39314/ : FAILURE"
        },
        {
            "timestamp": 1647854953,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1647854962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647854962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1647855011,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39315/ : FAILURE"
        },
        {
            "timestamp": 1647855289,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1647855302,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647855303,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1647855543,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39316/ : SUCCESS"
        },
        {
            "timestamp": 1647873194,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Topic set to IPMB based SDR"
        },
        {
            "timestamp": 1647958573,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1647958590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647958590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1647959281,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39436/ : SUCCESS"
        },
        {
            "timestamp": 1647960631,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Topic IPMB based SDR removed"
        },
        {
            "timestamp": 1647960646,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Topic set to IPMB-based-SDR"
        },
        {
            "timestamp": 1648628126,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1648724576,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1648724586,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648724586,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1648724837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40230/ : SUCCESS"
        },
        {
            "timestamp": 1648724969,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1650356109,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 7: Patch Set 6 was rebased."
        },
        {
            "timestamp": 1650356119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650356119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1650356361,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41588/ : SUCCESS"
        },
        {
            "timestamp": 1650457496,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1651234846,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 8: Patch Set 7 was rebased"
        },
        {
            "timestamp": 1651234865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651234865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1651235122,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42333/ : SUCCESS"
        },
        {
            "timestamp": 1651248391,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(53 comments)"
        },
        {
            "timestamp": 1652096411,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1652096430,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652096430,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1652096454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42838/ : FAILURE"
        },
        {
            "timestamp": 1652096558,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1652096590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652096590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1652096638,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42839/ : FAILURE"
        },
        {
            "timestamp": 1652096784,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1652096795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652096795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1652096844,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42840/ : FAILURE"
        },
        {
            "timestamp": 1652096944,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1652096954,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652096955,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1652097146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42841/ : FAILURE"
        },
        {
            "timestamp": 1652098328,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1652098340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652098340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1652098595,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42842/ : SUCCESS"
        },
        {
            "timestamp": 1652099176,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 13:\n\n(51 comments)"
        },
        {
            "timestamp": 1652259804,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1652259815,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652259815,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1652260075,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43024/ : SUCCESS"
        },
        {
            "timestamp": 1652260253,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1652399558,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 14:\n\n(6 comments)"
        },
        {
            "timestamp": 1652701156,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 14:\n\n(5 comments)"
        },
        {
            "timestamp": 1652716444,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1652966000,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1652966015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652966015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1652966170,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43517/ : FAILURE"
        },
        {
            "timestamp": 1652967341,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1652967355,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652967356,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1652967552,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43518/ : SUCCESS"
        },
        {
            "timestamp": 1652967695,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 16:\n\n(10 comments)"
        },
        {
            "timestamp": 1653482455,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1654353132,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1654353179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654353179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1654353417,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44412/ : SUCCESS"
        },
        {
            "timestamp": 1654575530,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 17:\n\n(12 comments)"
        },
        {
            "timestamp": 1654790661,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1654790679,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654790680,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1654790745,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44723/ : FAILURE"
        },
        {
            "timestamp": 1654791025,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1654791034,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654791034,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1654791195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44724/ : FAILURE"
        },
        {
            "timestamp": 1654846465,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1654846503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654846503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1654846686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44784/ : SUCCESS"
        },
        {
            "timestamp": 1654846932,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 20:\n\n(14 comments)"
        },
        {
            "timestamp": 1655891498,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1656572517,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1657137170,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1657162959,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(4 comments)"
        },
        {
            "timestamp": 1657165582,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(34 comments)"
        },
        {
            "timestamp": 1657165715,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1657166023,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21: Patch Set 20 was rebased"
        },
        {
            "timestamp": 1657166065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657166065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1657166265,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46550/ : SUCCESS"
        },
        {
            "timestamp": 1657166515,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(4 comments)"
        },
        {
            "timestamp": 1657391206,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 21:\n\n(6 comments)"
        },
        {
            "timestamp": 1657460879,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 21:\n\n(34 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "3c67b0bc0d047d91013ff3fe0ba5038a7b3feed6",
            "parents": [
                "58fa1a5ad580b70d32d35a16c29c7c3523666ab9"
            ],
            "ref": "refs/changes/60/52160/1",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1647854513,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 337,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 549,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "e5f16f81a1d565a08c43d37305a8fc68d852cdab",
            "parents": [
                "58fa1a5ad580b70d32d35a16c29c7c3523666ab9"
            ],
            "ref": "refs/changes/60/52160/2",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1647854850,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 337,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 549,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "78877d5f672020092f3454cfa8117eb9765172b2",
            "parents": [
                "58fa1a5ad580b70d32d35a16c29c7c3523666ab9"
            ],
            "ref": "refs/changes/60/52160/3",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1647854953,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 337,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 549,
            "sizeDeletions": 4
        },
        {
            "number": 4,
            "revision": "c1e0214e48b7a9a506ccb6e866d986f91268ef64",
            "parents": [
                "58fa1a5ad580b70d32d35a16c29c7c3523666ab9"
            ],
            "ref": "refs/changes/60/52160/4",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1647855289,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 337,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 550,
            "sizeDeletions": 4
        },
        {
            "number": 5,
            "revision": "77b22a525bcb92130729d121b9fd569663ce6566",
            "parents": [
                "8418975235cb792235e7cdc8fb4951be2167ced9"
            ],
            "ref": "refs/changes/60/52160/5",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1647958573,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Pls use const expr string instead of hardcoding dbus service and paths"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Self name can change to SDRsharedptr or SDRptr something ? I think 'Self' is not relevent name here."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Same comment here also. Use const expr string"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Best practice is to declare all the variables at the start of the function and use that variable."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Range based loop can be used here ?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "iStrLen is a integer datatype, therefore, range based loop will not be used here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 337,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 550,
            "sizeDeletions": 4
        },
        {
            "number": 6,
            "revision": "6f33e36d8fe41dcf97ac83cd8c7b7b696202de6a",
            "parents": [
                "7aeb1a5e2b573a8c7ecd2f3da86a90fe0eb42f4b"
            ],
            "ref": "refs/changes/60/52160/6",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1648724576,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 4
        },
        {
            "number": 7,
            "revision": "2ec9a85e763bfa47b9e716670be68dd29d3b2853",
            "parents": [
                "d5dbc6816629d63a6bf27f2d8995750842cbe506"
            ],
            "ref": "refs/changes/60/52160/7",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1650356109,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Hi Ed / Zhikui Ren,\n\nCould you please provide your suggestions for this patch.\n\nThanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 4
        },
        {
            "number": 8,
            "revision": "9eabe8ba8fd0a7ce779b7450b075e62059c06e57",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/8",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1651234846,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The name of the device isn't \"SDR\", presumably this is something like \"controller\" or \"IPMB device\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why do we need a class here?  I don't see any description of it in your commit message, and no usage of it in this patch.  In general, \"Type\" is the place to put this information about what kind of device is being controlled, rather than adding a secondary parameter."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "\"Class\" will be used in next patchset, I will explain those details in the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In terms of configuration, this would be called something like \"IPMBDevice\"\n\n\"SDR\" is an implementation detail on the protocol on how we interact with it, and in configuration, isn't important."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Bus is used for noting the i2c bus, not the IPMB channel number.  Ideally we should be matching up the i2c bus number to the channel number here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lots to do here, but starting to take shape."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just inline this in the two places it's used.  Ideally the two places it's used would be deduplicated, but I'm ok with not, it's just more clear in code if we do the shifts in the two places they're required, rather than have a global here."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does this need to be part of your configuration data in entity-manager?  Or is this default good for all ipmb controllers?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 6,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This is default for all IPMB controllers."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "All of these enums beyond this are trying to create enums for each record type (1,2, 3) for data structures that can't really be used together.  It would be much better if these were separated by field indexes, id\n\nenum class SDR01Fields {\n    SdrType = 0;\n    sdr address = 56;\n   ....\n    max = 72;\n};\n\nI think that would simplify your parsing code quite a bit."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This parameter doesn't belong in this enum.  It's a mask, and considering it's only used in one place, please just inline the declaration."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't look used?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This variable is used in the below patchset.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52164"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Per the comment on line 18, please put all of these indexes into the data structure into a single enum."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't look used?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This variable is used in the below patchset.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52164"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is only used in one spot, please inline.  Also, it's not clear to me what this parameter is doing, so a comment about what it's for might be appropriate."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same as above, please put all these indexes in a single enum."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we come up with some better naming here?  This is a mask, \"thres\" and Acce\" are strange abbreviations that make this difficult to read."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Similar to others, this param is only used in one scope.  Please inline."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 94,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please explicitly default construct these with zeros similar to how we do other places with = 0;  (like you do on line 101.)"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 94,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "it's a little odd that this initializes to 1 valid record.  Shouldn't it be 0?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "To match with the sensor record count, validRecordCount initialized to 1 instead of 0."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A comment should be here about what this is indexed on would be helpful.\n\nIt's not clear why this is 5;  Would this be better as an unordered_map or std::map, so we're only storing the things that we are using?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done\n\nI have changed this to std::map, so we can store things which we are using."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "first, please make this more complete.  There are more than 4 sensor types supported by both ipmi and dbus, so lets map as many as we can.\n\nSecond, these kinds of map lookups are generally better done as linear array lookups, so that they don't malloc.  IE\n\nconstexpr std::array<std::pair<std::string_view, uint8_t>>{\n   {\"temperature\", 1},\n   ....\n}\n\n\nOne linear scan of a small, compile time table is much faster than mallocing a map and sorting it, then using the map result.\n\nIn a perfect world, we could also use std::binary_search and avoid the linear cost, but I doubt it's worth the complexity in this case.\n\n\nAlso, this data structure doesn't even look used?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Changed to std::array and since this array is used in another patch, I moved this to the patch where this array is used.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52164"
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These are only used in IpmbSDRSensor for the moment.  I suspect they can be declared in that file."
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  These kinds of headers are not generally encouraged, especially on new files."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, extra parens."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm fairly sure this isn't what you intended.  This is constructing a new IPMBSDR instance every time this method is called.  I suspect that item needs its lifetime owned somewhere else (so that if the node is deleted, the item can be deleted as well) and this capture done by weak_ptr, like we do other places."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "I tried using weak_ptr instead of shared_ptr, but the application is crashing and I am getting the print \"variable is out of scope\" which is in below logic.\n\nstd::weak_ptr<IpmbSDRDevice> weakRef = weak_from_this();\n\nconn->async_method_call(\n    [weakRef](boost::system::error_code ec, const IpmbMethodType& response) {\n      std::shared_ptr<IpmbSDRDevice> self = weakRef.lock();\n       if (!self)\n       {\n            std::cerr << \" variable is out of scope \\n\";\n       }\n});\n\n\nDoes anything needs to be added in the above logic ?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is not the correct range check.  you index to 2 on line 53, so this needs to be checked that it's at least of size 2 (although I suspect the standard response is larger, and we should check against that)."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit extra parens;\n\nNon-nit, everywhere else in this file you use explicit index names for response fields;  Lets do the same here and follow a similar pattern."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please unabbreviate this.  abbreviating \"reserve\" doesn't save many characters, and makes this harder to read."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same as above, as a general rule, unless it's data specific to that request, you don't want to capture by shared_ptr in an async callback.  This leads to situations where the IpmbSDR object owns _itself_, which can be a problem for destruction and memory \"leaks\".\n\nPlease take a look elsewhere in dbus-sensors where we capture by weak_ptr()"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Same as above issue is facing here."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering these are part of the same reservation ID, please just put them into a uint16_t in this scope, rather than passing them as two parameters."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "To get the Sensor data, these reservation ID needs to be passed as send request data as each byte in line 108."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "sure.  ok as is."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please break the content of this lambda out into its own method and call that directly from the lambda here (note, at some point async_method_call will support std::bind_front, which is the ideal here).  In general, this should be done for most async callbacks of any reasonable size."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we use a more appropriate data structure that separates these things out at least by SDR ID?  Ideally something like\n\nstruct SDRData {\n   // parsed SDR fields\n}\n\nstd::vector<SDRData>\n\nbut even\nstd::vector<std::vector<uint8_t>>\nwould be better here than just storing the raw binary."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "For each sensor, we need to read a IPMB response 4 times, so that a complete data will be received. Therefore, each time it receives 18 byte and pushed into the getSdrData vector. After whole data is received, it will send to sdrDataCheck() func to process it."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This check doesn't look right to me.  We're comparing the number of SDRs against the size of the structure?  Please look and see if this is what you intended."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This condition is to check whether all the data is received for each sensor, since SDR Type 1 have to receive data 4 times (4*18) to get a complete data. iCnt will check the number of times data received for each sensor. If iCnt is less than 4, it will again call getSDRSensorData() func to receive the remaining data. Once iCnt is 4, then it will move to else part and next sensor will be started to receive all the data."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This condition is to check whether all the data is received for each sensor, since SDR Type 1 have to receive data 4 times (4*18) to get a complete data.\n\nNot all SDRs are type 1.  Not all records are the same size, and you need to pull all records.  I don't think the logic as you've laid it out will work if there are non-type 1 records in the reply."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please prefer to just return here as it saves scopes for following conditionals."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Return cannot be used, since the data is not received fully."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 146,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same here as above.  Not sure what's going on with this logic."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 146,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This condition is to check whether all the data is received for each sensor, since SDR Type 1 have to receive data 4 times (4*18) to get a complete data. iCnt will check the number of times data received for each sensor. If iCnt is less than 4, it will again call getSDRSensorData() func to receive the remaining data. Once iCnt is 4, then it will move to else part and next sensor will be started to receive all the data."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 146,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Some things to realize:\n1. Not all SDRs are type 1 SDRs (although they might be on your system).\n2. I believe the IPMI command is allowed to return fewer bytes than requested.\n3. SDR type 1 size is variable, dependent on the string at the end."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 146,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why 1 here?  Shouldn't it be zero?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 158,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no need for an else given that line 155 returns."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 158,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Since there is no return in if cond (line 136), else part is needed. If line 136 cond is satisfied, then else part should not be executed."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 158,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Some of the logic in this branch (about 3-4 of the operations) is shared with the branch above.  please try to deduplicate if you can."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "The value assigned to each variable is different for each condition, therefore, not able to deduplicate the variable."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "The value assigned to each variable is different for each condition, therefore, not able to deduplicate the variable."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets follow up and see if this is still an issue."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "possible nullptr dereference if data.size() == 0\n\nYou already have a range check down below, it just needs rearranged."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering you're indexing based on the \"sdr\" enum class, please base this check on that structure, with something like sdr::max.  As written, there are no guarantees that we can't index out of the array if sdr::field is > dataLenType01."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not following what this is for.  Is this just to say the SDR is complete?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "yes, it will say which host's SDR sensor is complete."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please move this up above line 182 and use this variable for your check on that line to make that check more clear."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, it would help the readability if you structured this as\n\n// comment about parameter\nint parameter;\n\nAnd removed the newline in between, keeping the newline between each parameter."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 230,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this a loop?  It looks like it's doing the same operation per character (the variable iLoop isn't used)."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 230,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering we're reading from a binary interface here, this needs some sanity checks to ensure the names are printable ascii characters."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This function needs a range check.  If this method gets passed in data.size() == 0, it will seg fault."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, extra parens."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is assuming the type of the sensor is linear, which hasn't been checked in this function.  It's fine if you don't support they other types, as they're not common, but you need to at least check for them and explicitly ignore those sensors."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 299,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: These are pretty complex math expressions with a lot of duplicated data.  can we split up at least the calculation of the B double value and the K2 power value into their own variables to make this easier to read?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given that we have to pre-calculate the double floats of these above to determine the thresholds, could we store these as two doubles to avoid having to call pow() for every sensor reading?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks like an index check, but it should be done explicitly against sensorRecord.size() instead of hardcoding the number."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 591,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In terms of code, I'm pretty sure this path of adding to IPMBSensor is not going to go the way you want.  IPMBSensor class represents a SINGLE sensor.  Your new SDR code represents multiple sensors read from a device.  I suspect you're going to need a new class here, especially considering basically none of the IPMBSensor parameters are common with this SDR reader."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 591,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Once the dbus signal is received from entity manager, \"Bus\" number will be found and it will be passed as argument to find the number of sensor count in each host and read all the sensor information for that bus number using IPMB (which is done in IpmbSDRSensor.cpp file).\n\nAfter all the sensor information is received for all host, createSensors() func will be called. If the \"xyz.openbmc_project.Configuration.IPMBDevice\" interface is found, based on all the sensor information which is already stored in a map, each sensor will be called under single \"for loop\". This implementation is submitted in below patchset.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52164\n\nIn this patchset, only sensor information are read and stored in map for all host."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 591,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> After all the sensor information is received for all host,\n\nTHat's not how these things generally work.  All hosts might not be available.  Generally we have a wait timer."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 609,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If we are given a bus number, we check the SDR info?  That can't be right.  Do we need another parameer to control this behavior, like \"use sdr\""
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 609,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "I did not understand the above comment. Could you please clarify this comment.\n\nLike what we need to control in SDR parameter?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 609,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think this is now solved."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 706,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't do wildcard reference captures; They have lead to use after free errors in the past.  Please explicitly name your captures as needed."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 706,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 4
        },
        {
            "number": 9,
            "revision": "5ea8cc676ba3eadf19b48192217b33f4e11843a5",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/9",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652096411,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 3
        },
        {
            "number": 10,
            "revision": "5943685925a0bf2fea8685c76b8cb6792aee2cb0",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/10",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652096558,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 3
        },
        {
            "number": 11,
            "revision": "b5e132101155713c53f4900d05176f71c8376d9a",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/11",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652096784,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 3
        },
        {
            "number": 12,
            "revision": "57ce9b4e33f6f2c1305cb577daca96aaa9210529",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/12",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652096944,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 3
        },
        {
            "number": 13,
            "revision": "7caba5ca3903f6cdc9e6417e260db03b8ee9b776",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/13",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652098328,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 335,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 553,
            "sizeDeletions": 3
        },
        {
            "number": 14,
            "revision": "d637888b648e9bb0fa82bf41d5a005cb42eadf74",
            "parents": [
                "14afeab7129790cbad6e3d148c2724457269d03d"
            ],
            "ref": "refs/changes/60/52160/14",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652259804,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "function does not do what this comment says"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This does not look right. Are you trying to pass the object self (this) into the callback at line39?\n\nstd::weak_ptr<IpmbSDRDevice> weakRef = weak_from_this();\ninside callback (line 41) add:\n\nauto self = weakRef.lock();"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "I tried using weak_ptr instead of shared_ptr, but I am getting the print \"No self\" which is in below logic.\n\nstd::weak_ptr<IpmbSDRDevice> weakRef = weak_from_this();\n\nconn->async_method_call(\n    [weakRef](boost::system::error_code ec, const IpmbMethodType& response) {\n      std::shared_ptr<IpmbSDRDevice> self = weakRef.lock();\n       if (!self)\n       {\n            std::cerr << \" No self \\n\";\n       }\n});"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "That is actually a bug in your code:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/52160/14/src/IpmbSensor.cpp#610\n The object is a local variable gets out of scope and destroyed when the function returns"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Thanks for your response, I have changed to weak_ptr() now."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This block calls self->xxx each line, Can it be encapsulated into a member function of the class?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This is a success case, right? Is it necessary to log?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "It is not necessary, I just want to make sure that all the sensor is read for each host. If this needs to be removed, then I will remove this log in the next patchset."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 179,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "data.size() return type is not uint8_t, why static_cast<uint8_t> here?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 179,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 179,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "lots of this stat_cast from enum to index. It would be easier to read if structure is defined like: \nstruct SdrMessageData \n{\n     uint8_t sdrType,\n     uint8_t sdrSenNum,\n     ....\n}\n\nSdrMessageData msg * = reinterpret_cast< SdrMessageData *> (data.data());\nif (msg->sdrType != ...) \n{\n}"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 341,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 562,
            "sizeDeletions": 3
        },
        {
            "number": 15,
            "revision": "a0de01e6f7d382977a556083efc4e910bbec8722",
            "parents": [
                "a02559cdb35d1da2a737ea04a81b063d935501a3"
            ],
            "ref": "refs/changes/60/52160/15",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652966000,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 329,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 41,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 564,
            "sizeDeletions": 3
        },
        {
            "number": 16,
            "revision": "fa4359be4de95c6c4fc0a6e047e91590d5d00c66",
            "parents": [
                "a02559cdb35d1da2a737ea04a81b063d935501a3"
            ],
            "ref": "refs/changes/60/52160/16",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1652967341,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Hi Ed / Zhikui Ren,\n\nI have addressed all the comments. Please provide your suggestions on this patchset.\n\nThanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 329,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 41,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 564,
            "sizeDeletions": 3
        },
        {
            "number": 17,
            "revision": "eef4b469cf7c424b02bf8d8c1597c29e3dc3cf30",
            "parents": [
                "282ab1c9db2eb86137d57192acd97317fc6e09cd"
            ],
            "ref": "refs/changes/60/52160/17",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1654353132,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "I have not finished review all code, but want to provide some immediate feedback. Some comments apply to multiple places"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "I have addressed all your comments in the latest patchset."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "These look like constexpr to me, not enum"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "sdrData (or other) is a better name than getXXXX since it is not a function"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "if (!self)\n{\n  return; //handle objects was destructed\n}"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "range checking?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This variable is already initialized in IpmbSDRDevice class in hpp. Does this needs to be range checked ?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes.  You need to range check immediately before indexing into anything whos size is determined at runtime.\n\nBecause of the way these are declared, this is actually fine, but the code is difficult to read.  Inline the two variables here and it should be fine."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "I will inline the variables in this function."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "const"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "check self"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "uint8_t"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This seems redundant: data.size() == SDR01Command::dataLength at this point"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Is this logic reversed, linear == 0 means it is linear?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "can check early"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "yes, linear means 0."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 614,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "add \"sdrSen = nullptr;\" to destroy the existing object if any"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 614,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 327,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 41,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 562,
            "sizeDeletions": 3
        },
        {
            "number": 18,
            "revision": "939b203e501085ef2e353a5b094f7f5758630fc0",
            "parents": [
                "282ab1c9db2eb86137d57192acd97317fc6e09cd"
            ],
            "ref": "refs/changes/60/52160/18",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1654790661,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 322,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 554,
            "sizeDeletions": 3
        },
        {
            "number": 19,
            "revision": "a90fe1fa1f903476422eee6717e32202f7cd262c",
            "parents": [
                "282ab1c9db2eb86137d57192acd97317fc6e09cd"
            ],
            "ref": "refs/changes/60/52160/19",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1654791025,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 322,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 554,
            "sizeDeletions": 3
        },
        {
            "number": 20,
            "revision": "e3abf701133ad9040165c0274524bd9424ab2704",
            "parents": [
                "282ab1c9db2eb86137d57192acd97317fc6e09cd"
            ],
            "ref": "refs/changes/60/52160/20",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1654846465,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Hi Ed / Zhikui Ren,\n\nCould you please provide your suggestions on this patchset.\n\nThanks"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Hi Ed / Zhikui Ren,\n\nCould you please provide your suggestions on this patchset.\n\nThanks"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Does patchset 20 resolve the remaining comments from Ed and Zhikui?  It is difficult to determine the current state of this patch set."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Yes, now working on the recent comments gave by Ed and Zhikui."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This struct looks like it had endian issues, that you've resolved by just declaring any non-trivial structure as std::array.  We shouldn't mix parsing types.  Either:\n\n1. This struct needs to use pragma packed, and handle endian issues properly.\n2. We shouldn't rely on reinterpret_cast.  from cppcoreguidelines: \"Don\u2019t use reinterpret_cast; A strict version of Avoid casts and prefer named casts.\"\n\nas a general rule, and because we need to parse this structure into something this code can reasonably process anyway, I suspect this structure needs to just use the base, typesafe versions."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack\n\nAs a named cast, can I use static_cast instead of reinterpret_cast ?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A number of these are  only used in one place.  Please inline."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These are only used in one place.  Please inline to make the code more clear."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Each of these things is per-sdr.  This will have bugs if more than one IpmiSdrDevice is instantiated."
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "+1\nMultiple devices are expected, here\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/52160/21/src/IpmbSensor.cpp#59"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "To avoid the issue, can this be declared in IpmbSDRSensor.cpp file ?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this same variable is declared in two places with the same name.  I suspect it can just be inlined into IpmbSDRDevice."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You''re shifting to the right by a variable called \"leftShift\" I suspect we need some naming reconciliation here."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  You're using bind_front, then immediately calling the callback?  Just call it directly?\n\nAlso, in the way you've abstracted this, you're completely ignoring error responses here, and continuing even if the call has returned an error"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "+1\nMake validateStatus return pass/fail, If it failed, not continue"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "unintentional copy."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same thing here.  This code is likely not doing what you think it's doing."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "another copy."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please declare variables like this in the scope they're used, in this case, on line 127  There's no need to declare it here, then copy it into the lambda."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Talked about earlier in this patch, sdrData cannot be static.  I suspect you need more specific data structures."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nevmind.  I was looking at the wrong variable."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have no idea what this check is doing.  Can you make it more clear?  cntType is 3.\n\n\nI suspect what you should be doing is checking to see if sdrData.size() > sizeof(type 1 sdr)\n\nYou shouldn't be measuring loops this way."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 150,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've read the above code block several times over the course of a number of patches.  I don't understand what it's doing, can you add some comments to make it more clear.  So far as I can tell, the first branch is checking if we're in the middle of a record, and adds 1 to iCnt.  This doesn't track for me, as it assumes that you will only ever get type 1 records, and you can rely on count.  Shouldn't this rely on bytes received?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack\n\nI will add comments and change this func based on the data received."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 180,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't this check incorrect?  SDRs don't have one length, isn't it variable based on the string name.  We should be checking this against the minimum size."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 180,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is not an error.  IPMB hosts are allowed in the spec to have non type1 records."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 187,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See prior comment this has endian issues that are unaccounted for."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 187,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "As a named cast, can I use static_cast instead of reinterpret_cast ?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 190,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, please call this sdrType.  \"sensor type\" is a different field."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 190,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please simplify this.  Do not copy bytes one at a time into a vector, then copy them one at a time into a string.  Just copy the span directly out."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 221,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "uninitialized struct.  Please just declare it on line 295 where you construct the values for it."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 221,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 227,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is also not an error."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 227,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 237,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above, you're mixing parsing styles.  I actually prefer this style here, but you shouldn't start with a reinterpret cast"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 237,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This can be seen by reading the code, no need to comment."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 243,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "don't shift right then left.  Just shift once, and mask where appropriate.\n\n(0x3 & resp->mTolDataByte) << 8"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 243,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "mTolDataByte - 2 bits MSB [7-6]\n(0xC0 & resp->mTolDataByte) << 2\n\nMasked with 0xC0, since it is last 2 bits and shifted by 2 to the left."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same as above."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "bAcuDataByte - 2 bits MSB [7-6]\n(0xC0 & resp->bAcuDataByte) << 2\n\nMasked with 0xC0, since it is last 2 bits and shifted by 2 to the left."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "emplace_back(std::move(temp));"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 311,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you want to construct values this way, please use named construction\n\nSensorValConversion val {\n  .mValue = mdata;\n  .bVlalue = bDataVal;\n\n}\n\nect."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 311,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So now we're going with two different config types, one for a full \"device\" and one for a sensor.  I guess that's reasonable to me."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 604,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm really not following this code.  Why is \"Bus\" special?  Are all the other properties optional?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 610,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should not be bitpacking entity-manager config parameters like this.  Use two parameters if you need to support both channel and bus index."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 616,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given that this takes no arguments, can it just be called in the IpmbSDRDevice constructor?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 706,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "why unique_ptr?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 322,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 554,
            "sizeDeletions": 3
        },
        {
            "number": 21,
            "revision": "eb3a117b412b2861216b78b47524215198a024ee",
            "parents": [
                "64436cb1f1f92a3fccf92c3ca4079cedeb4273c3"
            ],
            "ref": "refs/changes/60/52160/21",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1657166023,
            "author": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why does validRecordCount init to 1?  Shouldn't it start at 0?"
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "SDR record count is 70.\nIf the validRecordCount starts from 0, after reading all the sensor, it will be 69.\nIt will not match the SDR count, Therefore, it starts from 1 to match the SDR count."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please do this in one line\n\nsdrData.insert(sdrData.end(), data.begin(), data.end());"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 167,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nitpick, ++ is simpler."
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Why another copy, can this function use class data member sdrData?"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "1. Don't understand the comments for this function is for threshold value\n2. It is not using any class member, can just be an inline function"
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This calculation is used in 3 places, therefore, Ed suggested to make this as common instead of duplicating this calculation."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 322,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 554,
            "sizeDeletions": 3
        }
    ]
}