{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ic8369b0de8efb00ff168bc1ed43f1d7fd6c7366a",
    "number": 55288,
    "subject": "HTTP Client: Fix retry handling",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55288",
    "commitMessage": "HTTP Client: Fix retry handling\n\nThe retry policy is incredibly slow when the target destination is\nnot reachable.  Reduces the timeout on doConnect() 1 second to\naccount for this scenario.\n\nThe error check in doClose() should not exit early since that will\nresult in the connection's status not being marked as closed and\nthus it will never get reused.\n\nSimilarly, doCloseAndRetry() should not exit early since that will\ncause the retry flow to hang and the connection's callback function\nwill not get deleted.\n\nTested:\nUsed 2x Redfish-Event-Servers to create 8 subscriptions.  They were\nnot affected by reducing the timeout period.\n\nUsed Redfish Aggregation patches in the chain through\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/54896 to verify that\nrequests to collections such as /redfish/v1/Chassis no longer hang\nwhen the specified Satellite BMC does not exist\n\nSigned-off-by: Carson Labrado <clabrado@google.com>\nChange-Id: Ic8369b0de8efb00ff168bc1ed43f1d7fd6c7366a\n",
    "createdOn": 1657586497,
    "lastUpdated": 1657666673,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1657586497,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1657586547,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657586547,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1657586753,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1657586806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657586806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1657586806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46819/ : ABORTED"
        },
        {
            "timestamp": 1657587025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46821/ : ABORTED"
        },
        {
            "timestamp": 1657587511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1 Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46828/ : SUCCESS"
        },
        {
            "timestamp": 1657587685,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3: Published edit on patch set 2."
        },
        {
            "timestamp": 1657587699,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4: Published edit on patch set 3."
        },
        {
            "timestamp": 1657587735,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657587736,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1657588195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46829/ : SUCCESS"
        },
        {
            "timestamp": 1657600106,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1657640419,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5: New patch set was added with same tree, parent, and commit message as Patch Set 4."
        },
        {
            "timestamp": 1657640442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1"
        },
        {
            "timestamp": 1657640443,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657640444,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1657640907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46832/ : SUCCESS"
        },
        {
            "timestamp": 1657641779,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1657641853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657641853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1657642064,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1657642152,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 7: New patch set was added with same tree, parent, and commit message as Patch Set 6."
        },
        {
            "timestamp": 1657642198,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657642199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1657642199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46838/ : ABORTED"
        },
        {
            "timestamp": 1657642335,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1657642359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657642359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1657642359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1 Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46840/ : ABORTED"
        },
        {
            "timestamp": 1657642363,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1657642373,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657642374,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1657642374,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46842/ : ABORTED"
        },
        {
            "timestamp": 1657642838,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46843/ : SUCCESS"
        },
        {
            "timestamp": 1657651437,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1657660114,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1657663902,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1657666673,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8c1fc3e03b8eed16d78564c93a1b550ef07f90f4",
            "parents": [
                "8244198681d9e05755e36f5f43f157a26c1d4078"
            ],
            "ref": "refs/changes/88/55288/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657586497,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 3
        },
        {
            "number": 2,
            "revision": "cedee0ff5a35adda6180c7374c1dd9b0f5607af4",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657586753,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 9
        },
        {
            "number": 3,
            "revision": "582a9cfc47054504a00f3f7784f9a24126a981da",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657587685,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 9
        },
        {
            "number": 4,
            "revision": "122f379bf286075a7aac335399f2d1fb28765c15",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657587699,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In real scenarios, connect can definitely take more than a second, especially on low links, or SSL that takes a long time to bring the link up, so 1 second isn't going to work.\n\nWhat I'd like to understand is why this matters at all.  If the destination is unreachable, aren't we bound by the linux timeouts, and shouldn't those be relatively quick based on L2 network routing?  I would expect the timeout in this case is just a security precaution for compromised network nodes that might not bring up the full connection quickly in an attempt to run the bmc out of resources, but clearly you're seeing something else here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> In real scenarios, connect can definitely take more than a second, especially on low links, or SSL that takes a long time to bring the link up, so 1 second isn't going to work.\nIn that case, is it possible to reduce the 30 second limit at all?\n\n> ...but clearly you're seeing something else here\nOn my BMC I'm seeing the timer in doConnect() completely expire when the destination is unreachable (i.e. \"The socket was closed due to a timeout\").  This takes the full 30 seconds.\n\nIn this case I'm using an external IP rather than an arbitrary port on the localhost that has been configured to forward to a non-existent satellite BMC."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "1 is way too short.....  5-15 seconds would be in my head as a relatively sane default, but.... we should be looking to something with more industry traction for inspiration.  What does curl/wget/requests do in this case for a timeout, and can we just copy them?\n\nNow that I've had my coffee, I'm starting to understand the problem more;  You have to bring up the connection, and do the request in the time that it takes the primary request to time out, which means you have more constraints on your timing.\n\n(thinking out loud) What if we relied on keep alive, and just kept an open connection to each aggregated resource all the time, then, if we get a request we could immediately check if the connection exists, and 502 immediately, instead of waiting for connect to fail?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> What does curl/wget/requests do in this case for a timeout, and can we just copy them?\nBased on running curl on my local machine to some made-up destination, curl will just run until it hits its own internal timeout.  On my machine that seems to take ~130 seconds:\n```\ncurl: (28) Failed to connect to 192.92.32.1 port 80 after 130994 ms: Connection timed out\ncurl: (28) Failed to connect to 192.92.32.1 port 80 after 130045 ms: Connection timed out\ncurl: (28) Failed to connect to 192.92.32.1 port 80 after 129363 ms: Connection timed out\n```\n\nBasically we need to prove a negative (the destination does not exist) and the standard approach seems to be to wait for a timeout.  For now the only time that this hurts is the redfish aggregation edge case where either a satellite is unreachable, or the satellite config is incorrect.\n\n> (thinking out loud) What if we relied on keep alive, and just kept an open connection to each aggregated resource all the time, then, if we get a request we could immediately check if the connection exists, and 502 immediately, instead of waiting for connect to fail?\n(Also thinking out loud) I think that would only work if the destination supports keep alive.  Also, I would need some way to handle the scenario where the destination blinking in and out results in not all of the connections in the pool remaining open.  \n\nI could take the same idea and add a bool to each connection pool that denotes if a connection timeout previously occurred.  That bool could only be set if we fall through due to a connection timeout.  It would be cleared anytime a connection is able to receive a response to a request.\n\nAs part of each message sendinging attempt we would first check the value of that bool for the specified connection pool.  When the bool is set then we would immediately return a 502, but at the same time we would also just send a ping to the destination to check in the background if that destination has become available again.  If it did then we would flip the bool so that future requests know to not return a 502."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > What does curl/wget/requests do in this case for a timeout, and can we just copy them?\n> Based on running curl on my local machine to some made-up destination, curl will just run until it hits its own internal timeout.  On my machine that seems to take ~130 seconds:\n> ```\n> curl: (28) Failed to connect to 192.92.32.1 port 80 after 130994 ms: Connection timed out\n> curl: (28) Failed to connect to 192.92.32.1 port 80 after 130045 ms: Connection timed out\n> curl: (28) Failed to connect to 192.92.32.1 port 80 after 129363 ms: Connection timed out\n> ```\n> \n> Basically we need to prove a negative (the destination does not exist) and the standard approach seems to be to wait for a timeout.  For now the only time that this hurts is the redfish aggregation edge case where either a satellite is unreachable, or the satellite config is incorrect.\n> \n> > (thinking out loud) What if we relied on keep alive, and just kept an open connection to each aggregated resource all the time, then, if we get a request we could immediately check if the connection exists, and 502 immediately, instead of waiting for connect to fail?\n> (Also thinking out loud) I think that would only work if the destination supports keep alive. \n\nGood point, although it seems pretty reasonable that DMTF might require keepalive, given they require TLS.  I don't know of an implementation that doesn't support it, although you are technically correct.  For this use case it might be worth getting into the standard.\n\n> Also, I would need some way to handle the scenario where the destination blinking in and out results in not all of the connections in the pool remaining open.  \n\n\nNot following in this case.  if tcp is dropping, wouldn't the connections be closing and be destroyed?\n\n> \n> I could take the same idea and add a bool to each connection pool that denotes if a connection timeout previously occurred.  That bool could only be set if we fall through due to a connection timeout.  It would be cleared anytime a connection is able to receive a response to a request.\n\n\n> \n> As part of each message sendinging attempt we would first check the value of that bool for the specified connection pool.  When the bool is set then we would immediately return a 502, but at the same time we would also just send a ping to the destination to check in the background if that destination has become available again.  If it did then we would flip the bool so that future requests know to not return a 502.\n\n\nOh, so you're thinking we keep connection objects alive regardless of their connectedness.  That might work?  Or maybe we need a \"last time connected\" time, so we can still handle the first-connect case?  Or the case where a keepalive was rightly timed out by the client."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Good point, although it seems pretty reasonable that DMTF might require keepalive, given they require TLS.  I don't know of an implementation that doesn't support it, although you are technically correct.  For this use case it might be worth getting into the standard.\nI didn't consider that it's part of the standard.  If it is then I'd feel better about relying on it.  However, there's still an issue with tracking this on a per connection basis.  I'll explain that later in this comment.\n\n> > Also, I would need some way to handle the scenario where the destination blinking in and out results in not all of the connections in the pool remaining open.\n> Not following in this case.  if tcp is dropping, wouldn't the connections be closing and be destroyed?\nThey would be closed but they are not be destroyed.  Even then, a single connection fail would not affect the entire pool.  Let's say we have a full connection pool that has been sending w/o issue.  All of a sudden the destination goes down.  Each individual connection will still appear as idle until we attempt to send a message to the unreachable destination using that connection.  Similarly, if the destination comes back online then we risk false positives where the individual connections will each return a 502 the first time they are used.\n\n> Oh, so you're thinking we keep connection objects alive regardless of their connectedness. That might work?\n(Provided I'm understanding what keeping it alive means) That's effectively how the code functions now since there is not a method to delete a connection from the pool.  They get closed if something goes wrong, but they still remain in the pool's vector of connections.\n\n> Or maybe we need a \"last time connected\" time, so we can still handle the first-connect case?  Or the case where a keepalive was rightly timed out by the client.\nWhen the pool is first created we can just set the bool to denote that there are no connection issues.  The first message send attempt would set the actual connection status.\n\nIf we want to make sure the destination is available before the first message send attempt then we'd need to just send a dummy message whenever the other entity is created.  For Redfish Aggregation for example I'd want to send a dummy message within the Constructor for RedfishAggregator to each satellite BMC."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 358,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Now that this doesn't return early, this does nothing (which cppcheck will flag)"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 358,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I removed it"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I removed it"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 9
        },
        {
            "number": 5,
            "revision": "5de3bf35eeb22511fb9cb60b5952db4a229848c5",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657640419,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 9
        },
        {
            "number": 6,
            "revision": "ccce92fbff987f96519d67031b1f174804f427ab",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/6",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657641779,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 12
        },
        {
            "number": 7,
            "revision": "0a3172f7a63ef03452714513b442e12e27de806c",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/7",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657642152,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 12
        },
        {
            "number": 8,
            "revision": "605d12872deb6e394798b4bdd22914de1243215a",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/8",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657642335,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 45,
            "sizeDeletions": 13
        },
        {
            "number": 9,
            "revision": "a7e2b76095291a31a5f419bb8d8f5f9daade6348",
            "parents": [
                "5600f024edd6be65c58b3664ac48f8103d943ea1"
            ],
            "ref": "refs/changes/88/55288/9",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1657642363,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 12
        }
    ]
}