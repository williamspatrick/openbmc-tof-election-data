{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I1c062094095f7112a38a935178d5b425b30e0cbb",
    "number": 47885,
    "subject": "sensors: Remove a extra dbus call for single Sensor request",
    "owner": {
        "name": "Willy Tu",
        "email": "wltu@google.com",
        "username": "wltu"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/47885",
    "commitMessage": "sensors: Remove a extra dbus call for single Sensor request\n\nThe getObjectsWithConnection() calls ObjectMapper at\n`/xyz/openbmc_project/sensors` and is used for both sensor/sensor\ncollection requests. The sensor request also call the same dbus call\nand can use the result from the existing call instead of making the\nextra call.\n\nAdded a new function to take in the `subtree` instead of making the\nextra dbus calls.\n\nAdded `getObjectsWithConnectionHandler` to take in the subtree instead\nof updating the `getObjectsWithConnection`. This allow all existing code\nto be still compatible.\n\nThis should provide some performance improvement on sensor requests.\n\nTested:\nRedfish Validator Passed.\n\nBefore\n```\n*** /redfish/v1/Chassis/chassis0/Sensors\nINFO - \t Type (#SensorCollection.SensorCollection), GET SUCCESS (time: 0.375195)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/chassis0/Sensors/sensor0\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.687335)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/chassis0/Sensors/sensor1\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.653246)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/chassis0/Sensors/sensor2\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.641425)\nINFO - \t PASS\nINFO -\n...\n```\n\nAfter 25 sensor read:\n```\nreal    0m16.783s\nuser    0m0.209s\nsys     0m0.194s\n```\n\nAfter:\n```\n*** /redfish/v1/Chassis/GSZ/Sensors\nINFO - \t Type (#SensorCollection.SensorCollection), GET SUCCESS (time: 0.388329)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/GSZ/Sensors/sensor0\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.592459)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/GSZ/Sensors/sensor1\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.60059)\nINFO - \t PASS\nINFO -\n*** /redfish/v1/Chassis/GSZ/Sensors/sensor2\nINFO - \t Type (#Sensor.v1_0_0.Sensor), GET SUCCESS (time: 0.646665)\nINFO - \t PASS\nINFO -\n```\n\nAfter 25 sensor read:\n```\nreal    0m16.417s\nuser    0m0.280s\nsys     0m0.202s\n```\n\nChange-Id: I1c062094095f7112a38a935178d5b425b30e0cbb\nSigned-off-by: Willy Tu <wltu@google.com>\n",
    "createdOn": 1634444366,
    "lastUpdated": 1644624894,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1634444366,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634444383,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634444824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28392/ : SUCCESS"
        },
        {
            "timestamp": 1634446839,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1634452857,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1634456018,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1644231880,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 4: Patch Set 3 was rebased"
        },
        {
            "timestamp": 1644231896,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1644231896,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1644232390,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36671/ : SUCCESS"
        },
        {
            "timestamp": 1644250527,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1644378946,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1644378961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1644378961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1644379004,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1644379456,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36934/ : SUCCESS"
        },
        {
            "timestamp": 1644433807,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1644624894,
            "reviewer": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b6bde1fa9b2d99c45e6557b1697124047e852b1c",
            "parents": [
                "03fbed9286a2086abd43b05c34f2ebbc1cc79c1f"
            ],
            "ref": "refs/changes/85/47885/1",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1634444366,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 108,
            "sizeDeletions": 39
        },
        {
            "number": 2,
            "revision": "1a371fade12d5d38e8b3d715ff7abee71402a3b3",
            "parents": [
                "03fbed9286a2086abd43b05c34f2ebbc1cc79c1f"
            ],
            "ref": "refs/changes/85/47885/2",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1634446839,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 39
        },
        {
            "number": 3,
            "revision": "267660713a2fd59126e4bce9edbb6c363fc2f183",
            "parents": [
                "03fbed9286a2086abd43b05c34f2ebbc1cc79c1f"
            ],
            "ref": "refs/changes/85/47885/3",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1634456018,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 39
        },
        {
            "number": 4,
            "revision": "a465a6e7d657fa784a31e4e6d95493b10b003ff8",
            "parents": [
                "50b8a43af501412f93a93ccce34a9ea7abb6d57f"
            ],
            "ref": "refs/changes/85/47885/4",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1644231880,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 435,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As a general rule, please don't overload methods with the same name using different parameters.  It makes searching harder.\n\nGoogle coding standard rule that goes into more detail.\nhttps://google.github.io/styleguide/cppguide.html#Function_Overloading"
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 435,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Thanks. I have renamed it."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2687,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "undefined behavior.  You're taking a reference to a temporary here in the default argument."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2687,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I have cleaned it up using std::optional now."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2688,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If we're needing to make two calls through this code with different arguments, that somewhat implies that we got out call graph wrong, and we could promote the second loop up and avoid this \"do a second time with a default argument\" stuff."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2688,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "actually this function is only called once in each call stack.\n\nOne started from `retrieveUriToDbusMap` that is used by other files and does not fetch the subtree and need to use the default one. This is a function expose for other resource to use.\n\nThe other is `requestRoutesSensor` handler that fetch the subtree and reuse it instead of fetching it again."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 39
        },
        {
            "number": 5,
            "revision": "297398c7f728b927b50ad9dae15afea907934302",
            "parents": [
                "50b8a43af501412f93a93ccce34a9ea7abb6d57f"
            ],
            "ref": "refs/changes/85/47885/5",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1644378946,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Given feedback on https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47886/5 would like Shawn to sign off here "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Shawn McCarney",
                        "email": "shawnmm@us.ibm.com",
                        "username": "smccarney"
                    },
                    "message": "I agree with you that the mapper call in requestRoutesSensor() is repeated later in the code, which is inefficient.\n\nWorse yet, in reading the code, requestRoutesSensor() ignores the chassis that was specified in the Redfish URI.  For example, you can specify `/redfish/v1/Chassis/chassis_that_does_not_exist/Sensors/<valid_sensor_name>` and it works fine.  It should first check that the chassis is valid, then find sensors associated with that chassis via the `all_sensors` association, and then find the D-Bus sensor that matches the sensor base name in the URI.  You didn't add that bug; I just noticed it during this review.\n\nAlmost all of that validation logic is already implemented, so we don't want to copy/paste it.  I would suggest making a simpler change than the one you have here.  It would solve the efficiency problem and also the invalid chassis bug.\n\n* Add a sensorName field to the SensorsAsyncResp struct.  The struct represents the current Redfish request, and it already contains the chassisId from the Redfish URI.  You could add a std::string sensorName field that defaults to \"\".  This would represent the sensor ID (if any) specified in the Redfish URI.\n\n* In requestRoutesSensor(), set the new sensorName field in the SensorsAsyncResp to the sensor name in the Redfish URI.  Then call getChassisData() just like the old Power and Thermal schemas do.  You can get rid of almost all the other code in requestRoutesSensor().\n\n* In reduceSensorList(), it already reduces the set of chassis sensors to those that match the `types` field in the SensorsAsyncResp.  That was how the old Power and Thermal schemas returned only the sensors of the correct type within the chassis.  Make a small change to this function to also check the sensorName field in the SensorsAsyncResp.  If it is not \"\", then only use the sensor (store it in activeSensors) if it has the correct name.  This will essentially reduce the sensor list to one element.\n\n* The only thing missing would be a check in requestRoutesSensor() that we found the specified sensor, with an error if we didn't.  Hopefully would just be a few lines total of code changes."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 166,
            "sizeDeletions": 39
        }
    ]
}