{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ic29969bba25649b583d321515e3786aae154bd6e",
    "number": 53797,
    "subject": "WIP: bmcweb: Fix Local URIs in Collections",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/53797",
    "commitMessage": "WIP: bmcweb: Fix Local URIs in Collections\n\nThis patch is a WIL.\n\nThis patch adds the \"main_\" prefix to the URIs of local resources\nreturned when retrieving the collections for Chassis, Systems, and\nManagers resources.\n\nFuture patches will add support for Fabrics and ComponentIntegrity\nresources as well as adding prefixes for satellite resources that\nappear in the collections.\n\nTested:\nQueried the URIs to retrieve each resource collection.  An example\nusing Systems is shown below.\n\nwget -qO- localhost:80/redfish/v1/Systems\n{\n  \"@odata.id\": \"/redfish/v1/Systems\",\n  \"@odata.type\": \"#ComputerSystemCollection.ComputerSystemCollection\",\n  \"Members\": [\n    {\n      \"@odata.id\": \"/redfish/v1/Systems/main_system\"\n    }\n  ],\n  \"Members@odata.count\": 1,\n  \"Name\": \"Computer System Collection\"\n}\n\nSigned-off-by: Carson Labrado <clabrado@google.com>\nChange-Id: Ic29969bba25649b583d321515e3786aae154bd6e\n",
    "createdOn": 1652838116,
    "lastUpdated": 1653519291,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1652838116,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1652838128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652838128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1652838852,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43446/ : SUCCESS"
        },
        {
            "timestamp": 1653403571,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1653427188,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1653427196,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1653507905,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased."
        },
        {
            "timestamp": 1653507944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653507944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1653508316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43818/ : FAILURE"
        },
        {
            "timestamp": 1653518561,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1653518588,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653518588,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1653519291,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43846/ : SUCCESS"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "205a903f49d1e077068ba6b2c46c0d9a90544cc7",
            "parents": [
                "74ba77b0d4b954b27205c14cc175d04a4f194c03"
            ],
            "ref": "refs/changes/97/53797/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652838116,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I realize this is WIP, but figured I'd give a couple pointers to lead you down the right path."
                },
                {
                    "file": "http/http_response.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Response is meant to represent a generic, HTTP response.  Aggregation and collections are a property of Redfish, so that behavior needs to go in a Redfish layer somewhere."
                },
                {
                    "file": "http/http_response.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I need to be able to track this flag per each individual response.  If it can't go here then I think the only other option would be as a member variable of AsyncResp.\n\nIf I can't put a flag in AsyncResp then I think my next options are:\n1) Perform another satellite config D-Bus lookup at the end of the endpoints to decide if I need to attempt to fix any of the links.  \n2) Modify the response's completion handler so that it fixes the links before calling the original completion handler function."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Couple things here:\n1. Don't use regex.  We have specialized functions for unpacking a uri that handle escaping properly (is boost::urls);  Please use them.\n2. This isn't a complete listing of every collection type in the system, and isn't a list that I'm interested in maintaining over time.  This list either needs to be:\n1. Generated from schemas (preferred, but hard)\n2. Rely on some intrinsic, like the fact that the \"Members\" property exists and is an array, liked we do in other places."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> This isn't a complete listing of every collection type in the system, and isn't a list that I'm interested in maintaining over time. \nI was not trying to implement all collections, just a subset of the form \"/redfish/v1/<CollectionName>/\".  If I need to support each collection type then couldn't I assume that any \"/redfish/v1/<str>/<str>\" is an aggregated resource and then any \"/redfish/v1/<str>\" is a collection?\n\n> Rely on some intrinsic, like the fact that the \"Members\" property exists and is an array, liked we do in other places.\nThis might be tricky because a collection could exist on the satellite and not on the host. The \"Members\" property would exist, but none of the entries would belong to the aggregating BMC.  We would need to make sure that the code does not accidentally add \"main_\" to collection objects that are actually located on a satellite."
                },
                {
                    "file": "redfish-core/lib/managers.hpp",
                    "line": 2348,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Changing this URI is going to break a lot of stuff.  Technically it's allowed in the spec, but people hardcoding this over time have lead to a mediocre situation.  Could we just prefix the aggregated resources with an ID that denotes them as aggregated, and leave the existing routes alone?  I suspect that will get this patch merged faster."
                },
                {
                    "file": "redfish-core/lib/managers.hpp",
                    "line": 2348,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "The original intention was that the routing code would remove the prefix before it ever gets passed to the handler.  That would have left the existing routes intact.  Unfortunately, there is not currently an appropriate location to hook the handler.\n\nThis is now moot following Discord discussion beginning here: https://discord.com/channels/775381525260664832/855566794994221117/978720524140183622.  The plan is to forgo using \"main_\" to denote local IDs for the time being."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/managers.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -1
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/collection.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 95,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "3db1f7e9b52f34e745b8f1efcd8ec610d5357a87",
            "parents": [
                "476d4f867139dcfdddfd0b47816d6f097d7913fc"
            ],
            "ref": "refs/changes/97/53797/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1653507905,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/managers.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -1
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/collection.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 95,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "554ba91d617cd911cfc6ccdeb074e045bc3b1152",
            "parents": [
                "e7c6f6a6fa6feb7e811f759c6570c9e83468a1ce"
            ],
            "ref": "refs/changes/97/53797/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1653518561,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/managers.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -1
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/collection.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 95,
            "sizeDeletions": 4
        }
    ]
}