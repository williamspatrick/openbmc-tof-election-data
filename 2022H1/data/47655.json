{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ia28e97c17c1b9bd0e29b681727c3e36563ca7922",
    "number": 47655,
    "subject": "Redfish: Add resolution property",
    "owner": {
        "email": "vijaylobo@gmail.com",
        "username": "vflobo"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/47655",
    "commitMessage": "Redfish: Add resolution property\n\nThis property is used to provide suggestions on how to resolve the\nsituation that caused the log entry. Services can replace the resolution\ndefined in the message registry with a more specific resolution in a log\nentry.\n\nTested:\ncurl command was run with the system having 2 error logs. With\nresolution and without resolution property set in d-bus. Note that the\nredfish output has a resolution property set if the value is not empty.\n\ncurl -k -X GET https://$bmc:18080/redfish/v1/Systems/system/\\\n                    LogServices/EventLog/Entries\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/LogServices/EventLog/\\\n                    Entries\",\n  \"@odata.type\": \"#LogEntryCollection.LogEntryCollection\",\n  \"Description\": \"Collection of System Event Log Entries\",\n  \"Members\": [\n    {\n      \"@odata.id\": \"/redfish/v1/Systems/system/LogServices/EventLog/\\\n                    Entries/1\",\n      \"@odata.type\": \"#LogEntry.v1_8_0.LogEntry\",\n      \"AdditionalDataURI\": \"/redfish/v1/Systems/system/LogServices/\\\n                    EventLog/Entries/1/attachment\",\n      \"Created\": \"2021-10-08T03:36:25+00:00\",\n      \"EntryType\": \"Event\",\n      \"Id\": \"1\",\n      \"Message\": \"org.open_power.Logging.Error.TestError1\",\n      \"Modified\": \"2021-10-08T03:36:25+00:00\",\n      \"Name\": \"System Event Log Entry\",\n      \"Resolution\": \"1. Priority: High, Procedure: BMC0001\\n2.\\\n                    Priority: Medium, PN: SVCDOCS\\n\",\n      \"Resolved\": false,\n      \"Severity\": \"Critical\"\n    },\n    {\n      \"@odata.id\": \"/redfish/v1/Systems/system/LogServices/EventLog/\\\n                    Entries/2\",\n      \"@odata.type\": \"#LogEntry.v1_8_0.LogEntry\",\n      \"AdditionalDataURI\": \"/redfish/v1/Systems/system/LogServices/\\\n                    EventLog/Entries/2/attachment\",\n      \"Created\": \"2021-10-08T03:36:41+00:00\",\n      \"EntryType\": \"Event\",\n      \"Id\": \"2\",\n      \"Message\": \"xyz.openbmc_project.Common.Error.Timeout\",\n      \"Modified\": \"2021-10-08T03:36:41+00:00\",\n      \"Name\": \"System Event Log Entry\",\n      \"Resolved\": false,\n      \"Severity\": \"Critical\"\n    }\n  ],\n  \"Members@odata.count\": 2,\n  \"Name\": \"System Event Log Entries\"\n}\n\nSigned-off-by: Vijay Lobo <vijaylobo@gmail.com>\nChange-Id: Ia28e97c17c1b9bd0e29b681727c3e36563ca7922\n",
    "createdOn": 1633645604,
    "lastUpdated": 1641326203,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1633645604,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633645618,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633646048,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27793/ : SUCCESS"
        },
        {
            "timestamp": 1633646201,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1633646290,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1633715566,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1633719977,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1633726970,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1633727728,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1635285071,
            "reviewer": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "message": "Uploaded patch set 4: Commit message was updated."
        },
        {
            "timestamp": 1635350164,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1635351318,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1639774020,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(4 comments)\n\nAs written, I don't really think this can go forward.  It seems like a pretty blatant breakage of the redfish spec, and defeats a lot of the concrete purpose of abstracting the Redfish interface.\n\nWith that said, I'm interested in what the community thinks here, and there's a discussion to be had if the spec is too restrictive, but I don't see this patchset starting that discussion."
        },
        {
            "timestamp": 1641319081,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1641319248,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1641319581,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1641324832,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1641326203,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "af10ef664cba5cc1d495868489e1897ad4b61ad9",
            "parents": [
                "44fad2aa3ba9e28bb52c0ff21ba2cdbd2812b199"
            ],
            "ref": "refs/changes/55/47655/1",
            "uploader": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "createdOn": 1633645604,
            "author": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 143,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "7a113d3a0937815c8126e921566fdf05d3a3e558",
            "parents": [
                "44fad2aa3ba9e28bb52c0ff21ba2cdbd2812b199"
            ],
            "ref": "refs/changes/55/47655/2",
            "uploader": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "createdOn": 1633646201,
            "author": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 150,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "455075cc4b7350ed0682c70f29142ed7dd95cc0b",
            "parents": [
                "44fad2aa3ba9e28bb52c0ff21ba2cdbd2812b199"
            ],
            "ref": "refs/changes/55/47655/3",
            "uploader": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "createdOn": 1633646290,
            "author": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's no need to include the old test results.  They just clutter things up."
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1455,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I think this check was added for properties that are required or needed for the LogEntry to be useful (message). I am kind of guessing here though. \nWhy should resolution be here?\n\n            \"required\": [\n                \"EntryType\",\n                \"@odata.id\",\n                \"@odata.type\",\n                \"Id\",\n                \"Name\"\n\nResolution should not be nullptr since it is part of\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/39bdb4711855ed9caf18b55427691c80e8e8ac8e/yaml/xyz/openbmc_project/Logging/Entry.interface.yaml#L37\n\nand that is the interface we are looking for \n                            if (interfaceMap.first ==\n                                \"xyz.openbmc_project.Logging.Entry\")\n\nso I guess I am okay with this.. just seems like this expands this check to be for all properties in https://github.com/openbmc/phosphor-dbus-interfaces/blob/39bdb4711855ed9caf18b55427691c80e8e8ac8e/yaml/xyz/openbmc_project/Logging/Entry.interface.yaml#L37"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1455,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I think this check was added for properties that are required or needed for the LogEntry to be useful (message). I am kind of guessing here though. \n> Why should resolution be here?\n> \n>             \"required\": [\n>                 \"EntryType\",\n>                 \"@odata.id\",\n>                 \"@odata.type\",\n>                 \"Id\",\n>                 \"Name\"\n> \n> Resolution should not be nullptr since it is part of\n> https://github.com/openbmc/phosphor-dbus-interfaces/blob/39bdb4711855ed9caf18b55427691c80e8e8ac8e/yaml/xyz/openbmc_project/Logging/Entry.interface.yaml#L37\n\nConsidering that the initial version of Entry didn't have that, lets do our best to not require it, especially considering it's less code to not require it, and there's other fields that we already don't check.  id, message, and severity are explicitly checked here because they're required by the redfish schema, so we prefer to return Internal error rather than produce an incorrect redfish schema.  Resolution is not required, so it shouldn't be in this check.\n\n> \n> and that is the interface we are looking for \n>                             if (interfaceMap.first ==\n>                                 \"xyz.openbmc_project.Logging.Entry\")\n> \n> so I guess I am okay with this.. just seems like this expands this check to be for all properties in https://github.com/openbmc/phosphor-dbus-interfaces/blob/39bdb4711855ed9caf18b55427691c80e8e8ac8e/yaml/xyz/openbmc_project/Logging/Entry.interface.yaml#L37"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1455,
                    "reviewer": {
                        "email": "vijaylobo@gmail.com",
                        "username": "vflobo"
                    },
                    "message": "I have seen in some cases on HW a different version of code the interface \"xyz.openbmc_project.Logging.Entry\" did not have resolution property. In that case access in line 1495 would crash system. The intent is to check it here since line 1426 will not be executed. I can move this check to line 1495 if that is OK? but I want to check for the validity of nullptr"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1455,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Yeah, I would be okay with this line on 1495 / 1651"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1455,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Check for validity right before the dereference, no need to set internal error to do that."
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1495,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "We typically don't check for empty.. \nWhy do you need to here?"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1495,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an interesting question;  How do you know the difference between \"Resolution not populated for this log\" and \"Resolution not supported\"?"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1495,
                    "reviewer": {
                        "email": "vijaylobo@gmail.com",
                        "username": "vflobo"
                    },
                    "message": "The reason I put the check in here is to make sure we don't return empty string. When I ran the validator it gave me warning saying value is empty and check for spelling. Also this aligns with what we discussed on ServiceProviderNotify property. If the property is not supported then we don't return it. In this case it is not populated. Not all PEL's have resolution field populated. @ed, the value is empty by default and I assume no one populated the value or in a system which does not support i we would read back empty string. I am open to suggestions here"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1495,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "We typically just put the property out even if it is empty. \nI guess I don't understand the difference from this and \nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/38044\n\nResolution is a property on the interface, so put it out on Redfish. \n\nIf it isn't supported then \n\"Then that interface needs split up into interfaces that are fully implementable\".\n\nAll that said, I could live with an empty check"
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "line": 1651,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Why the check for empty?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 150,
            "sizeDeletions": 4
        },
        {
            "number": 4,
            "revision": "7d8e7a3fa0fd273268ede5216735c8533b903eac",
            "parents": [
                "44fad2aa3ba9e28bb52c0ff21ba2cdbd2812b199"
            ],
            "ref": "refs/changes/55/47655/4",
            "uploader": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "createdOn": 1635285071,
            "author": {
                "email": "vijaylobo@gmail.com",
                "username": "vflobo"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't this breaking the redfish spec?  The registry is supposed to be usable by services that don't want to/aren't able to parse text results from a system.  Allowing to override the message registry removes this ability, and in this case largely just seems like a trapdoor to defeat the type safety of the message registry.\n\nI suspect your path here is to add new specific message types for your various resolution strings."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Message is supposed to be human readable, this is not.\n\nAlso, we should not be exposing openbmc specific internal interfaces out to a spec-defined interface, as it removes our ability to modify the internal interfaces later, and essentially makes the internal interfaces external interfaces."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "this has always been what the 'DBUS LOG' section in bmcweb log_services.hpp did.  Eventually we hope to improve it."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is in no way how this should be formatted, and seems to be embedding yet another message within the Resolution field, which is not how the resolution field works.  Resolution should be human readable, and match the registry.  If you need extra fields, embed them in your message with message args."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "This is what the DMTF told us to do when we asked for how to get a list of 'callouts' into a log entry, specifically to cram a list of things into the Resolution string."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you point me to that conversation?  It doesn't seem in line with the redfish spec, but it's quite possible I'm wrong."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "It was in a meeting.  @Gunnar - know if there was any record?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Yeah in a Redfish meeting, we (Matt and I) explained we might have \"multiple resolutions\" and Redfish said, it is a free form string meant to be read by a human so if you truly have multiple \"how to resolve the situation that caused the log entry\" then it is appropriate they are all in there. \n\nThat said, not sure what is going on with the \\n in here, also this is a pretty standard Redfish property so this seems like a bad example since it is very company specific.. Can we just use a generic, better example for the Resolution string \"Check manager network.\", \"Replace failing Dimm.\", etc ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Yeah in a Redfish meeting, we (Matt and I) explained we might have \"multiple resolutions\" and Redfish said, it is a free form string meant to be read by a human so if you truly have multiple \"how to resolve the situation that caused the log entry\" then it is appropriate they are all in there. \n\nYes, it's a freeform string, but that doesn't mean it doesn't need to have a message registry entry for each element, or can contain variable data that doesn't match the MessageId entry.  That's different than what I'm pointing out here.\n\n> \n> That said, not sure what is going on with the \\n in here, also this is a pretty standard Redfish property so this seems like a bad example since it is very company specific.. Can we just use a generic, better example for the Resolution string \"Check manager network.\", \"Replace failing Dimm.\", etc ?\n\n+1"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 102,
            "sizeDeletions": 4
        }
    ]
}