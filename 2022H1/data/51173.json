{
    "project": "openbmc/phosphor-logging",
    "branch": "master",
    "topic": "audit-log",
    "id": "Id21cc0597b5b4308a0e4f4a559ccd71b825d2643",
    "number": 51173,
    "subject": "elog: Add event method to support event log",
    "owner": {
        "name": "George Liu",
        "email": "liuxiwei@inspur.com",
        "username": "lxwinspur"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-logging/+/51173",
    "commitMessage": "elog: Add event method to support event log\n\nExtend the report function and add the event method to record all\nevents (for example: redfish, audit, sel, etc.)\n\nTested: In the app that needs to be called, just execute the pseudo\n        code:\n\tevent<>();\n\nSigned-off-by: George Liu <liuxiwei@inspur.com>\nChange-Id: Id21cc0597b5b4308a0e4f4a559ccd71b825d2643\n",
    "createdOn": 1644818790,
    "lastUpdated": 1646795698,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1644818790,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1644818805,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1644818806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1644819041,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/37171/ : FAILURE"
        },
        {
            "timestamp": 1644819302,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Topic set to audit-log"
        },
        {
            "timestamp": 1644820126,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1645066882,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1645066897,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645066898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1645067418,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/37437/ : FAILURE"
        },
        {
            "timestamp": 1645156700,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 2:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1646781265,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(5 comments)"
        },
        {
            "timestamp": 1646795698,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "23594a117d472bbf2d48beea6b7496375d934fbb",
            "parents": [
                "3d3b1b7ce7e6f5b8a041903ac7e8b13164c71b1a"
            ],
            "ref": "refs/changes/73/51173/1",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1644818790,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "type": "MODIFIED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "lib/elog.cpp",
                    "type": "MODIFIED",
                    "insertions": 38,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 106,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "77311eed97303e8d6b058d3ecd4a5161b84b7695",
            "parents": [
                "9341c8e761c4c018e0b884e12c6fe790f9f375e5"
            ],
            "ref": "refs/changes/73/51173/2",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1645066882,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "lib/elog.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These are what I don't understand the utility of."
                },
                {
                    "file": "lib/elog.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> These are what I don't understand the utility of.\n\nHere we will encapsulate the corresponding MESSAGE_ID for different types of events and store them in the journal.\nFor example: \nIf it is an audit event, it will have AUDIT_MESSSAGE_ID\nIf it is a SEL event, it will have AUDIT_MESSSAGE_ID\n\nso if someone wants to use rsyslog on the backend, they only need to filter the logs they want according to the MESSAGE_ID type."
                },
                {
                    "file": "lib/elog.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We're going to document this interface, right?  Where is the PDI commit?"
                },
                {
                    "file": "lib/elog.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> We're going to document this interface, right?  Where is the PDI commit?\n\nCurrently I just define these interfaces in phosphor-logging, because I am not sure if I am going in the right direction, if you agree, I will push a new patch later to submit these interfaces to PDI"
                },
                {
                    "file": "lib/elog.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think this is somewhat dangerous to have a synchronous message call inside the logging code.  Can we queue this up async?  Can we get the phosphor-logging manager to deal with it?  We're going to end up having N-to-M connections between N applications and M audit types (as these further get implemnented) instead of 1:M connections for phosphor-logging's manager doing the calls.\n\nAgain, I'd like to see some design on this before we commit to a code direction."
                },
                {
                    "file": "lib/elog.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> I think this is somewhat dangerous to have a synchronous message call inside the logging code.  Can we queue this up async?  Can we get the phosphor-logging manager to deal with it?  \n\nWhat is our rationale for get the phosphor-logging manager to deal with it, could you kindly describe it?\n\n> We're going to end up having N-to-M connections between N applications and M audit types (as these further get implemnented) instead of 1:M connections for phosphor-logging's manager doing the calls.\n\nFor audit log, i dont think it's N-to-M, i think it's N-to-audit log.\nIf it's a sel log, it will have a sel method instead of audit(I think)\n\n> \n> Again, I'd like to see some design on this before we commit to a code direction.\n\nSorry, I will update design this week \ud83d\ude0a"
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Don't we need some parameters here?"
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> Don't we need some parameters here?\n\nFor now, I don't think it's necessary"
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "line": 135,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't really understand the utility of this.  What is a 'MSG_ID'?  I don't see any cases where it is actually used."
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "line": 135,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> I don't really understand the utility of this.  What is a 'MSG_ID'?  I don't see any cases where it is actually used.\n\nas above"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "lib/include/phosphor-logging/elog.hpp",
                    "type": "MODIFIED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "lib/elog.cpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 107,
            "sizeDeletions": 0
        }
    ]
}