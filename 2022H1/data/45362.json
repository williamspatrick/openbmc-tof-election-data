{
    "project": "openbmc/pldm",
    "branch": "master",
    "id": "I4e9c828f4ada9f1db6bf3a9b68c16e71b6e5d8f0",
    "number": 45362,
    "subject": "In-Memory FlightRecorder support for pldmd",
    "owner": {
        "name": "ManojKiran Eda",
        "email": "manojkiran.eda@gmail.com",
        "username": "manojkiraneda"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/pldm/+/45362",
    "commitMessage": "In-Memory FlightRecorder support for pldmd\n\npldm daemon in BMC can act both as a requester and\nresponder, and it is capable of talking to any device\nthat talks pldm spec.\n\nWith the rapid increase in the number of commands supported\nby pldmd, and also with the async request/response support\nenabled, its becomes extremely tough to debug the failures\nin the communication.\n\nAnd most of times, the essential information that is needed\nto debug are the last few commands that BMC pldm responded to.\nSo this commit is an attempt to bring in an in-memory flight\nrecorder that could save the last 10(can be configurable)\npldm transactions in a circular buffer, and dumps the contents\nof it into a file when it receives a SIGUR1 signal.\n\nResolves openbmc/pldm#24\n\nTested By :\n\n1. Power on host\n2. In the middle of poweron, send the SIGUSR1 signal to pldmd\n\nroot@rain118bmc:/tmp# kill -10 836\nReceived SIGUR1(10) Signal interrupt\nroot@rain118bmc:/tmp# Dumping the flight recorder into /tmp/pldm_flight_recorder\n\n3. Make sure pldmd is not killed and does the rest of the power on\n  operation.\n\n4. check the contents of /tmp/pldm_flight_recorder\nroot@p10bmc:~# cat /tmp/pldm_flight_recorder\nUTC Nov 05 / 11:27:25.334606 : Tx :\n0a 3f 0d 00\nUTC Nov 05 / 11:27:26.292988 : Rx :\n09 01 8b 3f 0d 00 00 7b 1e 00 50 00\nUTC Nov 05 / 11:27:26.296915 : Tx :\n0b 3f 0d 00\nUTC Nov 05 / 11:27:27.250999 : Rx :\n09 01 8c 3f 0d 00 00 7c 1e 00 50 00\nUTC Nov 05 / 11:27:27.254762 : Tx :\n0c 3f 0d 00\nUTC Nov 05 / 11:27:28.212168 : Rx :\n09 01 8d 3f 0d 00 00 7d 1e 00 50 00\nUTC Nov 05 / 11:27:28.216086 : Tx :\n0d 3f 0d 00\nUTC Nov 05 / 11:27:29.171228 : Rx :\n09 01 8e 3f 0d 00 00 7e 1e 00 50 00\nUTC Nov 05 / 11:27:29.175143 : Tx :\n0e 3f 0d 00\nUTC Nov 05 / 11:27:25.330716 : Rx :\n09 01 8a 3f 0d 00 00 7a 1e 00 50 00\n\n5. Configure with -Dflightrecorder-max-entries=0\nroot@p10bmc:~# kill -10 21847\nReceived SIGUR1(10) Signal interrupt\nFight recorder policy is disabled\n\nSigned-off-by: Manojkiran Eda <manojkiran.eda@gmail.com>\nChange-Id: I4e9c828f4ada9f1db6bf3a9b68c16e71b6e5d8f0\n",
    "createdOn": 1627531287,
    "lastUpdated": 1645700891,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1627531287,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1627531309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627531319,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2635/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1627532317,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2635/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23122/ : SUCCESS"
        },
        {
            "timestamp": 1627882956,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1627882980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627882989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2649/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1627884426,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2649/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23459/ : SUCCESS"
        },
        {
            "timestamp": 1627894228,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1627894242,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627894251,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2650/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1627895172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2650/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23493/ : SUCCESS"
        },
        {
            "timestamp": 1627897862,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 3:\n\n(6 comments)"
        },
        {
            "timestamp": 1628020456,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1628020470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628020479,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2673/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628020757,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 4:\n\n(6 comments)"
        },
        {
            "timestamp": 1628021241,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2673/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23692/ : SUCCESS"
        },
        {
            "timestamp": 1628056337,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1628065975,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1628065990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628066155,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2681/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628067239,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1628067557,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2681/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23763/ : SUCCESS"
        },
        {
            "timestamp": 1628067709,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1628150903,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1628150926,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628150935,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2704/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628151243,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 6:\n\njust rebased it, please review it again"
        },
        {
            "timestamp": 1628151329,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1628151700,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2704/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23862/ : SUCCESS"
        },
        {
            "timestamp": 1628153229,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1628169547,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1628169572,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628169581,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2708/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628169983,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1628170338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2708/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23876/ : SUCCESS"
        },
        {
            "timestamp": 1628170678,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithra.b@ibm.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1628217946,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1628225977,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8: Commit message was updated."
        },
        {
            "timestamp": 1628226020,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1628226145,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1628230214,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1628230226,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628230236,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2712/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628230305,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 9:\n\n(4 comments)"
        },
        {
            "timestamp": 1628231728,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2712/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/23953/ : SUCCESS"
        },
        {
            "timestamp": 1628235838,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10: Commit message was updated."
        },
        {
            "timestamp": 1628236265,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1628238629,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 10:\n\n(9 comments)"
        },
        {
            "timestamp": 1628248439,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 11: Commit message was updated."
        },
        {
            "timestamp": 1628493068,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 11:\n\n(9 comments)"
        },
        {
            "timestamp": 1628493418,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1628520818,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1628520836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628520845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2728/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628522263,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2728/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/24058/ : SUCCESS"
        },
        {
            "timestamp": 1628610631,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1628695951,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Uploaded patch set 13: New patch set was added with same tree, parent, and commit message as Patch Set 12."
        },
        {
            "timestamp": 1628695968,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1628695972,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628696257,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2738/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628697097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2738/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/24223/ : SUCCESS"
        },
        {
            "timestamp": 1628780826,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1628780839,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628781688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2750/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628783527,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2750/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/24288/ : FAILURE"
        },
        {
            "timestamp": 1628783974,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1628783990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628784145,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2754/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628785071,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2754/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/24292/ : FAILURE"
        },
        {
            "timestamp": 1628785843,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1628785860,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628785869,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2756/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1628787847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2756/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/24295/ : SUCCESS"
        },
        {
            "timestamp": 1628872514,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 16:\n\n(8 comments)\n\nI came when I saw the discussion on the directory to log -- see comments --\nbut found serious reliability concern with the signal handler sharing data and a time function that should use library code."
        },
        {
            "timestamp": 1629956098,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1629964332,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1633671828,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1633671905,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633672784,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 18: Patch Set 17 was rebased."
        },
        {
            "timestamp": 1633672874,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3236/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1633672877,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633672881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3236/ : ABORTED\n\nhttps://jenkins.openbmc.org/job/ci-repository/27828/ : SUCCESS"
        },
        {
            "timestamp": 1633682369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3250/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1633682732,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27842/ : FAILURE\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3250/ : ppc64le CI Build Failed"
        },
        {
            "timestamp": 1633685053,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 19: Patch Set 18 was rebased."
        },
        {
            "timestamp": 1633685125,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633689788,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 20: Patch Set 19 was rebased."
        },
        {
            "timestamp": 1633689879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3264/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1633689882,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633689886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3264/ : ABORTED\n\nhttps://jenkins.openbmc.org/job/ci-repository/27868/ : FAILURE"
        },
        {
            "timestamp": 1633705980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3278/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1633715308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27900/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3278/ : ppc64le CI Build Successful"
        },
        {
            "timestamp": 1635923774,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1635923792,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635925460,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 22: Patch Set 21 was rebased."
        },
        {
            "timestamp": 1635925538,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3529/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1635925539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635925548,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3529/ : ABORTED\n\nhttps://jenkins.openbmc.org/job/ci-repository/29657/ : FAILURE"
        },
        {
            "timestamp": 1635956158,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3557/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1635962814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29687/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3557/ : ppc64le CI Build Successful"
        },
        {
            "timestamp": 1636048060,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 22:\n\n(4 comments)"
        },
        {
            "timestamp": 1636187850,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1636187877,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636187885,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3578/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1636188766,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 23:\n\n(10 comments)"
        },
        {
            "timestamp": 1636188954,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1636188993,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/29861/ : FAILURE\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3578/ : ppc64le CI Build Failed"
        },
        {
            "timestamp": 1636203216,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 24."
        },
        {
            "timestamp": 1636203232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636203241,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3579/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1636205694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29864/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3579/ : ppc64le CI Build Successful"
        },
        {
            "timestamp": 1636493325,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 24:\n\n(3 comments)"
        },
        {
            "timestamp": 1636538214,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1636538227,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636538236,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3596/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1636538497,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 25:\n\n(3 comments)"
        },
        {
            "timestamp": 1636539944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30039/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3596/ : ppc64le CI Build Successful"
        },
        {
            "timestamp": 1636645720,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 25:\n\n(3 comments)"
        },
        {
            "timestamp": 1636960536,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 25:\n\n(3 comments)"
        },
        {
            "timestamp": 1637145505,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1637145523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1637145532,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3627/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1637147399,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3627/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/30412/ : SUCCESS"
        },
        {
            "timestamp": 1637148308,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 26:\n\n(6 comments)"
        },
        {
            "timestamp": 1637572028,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1638305099,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 26: Code-Review+1"
        },
        {
            "timestamp": 1638528796,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1642916437,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1643020916,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 26: Code-Review+1"
        },
        {
            "timestamp": 1643021394,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 27."
        },
        {
            "timestamp": 1643021410,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643021410,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1643021415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3819/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1643022302,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/3819/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/35964/ : SUCCESS"
        },
        {
            "timestamp": 1643027364,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 27: Code-Review+2"
        },
        {
            "timestamp": 1643030941,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Change has been successfully rebased and submitted as ef773059fdead2135c96c4a4c3520e4752012ef0"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5d3662f873f5ad193949909b811754b7bd63c829",
            "parents": [
                "48f670e3fcc839fc6369a9d98e5fb168768ec944"
            ],
            "ref": "refs/changes/62/45362/1",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1627531287,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "pldmd/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "480d8fd4acd20852ffed073d65b66931a5925c34",
            "parents": [
                "d169dd164c3bc0d0a0b3d394bb75983a8cdf268b"
            ],
            "ref": "refs/changes/62/45362/2",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1627882956,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "pldmd/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -2
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "8be20ae4b18ed94608e515d11225495614cbddc8",
            "parents": [
                "d169dd164c3bc0d0a0b3d394bb75983a8cdf268b"
            ],
            "ref": "refs/changes/62/45362/3",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1627894228,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "In fact, this template class is redundant, and currently only supports `std::pair<bool, std::vector<uint8_t>`, so I suggest to remove this template class and merge it with FlightRecorder class."
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Agree, removed."
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "It is better to define it in meson.build, `hard-code` is not a good way"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Please use `\\n` instead of `std::endl;`"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "I do not see see any place to call this method, could you remove this method?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 97,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "It is better to set a default value, true or false"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 97,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this should be coming from the calling function that performs the save record option. is is to be set to true to indicate the request message, and false for response message."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Please use `\\n`;"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 204,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "76c57c573ae05357b719c5996589b9cf3e411412",
            "parents": [
                "d169dd164c3bc0d0a0b3d394bb75983a8cdf268b"
            ],
            "ref": "refs/changes/62/45362/4",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628020456,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Nit: Add recorderOutputFile.close();"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "ideally this should be automatically closed when it goes out of scope ..but yeah its okay to put that. Done"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 349,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Remove this line"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 349,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "81a68c7aace6dd4337cfcc9a13c8bb689cef6c09",
            "parents": [
                "d169dd164c3bc0d0a0b3d394bb75983a8cdf268b"
            ],
            "ref": "refs/changes/62/45362/5",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628065975,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 88,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "420ba03bfd0bcd77e822533d643735ca4af851f1",
            "parents": [
                "4e2ed9c5b164929036dad43bcb4be0f081b88aa9"
            ],
            "ref": "refs/changes/62/45362/6",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628150903,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "doxygen about the class"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithra.b@ibm.com",
                        "username": "Pavithrab7"
                    },
                    "message": "debug trace?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this trace is required to intimate user that we are dumping the flight recorder and to what file, as its not an error trace ,so i made it cout."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 88,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "98c0c4f174f40aa054a0f31a7f4a58afd604d0e8",
            "parents": [
                "ab8017917ee36507bcfe4aacce5bc3fff6872c0f"
            ],
            "ref": "refs/changes/62/45362/7",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628169547,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "nit: tough :-)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Can we have alias for the types like:\n\nusing ReqOrResp = bool;"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "nit: \"Tx\" & \"Rx\" will be less verbose"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "requester/request.hpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Not directly related to FlightRecorder, but we might need PrintBuffer here."
                },
                {
                    "file": "requester/request.hpp",
                    "line": 175,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "yes tom, i do have to plans to put up a separate commit that removes the traces from host-bmc handler and add verbosity to the requester code."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 185,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "9a81f9c22cc19fb9302b32addda8b8b0bca38282",
            "parents": [
                "ab8017917ee36507bcfe4aacce5bc3fff6872c0f"
            ],
            "ref": "refs/changes/62/45362/8",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628225977,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 185,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "65dfe1669ca759e9a407d8b84be8c37096adcb6a",
            "parents": [
                "ab8017917ee36507bcfe4aacce5bc3fff6872c0f"
            ],
            "ref": "refs/changes/62/45362/9",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628230214,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "337d5b14b904ea21c97ed2d35d120af38990e9c0",
            "parents": [
                "ab8017917ee36507bcfe4aacce5bc3fff6872c0f"
            ],
            "ref": "refs/changes/62/45362/10",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628235838,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Can this buffer be unbounded in terms of size? tmpfs has a bound."
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "hmm, yeah did not think of it. Then can we prefer moving this to rootfs ?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What's the plan around this? Are we going to set a boundary for the buffer?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> What's the plan around this? Are we going to set a boundary for the buffer?\n\nThe idea in my mind was that , we should not tamper with the data in the recorder- this should always replicate the messages that pldm sends and receives.\n\nI believe dumping the flight recorder should be the last resort in debugging issues related to pldm , so the data in this should always be useful. Making it a bounded buffer would lead to ambiguities on whether pldm responded to certain messages or not..or whether pldm responded with the right data or not.\n\n\nif space is the only constraint , we can probably come up with a meson option to set the location in which the recorder can be stored ?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Why do really want to use index this way (ever incrementing)?\n\nWithout timestamps, how do you know if a rollover happened?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I wanted to model a circular buffer avoiding much of allocations and deletions or pushing/popping, as there is no circular buffer in standard STL library, i thought of model it with just an index and a vector, i felt this is faster & a better solution than bringing in the boost::circular_buffer or modelling a circular bufferwrapper over std::deque.\n\nWhy do we need to know the rollover happened ? am i missing something ? \n\n- we just need the last N transactions, we are not bothered about the timestamp s because we might not be getting 1:1 request-response sequence from host as its async.\n\nIn my testing, i have seen that , if for example the max size if 10, then we rewrite the buffer[0] with 11th element."
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I have changed this logic - to not use an ever incrementing a number, instead the numbers is reset after it becomes max number."
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Have you made measurements to make sure there's no performance impact in terms of PLDM command req/resp timing requirements due to this?"
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "No, i have not done that but i had an assumption that it would have a pretty less impact on the overall communication as i am using vector with fixed size. But i would be happy to take some performance measurements if need be. Do you have certain PMCI tools in mind that i could run ?"
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "tmpfs can be cleaned up systemd periodically"
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "i was thinking that we would never had to use the flightrecoder, so i had moved it to tmp, but i guess what you said is right , as tmpfs is bounded and as certian commands can be large i guess its better to move this too /home ? or /var/lib ?"
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I much prefer we keep it in /tmp, because it it tmpfs.\n\n1. If we run out of space a reboot of the bmc will recover.\n2. Most NOR based systems actually have more RAM that can be used by tmpfs than flash space dedicated to all writable persisten storage (often 4-8MB).\n3. If persistent storage is filled it may only be possible to recover with a factory reset wiping all data."
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> I much prefer we keep it in /tmp, because it it tmpfs.\n> \n> 1. If we run out of space a reboot of the bmc will recover.\n> 2. Most NOR based systems actually have more RAM that can be used by tmpfs than flash space dedicated to all writable persisten storage (often 4-8MB).\n> 3. If persistent storage is filled it may only be possible to recover with a factory reset wiping all data.\n\nAgree on all of that. and more i feel /tmp would be better as well. And we can think about the alternatives when we get to a place when we hit problems."
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I think my original question was not clear. I meant to ask, do you plan to prevent the systemd tmpfs cleaner from cleaning this up, or not?"
                },
                {
                    "file": "meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Yes, I don't see any issues with clearing this data.\n\nMost of the time, collecting the flight recorder would be performed by the user as a form of collecting FFDC, or some Jenkins plugin that triggers and collects certain artifacts as part of collecting debugging data when something wrong. something like this \n\nhttps://github.com/openbmc/openbmc-test-automation/blob/c9d61d33c2bb64b5d5c06441a60e270da3b4c8fe/lib/openbmc_ffdc_list.py#L62\n\nSo they trigger and then collect the file immediately. letting this to be in /tmp would make things easy as it cleans up things."
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "We also need a flag to disable this if need be. Does size 0 do that?"
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "hmm with the current design mod 0 would be an exception,so it does not work but i could try to change this to have a disable option as well. Do you have an idea in mind that i could try and achieve the same with less number of ifdefs"
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "you could have code that detects 0 explicitly, saving an additional prompt to the user.\nif that affects too many places you could make a derived bool from the config value."
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> you could have code that detects 0 explicitly, saving an additional prompt to the user.\n> if that affects too many places you could make a derived bool from the config value.\n\nDone, i have derived a bool out of 0, so with the latest patchset it disables saving messages into the flight recorder buffer."
                },
                {
                    "file": "meson_options.txt",
                    "line": 20,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Do we want to enable by default?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 20,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I thought its a useful feature and could be really useful for every one so i did not provide a flag for it to enable or disable , but let me know if you don't feel this as a useful feature for debugging.\n\nI tend to not like the verbosity in pldm because it just dumps everything and clutters the journal and most of the time what is needed is just the last few commands."
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Do we care on how long those messages can be or just the number of messages? FW update messages can be huge."
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "No, we dont care about the how long the messages can be , mainly because we want to capture the exact and accurate data that we send/received from host/bmc. Any way of Wrapping them/manipulating them would not be much helpful in debugging.\n\nBut i agree that certain commands can be huge ,so i agree that /tmp might not be a good place to dump it as it is bounded."
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "is there an inherent limit due to size of the message size field?  or is it 32 bits or more?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> is there an inherent limit due to size of the message size field?  or is it 32 bits or more?\n\nNope certain PLDM messages can be bigger, like for example PLDM File IO commands transfer around 120K messages , which will be split by the mctp in the transport layer based on the MCTP MTU."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Do you see this as lab/debug only? Or as something that say phosphor-debug-collector can trigger? What if a rogue entity keeps triggering this signal?"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "We do have plans to integrate this with phosphor-debug-collector, we could probably write a dump extension so that every time we create a user initiated dump we can collect trigger the signal and collect the flight recorder data. \n\nIts a TODO on me. Do you think of any other ways on how we could integrate it with debug collector ?"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> What if a rogue entity keeps triggering this signal?\nI dont really have an answer for it , but i guess this can happen with anything in BMC, say for example i could relate this to a rouge process just doing a dbus method call to create eventlogs.\n\nDo you think we need a rate limit for this ? and stop reacting to the signal when we get X number of Signals within Y amount of time ?\n\nIf yes, i guess i could do that as well in a future commit."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I think the impact is limited as long as the result is written to the same file in tmpfs."
                },
                {
                    "file": "requester/request.hpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What if pldm_send hangs? Do we want to log this before or after?"
                },
                {
                    "file": "requester/request.hpp",
                    "line": 174,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "oh yeah, you are correct. i will move it to before called pldm_send so that we can even capture the failed messages."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 190,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "245a8805e7a14f6b83cadcffe33bbefcc2d0bbd3",
            "parents": [
                "ab8017917ee36507bcfe4aacce5bc3fff6872c0f"
            ],
            "ref": "refs/changes/62/45362/11",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628248439,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "33012cc3240ad682b9dcb36e87e4feacb3420f30",
            "parents": [
                "33ac59dd77e641111d9a10ca941edfe630e2705d"
            ],
            "ref": "refs/changes/62/45362/12",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628520818,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "requester/request.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Moving this line from  line : 175 is causing a SIGABT.\n\nAug 09 19:06:36 p10bmc pldmd[551]: terminate called after throwing an instance of 'std::bad_alloc'\nAug 09 19:06:36 p10bmc pldmd[551]:   what():  std::bad_alloc\nAug 09 19:06:36 p10bmc systemd[1]: Created slice system-systemd\\x2dcoredump.slice.\nAug 09 19:06:36 p10bmc systemd[1]: Started Process Core Dump (PID 1101/UID 0).\nAug 09 19:06:38 p10bmc systemd-coredump[1102]: Process 551 (pldmd) of user 0 dumped core.\nAug 09 19:06:38 p10bmc systemd[1]: pldmd.service: Main process exited, code=dumped, status=6/ABRT\nAug 09 19:06:38 p10bmc systemd[1]: pldmd.service: Failed with result 'core-dump'.\n\n\nAlthough i see that the requestMsg is defined as an rvalue reference in the requester infrastructure, there is just a single copy of the message that is used in the send() API to retry sending to the host. but we would also need a copy of that into the flight recorder as well\n\nI have tried :\n1. Making an override saveRecord function that takes an rvalue reference like std::vector<uint8_t>&& , and passing it to flight recorder circular buffer, it did not work.\n\n2. Tried to make a write override saveRecord function that takes raw array underneath the requestMsg vector & then fill the flight recorder using the pointer& size that did not work either.\n+    void saveRecord(const uint8_t* pldm_req_msg, size_t req_msg_len,\n+                    ReqOrResponse isRequest)\n\nWould appreciate if anyone can help me solve this issue."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "41f749f63ffc3f87d56e37a15ece36a406c88a1c",
            "parents": [
                "33ac59dd77e641111d9a10ca941edfe630e2705d"
            ],
            "ref": "refs/changes/62/45362/13",
            "uploader": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "createdOn": 1628695951,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "abe5c8c0b0ef819e921a69e22dded5bebb4165a2",
            "parents": [
                "33ac59dd77e641111d9a10ca941edfe630e2705d"
            ],
            "ref": "refs/changes/62/45362/14",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628780826,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "f7657e2023945eea24733c39852d2994f70121c0",
            "parents": [
                "33ac59dd77e641111d9a10ca941edfe630e2705d"
            ],
            "ref": "refs/changes/62/45362/15",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628783974,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "b30805983ad6a91f31a19cc99d8a146e7ebf1798",
            "parents": [
                "33ac59dd77e641111d9a10ca941edfe630e2705d"
            ],
            "ref": "refs/changes/62/45362/16",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628785843,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "common/utils.cpp",
                    "line": 526,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Please don't hide  time zone conversion in a utility.\n\nSurly there's a library for this.\n\nAhh yes, something like put_time or strftime or ...\n\nhttps://en.cppreference.com/w/cpp/io/manip/put_time\n\n\nPS: I thought all code has defaulted to GMT, with the possible exception of the gui (unknown)."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 526,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack, i would modify that."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 526,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Please don't hide  time zone conversion in a utility.\nDone."
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "size is usually in bytes, but this is a count of messages.  fightrecorder-entries? -max-entries?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 21,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> size is usually in bytes, but this is a count of messages.  fightrecorder-entries? -max-entries?\n\nDone, changed it to flightrecorder-max-entiries."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "https://en.cppreference.com/w/cpp/utility/program/signal\n\nThe behavior is undefined if ...\n\nSignal handlers are hard becasue they are an interrupt and not part of the flow the complier is modeling.\n\nFor deferal to an event loop Linux added signalfd, which moves them to a pollable fd and delivered with read:\nhttps://man7.org/linux/man-pages/man2/signalfd.2.html"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I am not sure i understand your point, can you explain a bit more ?"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "The text in the c++ standard says you can call exit, interact with atomics and constants but its undefined to do just about anything else using the standard library (unless the signal was sent by the thread itself from raise, which this is not -- its cross program signal delivery).\n\nThis is becasue a signal is basically an interrupt context and may arrive in the middle of statements when data structures are in an inconsistent state (internal state assumptions are not met as during the addition and deletion of modules).\n\nWhile it will appear to work, especially on a mostly idle interface where the request rate is low, we can expect random calls to abort(), infinite loops, address errors, and worse.\n\nMy suggestion is to move the signal to the eventloop by using a signalfd to convert the signal into a read on a (special) file descriptor.  This would not be as reliable"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 71,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> The text in the c++ standard says you can call exit, interact with atomics and constants but its undefined to do just about anything else using the standard library (unless the signal was sent by the thread itself from raise, which this is not -- its cross program signal delivery).\n> \n> This is becasue a signal is basically an interrupt context and may arrive in the middle of statements when data structures are in an inconsistent state (internal state assumptions are not met as during the addition and deletion of modules).\n> \n> While it will appear to work, especially on a mostly idle interface where the request rate is low, we can expect random calls to abort(), infinite loops, address errors, and worse.\n> \n> My suggestion is to move the signal to the eventloop by using a signalfd to convert the signal into a read on a (special) file descriptor.  This would not be as reliable\n\nDone, I a have made changes to move the signal to the eventloop."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 406,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Can you provide a reference for set_floating ?  I wasn't finding it in a search."
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 406,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "i have took the reference from the sdeventplus repository https://github.com/openbmc/sdeventplus/blob/dce7381a71d1b62ed16f001a73824fd486243cf2/example/heartbeat.cpp"
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "line": 406,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "@patrick can you help? Google is finding that example and a method for setting the floating property for a lua window."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "5e03854d545d483dcd4f40c744ca0684d10bc5d0",
            "parents": [
                "941d56fb2b78a1b76dc90ebdbff8b607af47c833"
            ],
            "ref": "refs/changes/62/45362/17",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1633671828,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "c668f366c3dc6b7d490dfcd856bd8ca941112bf9",
            "parents": [
                "3606ef97e7630ed15a03d3a4ceae29a215e0c833"
            ],
            "ref": "refs/changes/62/45362/18",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1633672784,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "4949a79a446d2f1d860804d662ffcb224d706cf7",
            "parents": [
                "bca2db62f52b5e5c1f852567edc2c0bbb59d6504"
            ],
            "ref": "refs/changes/62/45362/19",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1633685053,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "45469d0610a1a371591c2536d30a66a088fe82c5",
            "parents": [
                "a75343f207029c1931c0a7961b4fedc7de65bd8c"
            ],
            "ref": "refs/changes/62/45362/20",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1633689788,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "d052a0fab08f039f34416cadd161daeab74ca62a",
            "parents": [
                "49200df17dca4525ad115991d36f64dec9eeef6e"
            ],
            "ref": "refs/changes/62/45362/21",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1635923774,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -1
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 1
        },
        {
            "number": 22,
            "revision": "026934728fa0f627b3b408a54c09b2e2555a6080",
            "parents": [
                "42d995af4fc0037cee898e61f34836e126081e55"
            ],
            "ref": "refs/changes/62/45362/22",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1635925460,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "common/utils.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why aren't you using std::chrono::system_clock::now() for this?  Or high_resolution_clock::now() if you need that additional detail (which it looks like you don't).\n\nUsing the C++ clock routines would greatly reduce the math involved here and is guaranteed to be correct."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 558,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This code might not correctly handle days with leap-seconds."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 558,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 564,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is it common practice to use sprintf in this repository?"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 564,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Is it common practice to use sprintf in this repository?\n\nNope, nothing like that. I changed the utility function to use std::chrono & changed this to stringstream."
                },
                {
                    "file": "meson.build",
                    "line": 39,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this really useful to be able to configure?  I don't think we should use meson-options for a way to create static constants."
                },
                {
                    "file": "meson.build",
                    "line": 39,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Nope, its not useful. You are correct. removed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -1
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 1
        },
        {
            "number": 23,
            "revision": "1607665b0cf1fb559493c7c51e3214e4d9d83490",
            "parents": [
                "bdf56f0475f8f8f9cae7888a6aec6b3cd550a906"
            ],
            "ref": "refs/changes/62/45362/23",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1636187850,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 250,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "133d2e58a6a363059dd6ef5cc276e5d7b8dcf350",
            "parents": [
                "bdf56f0475f8f8f9cae7888a6aec6b3cd550a906"
            ],
            "ref": "refs/changes/62/45362/24",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1636203216,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "common/utils.cpp",
                    "line": 529,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There is no reason to have a function return a const r-value.  And you can't have it return an l-value or reference because you're creating it inside the function (and that is typically bad practice anyhow)."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 529,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 537,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why in the world is there all this casting?  Doesn't system_clock::now return you a time_point??"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 537,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "look like i have over complicated the logic, you are correct. Done."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 546,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is all this really better than just using 'tp.hours()', etc?"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 546,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I am not sure what API are you talking about, but the reason why i had to do this was to get the milliseconds, without milliseconds the time stamp is not very useful as the last 5 out of the 10 transactions that are stored in the pldm flight recorder would be having the exact same time in seconds."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 546,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I was confusing time_point with duration.  Looks like what you've proposed here is similar to what is suggested in the example for time_point on cppreference."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 546,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 249,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "c31d55e412250984e04817f555d449d2f612d60e",
            "parents": [
                "38b6e5fb49e5b82c5a4ef09072798bd3db05f455"
            ],
            "ref": "refs/changes/62/45362/25",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1636538214,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 44,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What's the largest message that you've tested this with? For eg, what happens when you do something like FW update or IBM dump offload from host?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 44,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "This change has been present in IBM downstream drivers for almost a couple of months now which will be tested thoroughly and we did not hit any issues.\n\nBut if you are saying , when we dump the recorder and if the message sizes are bigger and fill up the /tmp. Then yes, it is definitely possible that we can fill /tmp.\n\nWe were able to fix couple of PDR exchange and lid file transfer issues with this, but those are typically not more than 200k."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 44,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Can you please confirm this has been tested for dump offload from host?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 44,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Hi Deepak, I have been trying this for almost a week now. Unfortunately, IBM dump offload functionality is pretty badly broken. \n\nI will revert back with the results once I test."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 44,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Hi Deepak,\n\nI have tried this patch with the IBM dump offload(system dump), and i don't see any issues. The also see the max flight recorder side did not exceed more than 4 MB in my testing."
                },
                {
                    "file": "common/utils.cpp",
                    "line": 539,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I would suggest: \"%F %Z %T.\"\n\nhttps://en.cppreference.com/w/cpp/io/manip/put_time"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 539,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 540,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Would be nice if we could get rid of this magic number.  At a minimum maybe move it up to line 535?"
                },
                {
                    "file": "common/utils.cpp",
                    "line": 540,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 243,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "ef0f1268fe123c3feb4bfe17dca0bf3e64f73b3b",
            "parents": [
                "77aef218a514d34c03bc024d83f83e334035792e"
            ],
            "ref": "refs/changes/62/45362/26",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1637145505,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 241,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "cd65774bce0a5123d6ae1067f9b16e8fd74560e0",
            "parents": [
                "fe593a17829f8df1b5cbcb76c7e29960533372b8"
            ],
            "ref": "refs/changes/62/45362/27",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1643021394,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 240,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "ef773059fdead2135c96c4a4c3520e4752012ef0",
            "parents": [
                "fb07542f39a32fee86b4e06d0932299e75fe2921"
            ],
            "ref": "refs/changes/62/45362/28",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1643030941,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "pldmd/pldmd.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "common/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "requester/request.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "common/utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "common/utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 240,
            "sizeDeletions": 0
        }
    ]
}