{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "topic": "entity-manager-refactoring",
    "id": "I498e0d93091cae43e59907ee1908afc97ac601ee",
    "number": 52816,
    "subject": "EntityManager: Make MapperGetSubTreeResponse type comprehensible",
    "owner": {
        "name": "Andrew Jeffery",
        "email": "andrew@aj.id.au",
        "username": "amboar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/52816",
    "commitMessage": "EntityManager: Make MapperGetSubTreeResponse type comprehensible\n\nFrom there, rework a bunch of uses of the unaliased types to use the new\naliased types and fix up some of the variable names to improve\nreadability.\n\nSigned-off-by: Andrew Jeffery <andrew@aj.id.au>\nChange-Id: I498e0d93091cae43e59907ee1908afc97ac601ee\n",
    "createdOn": 1649726864,
    "lastUpdated": 1649866082,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1649726864,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1649726891,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649726891,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1649727150,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40962/ : SUCCESS"
        },
        {
            "timestamp": 1649729410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1649729767,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649730042,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1649732236,
            "reviewer": {
                "name": "Sui Chen",
                "email": "suichen@google.com",
                "username": "quadpixels"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1649738242,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1649744489,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1649765089,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1649765118,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649765118,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1649765380,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41028/ : SUCCESS"
        },
        {
            "timestamp": 1649775818,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1649775834,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1649807086,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1649832538,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1649832562,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649832562,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1649832824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41109/ : SUCCESS"
        },
        {
            "timestamp": 1649865937,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1649866082,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "0d5935a38568c948de1f43debeaff7b363e6f9bd",
            "parents": [
                "6febbffbb7f6274f23a1b6f949a9a7ca19dab331"
            ],
            "ref": "refs/changes/16/52816/1",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1649726864,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/EntityManager.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like one step too far.  Inventing a using definition that's longer than the original name, and obfuscates it.  Same thing with DBusInterfaceName, and DBusPath.  DBusPath is especially confusing, because sdbusplus already has a dbus path type, which isn't std::string, so IMO lets avoid the confusion and keep these down to one level of indirection.\n\nThe rest seems fine though.  FWIW I just finished getting the bmcweb versions of these in order, and I landed on vector<pair<str, str>> being a better fit in these cases.  Not sure if this is the same or not"
                },
                {
                    "file": "include/EntityManager.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> This seems like one step too far.  Inventing a using definition that's longer than the original name\n\nThe purpose wasn't to end up with something with less characters, rather it was to have something more descriptive. A bunch of maps keyed by a string made it harder to keep track of what the keys _meant_.\n\nThis made it easier for me but if you're set on it then I'll discard the std::string aliases.\n\n> The rest seems fine though.  FWIW I just finished getting the bmcweb versions of these in order, and I landed on vector<pair<str, str>> being a better fit in these cases.\n\nOkay, however I'd like to keep any changes to the data structures separate, this was just a patch to make what's already here easier to think about."
                },
                {
                    "file": "include/EntityManager.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I've dropped the string aliases."
                },
                {
                    "file": "include/EntityManager.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This made it easier for me but if you're set on it then I'll discard the std::string aliases.\n\nI'm not super set on it, just something that I've observed in the past, especially with DBusPath type definitions, and people getting confused that DBusPath != sdbusplus::message::object_path."
                },
                {
                    "file": "include/EntityManager.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ack.\n\nI had another thought on what might be contributing to issues here:\n\nDBus concepts, especially interfaces, are well-defined in the sense that a given interface definition has a closed set of properties (and their types). In a frictionless vacuum, an interface would map to a specific struct with appropriate members. Again in the frictionless vacuum, the results from the mapper could be represented by a variant of all the possible interface structs. However we're not in the frictionless vacuum and that approach feels impractical, instead we're collapsing the (open) set of all possible interfaces into a type - a map - and thus we're forced to divorce the name of the interface from the interface itself (the set of properties and their values). And from there we get the weird \"interface name\" vs \"interface\" distinction that I'm addressing here, and a host of other issues."
                },
                {
                    "file": "include/EntityManager.hpp",
                    "line": 38,
                    "reviewer": {
                        "name": "Sui Chen",
                        "email": "suichen@google.com",
                        "username": "quadpixels"
                    },
                    "message": "I tried to wrap my head around the various types and their friends and it turns out some are from `org.freedesktop.DBus.Properties` and some are from `xyz.openbmc_project.ObjectMapper`:\n\n```\nDBus type     EntityManager  bmcweb                       DBus method\na{sa{sas}}    DBusSubtree    MapperGetAncestorsResponse   (1)\n   a{sas}     DBusObject     MapperGetObject              (2)\n      \n     {sv}     DBusInterface  DBusPropertiesMap            (3)\n```\n\n(1) GetAncestors or GetSubTree\n(2) GetObject, or sub-results of GetAncesotrs & GetSubTree\n(3) Properties.GetAll\n\nIt seems bmcweb binds std::vector to a dictionary type (and some other code I saw also does this), I looked it up again and it seems they really are associative arrays."
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Is this something that should be converted to DBusInterface?  (Not really sure of the context here so it may not make sense, I'm just sort of pattern-matching types.)"
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I may have converted it in a later patch."
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I've squashed the other patches into this one."
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Given the call site I'm guessing this one probably should be DBusInterface though?"
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Oh, except I see now both this and the one above are taken care of in https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/52819 -- any particular reason not to fold those into this same patch?"
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I can squash them all down, just thought it might be easier to review if I broke them up a bit."
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I've squashed the other patches into this one."
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 379,
                    "reviewer": {
                        "name": "Sui Chen",
                        "email": "suichen@google.com",
                        "username": "quadpixels"
                    },
                    "message": "I guess this is a `DBusObject`?"
                },
                {
                    "file": "src/PerformScan.cpp",
                    "line": 379,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Right. I was on the fence about changing it, what do you think? The code might be easier to follow if we change it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -9
                },
                {
                    "file": "src/PerformScan.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 14
        },
        {
            "number": 2,
            "revision": "c17990d7309ee1d9ff85eb6fb0264f8bf85fa7e5",
            "parents": [
                "9152d5fc4fe26f0930f9e7943623127eb1aa3e21"
            ],
            "ref": "refs/changes/16/52816/2",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1649765089,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -9
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                },
                {
                    "file": "src/PerformScan.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -12
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -28
                },
                {
                    "file": "test/test_entity-manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -18
                }
            ],
            "sizeInsertions": 68,
            "sizeDeletions": 77
        },
        {
            "number": 3,
            "revision": "1983d2f4169e8ce84cb0cefb22e4d5d1e720bc6e",
            "parents": [
                "402fa1cdf631729fa107797097c27aa016b65ac5"
            ],
            "ref": "refs/changes/16/52816/3",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1649832538,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -9
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                },
                {
                    "file": "src/PerformScan.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -12
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -28
                },
                {
                    "file": "test/test_entity-manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -18
                }
            ],
            "sizeInsertions": 69,
            "sizeDeletions": 77
        }
    ]
}