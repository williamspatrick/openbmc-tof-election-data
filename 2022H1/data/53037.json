{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ib5eee2c93aeb209157191055975c127759d73627",
    "number": 53037,
    "subject": "bmcweb: Fetch Satellite Config from D-Bus",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/53037",
    "commitMessage": "bmcweb: Fetch Satellite Config from D-Bus\n\nAdds a RedfishAggregator class which is able to pull configuration\ninformation from D-Bus for Satellite BMCs.  These BMCs will be\naggregated by Redfish Aggregation.  Also added is a new compiler\noption which will be used to enable Redfish Aggregation.\n\nThis patch only allows configurations with unencrypted and\nunauthenticated satellite BMC communication.  Support for encryption\nand authentication willneed to be added in future patches.\n\nNote that this patch does not actually use the config information\nafter it has been fetched.  That functionality will be added in\nfuture patches.\n\nTested:\nI made this example config information available on D-Bus\nbusctl introspect xyz.openbmc_project.EntityManager \\\n/xyz/openbmc_project/inventory/system/board/SatelliteBMC/aggregated0 \\\nxyz.openbmc_project.Configuration.SatelliteController\nNAME                                                  TYPE      SIGNATURE RESULT/VALUE          FLAGS\n.AuthType                                             property  s         \"None\"                emits-change\n.Hostname                                             property  s         \"127.0.0.1\"           emits-change\n.Name                                                 property  s         \"aggregated0\"         emits-change\n.Port                                                 property  t         443                   emits-change\n.Type                                                 property  s         \"SatelliteController\" emits-change\n\nThat information was picked up by the changes in this CL:\n[DEBUG \"redfish_aggregator.hpp\":80] Found Satellite Controller at /xyz/openbmc_project/inventory/system/board/SatelliteBMC/aggregated0\n[DEBUG \"redfish_aggregator.hpp\":209] Added satellite config aggregated0 at http://127.0.0.1:443\n[DEBUG \"redfish_aggregator.hpp\":52] Redfish Aggregation enabled with 1 satellite BMCs\n[DEBUG \"redfish_aggregator.hpp\":21] There were 1 satellite configs found at startup\n\nSigned-off-by: Carson Labrado <clabrado@google.com>\nChange-Id: Ib5eee2c93aeb209157191055975c127759d73627\n",
    "createdOn": 1650325536,
    "lastUpdated": 1653333639,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1650325536,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1650325561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650325566,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1650325998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41485/ : FAILURE"
        },
        {
            "timestamp": 1650327328,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1650327341,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650327341,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1650328012,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41486/ : SUCCESS"
        },
        {
            "timestamp": 1650328160,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1650386623,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1650386635,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650386635,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1650386650,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1650387229,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41617/ : SUCCESS"
        },
        {
            "timestamp": 1650391010,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1650391025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650391025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1650391619,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41622/ : SUCCESS"
        },
        {
            "timestamp": 1650392478,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1650397834,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1650572395,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1650572413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650572413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1650572446,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41866/ : FAILURE"
        },
        {
            "timestamp": 1650573255,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1650909573,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1650909591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650909591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1650910027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41940/ : FAILURE"
        },
        {
            "timestamp": 1650914823,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1650914835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650914836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1650915439,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41948/ : SUCCESS"
        },
        {
            "timestamp": 1650917435,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 7:\n\n(3 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1650994532,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased."
        },
        {
            "timestamp": 1650994555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1650994555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1650995160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41988/ : SUCCESS"
        },
        {
            "timestamp": 1650997287,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1651002054,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1651002075,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651002076,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1651002108,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/41995/ : FAILURE"
        },
        {
            "timestamp": 1651002225,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1651002240,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651002240,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1651002849,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41997/ : SUCCESS"
        },
        {
            "timestamp": 1651086938,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1651162131,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 11: Patch Set 10 was rebased."
        },
        {
            "timestamp": 1651162154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651162154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1651163202,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42216/ : SUCCESS"
        },
        {
            "timestamp": 1651280760,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1651280774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651280774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1651281375,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42379/ : SUCCESS"
        },
        {
            "timestamp": 1651341037,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1651341958,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(6 comments)"
        },
        {
            "timestamp": 1651512366,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1651522192,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 12:\n\n(7 comments)"
        },
        {
            "timestamp": 1651528386,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1651528404,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651528405,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1651528445,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42452/ : FAILURE"
        },
        {
            "timestamp": 1651529195,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1651529212,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651529212,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1651529244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42453/ : FAILURE"
        },
        {
            "timestamp": 1651529997,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1651530032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651530032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1651530711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42455/ : SUCCESS"
        },
        {
            "timestamp": 1651532465,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 16: Commit message was updated."
        },
        {
            "timestamp": 1651534334,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 16:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1651539998,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1651699558,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 17: Patch Set 16 was rebased."
        },
        {
            "timestamp": 1651699583,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1651699583,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1651700244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42608/ : SUCCESS"
        },
        {
            "timestamp": 1651802472,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1651859981,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(7 comments)"
        },
        {
            "timestamp": 1651860529,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(7 comments)"
        },
        {
            "timestamp": 1652125363,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1652220464,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1652220484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652220484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1652221160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42992/ : SUCCESS"
        },
        {
            "timestamp": 1652221211,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 18:\n\n(8 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1652285264,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 19: Patch Set 18 was rebased."
        },
        {
            "timestamp": 1652285282,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652285283,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1652286013,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43040/ : SUCCESS"
        },
        {
            "timestamp": 1652286721,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1652287627,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 20: Patch Set 19 was rebased."
        },
        {
            "timestamp": 1652287648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652287648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1652288056,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1652288334,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43045/ : SUCCESS"
        },
        {
            "timestamp": 1652292797,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1652300717,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1652300734,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652300734,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1652300837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43058/ : FAILURE"
        },
        {
            "timestamp": 1652300946,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1652300963,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652300963,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1652301404,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43059/ : FAILURE"
        },
        {
            "timestamp": 1652305388,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1652305403,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652305404,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1652305842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43061/ : FAILURE"
        },
        {
            "timestamp": 1652306666,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 24."
        },
        {
            "timestamp": 1652306699,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652306699,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1652306734,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43062/ : FAILURE"
        },
        {
            "timestamp": 1652306838,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1652306854,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652306854,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1652307309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43063/ : FAILURE"
        },
        {
            "timestamp": 1652307496,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1652307513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652307514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1652308213,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43064/ : SUCCESS"
        },
        {
            "timestamp": 1652308692,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 26:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1652372034,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(2 comments)"
        },
        {
            "timestamp": 1652372052,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1652732763,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 27: Patch Set 26 was rebased."
        },
        {
            "timestamp": 1652732783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652732783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1652733474,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43321/ : SUCCESS"
        },
        {
            "timestamp": 1652777668,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 27:\n\n(1 comment)"
        },
        {
            "timestamp": 1652805982,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 28: Patch Set 27 was rebased."
        },
        {
            "timestamp": 1652805997,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652805998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: -Ok-To-Test"
        },
        {
            "timestamp": 1652806564,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1652806795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43398/ : SUCCESS"
        },
        {
            "timestamp": 1652807504,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1652809247,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 28:\n\n(6 comments)"
        },
        {
            "timestamp": 1652815971,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1652833726,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 29: Patch Set 28 was rebased."
        },
        {
            "timestamp": 1652833754,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652833754,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: -Ok-To-Test"
        },
        {
            "timestamp": 1652834459,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43438/ : SUCCESS"
        },
        {
            "timestamp": 1652916569,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1653012630,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 30."
        },
        {
            "timestamp": 1653012647,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653012648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: -Ok-To-Test"
        },
        {
            "timestamp": 1653013342,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43553/ : SUCCESS"
        },
        {
            "timestamp": 1653013401,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 30:\n\n(7 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1653241651,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 30:\n\n(4 comments)"
        },
        {
            "timestamp": 1653329197,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 31."
        },
        {
            "timestamp": 1653329271,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653329271,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: -Ok-To-Test"
        },
        {
            "timestamp": 1653330079,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43624/ : SUCCESS"
        },
        {
            "timestamp": 1653330245,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 31:\n\n(3 comments)"
        },
        {
            "timestamp": 1653333610,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31: Code-Review+2"
        },
        {
            "timestamp": 1653333639,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 7fb33566cfccc26694e95b2c3601eb477359c54a"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "00965129f6a5b0c0be196fb344f165dbe99d02c6",
            "parents": [
                "995105e94c3ee96e529cf8197f7e32f47d4527a9"
            ],
            "ref": "refs/changes/37/53037/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650325536,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 165,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 201,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "c297a541584eef6360155c95cfaf45a1f4f81eee",
            "parents": [
                "995105e94c3ee96e529cf8197f7e32f47d4527a9"
            ],
            "ref": "refs/changes/37/53037/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650327328,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 580,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "You'll also want to add a d-bus match in case new config objects are added after bmcweb has already started"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 580,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I have added the match"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 599,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "I recommend factoring out the config loading part so you can share it between the call to object manager and handling match callbacks from new interfaces being added"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 599,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1..... please break this method up a bit.  At a minimum, drop the entire contents of the lambda into its own method, outside of the class definition."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 599,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I have broken up the method.  HttpClient() now only calls registerSatelliteConfigSignal() to register a D-Bus match for satellite configs and getSatelliteConfigs() which queries the D-Bus for satellite config information.  The parsing of the properties of a single satellite config object is further separated into parseSatelliteConfig().\n\nThe match event handler ultimately calls getSatelliteConfigs()."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 682,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "Would make debugging easier to have the name of the config (or maybe the object path instead?) in the error message"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 682,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I do print the object path right before I begin populating and then checking the config info.  If one of these checks fail then they would be printed on the very next line in the debug logs.\n\nI have added the name of the config to the rest of these failure statements"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 156,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "049d9cb2700e5d4f2339b8fa19893ea037066a46",
            "parents": [
                "995105e94c3ee96e529cf8197f7e32f47d4527a9"
            ],
            "ref": "refs/changes/37/53037/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650386623,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 163,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "22bf54deca23cba52805cf71678bbd9d09406ef9",
            "parents": [
                "b0167d68001282d53865a4df26d90a657562aac1"
            ],
            "ref": "refs/changes/37/53037/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650391010,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In terms of long term data storage data structures, please store these as boost::urls::url to ensure we maintain better safety.  Ideally the whole system would be using that struct (and there are patches in the works to improve the situation)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I have completely removed that struct in favor of using boost::urls::url as the container for the satellite config information."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For the first implementation, lets just go to dbus every time to simplify the first patchset (yes, it will slow things down, that's ok).\n\nFWIW, we need a generic \"cache dbus data\" mechanism for many....many other things, so this might fall into a more generic category where we solve the whole problem space, not just for Satelite configs."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Since this CL doesn't use the information I store in the map, I'm not sure how much that change will simplify this patchset.  Are you referring to not also setting up a D-Bus match for new satellites like Benjamin requested in his comment?  If so I can move that into a subsequent CL and just focus on breaking up the config loading code.\n\nWill I need to wait until that \"cache dbus data\" mechanism is added before I can store the satellite config info?  I'm planning to use the presence of satellite config info as an indicator that Redfish Aggregation is enabled.  Going to D-Bus every time will slow down not just aggregation operations, but also every endpoint that supports aggregation.  I want to double check that the future slowdown is alright for that as well."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Since this CL doesn't use the information I store in the map, I'm not sure how much that change will simplify this patchset.  Are you referring to not also setting up a D-Bus match for new satellites like Benjamin requested in his comment?\n\nCorrect\n\n>  If so I can move that into a subsequent CL and just focus on breaking up the config loading code.\n\nYes.  That's the whole point of what I was asking for.  Split up the patches into a progression from simple -> complex.\n\n> \n> Will I need to wait until that \"cache dbus data\" mechanism is added before I can store the satellite config info?\n\nNo.  In a perfect world, you'd write a generic class for that, but I understand that's a bit of a daunting task, so I'm not going to require it, just be thinking about it.  IMO, the ideal class would look something like\n\n\nclass DbusEventWatcher{\nDbusEventWatcher(string dbusPathPrefix, span<string> interfacesToListenFor, std::function<void(EventData)>())\n}\n\nThen on construction, it would handle the get/introspect requests to determine all of the things that exist, and call the callback.\n\n\n>  I'm planning to use the presence of satellite config info as an indicator that Redfish Aggregation is enabled.\n\nThat seems fine to me, although I'm not sure if a global enable/disable matters much.  If the array of satellite configs is 0, we'll basically do nothing, right?  We just avoid one dbus call.\n\n>  Going to D-Bus every time will slow down not just aggregation operations, but also every endpoint that supports aggregation.\n>  I want to double check that the future slowdown is alright for that as well.\n\n\nYep;  This needs discussed more, and we need to characterize the impact.  For the moment, I suspect that an \"enable aggregation\" compiler flag is warranted just so we can have a trap door for people to avoid the aggregation \"slowdown\" altogether, but I suspect there's a happy medium where the aggregation code just causes no slowdown if there are no satellite configs."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Yes.  That's the whole point of what I was asking for.  Split up the patches into a progression from simple -> complex.\nI ended up adding the matching because at the time I wasn't sure at what point its code would overlap with the original config lookup.  I'll break the matching into a separate CL.\n\n> That seems fine to me, although I'm not sure if a global enable/disable matters much.  If the array of satellite configs is 0, we'll basically do nothing, right?  We just avoid one dbus call.\nThat's correct for most instances.  I believe getting collections like \"/redfish/v1/Chassis\" would require two calls: 1) the initial check to see if a request needs to be forwarded rather than handled locally and 2) a check after the collection has been pulled to see if collection information needs to be added from any satellites.\n\n> I suspect there's a happy medium where the aggregation code just causes no slowdown if there are no satellite configs.\nThat comes into play in this future patch that's a WIP as of right now (https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53310).  I'll have a method that uses unordered_map satelliteInfo.empty() in some form as an initial check to determine if we need to go through the aggregation flow.  That should avoid the slowdown since we won't have to make any D-Bus reads."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> That's correct for most instances\nActually you will have to make the two checks on every resource that's located on the aggregating BMC, not just the collection endpoints.  That's because any URIs in that response will need to be modified so that the \"main_\" prefix is added."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ">  \"main_\" prefix is added.\n\nI don't quite understand this, but lets follow up on a different thread where the code is actually doing this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 163,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 1
        },
        {
            "number": 5,
            "revision": "e225f48cac30e90314cf724f13894d67d7a7274e",
            "parents": [
                "b0167d68001282d53865a4df26d90a657562aac1"
            ],
            "ref": "refs/changes/37/53037/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650572395,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 392,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 428,
            "sizeDeletions": 1
        },
        {
            "number": 6,
            "revision": "bc4017deed27738f86c7772c4cf0bfa6c20d3538",
            "parents": [
                "b0167d68001282d53865a4df26d90a657562aac1"
            ],
            "ref": "refs/changes/37/53037/6",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650909573,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 340,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 376,
            "sizeDeletions": 1
        },
        {
            "number": 7,
            "revision": "6daf695f488653512eb969a913727291f8491f1b",
            "parents": [
                "b0167d68001282d53865a4df26d90a657562aac1"
            ],
            "ref": "refs/changes/37/53037/7",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650914823,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 262,
            "sizeDeletions": 1
        },
        {
            "number": 8,
            "revision": "41c2714fed22b9a194dc506bccb033d97f73240d",
            "parents": [
                "de40a6ca3d10647cb2064c6ea4a9ed8eeb22b284"
            ],
            "ref": "refs/changes/37/53037/8",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1650994532,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "Might be worth using BMCWEB_LOG_INFO for this in case there's an error parsing the config so we'll know which object had the problem"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Good point.  I made that change and also changed the status messages that notify whether or not redfish aggregation has been enabled to be BMCWEB_LOG_INFO as well.  I figure that is important information to know considering how wide ranging the impact should be.  \n\nDo you think it would be overkill to also reveal the exact configuration details for each satellite that gets added, i.e. change line#798 to BMCWEB_LOG_INFO?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We're not super careful about this, but I would classify that information as BMCWEB_LOG_DEBUG level information."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Sorry, but are you saying all of that information should be BMCWEB_LOG_DEBUG and none of what Benjamin and I mentioned should be BMCWEB_LOG_INFO?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Listing ALL satellite controllers on the system, yes, I would expect it to be DEBUG level logging, not INFO, with that said, we're not very careful about this, and most logging is disabled most of the time, so I'm not going to make a big deal of this;"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Reopening this in light of recent comments.  Please advise if this is acceptable:\n\nNow that we will be querying satellite controllers on each request I have changed these INFO messages to DEBUG messages to reduce clutter when debug logging is not enabled."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 675,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Either one is fine.  FWIW, in bmcweb, logging is generally either enabled or disabled, with no in between that's explicitly selectable without patching a line of code in webserver_main, and in general, I haven't seen anyone actually do that.\n\nJust make sure that you're disabling logging anytime you do any sort of performance testing, and we should be fine."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 262,
            "sizeDeletions": 1
        },
        {
            "number": 9,
            "revision": "a519b04105c3680631670d351563dd2e711ce994",
            "parents": [
                "de40a6ca3d10647cb2064c6ea4a9ed8eeb22b284"
            ],
            "ref": "refs/changes/37/53037/9",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651002054,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 262,
            "sizeDeletions": 1
        },
        {
            "number": 10,
            "revision": "049e19f12ff0b596c4303d7eb29b07622f8b76bb",
            "parents": [
                "de40a6ca3d10647cb2064c6ea4a9ed8eeb22b284"
            ],
            "ref": "refs/changes/37/53037/10",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651002225,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 262,
            "sizeDeletions": 1
        },
        {
            "number": 11,
            "revision": "9ce44b78a83c927b932f601600ecfe2dd24206d6",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/11",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651162131,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 262,
            "sizeDeletions": 1
        },
        {
            "number": 12,
            "revision": "236516d1e63e83d5a430965747be8399963fe15f",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/12",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651280760,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looking pretty good."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We need to have a little discussion about separation of concerns here.  Right now we're just packing everything into the HttpClient class, which doesn't seem appropriate, and is making this patchset really hard to review.\n\nIMO (and yes, this is opinion, I'm happy to have my mind changed) we need:\n\n1. A class for the generalized idea of an \"Http request sender\" that encapsulates a generic HTTP layer.\n2. A class for EventService, that has class #1 as a member variable\n3. A class for aggregation, that has class #1 as a member variable.\n\n\nDoes that seem reasonable in terms of how to break this problem down?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Yeah the aggregation code is adding unnecessary bloat to HttpClient.  I think your suggestion is reasonable.  I'll make aggregation its own class in the vein of EventService.  That's going to play much better with future patches where I'll need to add aggregation specific public methods."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "In this new patchset I have created a completely separate RedfishAggregator class to handle all of the aggregation features.  HttpClient is being left as is since it is generic enough to be used by both EventService and RedfishAggregator"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Excellent."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 589,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, when using string as a map member, it helps to denote what it is;  in this case, it's a name (I think a url piece name) mapped to a url."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 589,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "It's a name that's used as an aliases for a satellite BMC like \"Aggregated0\" or \"Aggregated1\".  It's a mapped to a url but really that's just used to store the basic information needed to connect to that BMC.  That name is later added as a prefix to a resource ID in the URI path of a request to that satellite."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 589,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've added the additional designation"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 721,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "hmmmmm.... this kind of assumption has burned us in the past.  underscore tends to get used A LOT in names of components.  I wonder if we could come up with a rule like, underscores in the name get % encoded, to ensure they don't conflict.  Maybe there's a better delimiter we could use like a word?\n\n\n<name>_remoteid_<remoteid> ?\n\nthen when we do the split we would search for \"_remoteid_\"  Thinking out loud a bit here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 721,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "In this instance the Name would be in the form of something like \"Aggregated0\", \"Aggregated1\", etc. which would serve as the prefix used in the aggregated URL.  Not allowing underscores in the prefix doesn't seem too limiting since they'd still be able to be used in component names.  Using % encoding for underscores in the prefix seems like an alright compromise to me.  \n\nI like being able to assume that if aggregation is active then we'll be able to parse a URI like \"/redfish/v1/Chassis/{ChassisId}\" and assume that all text before the first underscore in \"{ChassisId}\" is actually the prefix that indicates which BMC the request is meant for (i.e. {ChassisId} == <Name>_<RemoteChassisId>).\n\nI think even with a word delimiter we have the same issue where we can't be sure that there wouldn't be collisions, although the likelihood would be greatly reduced.  It also makes the aggregated IDs much wordier.  I think putting some sort of restriction on what can be used as a name/prefix is the way to go."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 721,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The issue your idea imposes is that now we need to add prefixes to every ID, so we can differentiate between \"is on the bmc\" and \"is aggregated\".\n\nChanging the IDs is difficult because of things like:\nhttps://github.com/openbmc/webui-vue/issues/43\n\nThat client implementations tend to do.  If we can avoid changing the existing IDs, I'd really like to, and the existing IDs contain underscores;  If we had a fixed string, like \"aggregated\" at the front, that might work, then we just tell people they can't call a device \"aggregated\" which seems reasonable."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 721,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I noticed the hardcoded IDs and I have a later patch that works around that: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53310.  I haven't requested review as of posting this message because I am working through feedback on earlier patches in the chain.  \n\nBasically I perform a check before the request is actually handled.  If aggregation is enabled then I extract the prefix, delete it from the request's path, and then either forward the request to the associated satellite BMC or let the request be handled normally.\n\nThat allows the use of prefixes with IDs without having to change any of the existing paths.  The only constraint is I have to be able to extract the prefix from the ID, hence why I want to assume the prefix will not include underscores."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 729,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the dbus config for this, would it make more sense to just store this as a url?\n\nie\n\nRemoteRedfishRoot = \"https://192.167.1.1:443/redfish/v1\"\n\nThen use the functions we already have (parseUrlFromPieces I think is the one) to parse it into something more specific?\n\nI'm genuinely asking, what you wrote is fine, I'm just curious if just having a url would prevent an explosion of parameters.  For example, in this, I forsee needing to add  encryption at some point."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 729,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I don't think it'll make too much of a difference in the end.  In addition to encryption we will need to add other fields down the line like \"user\" and \"password\" for authentication.  I'm assuming we wouldn't want to squeeze all of that into a single \"RemoteRedfishRoot\" field so we'd still end up with more than just two fields.  In the dbus config I like having to explicitly set each individual parameter as its own field for readability purposes.\n\nWhat if for a future change support was added for \"RemoteRedfishRoot\" so that you could use either style or a combination of the two to provide satellite information?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 729,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I don't think it'll make too much of a difference in the end.  In addition to encryption we will need to add other fields down the line like \"user\" and \"password\" for authentication.  I'm assuming we wouldn't want to squeeze all of that into a single \"RemoteRedfishRoot\" field so we'd still end up with more than just two fields.\n\nusername and password, probably not.\n\n>  In the dbus config I like having to explicitly set each individual parameter as its own field for readability purposes.\n\nSure, like I said, I'm ok with it, it just makes it different than say, event service, which takes a full uri.\n\n> \n> What if for a future change support was added for \"RemoteRedfishRoot\" so that you could use either style or a combination of the two to provide satellite information?\n\nI'd much rather be strict in what we accept for one form or the other.  Having multiple ways to declare configs is a recipe for behavior that's inconsistent.  Even in the URI model we have in EventService we've found that there's differences in behavior.\n\nI'm fine with this as-is."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 776,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  Can we assume http here?  Redfish the spec generally is implemented as https, although might not be in this case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 776,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "For this patch I wanted to assume that there is no authentication and TLS required to communicate with a satellite BMC.  I'm going to leave supporting those features to a future patch.\n\nSetting the scheme as http seemed like the appropriate way within boost::urls::url to denote that the config had selected no authentication.  Previously I was storing an \"authType\" field in my custom struct."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 776,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> For this patch I wanted to assume that there is no authentication and TLS required to communicate with a satellite BMC.  I'm going to leave supporting those features to a future patch.\n\nCan you make mention of that in your commit message?  I think it's fine, the only thing I worry about is http being the \"default\" if no encryption property is specified, but I suspect that will come in short order.  FWIW, \"encryption\" should be a required parameter at some point.\n\n> \n> Setting the scheme as http seemed like the appropriate way within boost::urls::url to denote that the config had selected no authentication.  Previously I was storing an \"authType\" field in my custom struct.\n\nI'm assuming you meant \"encryption\", not \"authentication\" here, but yes, I think you got the URI behavior right."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 776,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Can you make mention of that in your commit message? \nDone\n\n> I'm assuming you meant \"encryption\", not \"authentication\" here\nNo I meant authentication as in a satellite BMC could require users to login.  The aggregating BMC would need a username and password to login first so that it could acquire an Auth-Token.  I don't want to add support for that as part of this patch.  Using \"http\" to denote this is at best confusing so I'm open to changing the code if there's a way to separate encryption and decryption within boost::urls::url."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 1
        },
        {
            "number": 13,
            "revision": "0187c1ed35160df7936844e5e7442190b22cd441",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/13",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651528386,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 274,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 314,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "f352b6fe357e2d0f63d02eb4e55da44c2c182a07",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/14",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651529195,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 211,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 251,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "7e69d0cbeef09322c2751a5f4605a2f1cb700e0c",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/15",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651529997,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 252,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "eede077b9cce2c9c55f760478ac87246e50e5ba9",
            "parents": [
                "039c5da739256bd7d4cb78ae7e08eb25ff867f83"
            ],
            "ref": "refs/changes/37/53037/16",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651532465,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 255,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "7f1294feda9ba6f341619e9c83182de8b9fbcc22",
            "parents": [
                "3645e432d98ac387dbec08ccf389dda2a586948c"
            ],
            "ref": "refs/changes/37/53037/17",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1651699558,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "I would personally prefer keeping the satellite configuration in a user writable place like bmcweb_persistent_data.json as entity-manager json may not be writable at runtime. This might be implemented in future.\n\nCurrent implementation looks good to me."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I would personally prefer keeping the satellite configuration in a user writable place like bmcweb_persistent_data.json\n\nnope.  bmcweb_persistent_data.json is not meant to be user writable, and does not change per platform.  By design it should be able to be erased entirely and bmcweb should still largely function.\n\n> as entity-manager json may not be writable at runtime.\n\nI'm not quite following this statement.  If entity-manager isn't available, then there's no way to know about possible entities that support redfish, and therefore this feature would essentially not be useful, so I'm not following the above statement.\n\n> This might be implemented in future.\n> \n> Current implementation looks good to me."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "I've not made it clear in my comments. The redfish spec allows the aggregation source being changed at runtime. As far as I know, entity-manager does not support updating the content of system.json at runtime. Some values of the config, like the hostname/IP, need to be user-editable in real use cases.\n\nMy opinion of using bmcweb_persistent_data.json is because eventservice also saves its configuration there. There might be some better ways to store the redfish aggregation config."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I've not made it clear in my comments. The redfish spec allows the aggregation source being changed at runtime. As far as I know, entity-manager does not support updating the content of system.json at runtime.\n\nIt does support that, both via probe statements, and via direct manipulation of the parameters via SetProperty.\n\n> Some values of the config, like the hostname/IP, need to be user-editable in real use cases.\n\nWe should talk through what that really means;  I suspect the parameters themselves aren't really changeable, but a user might want to add another aggregation source.\n\n> \n> My opinion of using bmcweb_persistent_data.json is because eventservice also saves its configuration there.\n\nThat is a different use case, because EventService has no dependence on what hardware is in the system, so bmcweb can keep that as an internal detail.\n\n> There might be some better ways to store the redfish aggregation config.\n\nI suspect if we ever support truly runtime, user driven aggregation configs, we'll likely need the data in two places, given that entity-manager has to be hardware backed, and bmcweb is explicitly not hardware backed.  We'll duplicate a little parsing code, which isn't great, but the lifecycles will at least be correct."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Got it. It's focusing on the hardware-backed config in this patch."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A few minor things, then this patchset shoudl be good to go."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pretty sure you don't need this, certainly not with the incorrect date and company.  In general we've been removing these, as they really do nothing legally (the license is bound in the root of the repo)."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I gotcha, it's been removed."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, this is essentially a cache, which in general we try to discourage, especially in the initial patchset of a feature, given that caches are very hard to invalidate properly, and the bmc memory is limited.   this patchset doesn't seem to invalidate this config at all.  Lets avoid this cache for the moment and just generate the list on the fly when we get a request;\n\nI'm not totally against caching in this case, but I'd like to see it done in a separate patch so we can compare/contrast the tradeoffs in complexity and performance."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I understand, but I would still like to try to make the argument for including the map in this patch.\n\n1) The memory hit for this should be minor since it is only storing a boost::urls::url per satellite and the number of satellites would presumably remain small.  \n\n2) Satellite information has to be published on D-Bus in order to be added to the map. That info should only exist when the intent is to use Redfish Aggregation so you won't see the same memory increase in BMCs that are not using Redfish Aggregation.\n\n3) A D-Bus lookup will be added to the processing of every single request by BMCWeb since it will have no other way to check if Redfish Aggregation is enabled.\n\n4) For invalidation concerns, what if each time getSatelliteConfigs() is called I clear the map as the first step?  That functions already pulls all existing satellite configs from D-Bus so that would remove the ones that are no longer present.  \n\n5) The next patch (https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53455) adds a D-Bus match so that will catch when satellite info is added or changed."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "1. \"small number of satellites\" is not guaranteed.  As this patch is written, I can instantiate 3 million satellite controllers, and therefore cause safety concerns.\n\n2. This is the same argument for basically any dbus property, and in the past the argument has been made that we don't want to take global init-memory hits for things that we don't use, and even if we did, we would want to manage it globally for all dbus objects.  In practice, the existing dbus mechanisms have been fast enough that there wasn't a lot of reason to take on the complexities of a cache, and in the cases we've done that, we've end up reverting it (search for UserCache in the history) because it's non-trivial to cache dbus resources.\n\n3. Yep.  \"check dbus for every request\" is how basically every handler in bmcweb works today.  Doing it this way at first is more of a mechanism for proving the need for the complexity of a cache, and keeping this patchset small, rather than being a permanent thing.\n\n\n4/5. That question is better answered in another patch;  What you suggested probably needs some match expressions to add/remove elements as we've done elsewhere, but that code is non-trivial.\n\n\n\n\nTo be clear, I'm not saying we don't need to do this in the end, but in terms of incremental progress, and keeping the patches additive, I'd like to start with a synchronous version first, because we have a lot of experience with that pattern, and that way, when we add that cache, we can say \"in real use cases, this makes requests X% faster\" so that the complexity is justified, or, if we hit similar cases like we have in the past, where adding the cache only added <2% performance improvement, we've saved the complexity."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Understood, thank you for indulging me haha and no I didn't think you were arguing against ever doing it.  I'll make the changes to enable repeated lookups in future patches.\n\nAs part of this I might remove the patch I mentioned which is adding a D-Bus signal match (https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53455) from this patch chain.  I don't think it'll have much use unless satellite config caching is added.  I'll leave that discussion though to its own patch."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've made changes so that each time getSatelliteConfigs() is called it queries the D-Bus and creates an unordered_map of all satellite configs.  \n\nIt now takes as an argument a handler function which itself expects the map of satellite configs as an argument.  Later patches will use this handler to interact with the satellite config information in order to perform Redfish Aggregation operations."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, this-> is redundant."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Thanks, I removed it."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you break this content into its own method please?  as a rule we try to avoid large lambdas, and this isn't super big, but it's right on the limit."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "No problem, it's been moved."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 195,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What if there are two satellite controllers with the same name?  It would be good if we could at least print a message here, instead of silently overwriting the second one."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 195,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, use std::move(url) here."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 195,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I modified the insertion so that now the debug message will denote when an existing config has been updated"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 195,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I made the change"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 195,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 255,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "01264162e29f13f7d38e3705e49b613a640dd39b",
            "parents": [
                "babedf2dbc386dc16cce65a481a2c2ba51c2f26c"
            ],
            "ref": "refs/changes/37/53037/18",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652220464,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "7c3c367403e48bf9063b53e469ce4e0d84065a01",
            "parents": [
                "400b353fc6154805bfce7c574e92aec1c8797257"
            ],
            "ref": "refs/changes/37/53037/19",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652285264,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "6a271f1f5d367cf8f97adad8c56750fe73b0dfc3",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/20",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652287627,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "d328275583785cb93fbe7efe5116c7522cfa109b",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/21",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652300717,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 275,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "47df6da8e03321334a348b13a778dd33b4f7af3a",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/22",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652300946,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 275,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "b1f9ba119544af26c76f361ffd0fbb739fd89ba7",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/23",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652305388,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 275,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "42ab4fd574c2073093c110d45fbc2c5e249206f5",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/24",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652306666,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "fb22c737ded179a7594652364e5d7bc4071f751e",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/25",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652306838,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "cb8d1ce8e07ec0314471bb5161ddb080c0edaf5d",
            "parents": [
                "8605251d487d6946bf03e7d5b0b442bf77f6f133"
            ],
            "ref": "refs/changes/37/53037/26",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652307496,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Haven't reviewed the latest patch yet, but I'm betting it's good to go.  Will try to get there today."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "542d2267e8391653ce8c4103b10d4fd8939abfdf",
            "parents": [
                "e02f8485cee19a7e1839d301b64366be04af3c5a"
            ],
            "ref": "refs/changes/37/53037/27",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652732763,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "9cf5887f074632608504eaea2262393ee94cd0e9",
            "parents": [
                "622ce1bb3c4da4cfca23b6115b849fca7f6be899"
            ],
            "ref": "refs/changes/37/53037/28",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652805982,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't hold this reference as a member like this.  It won't have problems in your usage, but in many cases code can change and could invalidate this reference.  Please just opt to call getInstance() in the cases where you need it."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "No problem, it's been removed."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't look used?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "That was likely a holdover from where I split this class from HttpClient.  It's been removed."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please make this a real static function.  The lambda here doesn't add a lot."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I made the switch"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, please use std::numeric_limits<uint16_t>::max() to avoid the magic number."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm surprised the code checker allowed this, but checking if a uint is > 0 results in a noop.  Remove that condition."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Some initial quick Googling showed that 0 was not a valid Port number so that's why I was checking for 0 as an invalid value.  I looked into it further and it seems 0 is in fact a valid port number so I've removed this check."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I also misread this, and didn't realize you where doing ==, not <.  Oh well, good thing we god a good result."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 159,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, we use CamelCase on these generally, so this should be None."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 159,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/webserver_main.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The aggregation stuff is probably big enough that its worthy of its own configure option, so users can opt out of the complexity and security stuff it entails."
                },
                {
                    "file": "src/webserver_main.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I added a compiler option to enable Redfish Aggregation.  I marked it as insecure and disabled it by default."
                },
                {
                    "file": "src/webserver_main.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't need insecure, then I think I'm good here."
                },
                {
                    "file": "src/webserver_main.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Sounds good, it's been removed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "c5fbe5665dbb5617f1f5d6e77141d59f6ea7af1b",
            "parents": [
                "039a47e3474d5667d295984f330e876aef309eac"
            ],
            "ref": "refs/changes/37/53037/29",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1652833726,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 274,
            "sizeDeletions": 0
        },
        {
            "number": 30,
            "revision": "23e47cabfbeb9e22319be115d9c93e24a6d810f8",
            "parents": [
                "039a47e3474d5667d295984f330e876aef309eac"
            ],
            "ref": "refs/changes/37/53037/30",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1653012630,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Super minor naming thing, then LGTM."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "meson.build",
                    "line": 72,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't need the \"insecure\" option I don't think.  We generally reserve that name for \"we know that this breaks security guidelines, so users should opt into it.\"  I don't know of any such case for aggregation, so lets leave it not under insecure for the moment."
                },
                {
                    "file": "meson.build",
                    "line": 72,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I gotcha.  In that respect I also don't think it needs \"insecure\".  I've removed it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 228,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 288,
            "sizeDeletions": 0
        },
        {
            "number": 31,
            "revision": "df70808562e8832b33c790649a5f009b0be1da63",
            "parents": [
                "039a47e3474d5667d295984f330e876aef309eac"
            ],
            "ref": "refs/changes/37/53037/31",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1653329197,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 228,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 288,
            "sizeDeletions": 1
        },
        {
            "number": 32,
            "revision": "7fb33566cfccc26694e95b2c3601eb477359c54a",
            "parents": [
                "3a097b2cf6260b7accfb42930b73589655ee4e2b"
            ],
            "ref": "refs/changes/37/53037/32",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1653333639,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "ADDED",
                    "insertions": 228,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 288,
            "sizeDeletions": 1
        }
    ]
}