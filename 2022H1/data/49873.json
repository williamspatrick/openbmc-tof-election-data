{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "If563308ac848e852d710a6c6ff4f1495ee1e9574",
    "number": 49873,
    "subject": "dbus-sdr: Add support for utilization sensors",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-host-ipmid/+/49873",
    "commitMessage": "dbus-sdr: Add support for utilization sensors\n\nUtilization sensors are created by the 'phosphor-health-monitor'\napplication.\nAdd 'utilization' to the supported sensor types. Besides that it is\nnecessary to add modifications to the 'managedObjects' getting code,\nsince 'HealthMon' service contains 'org.freedesktop.DBus.ObjectManager'\ninterface not at '/' path, but at the '/xyz/openbmc_project/sensors'.\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: If563308ac848e852d710a6c6ff4f1495ee1e9574\n",
    "createdOn": 1640091589,
    "lastUpdated": 1644004104,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1640091589,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640091613,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640091763,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32317/ : SUCCESS"
        },
        {
            "timestamp": 1641421026,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641805065,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1643243793,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1643295845,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1643296116,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1643296130,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643296130,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1643296277,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36167/ : SUCCESS"
        },
        {
            "timestamp": 1643324496,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643325107,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2f9ca3d226bb10992cbf8d107ca6d76c5aad8ad6",
            "parents": [
                "e39ba9930b66ed46b15147f4f12dd7f92b63da32"
            ],
            "ref": "refs/changes/73/49873/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1640091589,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I am not sure why the second call to getManagedObjects is only called if the first one has an error. Shouldn't they both be called regardless of the return of the first and then have the maps merged together?"
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I just did this out of performance reasons. All of the dbus-sensors apps have `org.freedesktop.DBus.ObjectManager` under the `/` path.\nAnd it looks like the `phosphor-health-monitor` is the only OpenBMC app that has `org.freedesktop.DBus.ObjectManager` under the `/xyz/openbmc_project/sensors` path.\nIf we would always check both of these paths, most of the time second DBus call would be a waste."
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I still do not understand the logic here. If the first call to getManagedObjects succeeds, does that include the results from phosphor-health-monitor? If not, then you do need both calls, but not with the second one being in the error path of the first.\n\nI agree that fewer dbus calls is better. Maybe we should change phosphor-health-monitor to behave like all the other sensors.\n\nAlso, I noticed that you are re-declaring ec as a shadow variable here. No need; just reuse the existing one."
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "This code will be executed for all the sensor services (`sensorConnection.c_str()` in this case):\n- xyz.openbmc_project.PSUSensor\n- xyz.openbmc_project.HwmonTempSensor\n- xyz.openbmc_project.FanSensor\n- xyz.openbmc_project.ADCSensor\n...\n- xyz.openbmc_project.HealthMon\n\nAnd all of these services have `org.freedesktop.DBus.ObjectManager` interface under the `/xyz/openbmc_project/sensors` path. Except the `xyz.openbmc_project.HealthMon`. Which has it under '/'.\n\n> Maybe we should change phosphor-health-monitor to behave like all the other sensors\n`phosphor-health-monitor` maintainer doesn't agree with this. You can read discussion under:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-health-monitor/+/41228/1/healthMonitor.cpp#530"
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Okay. I think I finally have a handle on what this is trying to solve. According to Patrick: 1) most of the sensors have the ObjectManager interface in the wrong path; 2) the IPMI code should not be calling ObjectManager.\n\nI am not sure about problem 2, but problem 1 can be fixed if IPMI sensor code does not assume that the ObjectManager interface is at /. If the IPMI code looks up where the ObjectManager interface is for each sensor endpoint, we can just use that instead of hard-coding / and /xyz/openbmc_project/sensors."
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "line": 290,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "What is the best way to dynamically find out a path of the ObjectManager interface inside a sensor service?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/dbus-sdr/sdrutils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "0c4c747c4d83129c8b065491ac6a148d57cdec80",
            "parents": [
                "e39ba9930b66ed46b15147f4f12dd7f92b63da32"
            ],
            "ref": "refs/changes/73/49873/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1643296116,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/dbus-sdr/sdrutils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/sensorcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 4
        }
    ]
}