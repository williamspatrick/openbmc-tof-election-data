{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ifdfaf638d28982ed18998f3ca05280a288e0020a",
    "number": 54161,
    "subject": "bmcweb: Set Retry Policy Valid Response Codes",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54161",
    "commitMessage": "bmcweb: Set Retry Policy Valid Response Codes\n\nAllows individual retry policies to specify what HTTP response codes\nare considered valid.  Sets functions for the EventService and\nRedfish Aggregation retry policies.  Those functions expect a\nresponse code and return an error code based on what the response\ncode is.\n\nThis change is needed because EventService only considers 2XX codes\nto be valid.  Any code outside of that range would trigger a retry\nattempt.  Redfish Aggregation by design will need to return\nerrors outside of that range such as 404.  It should not retry to\nsend a message when it receives a 404 from a satellite BMC.\n\nRight now 404 is the only error code that is handled differently\nbetween the services.  Going forward, Redfish Aggregation will\nlikely want to allow other error codes as its functionality is\nexpanded.\n\nTested:\nUsed Redfish-Event-Listener with ssh port forwarding to create 3\nsubscriptions.  I then closed the ssh connection and sent a test\nevent.  Bmcweb made 3 retry attempts for each subscription.  At\nthat point the max retry amount (as defined by EventService) was\nreached and bmcweb stop attempting to resend the messages.\n\nThere were no errors when the Redfish-Event-Listener was correctly\nconnected.  Test events resulted in messages being sent for each\nsubscription.\n\nSigned-off-by: Carson Labrado <clabrado@google.com>\nChange-Id: Ifdfaf638d28982ed18998f3ca05280a288e0020a\n",
    "createdOn": 1654100692,
    "lastUpdated": 1655252572,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1654100692,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1654100715,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1654100736,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654100736,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1654101413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44167/ : FAILURE"
        },
        {
            "timestamp": 1654101628,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1654101651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654101651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1654101678,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44169/ : FAILURE"
        },
        {
            "timestamp": 1654101805,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1654101851,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654101856,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1654102559,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44170/ : FAILURE"
        },
        {
            "timestamp": 1654104231,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1654104281,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654104286,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1654105327,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44172/ : SUCCESS"
        },
        {
            "timestamp": 1654108005,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1654124307,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1654191592,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654542616,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654543850,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654546164,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5: Patch Set 4 was rebased."
        },
        {
            "timestamp": 1654546197,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654546197,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1654546751,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44460/ : SUCCESS"
        },
        {
            "timestamp": 1654557836,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1654638540,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1654638572,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654638572,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1654638740,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 7: Commit message was updated."
        },
        {
            "timestamp": 1654639272,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44524/ : SUCCESS"
        },
        {
            "timestamp": 1654639581,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1654642578,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 8: New patch set was added with same tree, parent, and commit message as Patch Set 7."
        },
        {
            "timestamp": 1654642601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1"
        },
        {
            "timestamp": 1654642612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654642612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1654643111,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44529/ : SUCCESS"
        },
        {
            "timestamp": 1654702217,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654705201,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654745404,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 8:\n\n(7 comments)"
        },
        {
            "timestamp": 1654804000,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 8:\n\n(6 comments)"
        },
        {
            "timestamp": 1654804093,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1654804142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654804142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1654804687,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1654804954,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44740/ : SUCCESS"
        },
        {
            "timestamp": 1654815579,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1654882401,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1654882441,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654882442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1654882942,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44810/ : FAILURE"
        },
        {
            "timestamp": 1655227026,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1655250381,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1655250412,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655250412,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1655251019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45039/ : SUCCESS"
        },
        {
            "timestamp": 1655251033,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 11:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1655252057,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1655252115,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1655252351,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1655252572,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as a7a80296f731ef1069d3ecfbd3069668fb71cd68"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "715a7d4aab83fc0ec517c612ad6ba170a4ee161a",
            "parents": [
                "62c416fb0d2f62e09d7f60754ff359ac2389e749"
            ],
            "ref": "refs/changes/61/54161/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654100692,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 95,
            "sizeDeletions": 7
        },
        {
            "number": 2,
            "revision": "29d956217d886016381d11162351fd479516e592",
            "parents": [
                "f65fca6a44ded566fa6e993b1b23b2e189a48703"
            ],
            "ref": "refs/changes/61/54161/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654101628,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 98,
            "sizeDeletions": 9
        },
        {
            "number": 3,
            "revision": "59daf1f85b1189e4d2094088f6cc12abcbf7a952",
            "parents": [
                "f65fca6a44ded566fa6e993b1b23b2e189a48703"
            ],
            "ref": "refs/changes/61/54161/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654101805,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 9
        },
        {
            "number": 4,
            "revision": "abcb5ac1d031ba0527c53898bf48410f87c79472",
            "parents": [
                "f65fca6a44ded566fa6e993b1b23b2e189a48703"
            ],
            "ref": "refs/changes/61/54161/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654104231,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This wasn't quite what I had in mind, but it does seem to work, and be pretty clean so I'm fine with it.  Just for FYI, I had imagined a retry mechanism similar to how asio does it, with something like\n\ninline void afterSendThing(ThingResponse& res){\n\n    if (res.failed){\n        retries--;\n        async_send_thing(afterSendThing);\n        return;\n    }\n    \n    /// SUCCESS!\n}\n\nasync_send_thing(afterSendThing);\n\n\n\n\n\nBut a callback like you did it seems reasonable, lets see if we can make it a little less complex, and this should be fine."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Couple comments on this api:\n\n1. Now that we can inject them, do they need to have a \"name\" at all in this API?  Could retryPolicyName be completely removed?\n2. Should we work retryAttempts and retryTimeoutInterval into the callback itself?  I'm thinking it could be something returned, kinda like:\n\n\nenum class Retry {\n   Continue;\n   Complete;\n   Error;\n}\n\nstruct RetryInfo {\n   Retry retry;\n   std::chrono::seconds retryAfter;\n   size_t attemptsRemaining = 5;\n}\n\ninline handleRetry(RetryInfo& retry, response& res){\n     if ((respCode < 200) || (respCode >= 300))\n    {\n       \n       return Retry::error;\n    }\n    \n    return Retry::Complete\n}\n\n\n\n\nThis could allow clients to do things like handle http retry-after headers as the spec requests, by parsing them and setting the retryAfter correctly.\n\n\n\n\nIt's quite possible I'm overthinking the above, and it's certainly something we can evolve over time, but something to think about."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> 1. Now that we can inject them, do they need to have a \"name\" at all in this API?  Could retryPolicyName be completely removed?\nI think we need to keep the name for reporting purposes. Each individual connection receives a copy of the RetryInfo struct as part of the message sending process.  \"retryPolicyName\" is the only way to indicate which retry policy is being used.\n\n> 2. Should we work retryAttempts and retryTimeoutInterval into the callback itself?\nI think at that point we'd be really getting into duplicating work within each retry policy.  Each policy should use those values in the same way.\n\nWe also attempt to retry if any stage of sending a message fails.  This change would break out retries on response code failures while leaving the other retry logic in place.\n\n> This could allow clients to do things like handle http retry-after headers as the spec requests, by parsing them and setting the retryAfter correctly.\nI think this would be more appropriate to be handled within recvMessage() so that different policies can handle those situations as well.  I'd much rather add a bool to the retry policy to enable/disable additional features like that."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > 1. Now that we can inject them, do they need to have a \"name\" at all in this API?  Could retryPolicyName be completely removed?\n> I think we need to keep the name for reporting purposes. Each individual connection receives a copy of the RetryInfo struct as part of the message sending process.  \"retryPolicyName\" is the only way to indicate which retry policy is being used.\n\nBut why would we need to report it?  There's no API that actually uses the name, except maybe logging?  Or is there something that needs to report the name per-request?\n\n> \n> > 2. Should we work retryAttempts and retryTimeoutInterval into the callback itself?\n> I think at that point we'd be really getting into duplicating work within each retry policy.  Each policy should use those values in the same way.\n> \n> We also attempt to retry if any stage of sending a message fails.  This change would break out retries on response code failures while leaving the other retry logic in place.\n\nThat's a good point.  ACK.\n\n> \n> > This could allow clients to do things like handle http retry-after headers as the spec requests, by parsing them and setting the retryAfter correctly.\n> I think this would be more appropriate to be handled within recvMessage() so that different policies can handle those situations as well.  I'd much rather add a bool to the retry policy to enable/disable additional features like that."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > > 1. Now that we can inject them, do they need to have a \"name\" at all in this API?  Could retryPolicyName be completely removed?\n> > I think we need to keep the name for reporting purposes. Each individual connection receives a copy of the RetryInfo struct as part of the message sending process.  \"retryPolicyName\" is the only way to indicate which retry policy is being used.\n> But why would we need to report it?  There's no API that actually uses the name, except maybe logging?  Or is there something that needs to report the name per-request?\nIt's purely for logging purposes.  I thought it would be useful to know for sure which retry policy is being used by a given message.\n\n> > > This could allow clients to do things like handle http retry-after headers as the spec requests, by parsing them and setting the retryAfter correctly.\n> > I think this would be more appropriate to be handled within recvMessage() so that different policies can handle those situations as well.  I'd much rather add a bool to the retry policy to enable/disable additional features like that.\n> \nYou quoted these lines without comment.  Did you accidentally leave off the intended message?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> It's purely for logging purposes.  I thought it would be useful to know for sure which retry policy is being used by a given message.\n> \n\nConsidering that we're going to be executing code for each retry policy, I'd prefer we just log the retry policy in the callback itself (which includes the line number) and simplify this API.\n\nWith that said, my opinions here aren't THAT strong."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Considering that we're going to be executing code for each retry policy, I'd prefer we just log the retry policy in the callback itself (which includes the line number) and simplify this API.\n\nMy concern with leaving the logging to the callback is the callback only gets called if we receive a response.  There are earlier operations that can fail which would result in a retry (resolve fail, send fail, etc.).  I lean towards being able to report the specific retry policy each time it's used.\n\nThat being said, I'm all for simplifying the code.  I'm guessing the vast majority of retry events will be triggered by incorrect response codes.  I'm alright with making the change if you think it's alright that there are some edge cases where we will retry without logging the retry policy in use."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Ed wants you to log in the retry handler, so if you are retying it should log.\n\nFor example please add a log statement  right here, (https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54161/8/redfish-core/include/event_service_manager.hpp#567) It will print the linen number when it is reached.\n\nThen you can remove name from the interface."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "A retry event can occur from doResolve(), doConnect(), sendMessage(), and recvMessage().  waitAndRetry() is what's called for a retry event and overall it's called in 5 locations.  The retry handler only gets called in recvMessage().  If we rely on the handler to log important retry information, then that won't provide total coverage to all retry events.\n\nMistake on my end, I thought waitAndRetry() was logging the policy name.  I think arguably it should.  Right now the name is logged when a connection is configured to send a new message so you would have to work backwards if a retry is not triggered by an invalid response code since that is the only other location it is logged (https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54161/8/http/http_client.hpp#259).\n\nI understand what the ask is.  Basically want I'm wanting to hear if it's alright that there are 5 different reasons for triggering a retry, but it's only in one of those where we need to log what retry policy is actually being used."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "My feelings here aren't that strong.  I was just aiming for simpler APIs, and trying to avoid adding API complexity for what amounts to just logging of \"here's the policy we're trying\".\n\n@carson, if in your judgement, we should keep that parameter, I'm ok with that.\n\n\n\n>  The retry handler only gets called in recvMessage().  If we rely on the handler to log important retry information, then that won't provide total coverage to all retry events.\n\n\nAt the risk of digging the rabbit hole further (which, if you want, feel free to completely ignore in the context of this patch), I would argue the logging is best put in the 5 different callers, because they're the ones in the failure branch, executing in the failing context.  At least, that makes sense in in head.  I'm fine with whatever here, it's logging, and the API isn't THAT complex, we can improve it over time."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 708,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've gone back and forth on this and I'm going to remove \"name\" to simplify the API for the time being.  Leaving it in would arguably not provide much more of a benefit in its current state.\n\nA better option would probably be like what you're describing of putting the logging in the different callers.  That's going to require more changes than I want to undertake on this patch.  For now I think simplifying the API is the way to go in order to ease the implementation of any future changes."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 9
        },
        {
            "number": 5,
            "revision": "02c51c635fae26b910fc757e06a55a75b26047bd",
            "parents": [
                "f848367f45e16f715b1df8b07cc6747e2f4b5aba"
            ],
            "ref": "refs/changes/61/54161/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654546164,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please add tested footer."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "It's been added"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Miss"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "does this function need to be static inline?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've changed it to static inline."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 9
        },
        {
            "number": 6,
            "revision": "90d5679f23cadea543c00dad3e8ea20baf030b52",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/61/54161/6",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654638540,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 105,
            "sizeDeletions": 9
        },
        {
            "number": 7,
            "revision": "4ea7491d0b72404277481409d50de4c6f74a64a4",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/61/54161/7",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654638740,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 109,
            "sizeDeletions": 9
        },
        {
            "number": 8,
            "revision": "c1141e2c15b38e43c1e13cde70ae1a17cdd0af48",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/61/54161/8",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654642578,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit: We know this is for bmcweb."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I thought that was good to include so you could tell from just looking at the title.  Is it not granular enough to be useful?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "we generally don't merge logs across the projectin that way, and when we do, we tend to include the project in the prefix, so this would turn into:\n\nbmcweb: bmcweb: Set Retry Policy Valid Response Codes\n\n\nWith that said, if you want to change it party on, if you don't, it doesn't matter that much.\n\nWhile we're on the topic of commit titles, arguably you shouldn't capitalize every word of your title, only the first word, but again.... it's a commit message.  We don't enforce style that much."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Got it.  I'll leave it as is since this patch has a +2.  I'll make those changes for future patches."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit: return"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit: response code"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "The strategy is okay. I suspect the in the future we will want to retry off of more signals then only the response code. But this work is a good step.\n\nThe handler is just a map of http code, to error codes. \n"
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "This looks to be the same logic as the default hanlder. \nCan you use a default argument in setRetryConfig() so you don't have to copy this code."
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "It is the same logic.  I copied it here for a bit of future proofing since EventService relying on the default policy is partially why this patch is needed in the first place.  It could be the case that the default policy needs to change at some point in a way that again would break this service again."
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "line": 566,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "sounds good"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Why not inline?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "It has to at least be static to pass it to setRetryConfig() in the constructor RedfishAggregator().  I've changed it to static inline."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 109,
            "sizeDeletions": 9
        },
        {
            "number": 9,
            "revision": "e69b8d493e056b707baf44dd59200788ab1eea23",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/61/54161/9",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654804093,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 110,
            "sizeDeletions": 9
        },
        {
            "number": 10,
            "revision": "9d14386861d86b7be8c2e4b82b6fdd63420f8d63",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/61/54161/10",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1654882401,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 729,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "In the process of reworking this function to comply with remove \"name\" from the retry policy struct"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 729,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 76,
                    "deletions": -17
                }
            ],
            "sizeInsertions": 158,
            "sizeDeletions": 18
        },
        {
            "number": 11,
            "revision": "0346234c924a562ed06417bd612da1e1c16e8ee2",
            "parents": [
                "f9f4007f73a8ae21974cdf0ad5f811309598160b"
            ],
            "ref": "refs/changes/61/54161/11",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1655250381,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 110,
            "sizeDeletions": 16
        },
        {
            "number": 12,
            "revision": "a7a80296f731ef1069d3ecfbd3069668fb71cd68",
            "parents": [
                "cec58fe39551f162a9aec9ebbb359876f8f2e762"
            ],
            "ref": "refs/changes/61/54161/12",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1655252572,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 110,
            "sizeDeletions": 16
        }
    ]
}