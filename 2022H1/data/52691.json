{
    "project": "openbmc/estoraged",
    "branch": "master",
    "id": "I99cb371871bfa68eb0193f614f899221afd9013a",
    "number": 52691,
    "subject": "Switch eStoraged to asio interface",
    "owner": {
        "name": "John Wedig",
        "email": "johnwedig@google.com",
        "username": "johnwedig"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/estoraged/+/52691",
    "commitMessage": "Switch eStoraged to asio interface\n\nSwitching the D-Bus interface to asio makes it easier to integrate with\nEntityManager. In addition, this switch to asio makes sense since some\nof the erase operations take a long time, about 6 minutes.\n\nThis commit also removes one of the clang-tidy checks because clang was\nflagging an error in one of the boost asio files, inside the constructor\nfor sdbusplus::asio::connection.\n\nTested:\nTested most of the methods and properties using busctl.\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume FormatLuks ays 3 1 2 3 \\\n  xyz.openbmc_project.Inventory.Item.Volume.FilesystemType.ext4 \\\n  --timeout=60\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Lock\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Unlock ay 3 1 2 3\n$ busctl get-property xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Locked\n$ busctl get-property xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Drive Capacity\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Erase s \\\n  xyz.openbmc_project.Inventory.Item.Volume.EraseMethod.VerifyGeometry\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Erase s \\\n  xyz.openbmc_project.Inventory.Item.Volume.EraseMethod.LogicalOverWrite \\\n  --timeout=1200\n$ busctl call xyz.openbmc_project.eStoraged.mmcblk0 \\\n  /xyz/openbmc_project/inventory/storage/mmcblk0 \\\n  xyz.openbmc_project.Inventory.Item.Volume Erase s \\\n  xyz.openbmc_project.Inventory.Item.Volume.EraseMethod.LogicalVerify \\\n  --timeout=1200\n\nSigned-off-by: John Wedig <johnwedig@google.com>\nChange-Id: I99cb371871bfa68eb0193f614f899221afd9013a\n",
    "createdOn": 1649281430,
    "lastUpdated": 1650484305,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1649281430,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1649281438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649281438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1649281548,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/40663/ : FAILURE"
        },
        {
            "timestamp": 1649284615,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1649350492,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Removed reviewer John Broadbent."
        },
        {
            "timestamp": 1649370625,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1649370633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649370634,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1649370742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/40784/ : FAILURE"
        },
        {
            "timestamp": 1649373010,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1649373019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649373019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1649373190,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40786/ : SUCCESS"
        },
        {
            "timestamp": 1649373669,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1649374404,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1649375462,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1649376024,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1649445074,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(11 comments)"
        },
        {
            "timestamp": 1649448557,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1649449746,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1649455917,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1649698788,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1649698820,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 4:\n\n(9 comments)"
        },
        {
            "timestamp": 1649698821,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649698821,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1649698978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40901/ : SUCCESS"
        },
        {
            "timestamp": 1649699338,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1649720506,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1649721147,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1649724547,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1649794043,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1649794050,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 4:\n\n(6 comments)"
        },
        {
            "timestamp": 1649794052,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649794053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1649794207,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/41082/ : SUCCESS"
        },
        {
            "timestamp": 1649794439,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1649801021,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Change has been successfully merged"
        },
        {
            "timestamp": 1650484288,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Removed reviewer John Broadbent."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "e1e86efec466ff7f56fb6ba0c3d3d24acff7546e",
            "parents": [
                "605085a6319630441a71fecc897465b419675bf6"
            ],
            "ref": "refs/changes/91/52691/1",
            "uploader": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "createdOn": 1649281430,
            "author": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -20
                },
                {
                    "file": "include/estoraged.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -23
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": -15
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -138
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 196
        },
        {
            "number": 2,
            "revision": "4a1f6e431f67a44c2eab80eb5fa7c61131f12671",
            "parents": [
                "605085a6319630441a71fecc897465b419675bf6"
            ],
            "ref": "refs/changes/91/52691/2",
            "uploader": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "createdOn": 1649370625,
            "author": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -20
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "include/estoraged.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -23
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": -15
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -142
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 201
        },
        {
            "number": 3,
            "revision": "fe95042642dad515e9ee6366dd9fef7e743e26ac",
            "parents": [
                "605085a6319630441a71fecc897465b419675bf6"
            ],
            "ref": "refs/changes/91/52691/3",
            "uploader": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "createdOn": 1649373010,
            "author": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": ".clang-tidy",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, FWIW, I generally just remove these these days in my repos;  Having a bunch of commented out tests isn't super helpful to the reader."
                },
                {
                    "file": ".clang-tidy",
                    "line": 99,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Done. I removed it."
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks like it's set once in the constructor, then used later in the constructor and never used again.  Does it need to live as a class member?"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "You're right. The capacity is a constant and doesn't need to be class member."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, there's a lot of places that use this->, which can be a little redundant.  With that said, there's no style rule on that, so it's up to you if you want to keep it that way."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "It is not redundant it is critical because of the shadowing paramater."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "For full context, I dis-prefer the shadowing a member variables by parameters.\nI think it is a bad practice, and can be avoided easily. \n\nThe best fix is to rename to parameter."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, shadow parameters on the other hand, do have a style rule:\n\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es12-do-not-reuse-names-in-nested-scopes\n\nfor exactly this reason.  John is right in this case, we should be naming our variables such that they don't shadow to improve the readability.  FWIW, there are other places in the project where we've had bugs in this regard when using std::move() (although this usage looks correct to me).\n\nThat's not super related to this change (moving to asio) so I'll leave it up to you guys when and how you want to effect that change.\n\nIdeally we should be setting -wshadow in our compiler flags so the compiler will catch these for us."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "I changed the name of the argument for objectServer in the constructor, so I don't need this-> anymore.\n\nIf we want to change any other cases of shadowing that already exist, that can be in a separate commit."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I changed the name of the argument for objectServer in the constructor, so I don't need this-> anymore.\n> \n> If we want to change any other cases of shadowing that already exist, that can be in a separate commit.\n\nAgreed."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "We had some discussion regarding shadowing in a previous code review where if it's a simple initializer list and copying over params to member variables without doing anything further in constructor, I prefer just having the same name (since there's no ambiguity).\n\nAgreed though, that if you start using the parameter in the constructor more extensively then it may be better to just change the name for better readability rather than spamming this-> everywhere (which, in this case, ew only saved one \"this\" so meh)\n\nFor context Ed, this is the code review in question: https://gerrit.openbmc-project.xyz/c/openbmc/estoraged/+/52247/3..5/include/estoraged.hpp#b48"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I see this pattern a few places, I'll mention it here;\n\ncapturing by \"this\" in an async callback is hard to do properly.  It can be done, by making sure your interface structures are the last things declared, and therefore the first things destroyed (so they can't accidentally call back during destruction)\n\nOne pattern that is complex, but \"safer\" is to inherit from shared_from_this<EStoraged>, and capture weak_from_this() within your lambdas, then within the lambda, call weak_ptr<>::lock(), and bail out early if the lock fails.\n\nWith that said, EStorageD in this context is essentially a singleton, has a long lifetime, and as written, this code does look correct, so I will leave it up to your judgement if you want to change it."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Alright, good to know. I'll continue capturing by \"this\", if that's okay.\n\nIf I understand correctly, I think I should at least change the header file to declare the interfaces last, so that the callbacks don't try to access the other members during destruction. I made that change."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Alright, good to know. I'll continue capturing by \"this\", if that's okay.\n\nYep, totally up to you, just be very careful when reviewing code for lifetime issues.\n\n> \n> If I understand correctly, I think I should at least change the header file to declare the interfaces last, so that the callbacks don't try to access the other members during destruction. I made that change.\n\nCorrect"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just FYI, now that we have c++20 universally turned on, this would be more ideally written with std::bind_front, but sdbusplus doesn't support that yet.  Food for thought if anyone is looking for \"fun\" work that would be a learning experience and help the project at the same time.\n\nI dug into this a little the other day and can give you some pointers if anyone is interested."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "why are you passing in a lambda when the params match. Like just register the method.\n\nreplace the selected code with \"formatLuks\""
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "never mind, you need to caputure the object state.\nYou got it right."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You have to capture the instance of the member."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "same as above."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "the set function should all take in `const`"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 64,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "should one of them be const?"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think both should be const, no?  They're inputs."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Yes, they should both be const. Done."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't this supposed to return true (ie that the set succeeded) not the new value?"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "For the set functions, I think you're right, but since this is a get function, I think I'm supposed to return the new value. That's what I see in other places."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I thought they were the same, but I guess not.  ACK."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "this is probably not needed. Since when this gets destroyed, the service is also gone."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This id needed because of unfortunate coding decisions that James and I made in this API early on.  It was under the assumption that a lot of interfaces would be \"fire and forget\" so having objectServer own the instance of it was better.  It'd really love to fix it some day to be really RAII, but for the moment, it is what it is."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "should use the closest header to get io_context\n\n```\n#include <sdbusplus/asio/connection.hpp>\n```"
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  This improves your compile times quite a bit when you use specific headers."
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -20
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "include/estoraged.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -23
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": -15
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -142
                }
            ],
            "sizeInsertions": 225,
            "sizeDeletions": 202
        },
        {
            "number": 4,
            "revision": "9407ad82418122f372453d333776b5fa805809ca",
            "parents": [
                "605085a6319630441a71fecc897465b419675bf6"
            ],
            "ref": "refs/changes/91/52691/4",
            "uploader": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "createdOn": 1649698788,
            "author": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": ".clang-tidy",
                    "line": 99,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "What is the reasoning for this. It might be perferable to ignore clang for just that line, rather then remove the check project wide.\n\nIt looks as it it \n'''\nCheck for logical errors for function calls message expressions (e.g., uninitialized arguments, null function pointers).\n'''\nsounds potentially useful"
                },
                {
                    "file": ".clang-tidy",
                    "line": 99,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Clang was flagging an error in one of the boost asio files, which I wasn't able to resolve by disabling lint for specific lines.\n\nYou can see the error here: https://jenkins.openbmc.org/job/ci-repository/40663/console\n\nI spent a long time fighting with it, trying to figure out how I could set up the build differently to resolve the clang error. Somehow, bmcweb doesn't run into this, so I was trying to use that as an example, but ultimately, I had to remove this check."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Nice! thanks for putting down descriptive comments for the asio conversion.\n\nI'll +2 once the nits are addressed."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Some minor questions"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 122,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "why do you use smart pointers below, and have a referance to object_server. \n\nCan you use a unique_ptr for this?"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 122,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Since the objectServer depends on the io_context object in main(), main() needs to manage this. So, main is responsible for creating the objectServer and later destroying it.\n\nIf anything, I might be able to use shared_ptr, but not unique_ptr.\n\nThis is the way it's done in other places, like dbus-sensors, but let me know if you think it's worth changing to shared_ptr."
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: would it make sense to be something like \"isLocked\" so that it's a bit more descriptive as a bool?"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "add this to doxygen input param"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/estoraged.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 50,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "is there a reason add_interface is preferred over add_unique_interface?\n\nIt would let us keep the unique_ptr, which I have a slight preference for."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 50,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "If I were to use add_unique_interface(), I would have to pass in a function that adds all the methods and properties before initialize() gets called. Here's an example: https://github.com/openbmc/sdbusplus/blob/90fab6bb667460053cfc4587b58c987f74b1bf58/example/register-property.cpp#L23\n\nI think the way I have it seems more convenient, allowing me to add the methods and properties one at a time, and then I can call initialize() at the end, when I'm done."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I think you need to deconstruct the objectServer (or switch to smart pointers).\nb/c objectServer owns the shared ptr to the interfaces."
                },
                {
                    "file": "src/estoraged.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "John Wedig",
                        "email": "johnwedig@google.com",
                        "username": "johnwedig"
                    },
                    "message": "As mentioned above, main is responsible for destroying the objectServer."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -20
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "include/estoraged.hpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -23
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -15
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -142
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 202
        },
        {
            "number": 5,
            "revision": "67a474468daf76a774db8c4ed8479d47f2aac5fe",
            "parents": [
                "605085a6319630441a71fecc897465b419675bf6"
            ],
            "ref": "refs/changes/91/52691/5",
            "uploader": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "createdOn": 1649794043,
            "author": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -20
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "include/estoraged.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -23
                },
                {
                    "file": "src/estoraged.cpp",
                    "type": "MODIFIED",
                    "insertions": 82,
                    "deletions": -15
                },
                {
                    "file": "src/test/estoraged_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -142
                }
            ],
            "sizeInsertions": 223,
            "sizeDeletions": 202
        }
    ]
}