{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I09347c36ff68140b34a6ec316629aba137b86997",
    "number": 47657,
    "subject": "Adds new properties to drive",
    "owner": {
        "name": "John Broadbent",
        "email": "jebr@google.com",
        "username": "jebr224"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/47657",
    "commitMessage": "Adds new properties to drive\n\nEncryptedStatus, lockedStatus, PredictedMediaLifeLeftPercent, are added\nto the drives interface in this change. These properties are planned to be\nsent over redfish using the following schema properties\n\nhttps://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L371\nhttps://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L365\nhttps://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L267\n\nSigned-off-by: John Broadbent <jebr@google.com>\nChange-Id: I09347c36ff68140b34a6ec316629aba137b86997\n",
    "createdOn": 1633647381,
    "lastUpdated": 1649104349,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1633647381,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633647396,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Assignee added: Willy Tu <wltu@google.com>"
        },
        {
            "timestamp": 1633647401,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633647402,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Assignee deleted: Willy Tu <wltu@google.com>"
        },
        {
            "timestamp": 1633647452,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 1:\n\nLet me know if this is what you all had in mind"
        },
        {
            "timestamp": 1633647803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27796/ : SUCCESS"
        },
        {
            "timestamp": 1633647882,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633648692,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1633649598,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633713242,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1633731865,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633731876,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633731952,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27964/ : FAILURE"
        },
        {
            "timestamp": 1633732772,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1633732786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633733145,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3:\n\n(3 comments)\n\nThanks for the review"
        },
        {
            "timestamp": 1633733185,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27967/ : SUCCESS"
        },
        {
            "timestamp": 1633735198,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1633735260,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1633738586,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1633738597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633738655,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(2 comments)\n\nThanks for the feedback"
        },
        {
            "timestamp": 1633739038,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27971/ : SUCCESS"
        },
        {
            "timestamp": 1633796922,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633983895,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634508370,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634586924,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\nThanks for the feedback. uint16 sounds nice to me.\n\nI hope Ed had a good Sunday."
        },
        {
            "timestamp": 1634852239,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> (1 comment)\n> \n> Thanks for the feedback. uint16 sounds nice to me.\n> \n> I hope Ed had a good Sunday.\n\nHeck yeah, went mountain biking then got home and did code reviews....."
        },
        {
            "timestamp": 1634852254,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+1\n\nLGTM"
        },
        {
            "timestamp": 1634936636,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1635178764,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1635194293,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1635194306,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635194704,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28957/ : SUCCESS"
        },
        {
            "timestamp": 1635195129,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 5:\n\n(5 comments)\n\nThanks for taking the time to look this over."
        },
        {
            "timestamp": 1635198773,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1635199256,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1635203032,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1635203044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635203509,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28966/ : SUCCESS"
        },
        {
            "timestamp": 1635204138,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 6:\n\n(2 comments)\n\nThanks again for the quick turnaround."
        },
        {
            "timestamp": 1635267110,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635356478,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635428897,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\nIt seems like we're looking for resolution on the detailed wording of Encryption and Locking?  John, are you working on that?"
        },
        {
            "timestamp": 1635456310,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> It seems like we're looking for resolution on the detailed wording of Encryption and Locking?  John, are you working on that?\n\nNot quickly enough ;)\n \nI recommend keeping Encryption, and replacing locked with accessible.\nLocked could mean write protected, but that is not redfish or I would like to use the term.\n \n \nRedfish defines locked the the following way. [1] \nUnlocked : raw \"data is accessible to the user\"\nlocked : raw \"data is Not accessible to the user\"\n \nHowever, it might be more clear if we used a different term.(accessible)\n\naccessible : Data can be read and written to the drive.\ninaccessible : Data can be neither be read or written to the drive. \n\n\nUsing the correct terms is important to me. Let me know what you think.\n\n[1]https://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L363"
        },
        {
            "timestamp": 1635794353,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n> Not quickly enough ;)\n\nI was just trying to make sure you weren't expect anything from me.\n\n> I recommend keeping Encryption, \n\nThat is fine.  I'd like some wording to indicate if we expect this to be hardware-level, software-level, either, or \"whatever the BMC is capable of telling you\".  As I mentioned the current wording in the description is ambiguous to me.\n\n> and replacing locked with accessible.\n> Locked could mean write protected, but that is not redfish or I would like to use the term.\n> [1]https://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L363\n\n\nI think the confusion, in this case, is that we have a stand alone property named \"Locked\" on a \"Drive\", which would intuitively to me mean write-protected.  In the Redfish schema they have a property that is EncryptionStatus with 4 states: { unlocked, locked, foreign, unencrypted }.  We probably shouldn't try to map these 4 states to 2 booleans in our implementation, should we?  It appears that there is both information-loss and invalid-states in that mapping then...\n\nI would suggest at a minimum that this property is named (and described) in a way that makes it clear this is related to Encryption of the drive and not generically about Drives."
        },
        {
            "timestamp": 1636682656,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1639595896,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1644430735,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1644430746,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1644430746,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1644431170,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36981/ : SUCCESS"
        },
        {
            "timestamp": 1648060121,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 8: Patch Set 7 was rebased"
        },
        {
            "timestamp": 1648060131,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648060132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1648060569,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39563/ : SUCCESS"
        },
        {
            "timestamp": 1648078108,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1648078122,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648078123,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1648078544,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39593/ : SUCCESS"
        },
        {
            "timestamp": 1648134682,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1648143678,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 9:\n\n(6 comments)"
        },
        {
            "timestamp": 1648229338,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1649094769,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1649097924,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1649100830,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1649103210,
            "reviewer": {
                "name": "John Wedig",
                "email": "johnwedig@google.com",
                "username": "johnwedig"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1649104346,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1649104348,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 2f103d919ae272f0c8aa721c6c866bfe0b9e68c9"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7b4413563c6daee35509cd2c078dd1d78c0d3427",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/1",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1633647381,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "probably want int here, but that is also going to force you to pick a number for \"unknown\" that isn't NAN;  I'd probably recommend -1."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "does int16 sound good?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "technically int8 has enough range to support 0-100, but I don't care that much"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I tried int8, but it is not in the list\n\nKeyError: 'int8'\nhttps://github.com/openbmc/sdbusplus/blob/08dc23c10c29015b3438fc3b972f3741a0ba0247/tools/sdbusplus/property.py#L184\n\nI could do byte, if that would be better"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Patrick might have a stronger opinion, but int16/byte/int sounds fine to me.\n\nWith that said..... in my head I'm backtracking a little bit;  Is there such a thing as a drive that has < 1% precision on this metric?  I originally didn't think so, but now I'm not sure."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "that is a reasonable question.\nSDD's currently use S.M.A.R.T to report information like life spans and the Life Left, is represented in a range 100(full life) to 0(no life).\n\nThat being said, I am sure it it possible to define a standard using <1% precision. (everyone needs to be innovative:). I don't have strong feelings."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> that is a reasonable question.\n> SDD's currently use S.M.A.R.T to report information like life spans and the Life Left, is represented in a range 100(full life) to 0(no life).\n> \n\nRight, but internally is that range represented by a uint8_t?  or a uint16/32/64?  if it's the former, int would be good here.  If it's the later, and it has more precision than I thought, we might want to stick with double.\n\n> That being said, I am sure it it possible to define a standard using <1% precision. (everyone needs to be innovative:). I don't have strong feelings.\n\nlets follow the standards bodies here.  If no standard specifies > 1% resolution, we shouldn't add it here.\n\nPS, it's only innovative if it's actually useful in a real context \ud83d\ude0a  If no drives in existence support it, its just extra bits on the wire, and extra conversions and checks that resources have to do in the various protocols."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "sweet, in the current latest draft (pathset 4) it is a uint16. \n\nMaking resolved, anyone feel free to reopen."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "it is not a byte, based on the second comment chain."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "so this is 0 to 100, right?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "As we discussed in person, percent is 0 to 100 (inclusive), not 0 to 1.  \n\nAlso, I see little value in reporting a drive has 110 percent of its life remaining, or a divers has -10 percent of its life left."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "it think making my previously commented change will make this obvious that it's 0-100, not 0.0 to 1.0.  With that said, adding \"from 0-100\" here seems reasonable to me."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering theses are all parameters that can and do change at runtime, I wonder if we want them on a separate interface \"DriveStatistics\", so if we ever have to cache them, we can cache the inventory ones separately from the telemetry ones?\n\nPatrick, any strong opinions either way?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 73,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "That is reasonable, but it opens up many questions.\n\nThings like, can Capacity change, how would you know if a disk has been added to a running system?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 73,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm mildly ok with having EncryptionState in Inventory because it _should_ be rarely changing.  The important thing to me is that the Inventory model is relatively static and not flooding out a bunch of rapidly changing signals.  Ideally we would have everything which is expected it could change multiple times during a [host] boot-up in another namespace."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 73,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "If we want a DriveStatistics interface later, we can add it. \nBut for now, think adding these items to drives is a good start.\n(closing)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "902529620aedf06268ccf54e78aa6579dddaef3e",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/2",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1633731865,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "3218ed1c77ff3094aafcd0f22b05a55b47ff35a9",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/3",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1633732772,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "add \"Returns -1 if the reading the value is not supported\""
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "6483549b0dd66addfd2214efa124b7ac4b3deb6b",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/4",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1633738586,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we do either 'byte' or 'double' here with a default of maxint or NaN respectively?  I don't think there are any other cases where we've used int16/-1 to represent a percentage."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "reasonable, byte/255, fits what Ed's wanted also."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: would prefer if these is next to EncryptionStatus since they're so similar."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: please add punctuation on this and enum definition below."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is the meaning of 'locking' obvious without further definition?  I suspect it means read-only/read-write."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Good concern, we had been thinking locked in the redfish terms. But non-rf used will use this also. \n\nunlocked = \"data is accessible to the user in\"\nlocked = \"data is NOT accessible to the user\"\n\nhttps://github.com/openbmc/bmcweb/blob/c0bd5e4b37f65ce29a392594d1ef240c64c99734/static/redfish/v1/schema/Drive_v1.xml#L363 \n\nWe need to think about this, to keep the interface clear. You will not be the only one with this rational and different definition of locked. Maybe we change the name to \"accessible\"?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Locked is pretty ubiquitous for drive manufacturers.  I think it's pretty well defined about what \"locked\" means in a drive context.  I don't know what else we would call it.  \"accessible\" has its own issues."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not sure what the decision is here and I don't feel too strongly about it.  If we are going to stay with Locked, I'd like better documentation in the property description to remove all ambiguity."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "sounds good. I update the property description.\nLet me know if there is anything else that needs attention."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need to clarify that this is a hardware-level encryption?  i.e. the drive could still contain a LUKS volume even if this is set to 'Unencrypted'."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Do we need to explicitly state that?  It seems unimportant to know or specify the difference between \"hardware encrypted\" and \"software encrypted\" at an interface level.  Also, all drives that support \"hardware\" encryption are a good bit of software as well, so where to draw the line gets confusing.  Given that it's attached to a \"drive\" object, and not a \"volume\" object, it seems like a given that it's the hardware variety, although I'm not against adding more, I'm just not sure what john would add that wouldn't make it more confusing."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "If the volume is LUKS (or any other software scheme) encrypted, I would expect this to return encrypted.\nI understand how it might be important to clarify that in the interface.  \n\nWe might be able to add another enum that would describe the type of encryption used on given drive. Is there interest in that?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> If the volume is LUKS (or any other software scheme) encrypted, I would expect this to return encrypted.\n\nHow would you know unless you're parsing the data in the drive itself?  Are there some drives where you might know if encryption is enabled via a side-band channel, but not be able to look at the data itself to know if it is software-encrypted?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "These are valid concerns.\n\nMy suspicion, is that if you can't read the drive, then you don't know if it is encypted or not, and we would return Unknown. That would be sub-optimal in the side band case you would always be reporting unknown. \n\nMy guess is in the side band mode, the bmc knows if the there is hardware encyprtion but not if the data is encrypted, right?\n\nI don't a plan now, but I am interested to hear Ed's take."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "correction: I don't *have* a plan now, but I am interested to hear Ed's take."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering this is on the \"drive\" interface, I would expect that this has to be a drive.  LUKS would be on a \"Partition\" schema.\n\nWith that said, I'm not sure we care about the distinction.  Given that most \"hardware\" encryption is a bunch of software anyway, just running in firmware instead of in userspace, I'm not sure it really matters to make them distinct, or try to put too fine of a detail on it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I would rather not specify weather it a hardware-level encryption."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 62,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "6bf3083572dd35974f4c1506eedf01477d3afdfb",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/5",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1635194293,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Rather than hard-code numbers, I would prefer to use 'maxint' here (I checked on your diff that it will compile, so I'm pretty sure it does the right thing):\n\n        uint8_t _predictedMediaLifeLeftPercent = std::numeric_limits<uint8_t>::max();"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "very cool, it uses std::numeric_limits<uint8_t>::max(). I did not it did that, and I agree it is better then the const 255. Thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "done, using maxint."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 62,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "e1dbdd6f9f370881790a0a1ddb85feb300cc2a29",
            "parents": [
                "a9c704e7caffca36c67adfb464e3af8492e8e668"
            ],
            "ref": "refs/changes/57/47657/6",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1635203032,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 63,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "af5197f1d2726f07f8c096a6149020627982c60b",
            "parents": [
                "b9dae7bed1789f712a68d09609cc889954a4f86c"
            ],
            "ref": "refs/changes/57/47657/7",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1644430735,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 63,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "7f8527f4965ee0324710310a2c4489719bb3ff7a",
            "parents": [
                "332a7b865b756ded61fd8eddd3c88b9e4a510a3b"
            ],
            "ref": "refs/changes/57/47657/8",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1648060121,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 63,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "28f112d53960dcc262a41773e1c86afee64aec19",
            "parents": [
                "332a7b865b756ded61fd8eddd3c88b9e4a510a3b"
            ],
            "ref": "refs/changes/57/47657/9",
            "uploader": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "createdOn": 1648078108,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 64,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "2f103d919ae272f0c8aa721c6c866bfe0b9e68c9",
            "parents": [
                "4d1ff65d77807b40cf4b237f89df4a001496ea1e"
            ],
            "ref": "refs/changes/57/47657/10",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1649104348,
            "author": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 64,
            "sizeDeletions": 0
        }
    ]
}