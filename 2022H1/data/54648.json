{
    "project": "openbmc/bios-bmc-smm-error-logger",
    "branch": "main",
    "id": "I101360223597d197362dc1dbe4a27601da09933f",
    "number": 54648,
    "subject": "buffer: bugfix (v2) consolidate the offset and readptr",
    "owner": {
        "name": "Brandon Kim",
        "email": "brandonkim@google.com",
        "username": "brandonkimbk"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bios-bmc-smm-error-logger/+/54648",
    "commitMessage": "buffer: bugfix (v2) consolidate the offset and readptr\n\n- It didn't make sense to make the user keep count of the different\n  types of read pointers, instead do the relative calculation at the\n  lowest level (wraparoundRead)\n- Added further tests to prove out that readPtr is being updated\n  properly in wraparoundRead)\n- Fixed wraparoundRead, as it was relying on the dataInterface->read to\n  read until the \"end\". The \"end\" was fixed in the bugfix #1 to be the\n  end of the queue instead of the mmaped buffer.\n- took out addtionalBoundaryCheck from wraparoundRead, as it was no\n  longer needed\n\nTested: Unit tested\n\nSigned-off-by: Brandon Kim <brandonkim@google.com>\nChange-Id: I101360223597d197362dc1dbe4a27601da09933f\n",
    "createdOn": 1655404414,
    "lastUpdated": 1655455113,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1655404414,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1655404460,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655404461,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1655404585,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45177/ : SUCCESS"
        },
        {
            "timestamp": 1655408031,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1655416606,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655421602,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1655434932,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655442565,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655446757,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1655446783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655446783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1655446907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45226/ : SUCCESS"
        },
        {
            "timestamp": 1655446923,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1655448700,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1655449125,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1655450606,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1655455113,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "52affbfb4dd04f31ae9d0a05d39af20993f72ff2",
            "parents": [
                "26660e9b26c0a9f54a80806244ab20d23e41f532"
            ],
            "ref": "refs/changes/48/54648/1",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655404414,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Is there HW test that will for sure know that it works?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Yep, I'm trying to get a machine with the new / special BIOS + this change to try this test out - but it might make more sense for that to come after the next change (which brings all of these together)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Going to fix the checksum bug in the next CL in the chain."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "do we need to check whether the relativeOffset < queueSize too?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "That is inherently checked by the lower level data interface (out of bound read) so I decided not to test it again - I could add it though"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Thinking about this a bit more, I think this is a good idea - let me add this check and add a test case as well."
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 198,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "you have fixed this! I left a suggestion in the CL that this was added. Basically my suggestion is to limit this conversion inside read/write functions dedicated to each struct if possible and use native endianness everywhere else. Otherwise has to remember to do this every time."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -19
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 41,
                    "deletions": -33
                },
                {
                    "file": "include/data_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": -37
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 91
        },
        {
            "number": 2,
            "revision": "35d4335eda4c41bc5c658c8f1d36190f0e7e625a",
            "parents": [
                "26660e9b26c0a9f54a80806244ab20d23e41f532"
            ],
            "ref": "refs/changes/48/54648/2",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1655446757,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/buffer.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "size_t for pointer? the name doesn't look right. This is just the offset, right?"
                },
                {
                    "file": "src/buffer.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "yeah this is in reference to \"bmcReadPtr\" which is a struct member of the buffer header. I think this is ok"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -19
                },
                {
                    "file": "src/buffer.cpp",
                    "type": "MODIFIED",
                    "insertions": 48,
                    "deletions": -33
                },
                {
                    "file": "include/data_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "test/buffer_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": -39
                }
            ],
            "sizeInsertions": 188,
            "sizeDeletions": 93
        }
    ]
}