{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ic191c9b98a55ad189232a42be2afa7ee14a9d614",
    "number": 52150,
    "subject": "ExternalStorer: Design document",
    "owner": {
        "name": "Josh Lehan",
        "email": "krellan@google.com",
        "username": "Krellan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/52150",
    "commitMessage": "ExternalStorer: Design document\n\nThis is a design document for the new bmcweb feature of\nExternalStorer. A companion API document, with usage examples,\nwill be added separately.\n\nSigned-off-by: Josh Lehan <krellan@google.com>\nChange-Id: Ic191c9b98a55ad189232a42be2afa7ee14a9d614\n",
    "createdOn": 1647729430,
    "lastUpdated": 1651527254,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1647729430,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1647729607,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1647888708,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1647903154,
            "reviewer": {
                "email": "ofery@google.com",
                "username": "oferye"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1647906755,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1647906777,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1647906927,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1647975774,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1647981069,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1647981074,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1648077109,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1648077382,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1648077993,
            "reviewer": {
                "email": "ofery@google.com",
                "username": "oferye"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1648167639,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1648167707,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1648171662,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1648173411,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1648173418,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1648173525,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1648174116,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 6: New patch set was added with same tree, parent, and commit message as Patch Set 5."
        },
        {
            "timestamp": 1648174680,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1648224145,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1648588739,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 7:\n\n(4 comments)"
        },
        {
            "timestamp": 1648596019,
            "reviewer": {
                "name": "Claire Weinan",
                "email": "cweinan@google.com",
                "username": "daylight22"
            },
            "message": "Patch Set 7: Code-Review+1\n\n(6 comments)"
        },
        {
            "timestamp": 1648654931,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(17 comments)"
        },
        {
            "timestamp": 1648720444,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1648720460,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 7:\n\n(27 comments)"
        },
        {
            "timestamp": 1648749808,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1648846083,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1648846634,
            "reviewer": {
                "email": "ofery@google.com",
                "username": "oferye"
            },
            "message": "Removed reviewer null."
        },
        {
            "timestamp": 1648851573,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1648851606,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1648859083,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1648863749,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1648866561,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(16 comments)"
        },
        {
            "timestamp": 1648866584,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1649072784,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1649072815,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 9:\n\n(16 comments)"
        },
        {
            "timestamp": 1649096893,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1649112706,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1651198901,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "dcb94f32feedf67312925210ea61a6f2f11943a2",
            "parents": [
                "fd0ec1f9212f127bf302dd4ceb8f4fa2e29a5f1d"
            ],
            "ref": "refs/changes/50/52150/1",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1647729430,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Here is a design document for a newly-proposed bmcweb feature: ExternalStorer\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't have a lot of feedback on this.  Should we rename the file to make it more obvious that this is a design only related to bmcweb?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Another idea might be to make a docs subdirectory within the bmcweb project, to keep the docs closer to the source."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 62,
                    "reviewer": {
                        "email": "ofery@google.com",
                        "username": "oferye"
                    },
                    "message": "What doesn it mean \"user-defined content\" , do you mean bmcWeb client info ? \n\"The challenge is that these are strictly defined by Redfish schemas: there are very few opportunities to insert user-defined content into these strict schemas.\" not sure how this is relevant. In general,  you could only use existing DMTF schemas."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Correct, you can only use existing DMTF schemas. You can't insert arbitrary content. You have to follow the schema, inserting content only where allowed."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd prefer `/run/bmcweb`.  Maybe a subdirectory under there so it is clear what is for \"ExternalStorer\"?\n\nhttp://0pointer.net/blog/projects/tmp.html"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm OK with changing it to /run instead of /tmp directory. On my BMC, they are both tmpfs. I'm also thinking about having it honor an environment variable, before falling back to a hardcoded path. Using $TMPDIR seems to be correct here.\n\nInterestingly, my first draft of this document did in fact use the /tmp/bmcweb/ExternalStorer path! I dropped it upon early review, though, because it was pointed out to me that other bmcweb features, not just ExternalStorer, might want to make use of a similar backing store in the future."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm assuming /run gets cleared out on reboot?  The system already uses /tmp in other places, although I don't have a strong opinion here."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The exact pathname is an API detail, so I moved it to the companion API document. On the BMC that I have, both /tmp and /run are mounted as tmpfs filesystems."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's fine if you want to move it out, but you need to call out the properties that the directory need to have, that it's a directory in line with linux best practices, cleared on reboot, mounted in ram storage, ect.  I suspect just calling out the exact directory here is easier, but I will leave that judgement up to you."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 442,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I decided to include the directory name here, for clarity. In the prior sentences, I already said that's cleared upon reboot/power cycle, and it's in memory only."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 579,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 593,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "cfe5566d48f3df0309dfb174b11680f8980a44ca",
            "parents": [
                "fd0ec1f9212f127bf302dd4ceb8f4fa2e29a5f1d"
            ],
            "ref": "refs/changes/50/52150/2",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1647906755,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded some confusing prose within the \"ExternalStorer Hook\" section\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "If interested to see the code: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/51303\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I will rearrange this doc to follow the template, and move the implementation details to an appendix.\n\nhttps://github.com/openbmc/docs/blob/master/designs/design-template.md\n"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 581,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 595,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "9ee0f3724c94d14aca8b8345b863f877a8f67b47",
            "parents": [
                "fd0ec1f9212f127bf302dd4ceb8f4fa2e29a5f1d"
            ],
            "ref": "refs/changes/50/52150/3",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648077109,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I have revised this document, to follow the template. I split out the API section, as it was getting large, into its own separate document: https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/52295\n"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "From viewing this doc in a markdown viewer, I'm not seeing any indentation / paragraphing. You may need to add 2 new lines between each paragraph?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "It turns out copying the code from gerrit removes new lines for some reason - so that's why it looked funky on my viewers. Resolving."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I think the bullets should not have new line in between, as the bottom bullet is being extended and allowing the next paragraph and beyond to be in 1 giant bullet (in my markdown viewer)."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "It turns out copying the code from gerrit removes new lines for some reason - so that's why it looked funky on my viewers. Resolving."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: I guess this is grammatically correct but `retrieval later` may flow a little better?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I tried it both ways, and \"later retrieval\" still seems to flow the best for me. There is also similar phrasing on line 18."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "So an internal daemon (external user) that creates a special file at the specified path in tmpfs, will not cause ExternalStorer to then reflect it in bmcweb?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded it, to be more clear. The intention is to disallow someone from creating ExternalStorer instances or entries with the identifier \"index.json\" which would result in a naming conflict with the special usage of this filename here.\n\nIt doesn't matter if it's an internal daemon directly manipulating the filesystem, or an external user using HTTP operations. Although not said in the design document explicitly (I'm saving that for the API document), there is a 1:1 relationship between the \"Id\" field (the suffix of the URL) and the filename on disk. So, if someone creates an object with \"Id\" of \"index.json\", they have just caused a conflict. The text here seeks to make this a prohibited operation."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 170,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Although not checked in - may be good to note what the document is called at the moment, so that it can be easily referenced: (external-storer-api.md)"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 170,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I added the URL to the Gerrit change for that, which is a stable link (it remains valid even after the change is submitted)."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "d98a120f226179252827508fd2d2af9442f4c3bd",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/4",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648173411,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "03d675017559ffbadbc07524bb12fbfa974f4634",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/5",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648173525,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 208,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "e9b71c754efa77f2ac3773d8ce8f72ea8b5c1d79",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/6",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648174116,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 208,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/7",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648174680,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "nit: cannot"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 54,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "NIT:\nnot disallow => allow"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded this"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 54,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Thanks"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "nit: \"for\" instead of \"from\"?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "nit: \"This is to\""
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "I am wondering what type of manipulation will be allowed. Will locally-running services be allowed to add content to the backing store, or is the backing store supposed to hold data provided exclusively by services *external* to the BMC?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded it, to clarify. A locally-running service is free to do whatever it wants with the backing storage. It can add, modify, delete, and so on. The backing store can be used simultaneously, by either a locally-running process or an externally-running HTTP client, or both, or multiple copies of both. By design, there is no locking."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Is it required to be in-memory, or is that just a recommendation.\nIt is possible that others will want to store persistent information."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 67,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Storing permanent information is beyond the scope of this design, for now."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 67,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Eventually developers will want to store persistent information, by changing the file path. We might want to know if would be possible. \n\nBut it is fine to put it out of scope for today.\nThanks"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Some missing requirements:\n\nMust be able to store and produce schemas that are to the redfish standard.\n\nMust be able to avoid security compromises during normal operations (escaping a directory via .. for example).\n\nUser must be able to set a given Id through the API\n\nIf the user does not provide an Id one musty be generated.\n\nUser must be able to add resources at any point in the Redfish tree."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Being able to store and produce schemas goes way beyond the intended design, and could probably use another design document all on its own for that, if that is a direction we wish to go down. I thought you did not want ExternalStorer doing any schema manipulation on its own, but rather, obeying schemas that others had already written.\n\nAs for security compromises, see the Impacts section for that, I called attention to the security requirements there.\n\nAs for setting the ID, and auto-generating an ID if not provided, that's an API detail, and it's in the companion API document.\n\nAs for adding resources at any point in the Redfish tree, isn't that not allowed by schema? The point of a schema is to restrict what can be done arbitrarily, so that data remains organized."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Being able to store and produce schemas goes way beyond the intended design, and could probably use another design document all on its own for that, if that is a direction we wish to go down. I thought you did not want ExternalStorer doing any schema manipulation on its own, but rather, obeying schemas that others had already written.\n\nI'm not following the above statement, and I suspect you've misunderstood me;  Must be \"able\" to store and produce schemas to the redfish standard.  This involves the things you've been working on around now properties work, how collections work, ect.  This does not mean that this design needs to verify all schemas.\n\nIdeally requires should be able to become a test, and the test for this would be (that I think you've already written) write some compliant redfish to external storer, and ensure that it can be produced correctly.\n\n> \n> As for security compromises, see the Impacts section for that, I called attention to the security requirements there.\n\nLets call it out in requirements, because it is a requirement, and a requirement is phrased differently, in a way where we can make clear the security intent.\n\n> \n> As for setting the ID, and auto-generating an ID if not provided, that's an API detail, and it's in the companion API document.\n\nDisagree, I would like it in the requirements so it's part of the test plan.  We will need to test both paths, and I would like that called out.  If you'd rather add it to your test section, that's fine, but I'd like it somewhere in here, because as we've found, it's important.\n\n> \n> As for adding resources at any point in the Redfish tree, isn't that not allowed by schema? The point of a schema is to restrict what can be done arbitrarily, so that data remains organized.\n\n\nAgreed, so lets word it very precisely: \"Must be able to add resources to anywhere in the Redfish tree that is allowed by the standard.\"  Does that seem better?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "As mentioned in another comment, I added more text to talk about security up here in the Requirements section, as requested. Also added some text about identifier strings and security concerns.\n\nI am still intimidated by the thought of trying to make some kind of global bmcweb change that would affect all schemas and locations possible. The original idea of constraining the change to only those who have a use case for them, and adding it in gradually as needed, seems much safer to me."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please in the definition of each, add the term for the Redfish item that that thing produces so those with knowlege of the redfish spec can comment.\n\nI beleive it's hook = Route\nInstance = Resource\nEntry = Attribute/property."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm, the entire point here was to avoid confusion with existing Redfish terminology. Also, an instance is a container, not an individual resource. An entry is a JSON object that can itself contain many properties, not just a single property."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The point is that I, someone pretty ok in my redfish knowledge, am having trouble translating, and because the whole point is to follow the standard, this should be readable by someone with knowledge of the standard.  I'm not sure what a container is in the redfish schemas, can you elaborate?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I explained it in terms of JSON objects, which hopefully is understandable. I also used the term \"collection\" which I think is more Redfish-friendly than \"container\"."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think this can be removed;  Every schema includes an oem section, which is designed for user-defined content."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The point I was making is that the Redfish object hierarchy can't just be altered at will, the schemas limit where we are allowed to make changes, so care has to be taken as to where to instantiate the ExternalStorer hooks at. The \"Oem\" section, if it is freeform, would be a good place for an ExternalStorer hook, if desired."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The point I was making is that the Redfish object hierarchy can't just be altered at will, the schemas limit where we are allowed to make changes, so care has to be taken as to where to instantiate the ExternalStorer hooks at. The \"Oem\" section, if it is freeform, would be a good place for an ExternalStorer hook, if desired.\n\nOk, what you wrote in the comment seems reasonable and a lot more clean than the highlighted text, lets get it reword it a little bit, and the content of your comment can probably just replace that text."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, cleaned up the text further and added it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, rephrase to \"content must be inserted to the schema\""
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the final version, the hook doesn't contain a URL, given that the user can put things into the tree at any location correct?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded it slightly."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "No, the hook will always contain a URL fragment, as the top layer. Things would get added underneath that fragment. When we have more locations we want to add ExternalStorer functionality to, we can instantiate additional ExternalStorer hook objects as needed."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Url fragements (ie rfc3986 section 3.5) I would not expect to show up in external storer, although you do bring up a good point that we should have a requirement for filtering/rejecting, or at least defining behavior when an odata.id is sent to us with a fragment in it.\n\n> When we have more locations we want to add ExternalStorer functionality to, we can instantiate additional ExternalStorer hook objects as needed.\n\nLike I talk about in the other section and have talked with you a couple times, this would require the BMC to have all possible redfish nodes with hooks on them, which from a coding perspective doesn't really scale (unless maybe you generated them from the schemas?  Something to consider)."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 116,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Vocabulary confusion here: I don't mean literal URL fragments (anchor links). Instead, I mean substrings of what would be a URL if it were a complete string. For example, \"Systems/system/LogServices\". This provides the location for a hook that we can use, to carefully insert our own desired content, in a way that does not violate the LogServices schema."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 117,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "What will this redfish URL ExternalStorer schema look like? \nDo you have an example?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 117,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "ExternalStorer, by design, will not introduce any new schemas. It will conform to existing schemas. The first example is LogServices (see the companion API document for that)."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "nit: by the"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 133,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Above you mentioned how external store would handle overuse of memory. \n> if this limit would be exceeded .. old content will be silently dropped, as needed.\n\nHowever, this does not appear to be address in your design. How do you plan to drop the old data silently?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "By \"silently\", I mean doing so without disturbing the user in any way. If the user attempts to store new content and there isn't room, then old content will be removed to make room, and the user's write request will be considered successful."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please go one level deeper than this, (ie /run/bmcweb/redfish) in case the BMC in the future chooses to use this folder for other things."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "That will have a pretty big blast radius through the API document, but could be done. If going that way, I would prefer to use /run/bmcweb/redfish/v1 directory, as it would provide visual consistency with what's used by the URL path."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I would expect the blast radius to be relatively easy to handle with a find and replace, being correct is the most important thing in a design doc level.\n\nYes, you got it exactly right, there would be the folder you mention.  I only say /run/bmwcweb/redfish because that's where the redfish tree technically begins, so we're essentially saying the same thing.  Whichever you want to put in the doc is fine."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I went ahead and made the update, to the API document, as well as the code."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The text in this section needs to be rearranged a bit, and a new section written here.  The section is designed to tease out \"what other things did you think about doing instead of this?\"  and talking about the pros and cons of each.  For example, storing in memory might be an alternative, not using redfish at all (ie webdav as you mention earlier) might be an alternative.\n\nCan you take a look at this section, and try to make another attempt at it please?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Sorry, can't write a new section, as arbitrarily adding a new section would violate the \"schema\" enforced by the design document template!\n\nThe pros and cons of some alternatives are mentioned below."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I would say the design document template is more of a recommendation and the sections in the design doc template SHOULD be covered, but more can be added if it makes the doc more readable.\n\nNot an expert though, and following the template to make it succinct is part of the goal too in my opinion."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm not sure how strictly the design document template should be followed. We can ask Ed."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "TO be clear, I'm not saying the section needs a new title, or to violate the template.  Also, to Brandons point, the template is a starting point, and can be adjusted as the designs require, hence the name \"template\".  It's there to ensure that the information that is recommended gets captured.\n\nWhat you've described here isn't really an alternatives considered section, it's more of a design section, and should go in the design section.  The alternatives considered section should be a thought around \"what other designs could've worked here\""
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "As for other designs that were earlier considered and rejected, I'm not really familiar with the background of the decision-making that goes into Redfish, so I can't really comment on those.\n\nThe design of ExternalStorer naturally follows from our requirements, and I tried to come up with something that would meet those requirements and help out the users who would be interacting with it. I'm not sure what other designs could have worked, as the requirements drove the design."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, thanks for the explanation. I reworded it a bit."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This documentation is documenting the long term intent;  This statement was a short term decision intended to be able to make progress, but ultimately, this needs to be supported on every collection and the design doc should say that."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I thought the understanding was that we would not make a global change to all Redfish container objects, but rather, add support for ExternalStorer on an as-needed basis. This philosophy is similar to what was done for dbus-sensors devices: instead of trying to add a wildcard approach that would try to support every device supported by Linux, deliberately take a slower pace, adding devices to an allowlist and then only supporting those, once they are known to actually be tested and needed by somebody."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We've talked before about how this differs significantly from dbus-sensors objects.  If this is operating on one node at a time, the existing dbus designs similar to how external sensor works (dbus daemon hosts object, bmcweb picks up dbus daemon and modifies it) would've worked just fine.  That's one of the major distinctions of this feature.\n\n> instead of trying to add a wildcard approach that would try to support every device supported by Linux, deliberately take a slower pace, adding devices to an allowlist and then only supporting those, once they are known to actually be tested and needed by somebody.\n\nThat's not why the design went that way.  The fact that the device names and the linux names match is entirely because they're both based on the product name, but we're getting off on a tangent a bit that's unrelated.   Lets focus on this design and what's needed to make this feature usable for the user."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "As for short-term versus long-term, I am confused, as the requirements and the scope have changed over time. That's why it is a good idea to write these documents, to nail them down, as other people will be depending on them to remain stable long enough to bring them to fruition.\n\nThat said, I'm open to rewording this section, but don't know what text I should change it to."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This sentence is kind of unrelated to this design doc.  I think it would be an improvement to just remove it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 157,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "This sentence is very useful, as it backs up what I said in the previous comment."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Where I struggle as the dbus-sensors author is that this statement isn't really true in terms of \"decisions\", but it's unrelated to this design doc, it's not worth calling out here and working to the bottom.  If you're interested in how the dbus-sensors history went, and why the design is the way it is, I'm happy to chat outside of this review, but the TL; DR, is that the allow list in PsuSensor have nothing to do with how linux devices work (in fact, if we could at a design level, we would've done the opposite and removed the allowlist), and everything to do with how Configurations are parsed per system."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 157,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I thought that was how the original design decision for dbus-sensors went. If it wasn't the intention to have an allowlist for dbus-sensors, I'm curious why an allowlist ended up being used, instead of a more generalized Linux hwmon solution that would have simply parsed the hwmon file layout \"schema\" and accepted any compliant device that it found."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 166,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "nit: cannot"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 166,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You should mention industry alignment in this section.  Nobody in the server managability industry (that I'm aware of at least) uses webdav, nor are there manageability schemas for it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "WebDAV was kind of a straw man here. I wanted to give an example of a more general protocol that would intentionally not try to organize anything into schemas."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, no disagreement there, but my point still stands, we should mention server manageability as a targeted reason why this feature exists."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I added a sentence mentioning \"server manageability\" and the need for structured data for it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 181,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should go in your requirements section."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 181,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The design document template said to mention security impacts in this section, and this is a security impact. Should security be redundantly mentioned in two different places?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 181,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's a nuace between the two.  A requirement would be to securely handle odata IDs, with the goal of having no impact.  Your impact section would call out something like \"if it were possible to inject data into odata.ids, this would cause a security concern, and should be tested\".  See the difference?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 181,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Sorry, I still don't see the difference. I did add some more text mentioning identifiers and security, in that Requirements section, though."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 183,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think there's any evidence that tmpfs is slower than dbus;  I would expect anything in this feature to be faster, not slower."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 183,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I meant to compare performance with caching, versus performance of having to go through the filesystem anew for every lookup. I'm not sure how D-Bus would fit into this."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 183,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The filesystem itself is cached.\n\nWith that said, this was a passing comment.  If you want to keep this stanza I'm fine with it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 186,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Other impacts?  How do platforms disable this code?  What binary size impact does it have?  Does the interface need limited to certain channels?  (probably needs another requirement).  How does a developer disable the feature if it's not desired?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 186,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm not sure what you mean. What is meant by \"channels\" in this context? Do you think we should add a definition flag, or other global feature toggle, to provide a way to globally disable ExternalStorer throughout bmcweb if not desired?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 186,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"channels\" would be for example, if something is interacting with externalstorer from localhost, versus accessing it from out of band (ethernet) versus accessing it from in-band.  Do we need different behaviors there?\n\n>Do you think we should add a definition flag, or other global feature toggle, to provide a way to globally disable ExternalStorer throughout bmcweb if not desired?\n\nDepends heavily on the impact, and that's something to be discussed with the greater bmcweb community.  I'd probably start by asking on discord."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 186,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, you are defining \"channels\" to mean the various means of accessing ExternalStorer. There are two: HTTP (via bmcweb) and the filesystem (direct access). In HTTP, the existing permissions of the places the ExternalStorer hook is in (such as LogServices) are used. ExternalStorer creates no new permissions itself (you mentioned that as a requirement during the review of the earlier prototype, which attempted to edit a permission file you said was not editable). In the filesystem, if the client is running as root they can do anything, there is intentionally no protection layer there (nor can there be)."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 192,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, because the filesystem is internal, a functional test has no way to test it aside from looking at the resulting tree and making the assumption that the files were persisted properly.  This can probably be removed."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 192,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "That would be just what a functional test would do, though. Looking at the resulting filesystem, to see what changed, is a great way to verify that an operation worked as intended."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 192,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Functional tests can only operate on external APIs, of which in this design doc, the filesystem is not an external API.\n\nWith that said, this was a nit, so it's not that important, but something to consider when you start your testing."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please rewrite this, it implies that other developers will be writing these tests, which I'm sure is not what you intended.  There should be tests that test the BMC capabilities."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "If another developer is using ExternalStorer as part of their feature, then they would probably want to test their feature, and in their test, making sure ExternalStorer worked for them, as intended, based on whatever they were trying to achieve. I thought this was how an integration test worked."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That would be in scope for their design docs though.  This design doc is to call out the work that this feature is going to do, and it's expected that tests be written for it.  Just take out the word \"expected\", as it reads as \"other people will write the tests for this\" which I know is not your intent, but we should be clear here and scope this design doc on this feature."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Reworded it. I'm still not entirely sure what your concern is, though. If another developer is making use of ExternalStorer for certain features they require, their tests will naturally have to exercise it during their own testing of those features."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please be slightly more specific here, I suspect you're going to write robot tests for this feature?  We should explicitly call out the harness we intend to use."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 197,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm not sure what you mean by \"robot tests\". As for explicitly calling out the intended harness, isn't that an implementation detail, not for a design doc?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Robot tests are the way the project writes tests today, and are present in the test repo on github.  No, it's not an implementation detail at this scope, because if you plan to write your own test harness, or use a DMTF approved test harness to do your testing, it significantly changes the scope of this design, and that's why this section is here, so we can assess if the test coverage you're planning will be enough."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 197,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "What is the link to those \"robot tests\"? I think the details of test harnesses are beyond the scope of this design document."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "d15d806f36c9da039cf7d30f8f33ffd961ac25a1",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/8",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648720444,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/external-storer.md",
                    "line": 180,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "This link points to itself."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 180,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Wow, good catch! Thanks. A cut-and-paste oops."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 202,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 216,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "692a9b90d028d6f9151fc657c7ccbdaba7c3c8df",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/9",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1648851573,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "It seems like some of the comments from Ed could use a reply from Ed before resolving. "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Agreed, waiting for reply."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Replied."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, updated the wording and added some more text. I'm concerned about the length so don't want to add too much.\n"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 202,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 216,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "5308a49ac93fd8a6491883897198755fd9d1f604",
            "parents": [
                "6b1efa878f1b24d0444bd3735a40db908db84cac"
            ],
            "ref": "refs/changes/50/52150/10",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1649072784,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm looking for a +1 from Ed on this... is there still work being done here?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 106,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Could you explain why this design chooses LogService?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 106,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "LogServices is the first, of hopefully many, integration hooks to be provided. LogServices had the greatest need for our initial implementation. Other than that, there's no reason why it was singled out for special treatment. ExternalStorer is intended to be generic enough to adapt to all endpoints that need it."
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "How is this design related to the circular buffer that Brandon proposes? Is this covered somewhere?"
                },
                {
                    "file": "designs/external-storer.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I'm not sure of this circular buffer. I do plan to add a FIFO for automatically removing old entries as new entries fill up the maximum allowed storage space, though. The API document talks more about this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/external-storer.md",
                    "type": "ADDED",
                    "insertions": 211,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 225,
            "sizeDeletions": 0
        }
    ]
}