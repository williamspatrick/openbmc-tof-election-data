{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I13b2fc942c9ce6c55cd7348aae1e088a3f3d7fd9",
    "number": 54945,
    "subject": "Add SSL support for http_client (EventService)",
    "owner": {
        "name": "AppaRao Puli",
        "email": "apparao.puli@intel.com",
        "username": "apuli1"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54945",
    "commitMessage": "Add SSL support for http_client (EventService)\n\nThis commit adds the initial SSL support for http_client which can be\nused for sending asynchronous Events/MetricReports to subscribed Event\nListener servers over secure channel.\n\nCurrent implementation of http client only works for http protocol.\nWith current implementation, http client can be configured to work\nwith secure http (HTTPS). As part of implementation it adds the SSL\nhandshake mechanism and enforces the peer ceritificate verification.\nIts uses the default options TLSv12 and with default cipher list. It\nsupport the RootCA certificate(PEM) for now. The securty enforcements\nand adding support for different certificates can be looked in future as\nneed arises.\n\nThe directory where certificates stored can be configured using meson\noptions(http-client-cert-dir).\n\nTested:\n - Added new subscription with \"https://...\" as Event destination\n   and could see the events generated on BMC in EventListener.\n - Also verified the subscription data with \"http://...\" and that\n   also works fine.( Note actual code its disabled - But for unit test,\n   that check is removed and checked)\n\nPOST on URI: /redfish/v1/EventService/Subscriptions\nBODY:\n{\n  \"Context\": \"Hostname - NodeX\",\n  \"Destination\": \"https://<ListenerIP>:<Port>/<URL>\",\n  \"EventFormatType\": \"Event\",\n  \"Protocol\": \"Redfish\"\n}\n\nChange-Id: I13b2fc942c9ce6c55cd7348aae1e088a3f3d7fd9\nSigned-off-by: AppaRao Puli <apparao.puli@intel.com>\n",
    "createdOn": 1656372848,
    "lastUpdated": 1657647298,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1656372848,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1656372888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656372888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1656373235,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/45981/ : FAILURE"
        },
        {
            "timestamp": 1656387810,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1656387864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656387864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1656388394,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45998/ : SUCCESS"
        },
        {
            "timestamp": 1656389129,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656389243,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656389937,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656447077,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1656447843,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1656609029,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656633738,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1656705754,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1657065073,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1657065142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657065142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1657065254,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46431/ : FAILURE"
        },
        {
            "timestamp": 1657065855,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 3:\n\n(7 comments)"
        },
        {
            "timestamp": 1657067539,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1657067601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657067601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1657067917,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46432/ : FAILURE"
        },
        {
            "timestamp": 1657130650,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1657130705,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657130705,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1657130850,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1657131064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/46492/ : FAILURE"
        },
        {
            "timestamp": 1657132188,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(19 comments)"
        },
        {
            "timestamp": 1657132328,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1657647298,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5a04094759196acedf9a3307af0bc4feccc55e6a",
            "parents": [
                "4d94272fe54c147974f86788092bbbdd950406aa"
            ],
            "ref": "refs/changes/45/54945/1",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1656372848,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 182,
                    "deletions": -56
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 57
        },
        {
            "number": 2,
            "revision": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
            "parents": [
                "4d94272fe54c147974f86788092bbbdd950406aa"
            ],
            "ref": "refs/changes/45/54945/2",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1656387810,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More details needed:  How are certificates loaded?  What cipher suites are used?  Are ECC keys allowed?\n\nPlease provide more detail in your commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "ED, I added more context in commit message.\n\nCurrently i checked with RootCA certificate(PEM) file and haven't checked other certificates. Also its set to default ciphers currently. I thought of checking with same cipher which we use for webserver(MozillaCiphers) and can be enhanced in future.\n\n            std::string mozillaModern = \"ECDHE-ECDSA-AES256-GCM-SHA384:\"\n                                        \"ECDHE-RSA-AES256-GCM-SHA384:\"\n                                        \"ECDHE-ECDSA-CHACHA20-POLY1305:\"\n                                        \"ECDHE-RSA-CHACHA20-POLY1305:\"\n                                        \"ECDHE-ECDSA-AES128-GCM-SHA256:\"\n                                        \"ECDHE-RSA-AES128-GCM-SHA256:\"\n                                        \"ECDHE-ECDSA-AES256-SHA384:\"\n                                        \"ECDHE-RSA-AES256-SHA384:\"\n                                        \"ECDHE-ECDSA-AES128-SHA256:\"\n                                        \"ECDHE-RSA-AES128-SHA256\";"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Thank you Ed and Carson for comments. I will look into the comments and implementation associated changes by early next week. "
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This patchset has the same problem the last one did, it doesn't load root certificates, so there is no way to verify a client.\n\nIn the beast examples, there's a function called load_root_certificates that does this that you can look at."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "also set_verify_mode"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not to keep piling on, you're also missing this block of code (stolen from the examples)\n\n        // Set SNI Hostname (many hosts need this to handshake successfully)\n        if(! SSL_set_tlsext_host_name(...., host))\n        {\n            ...\n        }\n        \n        \nLots of webservers these days have SNI verification turned on, so you'll need this as well"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Thanks Ed for pointers. I addressed all ( Certificate load, verify mode setting and SNI hostname setting) the comments."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 278,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Why do we need to ignore this error in general? Why does it not matter when SSL is not enabled?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 278,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's pretty common among https servers to just sever the connection when a request is complete, and not do the proper TLS shutdown.  Generally the error is benign, and can be ignored.  In theory we could log it, but so many servers do it that it's not really worth thinking about unless it caused a real error in the http request (which would have a different code)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 278,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 405,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Do we need the timer since we're not doing a read or write operation?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 405,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  Ideally we should be just using the timer here in all cases.  Also, not relying on tcp_stream makes it faster and saves a ton of binary space:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/51943"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 405,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Agree with both of you. This can be taken as separate commit( As Ed already started on it). If you are  ok, I can take 51943 commit forward and bring it out of WIP."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 405,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Agree with both of you. This can be taken as separate commit( As Ed already started on it). If you are  ok, I can take 51943 commit forward and bring it out of WIP.\n\nFeel free to take it over.  I believe the code is mostly correct, just needs some testing (and likely debugging)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 416,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Why do we not need to return when there's an error like we do below without SSL enabled?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 416,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Same as above. Just on safer side, close connection  is attempted in either case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 416,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Leaving comment open to give Carson a chance to accept the statement."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 416,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'm alright with removing the return here, but it's because I've found that the return statement in the code without SSL enabled can break the flow in certain situations."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 474,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Why do we not need to return when there's an error like we do below without SSL enabled?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 474,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Since we are closing the connection, If there is error in shutdown case also, We need to make sure connection is closed. So going ahead with close() call even in error cases(just on safer side)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 826,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "You're not accounting for the use of SSL when sending the message.  Connections stay in the pool after they are created and the same pool can be used by multiple entities.  It could be the case that a connection was previously created without SSL and now you are attempting to use it to send a message with SSL or vice-versa.\n\nWhen a connection is grabbed you need to make sure that it and the message match in terms of if SSL is enabled.  If they don't match then the connection needs to be reconfigured before the message is sent."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 826,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Connections remain in the pool once they've been created.  An existing connection could have been previously created without SSL enabled and now you're trying to send a message using SSL or vice-versa.\n\nYou need to make sure that the message to be sent and the connection grabbed agree in terms of using SSL.  If they don't then the connection needs to be reconfigured to match as part of the process."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 826,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Addressed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 826,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yeah, Good catch. I missed this case. Thank you.\nCorrected the code now."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 826,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Sorry, I'm not sure how I ended up flagging this same thing twice without realizing it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 182,
                    "deletions": -56
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 57
        },
        {
            "number": 3,
            "revision": "6913eab342dcc4bf4509ce1982abd11cdec7f339",
            "parents": [
                "514ce6802820226ff73eb230a890a0af9c276c0f"
            ],
            "ref": "refs/changes/45/54945/3",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1657065073,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Addressed all comments."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 218,
                    "deletions": -61
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 271,
            "sizeDeletions": 62
        },
        {
            "number": 4,
            "revision": "33b51e81be7c40521a4fe41f5e4adcb843b21af9",
            "parents": [
                "514ce6802820226ff73eb230a890a0af9c276c0f"
            ],
            "ref": "refs/changes/45/54945/4",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1657067539,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 219,
                    "deletions": -59
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 272,
            "sizeDeletions": 60
        },
        {
            "number": 5,
            "revision": "d739445adffb056cbb753730656f80ccc367b010",
            "parents": [
                "40d799e6fef1b39e35b4e0a0d1f5e44cb92a2de5"
            ],
            "ref": "refs/changes/45/54945/5",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1657130650,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "THis is using the DMTF server example?  If so, please call that out."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You will need a test that adds both simultaneously;  As-written, I don't think this code will handle it properly."
                },
                {
                    "file": "bmcweb_config.h.in",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't make this configurable, or, if it must be configurable, please call out the use case for why a platform would need to configure it in your commit message."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just rely on // NOLINTNEXTLINE(error-type) for resolving this as we have in other places.  Having out own copy of this doesn't seem like it helps us here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 154,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no tls 1.3?\n\nCan you please make sure this conforms to the owasp TLS recommendations (as the documentation asks for).\n\nAlso, please document these design decisions (including the links to the backing owasp recommendations) in your commit message."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If we do this codepath in the constructor, we can remove the need for useSSL entirely, and just rely on\n\nif (sslConn)\n\nWe don't use any of the content from endpointList to construct the ctx, so that seems useful?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Common error #5\n\nThere lots of error paths here.  Please account for them"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "common error #5"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "possible nullptr dereference if host is empty.\n\nalso, please use .c_str()."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If loading the ssl context fails, should we even retry?  There's no recovery that I'm aware of if the certs fail to load?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 282,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "not a problem in your patchset, but size_t is generally taken by value, not reference."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 294,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can this move to a member method instead of a lambda?  That's the pattern we've been trying to move to.\n\nSomething like\n\nvoid afterConnect(std::shared_ptr<ConnectionInfo> connection)\n\n\nthen you would use it with:\n\nboost::beast::http::async_write(*sslConn, req, std::bind_front(this, shared_from_this());"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 467,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "once the async_shutdown is complete, you still need to call conn.socket().shutdown(boost::asio::ip::tcp::socket::shutdown_both,\n                                   ec);\n                                   \nas you do on the lines below."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "both of these code paths have very similar code;  Can they be combined?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 502,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This whole function is pretty much a duplicate of the above, which, when it was 10 lines of code duplicated was probably fine, but now that its much longer, is there any way to deduplicate the paths?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 583,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm a little confused the connection pool would have a single bool in it for \"useSSL\".  Isn't the SSL state per connection?  Do we need another vector of httpsConnections similar to the http connection poll we have on 584?\n\n\nSaid another way, if I have one subscription that uses SSL and one that doesn't, this will break.  PLease add that to your tests."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 583,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "+1 on the bool needing to be per connection instead of the pool as a whole.  Account for this in the testing.\n\n> Do we need another vector of httpsConnections similar to the http connection poll we have on 584?\nIs it common to have separate pools for http and https?  Also at that point we'd effectively have 8 connections to a single destination.  We had a discussion around limiting the pool size back on the refactoring CL https://gerrit.openbmc.org/c/openbmc/bmcweb/+/52281/comments/56c205dc_6fa6f52e"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 604,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "std::move on a bool does nothing.  Please remove."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 651,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "You first need to make sure the next message in the queue matches the current connection in terms of using SSL.  If they do not then you need to ignore if the server is keepAlive and close the connection before reconfiguring the connection and sending the next message."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 669,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why do we need a separate bool for this?  doesn't destUri contain http or https?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 731,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "This is where you need to make sure the message and existing connection agree in terms of using SSL.  If they do not then you need to reconfigure the connection.  \n\nIf the connection is idle then you need to make sure you close it first"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "You don't need to use move since this is a bool"
                },
                {
                    "file": "meson_options.txt",
                    "line": 307,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think this is where phosphor-certificate-manager stores these, is it?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 227,
                    "deletions": -59
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 284,
            "sizeDeletions": 60
        }
    ]
}