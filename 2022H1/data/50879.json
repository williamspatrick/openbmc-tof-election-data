{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "topic": "WIP",
    "id": "I969f5f2c32c4acccd4d80615f17c44d0c8fabd0d",
    "number": 50879,
    "subject": "Remove q-factor weighting on Accept Header",
    "owner": {
        "name": "Gunnar Mills",
        "email": "gmills@us.ibm.com",
        "username": "gtmills"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50879",
    "commitMessage": "Remove q-factor weighting on Accept Header\n\nbmcweb does not do anything with the q-factor weighting (;q=) so just\nremove it from the encoding.\n\nThis is needed because routes like\n\"/redfish/v1/Systems/system/LogServices/EventLog/Entries/<str>/attachment\"\nhave a check for isOctetAccepted. Even though */* is in the Accept\nHeader isOctetAccepted still fails due to the q-factor weighting.\n\nOn the system I tested, on firefox, Accept looks like:\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\n\nThe GUI reported being unable to download a AdditionalDataURI (e.g.\n...attachment/)\n\nSee: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept\nTested:\n/redfish/v1/Systems/system/LogServices/PostCodes/Entries/<str>/attachment/\nand .../EventLog/Entries/<str>/attachment now return correctly.\n\nChange-Id: I969f5f2c32c4acccd4d80615f17c44d0c8fabd0d\nSigned-off-by: Gunnar Mills <gmills@us.ibm.com>\n",
    "createdOn": 1643839850,
    "lastUpdated": 1648757973,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1643839850,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1643839864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643839864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1643839888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/36503/ : FAILURE"
        },
        {
            "timestamp": 1643839963,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1643839976,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643839976,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1643840146,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643840317,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643840691,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36504/ : SUCCESS"
        },
        {
            "timestamp": 1643840724,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1643842910,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643915299,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1643915310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643915310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1643915927,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1643915985,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1643916428,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36558/ : SUCCESS"
        },
        {
            "timestamp": 1643921539,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1643921657,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1647109267,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1648757900,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1648757967,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1648757973,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Topic set to WIP"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "b50860e2626c6920453b81db2336d00783114e34",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/1",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643839850,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an example of COMMON_ERROR 12.  I suspect we should be using something like https://www.boost.org/doc/libs/1_78_0/libs/beast/doc/html/beast/ref/boost__beast__http__ext_list.html\n\nhere?  Which looks like it's purpose built for parsing accept headers."
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nvm, I played with this, and the ext_list headers look like they split on /, which messes the whole thing up.  I wonder if that's a boost bug?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Maybe they just don't have support for q-factor weighting (;q=) ?\n\nWhich is odd because i see this used on both firefox and chrome (Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9)"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> This is an example of COMMON_ERROR 12.\n\nDone. Followed code elsewhere like: \nhttps://github.com/openbmc/bmcweb/blob/41d61c8281ed9af50630c78f0a646e726139fb25/include/authorization.hpp#L57"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That code as written isn't an example of common error 12, because Basic auth defines \":\" as a delimiter, and the next call to that is a substr call.  Ideally that code should also be checking for duplicated \":\" to avoid injection attacks, but given that the next call is to pamAuthenticateUser, there's no way to get that code to accept things that it shouldn't.\n\nThis code, in theory, if I was able to inject \";q=\" into an accept header, I could make this algorithm fail.\n\nNow, how much that matters in practice, it implies that the client didn't scrub their inputs properly, which one could argue is a client problem.....\n\nAs an example of something this code would now accept as a valid accept header that it didn't before\n\napplication/json;q=FOOBAR\n\nI don't think that should be permitted, and ideally should be returning a 400 error."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "2cc1b4273c57753a554218b929f7045fb05bef52",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/2",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643839963,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I could move this up to parseAccept ?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think we should, although I know that the requestPrefersHtml check works properly on browsers (which presumably send a q value) I kinda wonder why the octet check fails, but the http check doesn't?  Maybe it actually does, and only \"works\" because most explicitly set (curl like) parsers don't use q values?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "69c9c2c1c9e4a06f63a007dce4f21343d7c3aa82",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/3",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643915299,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The whole point of this was to make sure that these binary files were not directly downloadable by browsers, as it can lead to injection attacks (ie, if I hide a windows EXE in a log payload) and have the user execute this.\n\nThis is not to say that this patchset as written is doing the wrong thing, it just seems like it's trying to bypass that explicit design decision on this API, which makes me wonder if we implemented it wrong in the first place if a browser can even download these to a file."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, FWIW, holy hell parsing ACCEPT headers per the spec is complicated;\n\nhttps://www.xml.com/pub/a/2005/06/08/restful.html"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "is this still being worked?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I'll come back to it in the next month. Marked as WIP"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if we use string view here we avoid a copy when we do the substr below (I think)?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Was about to comment this on the last patchset, but you already found it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 1
        }
    ]
}