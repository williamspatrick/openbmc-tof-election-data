{
    "project": "openbmc/bios-bmc-smm-error-logger",
    "branch": "main",
    "id": "I237ddf6dc2832a838e8b76e203673b6362c413cf",
    "number": 54221,
    "subject": "config: Add json parsing logic",
    "owner": {
        "name": "Brandon Kim",
        "email": "brandonkim@google.com",
        "username": "brandonkimbk"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bios-bmc-smm-error-logger/+/54221",
    "commitMessage": "config: Add json parsing logic\n\nEasily editable configuration is desirable for this daemon as many parts\nof this daemon are specific to the BMC and the BIOS. Instead of setting\nthe configuration in bbappend files, have them as json config files for\neasier readability across multiple platforms.\n\nA valid JSON looks like the following:\n{\n    \"BMCInterfaceVersion\": 3,\n    \"MagicNumber\": [\"0x12345678\", \"0x22345678\", \"0x32345678\", \"0x42345678\"],\n    \"QueueSizeBytes\": 15360,\n    \"UERegionSizeBytes\": 768,\n    \"PollingIntervalMS\": 100,\n    \"MemoryRegionSize\": 16384,\n    \"MemoryRegionOffset\": 4035215360\n}\n\nSigned-off-by: Brandon Kim <brandonkim@google.com>\nChange-Id: I237ddf6dc2832a838e8b76e203673b6362c413cf\n",
    "createdOn": 1654193255,
    "lastUpdated": 1655498721,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1654193255,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1654193322,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654193323,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1654193433,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44291/ : SUCCESS"
        },
        {
            "timestamp": 1654194543,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1654195311,
            "reviewer": {
                "name": "Kasun Athukorala",
                "email": "kasunath@google.com",
                "username": "kasunathg"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1654200642,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1654200669,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1654200683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654200683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1654200793,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44296/ : SUCCESS"
        },
        {
            "timestamp": 1654563926,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1654563961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654563961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1654564060,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44472/ : SUCCESS"
        },
        {
            "timestamp": 1654573598,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1654575697,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654575953,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1654576355,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654576505,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1654576562,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654576562,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1654576643,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44477/ : SUCCESS"
        },
        {
            "timestamp": 1654618898,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1654646543,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654700512,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1654733535,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1655498721,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Abandoned\n\nruntime config not needed"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "8934353f942b3e19ad44ef256a2d3e3815331b8b",
            "parents": [
                "55dcadae80a7daab9d21c9e7e958d97b7858d3f7"
            ],
            "ref": "refs/changes/21/54221/1",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654193255,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/config.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Kasun Athukorala",
                        "email": "kasunath@google.com",
                        "username": "kasunathg"
                    },
                    "message": "It is not obvious to me what ueRegionSize is. Maybe add a comment for some of these? or point to the design doc?"
                },
                {
                    "file": "include/config.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Unfortunately the design doc is still in review so I can't point to it.. I'll explain that this is the Uncorrectable Error region in the comment.\n\nI may add some of the details in the README for this repo in the meantime."
                },
                {
                    "file": "src/config.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "combine?"
                },
                {
                    "file": "src/config.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config_test.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "```\n    EXPECT_THROW(\n        try { createConfig(\"\"); } catch (const std::runtime_error& e) {\n            EXPECT_STREQ(e.what(), \"Configuration file is missing\");\n            throw;\n        },\n        std::runtime_error);\n```\n\nto make sure you target the right exceptions."
                },
                {
                    "file": "test/config_test.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Done. One thing though, sometimes making the tests match the error message directly makes the tests brittle - but in this case I think it's valid since it's hard to decipher what the differences are between some of these different conditionals."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "include/config.hpp",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "58e350090a3235c05b762f5d3ac2a4e461d1badc",
            "parents": [
                "55dcadae80a7daab9d21c9e7e958d97b7858d3f7"
            ],
            "ref": "refs/changes/21/54221/2",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654200669,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "ADDED",
                    "insertions": 112,
                    "deletions": 0
                },
                {
                    "file": "include/config.hpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 232,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
            "parents": [
                "a1a69f19011cdbcf59c80a0a6996c920d469882c"
            ],
            "ref": "refs/changes/21/54221/3",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654563926,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Weird meta-question.  Why does any of this stuff need to be configurable or read from a config file?\n\nPlease answer in your commit message."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Hm. We definitely need some of these to be a configurable option per platform / BMC hardware, etc. so I guess the question is why I decided to do this in json config file rather than a build config?\n\nMy reasoning was that it's easier to see the different configs across different platforms in json rather than looking through the different bbappend files and whatnot but I'm down to change this to something else - let me know what you think"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Certainly not all of them need configurable per platform.  Magic number for example, I would expect to never change on any platform using this.\n\nParsing config files for things that we know at compile time (as a pattern, not just this) is why openbmc userspace is slow to boot.  I would much prefer that we add these parameters one at a time, in the places they're needed.\n\nYeah, I get bbappends and configure options are a downer, but a big part of the reason they're meh is that they impose some level of compile-time safety over just fixed config files."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Hmm.. ok, I'll move over to meson config options instead."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets also make sure we're adding configure options only for the things that actually need configured.\n\n\nGoing through your list for a sec:\n    \"BMCInterfaceVersion\": 3,\n  Do any systems support version 1, 2, or 4?  If so, this can just be a constant for now.\n    \n    \n    \"MagicNumber\": [\"0x12345678\", \"0x22345678\", \"0x32345678\", \"0x42345678\"],\nMentioned above.\n    \n    \n    \"QueueSizeBytes\": 15360,\n    \"UERegionSizeBytes\": 768,\n     \"MemoryRegionSize\": 16384,\n\nThese are probably the most reasonable, but do we expect them to need to be configured per platform?  When/why would we change them?\n    \n    \n    \"PollingIntervalMS\": 100,\nThis seems like it would be constant per system.\n    \n    \n    \"MemoryRegionOffset\": 4035215360\nThis doesn't feel like it should be coming from a config file, but the kernel driver for this.  Its a little odd userspace would even be able to offset into this stuff?"
                },
                {
                    "file": "src/config.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, this is redundant.  ifStream will fail to open if the file doesn't exist."
                },
                {
                    "file": "src/config.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Thanks, let me take this out."
                },
                {
                    "file": "src/config.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "string_views are not null terminated.  This usage assumes they are."
                },
                {
                    "file": "src/config.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Good catch. The \"easiest\" solution would be to do a .to_string().c_str() here (perhaps after a null termination check? perhaps not worth it since the configPath should be fairly short), let me know what you think / if you have alternate solutions."
                },
                {
                    "file": "src/config.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Oops, forgot that string_view doesn't have .to_string() conversion and requires an explicitly new string (which is even more ugly)"
                },
                {
                    "file": "src/config.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generally i'll just revert to passing by const std::string&, which is a worse API, but prevents copying the string just to gaurantee null termination."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "ADDED",
                    "insertions": 112,
                    "deletions": 0
                },
                {
                    "file": "include/config.hpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 232,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "277feac4e89d4b1b7d3839d87dc50a487b5bed24",
            "parents": [
                "a1a69f19011cdbcf59c80a0a6996c920d469882c"
            ],
            "ref": "refs/changes/21/54221/4",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1654576505,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "include/config.hpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "ADDED",
                    "insertions": 60,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 229,
            "sizeDeletions": 0
        }
    ]
}