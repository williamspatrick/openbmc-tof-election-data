{
    "project": "openbmc/openpower-vpd-parser",
    "branch": "master",
    "id": "I8f92014e1fc0becf5f7c56019a31bb2e46c6ccf0",
    "number": 52014,
    "subject": "Do not collect VPD unless required",
    "owner": {
        "name": "Santosh Puranik",
        "email": "santosh.puranik@in.ibm.com",
        "username": "santoshpuranik"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openpower-vpd-parser/+/52014",
    "commitMessage": "Do not collect VPD unless required\n\nThis commit adds some checks before we attempt VPD collection\non udev events. The following conditions are added:\n\n-- Check if the FRU is marked concurrently maintainable or pluggable at\nstandby. If either is true, proceed.\n\n-- Check if the BMC is at a NotReady state - if yes, proceeed.\n\n-- Check if the FRU has never been colelcted before (Present is false) -\nif yes, proceed.\n\nIn all other scenarios, the collection is skipped. This helps eliminate\ncases where grabbing the SPI mux causes a whole bunch of parsers to run,\nand an immediate power on leads to I2C arbitration loss errors.\n\nSigned-off-by: Santosh Puranik <santosh.puranik@in.ibm.com>\nChange-Id: I8f92014e1fc0becf5f7c56019a31bb2e46c6ccf0\n",
    "createdOn": 1647363063,
    "lastUpdated": 1650430130,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1647363063,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1647363101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1647363101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1647363110,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 1:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1647363241,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39021/ : SUCCESS"
        },
        {
            "timestamp": 1647456710,
            "reviewer": {
                "name": "SunnySrivastava",
                "email": "sunnsr25@in.ibm.com",
                "username": "SunnySrivastava1984"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1647572193,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1647572657,
            "reviewer": {
                "name": "SunnySrivastava",
                "email": "sunnsr25@in.ibm.com",
                "username": "SunnySrivastava1984"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1650430124,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 1: Code-Review+2"
        },
        {
            "timestamp": 1650430130,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Change has been successfully rebased and submitted as e9c575354bb7216ebee6756ceb8b2ef174a3b7cc"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6502414119de82a31de0364e37caf7db07826754",
            "parents": [
                "6c7a84e4e1e8e087da8df9daa23496dbd5d11721"
            ],
            "ref": "refs/changes/14/52014/1",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1647363063,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "ibm_vpd_app.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "SunnySrivastava",
                        "email": "sunnsr25@in.ibm.com",
                        "username": "SunnySrivastava1984"
                    },
                    "message": "Have some queries related to this.\nLike,\nShouldn't check for present should be the first criteria to check if we need to collect VPD for any EEPROM? Or should we have some nested cases?\n\nLets say, the BMC has not reached ready state and we get event for an EEPROM which already has \"present==true\".\nThis flow will allow recollection in that case but should that happen?\n \nAlso, Even for CM-able EEPROMS we first set the present as false before collcting VPD data  for them again."
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "As discussed, my aim was to keep it simple. Nested clauses just make the code harder to follow. Plus a check for presence will not cover FRUs that are pluggableAtStandby and not concurrentlyMaintainable.\n\nThe flow here is easier to follow:\n\nIf the FRU is either of concurrently maintainable or pluggable at standby, we return true\n\nIf the BMC state is not ready, we return true\n\nBoth of these are done irrespective of the presence check."
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "SunnySrivastava",
                        "email": "sunnsr25@in.ibm.com",
                        "username": "SunnySrivastava1984"
                    },
                    "message": "Done"
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "line": 1587,
                    "reviewer": {
                        "name": "SunnySrivastava",
                        "email": "sunnsr25@in.ibm.com",
                        "username": "SunnySrivastava1984"
                    },
                    "message": "This function will also execute at the time of collecting data for the first time for any EEPROM. Should we rephrase it? Like needVPDCollection."
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "line": 1587,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "I think this name makes it clearer as to the intent of the function, which is to determine if recollection is needed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 110,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "e9c575354bb7216ebee6756ceb8b2ef174a3b7cc",
            "parents": [
                "53b38ed09ab95deacaada1e9b70b766d922ad409"
            ],
            "ref": "refs/changes/14/52014/2",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1650430130,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 110,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        }
    ]
}