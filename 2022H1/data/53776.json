{
    "project": "openbmc/fb-ipmi-oem",
    "branch": "master",
    "id": "Icccedcb4e826aed6a48c555aff32f887c36631fb",
    "number": 53776,
    "subject": "Add multi-host and OCP Debug card support to handle IPMI restriction mode.",
    "owner": {
        "name": "Kumar Thangavel",
        "email": "thangavel.k@hcl.com",
        "username": "HCL-BMC"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/fb-ipmi-oem/+/53776",
    "commitMessage": "Add multi-host and OCP Debug card support to handle IPMI\nrestriction mode.\n\nAdded custom filter for IPMI commands of all hosts and debug\ncard like ipmi devices to handle IPMI restriction mode.\n\nTESTED : Built Facebook YosemiteV2 images and loaded on\nthe target hardware. Verified restriction mode enabled\nfor all four hosts.\n\nSigned-off-by: Kumar Thangavel <thangavel.k@hcl.com>\nChange-Id: Icccedcb4e826aed6a48c555aff32f887c36631fb\n",
    "createdOn": 1652795306,
    "lastUpdated": 1657299299,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1652795306,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1652795316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652795316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1652795469,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43381/ : SUCCESS"
        },
        {
            "timestamp": 1656502714,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1656502749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656502749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1656502860,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46121/ : SUCCESS"
        },
        {
            "timestamp": 1656969039,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1657095251,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1657095295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1657095295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1657095406,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46471/ : SUCCESS"
        },
        {
            "timestamp": 1657095523,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1657122542,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1657198320,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1657212309,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1657284577,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1657299299,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "14dc266eab5c4da301d5ff91e65d62a1ba7b9ad1",
            "parents": [
                "77ee489f45b8a64a10e8aee2b47ff1749178c930"
            ],
            "ref": "refs/changes/76/53776/1",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1652795306,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "generate-whitelist.sh",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/settings.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "include/ipmi-whitelist.hpp",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/settings.cpp",
                    "type": "ADDED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "ipmi-whitelist.conf",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 523,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "76850f1fc9971f4503a87171b808fc604b835beb",
            "parents": [
                "17bd2eabd11366185ff6c23a0300302da9f87229"
            ],
            "ref": "refs/changes/76/53776/2",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1656502714,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "One comment/question about log messaging and restricted mode."
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "line": 136,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Is this log message correct?  It seems restricted mode is initialized below and so wouldn't the code need to go through restricted mode initialization to default to it?"
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "line": 136,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Done. Updated the log message."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "generate-whitelist.sh",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/settings.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "include/ipmi-whitelist.hpp",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/settings.cpp",
                    "type": "ADDED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "ipmi-whitelist.conf",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 517,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
            "parents": [
                "17bd2eabd11366185ff6c23a0300302da9f87229"
            ],
            "ref": "refs/changes/76/53776/3",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1657095251,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Looks good to me."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It seems a little perplexing that we have to copy large pieces of code from the original IPMI repository.  Isn't there some way to reuse the upstream IPMI code while supplying a different list?  What are the changes we are making here?  How do we identify those and maintain the rest?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Community suggested to create custom filter for this instead modifying existing implementation in IPMI repository. We can add/modify any filters based on our platforms in future also without any dependency. \n\nThis is the suggestion got from the community and that's why created custom filter.\n\nhttps://lists.ozlabs.org/pipermail/openbmc/2022-May/030394.html"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you think Vernon realized this was going to require copying 500 lines of code from one repo to another?\n\nYou didn't answer: How do we identify which pieces you've modified and how to do we keep it maintained?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "No. We have to create a custom filter. For creating custom filter, we need that code framework(Same as IPMI). I referred the below intel-ipmi-oem. They created custom filter with same code as like IPMI. So, I just followed as like intel-ipmi-oem.\n\nhttps://github.com/openbmc/intel-ipmi-oem/blob/master/src/whitelist-filter.cpp\n\n\nHow do we identify which pieces you've modified and how to do we keep it maintained?\n\nI Agree, It's not easy to identify modified code and maintain. It will not show the code diff as new file was created. \n\nIntel is maintaining similar filter code in intel-ipmi-oem.\n\nwe have to compare the files with IPMI repository files to identify the changes. I have modified the below functions in whitelist-filter.cpp\n\nfilterMessage, postInit and cacheRestrictionMode."
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why not use RestrictionMode::interface directly?"
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack. I used as similar to the IPMI implementation. I will check and use RestrictionMode::interface directly."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/settings.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "src/whitelist-filter.cpp",
                    "type": "ADDED",
                    "insertions": 191,
                    "deletions": 0
                },
                {
                    "file": "generate_whitelist.sh",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "generate_whitelist_create.sh",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/settings.cpp",
                    "type": "ADDED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "include/ipmiwhitelist.hpp",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "ipmi-whitelist.conf",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 527,
            "sizeDeletions": 0
        }
    ]
}