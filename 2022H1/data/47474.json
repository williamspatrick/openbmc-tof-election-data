{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I123d8ab8bcd88a0b63ff131f6b98548951989755",
    "number": 47474,
    "subject": "Redfish: Query parameters: Only",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/47474",
    "commitMessage": "Redfish: Query parameters: Only\n\nAdd the query parameter \"only\" for redfish.\nThe specification is based on DSP0266_1.8.0.\n\nThis commit is inspired by the commit that carries the same title, but\nis largely unique, namely, in that it adds the core feature to be able\nto recall handle with a new Response object, and make sure the result\ngets to the connection.  It does this by swapping the handlers and\nimplementing move semantics on the Response object.  It definitely needs\nbroken up into a few smaller patches, but it does pass the below tests\nwithout any apparent seg faults or ownership issues.\n\nIt implements a number of cleanups that deserve their own patches, and\nwill be split up accordingly, but for the moment, I think this is a good\nstart to getting filter and expand support in the future.\n\nTested:\nValidator passes (on previous patchset)\n~$ curl -i -k -H \"X-Auth-Token: $token\" -X GET \"https://${bmc}/redfish/v1/Systems\"\n\n~$ curl -i -k -H \"X-Auth-Token: $token\" -X GET \"https://${bmc}/redfish/v1/Systems?only\"\n\nSigned-off-by: Ed Tanous <edtanous@google.com>\nChange-Id: I123d8ab8bcd88a0b63ff131f6b98548951989755\n",
    "createdOn": 1633391704,
    "lastUpdated": 1649184768,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1633391704,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633391714,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633392172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27429/ : FAILURE"
        },
        {
            "timestamp": 1633392262,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633392275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633392355,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27431/ : FAILURE"
        },
        {
            "timestamp": 1633485801,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1633485806,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Patch Set 3 was rebased"
        },
        {
            "timestamp": 1633485810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633485819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633485819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27536/ : ABORTED"
        },
        {
            "timestamp": 1633486154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27537/ : FAILURE"
        },
        {
            "timestamp": 1633486212,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633576169,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 4:\n\nI am a bit confused, is it different from this patch(https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/38952)?"
        },
        {
            "timestamp": 1633618754,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> Patch Set 4:\n> \n> I am a bit confused, is it different from this patch(https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/38952)?\n\nIt is explained in the commit message."
        },
        {
            "timestamp": 1633769590,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\nThe logic is ok, but it looks a bit complicated."
        },
        {
            "timestamp": 1633796662,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633803096,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> (1 comment)\n> \n> The logic is ok, but it looks a bit complicated.\n\nAgreed, if you have any ideas for how to simplify it, I'd love to know, but doing multiple requests and tracking lifetimes/completions is somewhat inherently complex."
        },
        {
            "timestamp": 1633914566,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > (1 comment)\n> > \n> > The logic is ok, but it looks a bit complicated.\n> \n> Agreed, if you have any ideas for how to simplify it, I'd love to know, but doing multiple requests and tracking lifetimes/completions is somewhat inherently complex.\n\nIn my opinion, your plan and my previous plan are both feasible, and you can choose either.\nHave you considered how to do \"Query Param: expand\"? This is a more complex function. I think this solution should be achievable with yours, but it needs to be verified. Hope you have thought of it."
        },
        {
            "timestamp": 1634283748,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\nHi Ed,\nCan we add several variables about Query Params in Response? I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\"."
        },
        {
            "timestamp": 1634412078,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> Patch Set 4:\n> \n> (1 comment)\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > (1 comment)\n> > > \n> > > The logic is ok, but it looks a bit complicated.\n> > \n> > Agreed, if you have any ideas for how to simplify it, I'd love to know, but doing multiple requests and tracking lifetimes/completions is somewhat inherently complex.\n> \n> In my opinion, your plan and my previous plan are both feasible, and you can choose either.\n> Have you considered how to do \"Query Param: expand\"?\n> This is a more complex function. I think this solution should be achievable with yours, but it needs to be verified. Hope you have thought of it.\n\n\nI've thought about it some.  I imagined each call to handle() would attach their own object to the chain, then the \"inject\" their code into the final tree where needed.  When new handlers are called, they would be called with expand = n -1, with a check against zero to stop propogating.  Where it gets weird is on auto expand references.  That's going to need some thoughts, because I believe expand is required to take that into account, but in code, we don't have the idea of a \"resource\" that's different than a route, so that needs some abstraction added.  Luckily we only implement a couple auto expand references today, so that should be relatively easy to get done."
        },
        {
            "timestamp": 1634412260,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> Hi Ed,\n> Can we add several variables about Query Params in Response?\n\nConsidering that Resonse is a representation of a generic HTTP object, and is not supposed to have any knowledge of Redfish, the query params would need to be generic.  What were you thinking we would add?\n\n> I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\".\n\nMy thinking there is that we can use the Query struct just like I've done here, and capture that in the completion handler when we inject it.  One design I considered and I'd like your input on is whether we should store a list of completion handlers, instead of just a single one, and whether that would simplify the code.  It arguably makes some code harder to write, so I want to play around with it a bit to see if we can simplify the interface, but I think in the end it might be good."
        },
        {
            "timestamp": 1634517597,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> Patch Set 4:\n> \n> (1 comment)\n> \n> > Patch Set 4:\n> > \n> > (1 comment)\n> > \n> > > Patch Set 4:\n> > > \n> > > > Patch Set 4:\n> > > > \n> > > > (1 comment)\n> > > > \n> > > > The logic is ok, but it looks a bit complicated.\n> > > \n> > > Agreed, if you have any ideas for how to simplify it, I'd love to know, but doing multiple requests and tracking lifetimes/completions is somewhat inherently complex.\n> > \n> > In my opinion, your plan and my previous plan are both feasible, and you can choose either.\n> > Have you considered how to do \"Query Param: expand\"?\n> > This is a more complex function. I think this solution should be achievable with yours, but it needs to be verified. Hope you have thought of it.\n> \n> \n> I've thought about it some.  I imagined each call to handle() would attach their own object to the chain, then the \"inject\" their code into the final tree where needed.  When new handlers are called, they would be called with expand = n -1, with a check against zero to stop propogating.  Where it gets weird is on auto expand references.  That's going to need some thoughts, because I believe expand is required to take that into account, but in code, we don't have the idea of a \"resource\" that's different than a route, so that needs some abstraction added.  Luckily we only implement a couple auto expand references today, so that should be relatively easy to get done.\n\nI think your idea is a bit similar to what I did in Redfish: Query parameters: expand\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42908"
        },
        {
            "timestamp": 1634520345,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > Hi Ed,\n> > Can we add several variables about Query Params in Response?\n> \n> Considering that Resonse is a representation of a generic HTTP object, and is not supposed to have any knowledge of Redfish, the query params would need to be generic.  What were you thinking we would add?\n> \n> > I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\".\n> \n> My thinking there is that we can use the Query struct just like I've done here, and capture that in the completion handler when we inject it.  One design I considered and I'd like your input on is whether we should store a list of completion handlers, instead of just a single one, and whether that would simplify the code.  It arguably makes some code harder to write, so I want to play around with it a bit to see if we can simplify the interface, but I think in the end it might be good.\n\nYes, I also want to use the Query struct. But capture that in the completion handler cannot let it pass to the next request.\nIn expand, I need some variables to record the results of parsing parameters and the progress of expansion. Just like line 396 to 400 of the file query_param.hpp in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42908"
        },
        {
            "timestamp": 1634525780,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > Hi Ed,\n> > > Can we add several variables about Query Params in Response?\n> > \n> > Considering that Resonse is a representation of a generic HTTP object, and is not supposed to have any knowledge of Redfish, the query params would need to be generic.  What were you thinking we would add?\n> > \n> > > I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\".\n> > \n> > My thinking there is that we can use the Query struct just like I've done here, and capture that in the completion handler when we inject it.  One design I considered and I'd like your input on is whether we should store a list of completion handlers, instead of just a single one, and whether that would simplify the code.  It arguably makes some code harder to write, so I want to play around with it a bit to see if we can simplify the interface, but I think in the end it might be good.\n> \n> Yes, I also want to use the Query struct. But capture that in the completion handler cannot let it pass to the next request.\n> In expand, I need some variables to record the results of parsing parameters and the progress of expansion. Just like line 396 to 400 of the file query_param.hpp in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42908\n\nIf I look at that code, you have the following variables captured:\n    App& app;\n    crow::Response& res;\n    std::optional<crow::Request> newReq;\n    bool isParsed = false;\n    bool isOnly = false;\n    bool isExpand = false;\n    uint64_t expandLevel;\n    const uint64_t maxLevel = 2;\n    std::string expandType;\n    std::vector<std::string> pendingUrlVec;\n    nlohmann::json jsonValue;\n\n\nThat seems considerably more than I would've expected, but lets go through them one by one.\n\nWith this change, the original Response payload is no longer needed, so I suspect that's not needed anymore.\n\nI'm not really sure why you would need to keep around the original request object?  That seems like something we should be creating new objects for, not reusing old, as the \"new\" sub requests are different objects.\n\n\"isParsed\" is no longer needed, as query params are parsed in the first step and can error out immediately.\n\nIsOnly/IsExpand exist in the Query struct still.\n\n\"expandLevel\" I think would still be needed, and would decrease by 1 with every new resource (not every request.\n\n\"maxLevel\" is a const that should probably not be a member variable at all and should be constexpr at a higher scope.\n\nexpandType needs some more thought than it gets in that patch.  I suspect that needs to be part of the parse tree for the filter/expand operation.\n\npendingUrlVec in that implementation looks like it has a race condition if you executed more than one response at a time.\n\nand jsonValue should be used from Response.\n\n\nTo reiterate, considering all of those values are Redfish specific, they shouldn't exist in the generic Response/Request objects"
        },
        {
            "timestamp": 1634536676,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > > Patch Set 4:\n> > > > \n> > > > Hi Ed,\n> > > > Can we add several variables about Query Params in Response?\n> > > \n> > > Considering that Resonse is a representation of a generic HTTP object, and is not supposed to have any knowledge of Redfish, the query params would need to be generic.  What were you thinking we would add?\n> > > \n> > > > I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\".\n> > > \n> > > My thinking there is that we can use the Query struct just like I've done here, and capture that in the completion handler when we inject it.  One design I considered and I'd like your input on is whether we should store a list of completion handlers, instead of just a single one, and whether that would simplify the code.  It arguably makes some code harder to write, so I want to play around with it a bit to see if we can simplify the interface, but I think in the end it might be good.\n> > \n> > Yes, I also want to use the Query struct. But capture that in the completion handler cannot let it pass to the next request.\n> > In expand, I need some variables to record the results of parsing parameters and the progress of expansion. Just like line 396 to 400 of the file query_param.hpp in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42908\n> \n> If I look at that code, you have the following variables captured:\n>     App& app;\n>     crow::Response& res;\n>     std::optional<crow::Request> newReq;\n>     bool isParsed = false;\n>     bool isOnly = false;\n>     bool isExpand = false;\n>     uint64_t expandLevel;\n>     const uint64_t maxLevel = 2;\n>     std::string expandType;\n>     std::vector<std::string> pendingUrlVec;\n>     nlohmann::json jsonValue;\n> \n> \n> That seems considerably more than I would've expected, but lets go through them one by one.\n> \n> With this change, the original Response payload is no longer needed, so I suspect that's not needed anymore.\n> \n> I'm not really sure why you would need to keep around the original request object?  That seems like something we should be creating new objects for, not reusing old, as the \"new\" sub requests are different objects.\n> \n> \"isParsed\" is no longer needed, as query params are parsed in the first step and can error out immediately.\n> \n> IsOnly/IsExpand exist in the Query struct still.\n> \n> \"expandLevel\" I think would still be needed, and would decrease by 1 with every new resource (not every request.\n> \n> \"maxLevel\" is a const that should probably not be a member variable at all and should be constexpr at a higher scope.\n> \n> expandType needs some more thought than it gets in that patch.  I suspect that needs to be part of the parse tree for the filter/expand operation.\n> \n> pendingUrlVec in that implementation looks like it has a race condition if you executed more than one response at a time.\n> \n> and jsonValue should be used from Response.\n> \n> \n> To reiterate, considering all of those values are Redfish specific, they shouldn't exist in the generic Response/Request objects\n\nYou are right. I just need \"IsOnly/IsExpand\",\"expandLevel\",\"expandType\" and \"pendingUrlVec\", as i mentioned \"from line 396 to 400\".\nBut I don't understand how you want to pass them to the next request.Just capturing in the completion handler will not work."
        },
        {
            "timestamp": 1634565271,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > > Patch Set 4:\n> > > > \n> > > > > Patch Set 4:\n> > > > > \n> > > > > Hi Ed,\n> > > > > Can we add several variables about Query Params in Response?\n> > > > \n> > > > Considering that Resonse is a representation of a generic HTTP object, and is not supposed to have any knowledge of Redfish, the query params would need to be generic.  What were you thinking we would add?\n> > > > \n> > > > > I hope that when doing multiple requests, some variables can be passed from the first request to the second request, which is helpful for me to do \"expand\".\n> > > > \n> > > > My thinking there is that we can use the Query struct just like I've done here, and capture that in the completion handler when we inject it.  One design I considered and I'd like your input on is whether we should store a list of completion handlers, instead of just a single one, and whether that would simplify the code.  It arguably makes some code harder to write, so I want to play around with it a bit to see if we can simplify the interface, but I think in the end it might be good.\n> > > \n> > > Yes, I also want to use the Query struct. But capture that in the completion handler cannot let it pass to the next request.\n> > > In expand, I need some variables to record the results of parsing parameters and the progress of expansion. Just like line 396 to 400 of the file query_param.hpp in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42908\n> > \n> > If I look at that code, you have the following variables captured:\n> >     App& app;\n> >     crow::Response& res;\n> >     std::optional<crow::Request> newReq;\n> >     bool isParsed = false;\n> >     bool isOnly = false;\n> >     bool isExpand = false;\n> >     uint64_t expandLevel;\n> >     const uint64_t maxLevel = 2;\n> >     std::string expandType;\n> >     std::vector<std::string> pendingUrlVec;\n> >     nlohmann::json jsonValue;\n> > \n> > \n> > That seems considerably more than I would've expected, but lets go through them one by one.\n> > \n> > With this change, the original Response payload is no longer needed, so I suspect that's not needed anymore.\n> > \n> > I'm not really sure why you would need to keep around the original request object?  That seems like something we should be creating new objects for, not reusing old, as the \"new\" sub requests are different objects.\n> > \n> > \"isParsed\" is no longer needed, as query params are parsed in the first step and can error out immediately.\n> > \n> > IsOnly/IsExpand exist in the Query struct still.\n> > \n> > \"expandLevel\" I think would still be needed, and would decrease by 1 with every new resource (not every request.\n> > \n> > \"maxLevel\" is a const that should probably not be a member variable at all and should be constexpr at a higher scope.\n> > \n> > expandType needs some more thought than it gets in that patch.  I suspect that needs to be part of the parse tree for the filter/expand operation.\n> > \n> > pendingUrlVec in that implementation looks like it has a race condition if you executed more than one response at a time.\n> > \n> > and jsonValue should be used from Response.\n> > \n> > \n> > To reiterate, considering all of those values are Redfish specific, they shouldn't exist in the generic Response/Request objects\n> \n> You are right. I just need \"IsOnly/IsExpand\",\"expandLevel\",\"expandType\" and \"pendingUrlVec\", as i mentioned \"from line 396 to 400\".\n> But I don't understand how you want to pass them to the next request.Just capturing in the completion handler will not work.\n\nWhy wont capturing them in the completion handler work?"
        },
        {
            "timestamp": 1634605361,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634610843,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634611300,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(6 comments)\n\nTo anyone that is watching this patchset thinking \"this is complicated, I don't think I can help\" you're right on the first part, wrong on the second.  A bunch of this patch is actually cleanups to make Response objects uncopyable and have appropriate lifetimes that needs separated out into different patches and tested.  If you're interested in seeing $only merge, but don't feel up to trying to understand the object ownership model with shared_ptr<AsyncResp>, there are a number of small things that you can still do to help and separate out into cleanup patches to get this moving faster."
        },
        {
            "timestamp": 1634719905,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634729325,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634770642,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1634770658,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634771009,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/28674/ : FAILURE"
        },
        {
            "timestamp": 1634797574,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1634797709,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1648052745,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1648052768,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648052769,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1648052912,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1648053205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39538/ : FAILURE"
        },
        {
            "timestamp": 1648054817,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1648054829,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648054829,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1648055421,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39545/ : SUCCESS"
        },
        {
            "timestamp": 1648146039,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1648146061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648146062,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1648146657,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39663/ : SUCCESS"
        },
        {
            "timestamp": 1648151526,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1648152447,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1648152480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648152480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1648153059,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39676/ : SUCCESS"
        },
        {
            "timestamp": 1648153320,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1648161325,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1648162166,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1648162260,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1648162291,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10: Commit message was updated."
        },
        {
            "timestamp": 1648162302,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1648162503,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1648241551,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 11: Patch Set 10 was rebased."
        },
        {
            "timestamp": 1648241577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648241577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1648242176,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39767/ : SUCCESS"
        },
        {
            "timestamp": 1648245130,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1648245252,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11: Code-Review+1"
        },
        {
            "timestamp": 1648245525,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1648246940,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1648247429,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1648361306,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1648438044,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(7 comments)"
        },
        {
            "timestamp": 1648449610,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1648453679,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1648453750,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1648457875,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1648483780,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1648484198,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1648485879,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1648485901,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648485901,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1648485989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/39924/ : FAILURE"
        },
        {
            "timestamp": 1648486348,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 13: Commit message was updated."
        },
        {
            "timestamp": 1648486364,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(3 comments)"
        },
        {
            "timestamp": 1648488571,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1648488591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648488591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1648489181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39935/ : SUCCESS"
        },
        {
            "timestamp": 1648510218,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 15: Patch Set 14 was rebased"
        },
        {
            "timestamp": 1648510243,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648510243,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1648510761,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/39965/ : SUCCESS"
        },
        {
            "timestamp": 1648516311,
            "reviewer": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1648518939,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1648567608,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16: Patch Set 15 was rebased"
        },
        {
            "timestamp": 1648567633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648567633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1648568223,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40055/ : SUCCESS"
        },
        {
            "timestamp": 1648569367,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16: Code-Review+1"
        },
        {
            "timestamp": 1648584245,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1648627250,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 16: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1648655878,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1648655883,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1648655899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648655899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1648656307,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/40150/ : FAILURE"
        },
        {
            "timestamp": 1648664583,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1648664631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1648664632,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1648665999,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40167/ : SUCCESS"
        },
        {
            "timestamp": 1648673083,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648673205,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648683002,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648684256,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648758634,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 18: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1648760041,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1648761870,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1648824205,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648831150,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1648835935,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1649098485,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18: Code-Review+2"
        },
        {
            "timestamp": 1649109093,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1649109140,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(4 comments)"
        },
        {
            "timestamp": 1649111391,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1649111415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1649111415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1649111451,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1649111459,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1649111985,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/40488/ : SUCCESS"
        },
        {
            "timestamp": 1649112721,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 19: Code-Review+1"
        },
        {
            "timestamp": 1649184550,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19: Code-Review+2"
        },
        {
            "timestamp": 1649184646,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as f4c99e70dad320abf84fd25a32ad5fce2bf16f4a"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1766915d49f050ff4feca71cadd0de2036abca6f",
            "parents": [
                "1a80863c438a912bb55cd80e553633e4399a287e"
            ],
            "ref": "refs/changes/74/47474/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633391704,
            "author": {
                "name": "zhanghaicheng",
                "email": "zhanghch05@inspur.com",
                "username": "zhanghch05"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -21
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/openbmc_dbus_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/async_resp.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -15
                },
                {
                    "file": "include/async_resolve.hpp",
                    "type": "MODIFIED",
                    "insertions": 48,
                    "deletions": -40
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 342,
            "sizeDeletions": 121
        },
        {
            "number": 2,
            "revision": "9d8cea899b6528b91a24c946284a3822267587f4",
            "parents": [
                "5062d5df4a038f57bcd367f232b4e187b29376c2"
            ],
            "ref": "refs/changes/74/47474/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633392262,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -21
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/openbmc_dbus_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/async_resp.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -15
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 285,
            "sizeDeletions": 81
        },
        {
            "number": 3,
            "revision": "7a9b6ec0655bf6866340edbc8b1fccb9ca1aa103",
            "parents": [
                "1a80863c438a912bb55cd80e553633e4399a287e"
            ],
            "ref": "refs/changes/74/47474/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633485801,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -21
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/openbmc_dbus_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/async_resp.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -15
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 285,
            "sizeDeletions": 81
        },
        {
            "number": 4,
            "revision": "d6070725bcb702cb5819269c4e80e91e45e1dc6b",
            "parents": [
                "18f569aa751241a44976f636a865999c00d4a1ad"
            ],
            "ref": "refs/changes/74/47474/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633485806,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Signoff ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs a separate patch."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an easy to review, one line correctness improvement.  I'm not that worried here.\n\nDone."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 354,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Changing the completion handlers to now accept Res as an argument needs its own patch."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 354,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "> Changing the completion handlers to now accept Res as an argument needs its own patch.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/48002"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 354,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_response.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This extra logging probably needs removed?  Or maybe another patch."
                },
                {
                    "file": "http/http_response.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/websocket.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If anyone is interested in helping.  This change, moving the openHandler back to only supporting websocket disconnects and not 404s, needs broken out into its own change."
                },
                {
                    "file": "http/websocket.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "> If anyone is interested in helping.  This change, moving the openHandler back to only supporting websocket disconnects and not 404s, needs broken out into its own change.\n\nI commit it in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/48033"
                },
                {
                    "file": "http/websocket.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "CompleteHandler captured the Query, but this Query is a new data, not from the previous request."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't quite understand that statement.  Query is for the \"current\" request being aggreated in processAllparams.  When we support depth, a new Query struct will need to be created to store the next level down."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No response from commenter.  Closing."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "Session will be used here.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47474/4/http/routing.hpp#1184"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I can't follow your link (it just links to \"if ((rules[ruleIndex]->getMethods() \" in routing.hpp.)\n\nBut yes, I would expect session to be used and understood later in the code, which is why this is a TODO.  The code here is potentially a privilege bypass if the next route down has higher privileges than the previous.  Hence why this is a TODO.  If you have any ideas on how to write the code such that it's not a privilege bypass, I'm happy to hear about it, but it's a problem that I haven't solved in this patchset yet."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "I don't know how the permissions of different routes are determined, but Query Params is only used in the Get method. I think there should be no difference in the permissions of Get, so this is fine."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The GET method permissions can easily be different between routes.  Please do more research into how PrivilegeRegistry is defined.  It defines permissions per resource."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2976,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this needs its own patch."
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2976,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "> this needs its own patch.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47998"
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "line": 2976,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2452,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We need to figure out when we removed the support for passing in the App object into response handlers, and add it back in a different patch."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2452,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -21
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/openbmc_dbus_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/async_resp.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -15
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 285,
            "sizeDeletions": 81
        },
        {
            "number": 5,
            "revision": "80c9771f61be41df5960319f218ab10e62682cba",
            "parents": [
                "d8e3c29a3b8626ed8072be4547a2bbcf7321c757"
            ],
            "ref": "refs/changes/74/47474/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1634770642,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 260,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "There will be no error when compiling, because this file is not added to compile. But I think it is better to delete it. \nI have done it."
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 305,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "Same as above"
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 305,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -21
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/openbmc_dbus_rest.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/sensors.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "include/async_resp.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -15
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 284,
            "sizeDeletions": 81
        },
        {
            "number": 6,
            "revision": "a124205cb36da12815543da9da5ba2c148fba8e4",
            "parents": [
                "1c30e500c6f234ed53a8aa84f0f367e5d90eb02f"
            ],
            "ref": "refs/changes/74/47474/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648052745,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -5
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 25
        },
        {
            "number": 7,
            "revision": "aedc629be5efeb0543df61f4ccf53f3c97ff45c8",
            "parents": [
                "1c30e500c6f234ed53a8aa84f0f367e5d90eb02f"
            ],
            "ref": "refs/changes/74/47474/7",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648054817,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -5
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 25
        },
        {
            "number": 8,
            "revision": "7a265ca43940005035af1fb11d4a782071957126",
            "parents": [
                "c862746e4e593d8517c2c430e9cb9d56ae281cf4"
            ],
            "ref": "refs/changes/74/47474/8",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648146039,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/vm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_monitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "include/obmc_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "http/http_response.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -5
                },
                {
                    "file": "include/kvm_websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 227,
            "sizeDeletions": 27
        },
        {
            "number": 9,
            "revision": "a28e9eef897ae2ff88df01f48fa4f95b0f640eeb",
            "parents": [
                "c4be8073fb6e39016b3a7818ed82c01a13ee7ff8"
            ],
            "ref": "refs/changes/74/47474/9",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648152447,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Need a sign off"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "why do we only put this in system? I suppose this should put in http_connection where every resource gets the default only handler."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> why do we only put this in system? I suppose this should put in http_connection where every resource gets the default only handler.\n\nThis is called out in the commit message;  I only put it in system at the moment because I was hoping that there was a better pattern we could use before I propagated this in the 100 places in the tree it needs to be.  If you have a better idea of how to do this, I'm all ears.\n\nIt can't go in http_connection, because\n1: This is not a transport abstraction, it's a resource one.\n2: HttpConnection is a common class for all requests, not JUST redfish, so we can't inject redfish specific stuff into, say, the dbus-rest or kvm trees.\n\n\nIf someone has a better pattern for how to do this.... please, speak up, otherwise, I'm planning on propagating this pattern throughout the tree.\n\n\nOne thing I realize today is it does make the \"optimized expand\" stuff a lot easier, because in the future we can just make an overload of this that can return the query struct, and callers that opt in can take a look at the query before they execute things.  So there's pros and cons."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Shoot, I realize I dropped that from the commit message on this patch.  Ignore that portion but the rest of what I said previously is still true."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "this can be removed now"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It can?  I guess I can move it to the next patch, but I still think it's required."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "removing it from this patch is I meant. You have a separate change setting up all the routes."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I left it here because it allows the tested statement to still function, and doesn't check in dead code into the patch (ie, it's usable, even if in a small context).\n\nIf you really think it needs to move out into the other patch, I guess it could, but the end result will be the same code, and there would be no way to put a useful tested statement here.\n\nUp to you though if you still want it moved."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "Glad to see you started following this again\nActually I always thought it was inappropriate to put it here. This leads us to need to modify a lot of code. The original Node class was a good choice, but it has been removed. Really don't think about putting it in Router::handle()?"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Glad to see you started following this again\n> Actually I always thought it was inappropriate to put it here. This leads us to need to modify a lot of code. The original Node class was a good choice, but it has been removed. Really don't think about putting it in Router::handle()?\n\nRouter::handle() is meant for all HTTP routes, not just Redfish ones.  Keeping this abstraction is important, because there are a number of potential and existing HTTP interfaces that the BMC might handle in the future that aren't redfish.  If we started enforcing redfish parameters on all http routes, that would be breaking that abstraction layer, and that abstraction layer has allowed bmcweb to survive several interface transitions.\n\nI've asked about better ways to solve this on several reviews and on discord, and I haven't seen anyone propose anything, but if you have an idea, please, put up a patch or a snippet somewhere, and we can evaluate it.  When doing at that, please look at the other patches toward the end of this series, and make sure their use cases are covered as well."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "zhanghaicheng",
                        "email": "zhanghch05@inspur.com",
                        "username": "zhanghch05"
                    },
                    "message": "I don't have a better idea."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you do, please let me know, but I suspect what's here is good enough for now."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 209,
            "sizeDeletions": 5
        },
        {
            "number": 10,
            "revision": "174aed3f67e0eda0862ce2923c29b136111bf9ac",
            "parents": [
                "c4be8073fb6e39016b3a7818ed82c01a13ee7ff8"
            ],
            "ref": "refs/changes/74/47474/10",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648162291,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 5
        },
        {
            "number": 11,
            "revision": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
            "parents": [
                "286ec082c54bebb0219ed475fadc890d9d8895a2"
            ],
            "ref": "refs/changes/74/47474/11",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648241551,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It looks like it always returns true."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are patchsets later in the series where this can fail.  Also, Nans comment on line 32 will cause it to return early with a false, so I don't think this prototype needs to change.  Please reopen this comment if you feel differently."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ack.\n\nnit: Can we add [[nodiscard]] just in case someone forgets to check result?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, I think this is also bmcwebs first use of nodiscard, which I would like to see us use more, but haven't had time to play around with to see what functions need annotated with that and in what cases we wouldn't use it."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Is there way to enforce it by default without adding [[nodiscard]]?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Code review is the only other way I'm aware of, but nodiscard is the only way I'm aware of that's automated.  Open to other options if there are some."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nodiscard.html\n\nCan clang-tidy throw an error?\n\nI know in Google codebase, nodiscard is enforced automatically."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think that check enforces that you USE nodiscard when coding, which yes, would be nice to turn on if it didn't have any problems (not all clang-tidy checks are perfect).  In terms of checking that the value isn't ignored, the compiler does that by default, nothing to configure (and I tested that by ignoring the return in a spot, and the code failed to compile.)"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "if query is std::nullopt, we don't need to set a new request handler, right? There's no query to process. This can save some time, given that all resources are using this \"setUpRedfishRoute\" now, it makes sense to me to move the check inside processAllParams to this function.\n\n```\nif (!completionHandler)\n    {\n        BMCWEB_LOG_DEBUG << \"Function was invalid?\";\n        return;\n    }\n\n    BMCWEB_LOG_DEBUG << \"Processing query params\";\n    if (!query)\n    {\n        BMCWEB_LOG_DEBUG << \"No query params to process\";\n        // Query params weren't valid, no need to continue;\n        completionHandler(intermediateResponse);\n        return;\n    }\n\n    // If the request failed, there's no reason to even try to run query\n    // params.\n    if (intermediateResponse.resultInt() < 200 ||\n        intermediateResponse.resultInt() >= 400)\n    {\n        completionHandler(intermediateResponse);\n        return;\n    }\n```"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I kind of understand the first part (if it doesn't parse we could return early) I don't understand moving the check inside processAllParams.  Wouldn't the check go on line 22, and even in that case, we'd have to then duplicate the error code, or are you thinking processAllParams would take by query& instead of optional?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, processAllParams would take `query&` directly.\n\nAlso before parsing params, if intermediateResponse failed, we just return, right?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Yes, processAllParams would take `query&` directly.\n> \n\nSure, that seems reasonable.\n\n> Also before parsing params, if intermediateResponse failed, we just return, right?\n\n\nI'm not following how that could happen in the current code paths.  Arguably, calling this function with an error already in the res object at this scope (intermediateResponse isn't in this scope at all) is a user error, and given it doesn't really have a use case, I'm not sure that's something we should explicitly define at this point.  Even if you called it with an error, this function would still have code paths to handle things, so I'm not quite understanding the concern."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "std::string is missing"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "any reason \"Query ret;\" not enough?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because it's a POD, so at this point if you did that, the data structure wouldn't be initialized.  At least, that's what I thought?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "https://godbolt.org/z/jd9Wznb5G\n\n```\nbool isOnly = false;\n```\nThis style will always get the data initialized IIUC"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, good point.  Will fix."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "is this not the same as just\n\n```\nstd::string_view key(it.key);\nstd::string_view value(it.value);\n```\n\nparams_view::value_type::key is just string, right?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> is this not the same as just\n> \n> ```\n> std::string_view key(it.key);\n> std::string_view value(it.value);\n> ```\n> \n> params_view::value_type::key is just string, right?\n\nWouldn't that be nice.  No, it's not.  In theory in the next version fo boost we get boost::core::string_view, which is implicitly convertible to std::string_view, but that's not there yet, so we have to do this mess."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "dang. \ud83d\ude1e. sounds good."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Do we need to check `itMemBegin == itMembers->end()`?\n\nshouldn't `itMembers->size() != 1` already cover that case?\n\nIf not, we can move `auto itMemBegin = itMembers->begin();` to line 62 since it is not really used until there."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Do we need to check `itMemBegin == itMembers->end()`?\n> \n> shouldn't `itMembers->size() != 1` already cover that case?\n\nIn theory, yes, that's an equivalent check, but in general, we require that all pointers be checked, because static analysis tools can be pretty naive sometimes, and checking all pointers before dereferencing helps keep the security scans clean.\n\n> \n> If not, we can move `auto itMemBegin = itMembers->begin();` to line 62 since it is not really used until there.\n\nSee above.  I don't think it can move."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I am guessing this means something important?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The version of http that we're constructing, ie HTTP1.1."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Log the error code?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "internalError logs the call site where it was added automatically.  Adding another log would be somewhat redundant."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Function returns bool, but result is not checked."
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "line": 2658,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 5
        },
        {
            "number": 12,
            "revision": "08c5306e7bc1ffa6aec93f081d687c7b5c9eabb9",
            "parents": [
                "286ec082c54bebb0219ed475fadc890d9d8895a2"
            ],
            "ref": "refs/changes/74/47474/12",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648485879,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 5
        },
        {
            "number": 13,
            "revision": "459d1bc5fbc2ce2962e00b73dbcd39c2497e3377",
            "parents": [
                "286ec082c54bebb0219ed475fadc890d9d8895a2"
            ],
            "ref": "refs/changes/74/47474/13",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648486348,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 5
        },
        {
            "number": 14,
            "revision": "83f8c3a771e81ae1b67b778f4d8f11577d25a4b0",
            "parents": [
                "286ec082c54bebb0219ed475fadc890d9d8895a2"
            ],
            "ref": "refs/changes/74/47474/14",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648488571,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 5
        },
        {
            "number": 15,
            "revision": "580e7cb67b02370f4714cbee4a4476bdd754597b",
            "parents": [
                "b41c913ac4b4995a6ef7bd299a339881c5c908f3"
            ],
            "ref": "refs/changes/74/47474/15",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1648510218,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 5
        },
        {
            "number": 16,
            "revision": "2d22e2d33c8ff42dbad6ac6b40222237d57fdccb",
            "parents": [
                "46f16e1e30c3de747d589057fc7df8235b5e8a7d"
            ],
            "ref": "refs/changes/74/47474/16",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648567608,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "A lot of logging considering this might be run before each request, do we need all the DEBUG ? I think it is useful but do we need 4 traces or would like 2 do?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Good point.  I ended up removing all of them.\n\nDone."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Anyway we could unit test any of this?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes.  There are pretty significant unit tests in the next commit.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52272/26/redfish-core/include/utils/query_param_test.cpp\n\nIt didn't make sense to me to make a reviewer review a partial unit test, then review a bunch of edits to the exact same unit tests.  With that said, if you want them broken up, I can, I just figured reviewing one file of new content was easier."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 5
        },
        {
            "number": 17,
            "revision": "aa13aab65d73276f4bc46812fec0a035803e7ad7",
            "parents": [
                "46f16e1e30c3de747d589057fc7df8235b5e8a7d"
            ],
            "ref": "refs/changes/74/47474/17",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648655883,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 5
        },
        {
            "number": 18,
            "revision": "1e07116dec7107742f3b8f3becd37e75b5846892",
            "parents": [
                "46f16e1e30c3de747d589057fc7df8235b5e8a7d"
            ],
            "ref": "refs/changes/74/47474/18",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1648664583,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Seems reasonable to me, is behind a flag that is disabled by default so I think the barrier to merge is a little lower "
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Wait, I was testing the later changes and found out that this flag is something messed up.\n\nWe are doing the other way around. Should be !bmcwebInsecureEnableQueryParams"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Good catch;  Looks like I was testing with a different local.conf than I thought I was."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Should we do anything if the other query paramters were passed ?\ne.g. return a QueryNotSupported.\n\n        \"QueryNotSupported\": {\n            \"Description\": \"Indicates that query is not supported on the implementation.\",\n            \"LongDescription\": \"This message shall be used to indicate that query is not supported on the implementation.\",\n            \"Message\": \"Querying is not supported by the implementation.\",\n            \"Severity\": \"Warning\","
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The behavior you're eluding to is present in the next patch in the series here:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52272/28/redfish-core/include/utils/query_param.hpp#107\n\nThe spec actually has rules about what params we're supposed to ignore and which of them we aren't."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "If we have 0 members we hit this. I assume that has been tested, along with testing for 1 and many members?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I tested the zero members case and the > 1 members case on previous patchsets.  I haven't necessarily tested them this second, but this code basically hasn't changed since they were tested."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 5
        },
        {
            "number": 19,
            "revision": "d58e4d5ad2fd7c52a8aff15c5f0e8e0fdc2453fa",
            "parents": [
                "46f16e1e30c3de747d589057fc7df8235b5e8a7d"
            ],
            "ref": "refs/changes/74/47474/19",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1649111391,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 5
        },
        {
            "number": 20,
            "revision": "f4c99e70dad320abf84fd25a32ad5fce2bf16f4a",
            "parents": [
                "fa0b217fc0d4ec246d79055c463c1e7f573fd4c8"
            ],
            "ref": "refs/changes/74/47474/20",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1649184646,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/ut/service_root_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 206,
            "sizeDeletions": 5
        }
    ]
}