{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I40dd8939fd97134f8d87c2971598ff6ae472d056",
    "number": 53374,
    "subject": "Add ADS7828 ADC Sensor Support",
    "owner": {
        "name": "Micha\u0142 Bielecki",
        "email": "michal.bielecki@intel.com",
        "username": "michalbielecki"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/53374",
    "commitMessage": "Add ADS7828 ADC Sensor Support\n\nThis commit extends the ADCSensor support to ADS7828 I2C A/D Converter\nwhile maintaining backward compatibility with iio-hwmon driver. ADS7828\nsensor configuration requires two additional parameters: Bus, Address\nto properly map device file on fs to actual sensor/channel combination.\nTo make this sensor work, additional round of driver name matching has been\nadded to the implementation.\n\nTested:\nADS7828 support was tested in i2c-stub emulated device. This\nimplementation has also been checked on older platforms to verify\nthat iio-hwmon compatibility is not broken by this change.\n\nChange-Id: I40dd8939fd97134f8d87c2971598ff6ae472d056\nSigned-off-by: Michal Bielecki <michal.bielecki@intel.com>\n",
    "createdOn": 1651223174,
    "lastUpdated": 1656693398,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1651223174,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1651223183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1651423977,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1651424047,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1651473946,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1651473959,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1651474003,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1651602338,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1651602376,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1651727468,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1651925140,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1652074694,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1652160175,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1652160184,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652160184,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1652160434,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/42907/ : SUCCESS"
        },
        {
            "timestamp": 1652176811,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1652206695,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1652250034,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1652250046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1652250046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1652250130,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 3:\n\n(6 comments)"
        },
        {
            "timestamp": 1652250294,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43015/ : SUCCESS"
        },
        {
            "timestamp": 1652250833,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1652251136,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652289881,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1652290134,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652290354,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1652290530,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652689648,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1652718317,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1652773888,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1653292793,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1653322019,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1653417874,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1653562285,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1653562314,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1653562314,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1653562566,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/43920/ : SUCCESS"
        },
        {
            "timestamp": 1653562843,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1656077120,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1656077141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656077141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1656077279,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/45800/ : FAILURE"
        },
        {
            "timestamp": 1656312449,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1656370479,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1656370572,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/45977/ : FAILURE"
        },
        {
            "timestamp": 1656370885,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1656371027,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1656634473,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1656634514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656634514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1656634686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/46231/ : SUCCESS"
        },
        {
            "timestamp": 1656634748,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1656674154,
            "reviewer": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1656693398,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b930b1314b09140925b7ed9637582cc682f7cf71",
            "parents": [
                "7dd6443b88a52cb17d925bbe0f316d6a0374a703"
            ],
            "ref": "refs/changes/74/53374/1",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1651223174,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "please wrap the comments at 72"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This is still needed, right?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Yes, I've missed this during the implementation. \nUpdated."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Should this be continue here?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Yes, changed to continue."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 351,
                    "deletions": -246
                }
            ],
            "sizeInsertions": 370,
            "sizeDeletions": 246
        },
        {
            "number": 2,
            "revision": "63e0b5ea0d42d81db999f3b99d747f412eb29d14",
            "parents": [
                "7dd6443b88a52cb17d925bbe0f316d6a0374a703"
            ],
            "ref": "refs/changes/74/53374/2",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1651473946,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Question,\nI am assuming that existing ADC sensor code was supporting iio-hwmon devices. And in PR I see that a common function is handeling both iio and non iio devices. Can we keep the support for 'non iio-hwmon devices' as a separate function and do not touch the existing code? and this new function can be called from createSensors. Making sure existing functionality is untouched and making it easier to review. \n\nit's a suggestion, tell me if I am missing some points on why this was implemented this way."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Main goal was to reduce code duplication to bare minimum. The functional differences in this PR are:\n- there is one more matching round for name/driver combination\n- if above step is successful: then extraction/omission of i2c related parameters and matching them to was was retrieved from entity-manager"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think we can get both goals (keeping separation while reducing code duplication) in one patch.  FWIW, there's already some code duplication between the various types that could be improved, so duplicating in the same way this is making it no worse."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Tested and verified that existing iio-hwmon ADCs still works. \nBut this generates some noise in the log - every path *_input under iio-hwmon generated one log."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "It's the same implementation as in \"PSUSensorMain.cpp\". What would be better option here?\n- remove printing the message completely\n- print it as non-error message"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Suggestion,\nThe abstraction could have been done separately in a clean up PR. As now it is hard to look at the diff."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Understood."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  Please move code in a separate commit."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "I've removed createSensorsCallback function and put the implementation in lambda. Should be a bit easier to compare the diff now."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's no easier to review.  When you move code, please move your code in one patch, then make modifications in another."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 352,
                    "deletions": -246
                }
            ],
            "sizeInsertions": 371,
            "sizeDeletions": 246
        },
        {
            "number": 3,
            "revision": "5ede36c8055f149d5de1c078e64c8433b8172190",
            "parents": [
                "b5d7a7fb010f753782a07e18379a954e6915d5ee"
            ],
            "ref": "refs/changes/74/53374/3",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1652160175,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More details needed here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Could you elaborate what kind of details would be needed?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're adding a new supported device type that wasn't supported.  Why is it useful?  What config parameters does it take that are different than others?  How does it differ from the existing code?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"I2C ADC\" Is not a specific model of chip to be used, so this is not something we really want to do here.  Per what we do elsewhere, please include the specific model of chip, such that it can be instantiated properly in the new_device mechanisms."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "But that scenario would potentially conflict implementation in PSUSensors which uses specific models of chip. I don't really see how this design would for example cover the scenario where ADS7828 is used as onboard adc and at the same time would be used as adc in PSU."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> But that scenario would potentially conflict implementation in PSUSensors which uses specific models of chip. \n\n\nSpecial emphasis on the word \"potentially\".  There should be one daemon handling any given device to avoid access conflicts, and we will make sure that the lists don't conflict between psusensor and adcsensor.  FWIW, we already do this to a significant extent.\n\nActually, you bring up a very good point, why isn't this device being added to PSU sensor?  It seems like we're reinventing some code to handle what it handles already?  Keep in mind, \"PSUsensor\" is poorly named these days (we could probably rename it at some point) it could arguably be called \"PmBus Sensor\".\n\n\n> I don't really see how this design would for example cover the scenario where ADS7828 is used as onboard adc and at the same time would be used as adc in PSU.\n\n\nA \"PSU\" is just a collection of components, so it would have an entity-manager config file that specified an exposes of ADS7828, and there would be a separate file that specifies the same record for the baseboard.  That way, this code doesn't have to have any concept of what a \"PSU\" is, and only deals with the individual pieces."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "I assumed that PSU sensors is a unique service for PSU sensors. But now it seems logical that support for this particular IC \"ads7828\" could be added to PSU sensor implementation. However, to fully cover the implementation some functionalities would have to be merged from ADC Sensor: \n- \"CPURequired\" parameter to cover the cases where adc provides readings that are above/below threshold when cpu socket is not populated (to avoid triggering alerts)\n- \"BridgeGpio\" parameter to cover the cases where some circuitry has to be switched in order to perform valid reading (battery voltages for example).\n\nWould that be fine?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "I am not sure PSU sensor is the best place. Even though these are voltage readings, this particular IC is not a PMBus device, but an i2c device. hwmon maybe another option to consider.\n\nBut because of the mentioned special properties of the ADC sensors and powerDelay for checkThresholds, it makes sense to keep it in ADCSensor. \n\nTo be consistent with hwmon and other packages, replace I2CADC with ads7828 in config:\n\"xyz.openbmc_project.Configuration.ADS7828\""
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "I'm not sure if device type is meaningful since only thing that matters is the interface exposed by the driver and in this particular case it's compatible.\n\nI'd appreciate some sort of concrete decision in which way you want me to move forward with the implementation."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Won't changing I2CADC to ADS7828 conflict with this change: https://gerrit.openbmc.org/c/openbmc/entity-manager/+/53373 that allows instantiating ADS7828 devices in runtime by entity-manager?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> \"CPURequired\" parameter to cover the cases where adc provides readings that are above/below threshold when cpu socket is not populated (to avoid triggering alerts)\n\nSeems fine to me for psusensor to support that.  Ideally we'd make this a little more general, with the CPU having its own Entity config file, that we could then enable/disable on, but I'm not that worried about that level of complexity so long as the code is reasonably simple.\n\n> \"BridgeGpio\" parameter to cover the cases where some circuitry has to be switched in order to perform valid reading (battery voltages for example).\n\nThat would be fine as well, although you're right, we're getting into some strange territory of mixing use cases.\n\nLets start by getting your documentation updated to call out the specific device (ie ADS7828) in config, then we can start looking at which daemon makes the most sense to expose.  Given that we're talking about ADCs here, I'm wondering a little if this is a new daemon, given that it's using i2c to abstract an ADC, there are different sets of code that they need to call."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "> Won't changing I2CADC to ADS7828 conflict with this change: https://gerrit.openbmc.org/c/openbmc/entity-manager/+/53373 that allows instantiating ADS7828 devices in runtime by entity-manager?\n\nNo, it would not. EntityManager binds the driver to the i2c device and creates \"xyz.openbmc_project.Configuration.ADS7828\" for Type: \"ADS7828\""
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "I've changed \"I2CADC\" to specific IC that is supposed to be supported: ADS7828."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : In any point of time hwmonInputIndex will get   -ve value ..?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "For currently implemented sensors (iio-hwmon and ads7828) it shouldn't."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "so better to use it as unsigned int ...?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "At the same time i'm not expecting hwmonInputIndex to ever reach value greater than 2,147,483,647 (INT_MAX). If I'm chosing between two unlikely scenarios I'd prefer to maintain the sign if hwmonInputIndex -= 1 goes wrong for some driver"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : Just wanted to know significance char* used here , In above statement for interfacePath, I see std::string*  used . So can we std::string* here instead char*..?"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "String does not yet support constexpr constructor so this cannot be changed due to lines 46-48:\nstatic constexpr auto sensorTypes{\n    std::to_array<const char*>({\"xyz.openbmc_project.Configuration.ADC\",\n                                \"xyz.openbmc_project.Configuration.I2CADC\"})};"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In modern code, we could recommend using std::string_view, which does support constexpr these days, and has overloads for both string and const char*.\n\nWith that said, that's unimportant in this patch."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 360,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Quick query here  ,As we have assigned nullptr to sensor here so sensor necessarily to be pointer .So instead auto can we use char* or void* as data type..? Please share your thoughts also let me know anything wrong in my understanding."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 360,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "sensors is of type: boost::container::flat_map<std::string, std::shared_ptr<ADCSensor>>& sensors\nSo at line 359 I could have left: std::shared_ptr<ADCSensor> sensor = sensors[sensorName] but i'm not really sure why i'm not supposed to use auto here."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 360,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 352,
                    "deletions": -246
                }
            ],
            "sizeInsertions": 371,
            "sizeDeletions": 246
        },
        {
            "number": 4,
            "revision": "ae304582471b8b95d702ac8a76fa37c8409bd814",
            "parents": [
                "7dd6443b88a52cb17d925bbe0f316d6a0374a703"
            ],
            "ref": "refs/changes/74/53374/4",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1652250034,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be the name or your parameter, not \"I2cADC\".  Having the specific model numbers helps avoid tribal knowledge when creating these by users that maybe aren't fully familiar with openbmc or entity-manager."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Not replying to all other comments considering that this pull-request may be abandoned in favor of implementation in PSU Sensors."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't put this much code in a lambda (yes, I realize we break this rule elsewhere).  Lambda functions give very convoluted stack traces when things go wrong, so in the ideal case we shouldn't use them at all, or use them sparingly, and quickly call to a \"normal\" method.\n\nThe old code was arguably better in this regard."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "I moved back to providing the implementation within the lambda on a request in comment #422."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 188,
                    "deletions": -89
                }
            ],
            "sizeInsertions": 207,
            "sizeDeletions": 89
        },
        {
            "number": 5,
            "revision": "b5b0760020ffa25200300acd0cf55172329fb8dd",
            "parents": [
                "7dd6443b88a52cb17d925bbe0f316d6a0374a703"
            ],
            "ref": "refs/changes/74/53374/5",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1653562285,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 189,
                    "deletions": -89
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 89
        },
        {
            "number": 6,
            "revision": "fab9b7b9b028c614884aad234c8724a099d8027c",
            "parents": [
                "256d8c12843d5971a43d87fec5aadc9735addff1"
            ],
            "ref": "refs/changes/74/53374/6",
            "uploader": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "createdOn": 1656077120,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Micha\u0142 Bielecki",
                        "email": "michal.bielecki@intel.com",
                        "username": "michalbielecki"
                    },
                    "message": "Is it somehow possible to retrigger CI pipeline? I've rebased the change due to being out of date and apparently CI fails on files unrelated to this particular change."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For future reference, you can retrigger the build yourself by clicking the jenkins link above, then clicking \"retrigger\""
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Looks like all builds are failing now. Suspecting clang-tidy-14 change https://github.com/openbmc/openbmc-build-scripts/commit/0ff14b2a047d68e50a46ac37601b8954a786f9de"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It does appear to be."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 319,
                    "deletions": -216
                }
            ],
            "sizeInsertions": 341,
            "sizeDeletions": 216
        },
        {
            "number": 7,
            "revision": "f1a2064c99489a6845bcfce85928c46d3a5ea496",
            "parents": [
                "b429f31da4a5260bc38b435cab3e9be69c88e7af"
            ],
            "ref": "refs/changes/74/53374/7",
            "uploader": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "createdOn": 1656634473,
            "author": {
                "name": "Micha\u0142 Bielecki",
                "email": "michal.bielecki@intel.com",
                "username": "michalbielecki"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Have not reviewed the full patch, given the need that most of it will need to be broken up, reviewing the logic at this time doesn't seem like the best use of time."
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is now a ~350 line lambda function, +100 lines from the previous code.  Prior to this patch it was already too long, but as it stands, it's definitely over any sort of reasonable limit, and has ingested the logic from isAdc as well, which makes it worse.  The project as a whole (dbus-sensors especially) is making an effort to use fewer lambda functions, given their problems in readability and reviewability that occur with things like this.\n\nPlease refactor this in a patch (prior to this patch so it can be reviewed effectively).\n\nI will leave it up to for the first pass on how some of the diffs go to break this up into smaller functions.  If you need suggestions, please let me know."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 319,
                    "deletions": -216
                }
            ],
            "sizeInsertions": 341,
            "sizeDeletions": 216
        }
    ]
}