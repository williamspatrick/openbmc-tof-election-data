{
    "project": "openbmc/phosphor-ipmi-flash",
    "branch": "master",
    "id": "I689ce51ecb9a051891e31c50d44d15d74add47ab",
    "number": 54278,
    "subject": "Fix double free issue with global+static variable",
    "owner": {
        "name": "Willy Tu",
        "email": "wltu@google.com",
        "username": "wltu"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-ipmi-flash/+/54278",
    "commitMessage": "Fix double free issue with global+static variable\n\nSetting defaultConfigPaths as constexpr and std::array allow it to be\ndestructed cleaning with no issue. Without this the ipmid will triggered\ndouble free error on cleanups.\n\nChange-Id: I689ce51ecb9a051891e31c50d44d15d74add47ab\nSigned-off-by: Willy Tu <wltu@google.com>\n",
    "createdOn": 1654284828,
    "lastUpdated": 1654297100,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1654284828,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1654285022,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1654288318,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1654293407,
            "reviewer": {
                "name": "Tom Tung",
                "email": "shes050117@gmail.com",
                "username": "chihweitung"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1654293588,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2: Published edit on patch set 1."
        },
        {
            "timestamp": 1654293615,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654293631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654293631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1654294077,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44388/ : SUCCESS"
        },
        {
            "timestamp": 1654294314,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1654294873,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1654295680,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1654295846,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3: Published edit on patch set 2."
        },
        {
            "timestamp": 1654295862,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654295886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654295886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1654296460,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1654296688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44390/ : SUCCESS"
        },
        {
            "timestamp": 1654296968,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1654297100,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "723192593bfa4c4e47af28de53c763d20bc38d62",
            "parents": [
                "36af21c513378d8ba1d8335ce922caa8c34cbf82"
            ],
            "ref": "refs/changes/78/54278/1",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1654284828,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Wow good catch. We've been burned by extern a few times (I think in this repo) so definitely something we should be cleaning up."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "yeah, I think most of them are for C codes so that should be fine.\n\nThe issue here is that const global variable has lifetime issue\nand constexpr guarantees trivial destructor (which fixed the issue)."
                },
                {
                    "file": "bmc/buildjson.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Tom Tung",
                        "email": "shes050117@gmail.com",
                        "username": "chihweitung"
                    },
                    "message": "Do we still need to include vector here after the removal of defaultConfigPaths?"
                },
                {
                    "file": "bmc/buildjson.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "good catch. removed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "bmc/buildjson.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "bmc/buildjson.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 19,
            "sizeDeletions": 6
        },
        {
            "number": 2,
            "revision": "c14f1111822350b73958f57f4cedb344459d323d",
            "parents": [
                "36af21c513378d8ba1d8335ce922caa8c34cbf82"
            ],
            "ref": "refs/changes/78/54278/2",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1654293588,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I don't follow, why would it double free if it lives in a specific implementation file?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I have no idea.\n\nbut I got\n\n```\nJan 01 00:56:43 X.prod.google.com ipmid[8395]: Received signal; quitting\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: =================================================================\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: ==8395==ERROR: AddressSanitizer: attempting double-free on 0xa2e024b0 in thread T0:\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #0 0xa6a8e474 in operator delete(void*, unsigned int) (/usr/lib/libasan.so.6+0xbe474)\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: 0xa2e024b0 is located 0 bytes inside of 8-byte region [0xa2e024b0,0xa2e024b8)\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: freed by thread T0 here:\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #0 0xa6a8e474 in operator delete(void*, unsigned int) (/usr/lib/libasan.so.6+0xbe474)\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #1 0x9f945a6c in __gnu_cxx::new_allocator<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*>::deallocate(nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >**, unsigned int) /usr/include/c++/11.3.0/ext/new_allocator.h:145\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #2 0x9f945a6c in std::allocator<char const*>::deallocate(char const**, unsigned int) /usr/include/c++/11.3.0/bits/allocator.h:199\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #3 0x9f945a6c in std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned int) /usr/include/c++/11.3.0/bits/alloc_traits.h:496\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #4 0x9f945a6c in std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned int) /usr/include/c++/11.3.0/bits/stl_vector.h:354\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #5 0x9f945a6c in std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() /usr/include/c++/11.3.0/bits/stl_vector.h:335\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #6 0x9f945a6c in std::vector<char const*, std::allocator<char const*> >::~vector() /usr/include/c++/11.3.0/bits/stl_vector.h:683\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: previously allocated by thread T0 here:\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #0 0xa6a8d3e4 in operator new(unsigned int) (/usr/lib/libasan.so.6+0xbd3e4)\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #1 0x9f77da20 in __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned int, void const*) /usr/include/c++/11.3.0/ext/new_allocator.h:127\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #2 0x9f77da20 in std::allocator<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*>::allocate(unsigned int) /usr/include/c++/11.3.0/bits/allocator.h:185\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #3 0x9f77da20 in std::allocator_traits<std::allocator<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*> >::allocate(std::allocator<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*>&, unsigned int) /usr/include/c++/11.3.0/bits/alloc_traits.h:464\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #4 0x9f77da20 in std::_Vector_base<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*, std::allocator<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer, std::vector<unsigned char, std::allocator<unsigned char> > >*> >::_M_allocate(unsigned int) /usr/include/c++/11.3.0/bits/stl_vector.h:346\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #5 0x9f77da20 in std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned int) /usr/include/c++/11.3.0/bits/stl_vector.h:343\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #6 0x9f77da20 in void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) /usr/include/c++/11.3.0/bits/stl_vector.h:1582\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #7 0x9f77da20 in std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) /usr/include/c++/11.3.0/bits/stl_vector.h:629\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #8 0x9f77da20 in __static_initialization_and_destruction_0 ../git/bmc/buildjson.cpp:71\nJan 01 00:56:44 X.prod.google.com ipmid[8395]:     #9 0x9f77da20 in _GLOBAL__sub_I_buildjson.cpp ../git/bmc/buildjson.cpp:76\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: SUMMARY: AddressSanitizer: double-free (/usr/lib/libasan.so.6+0xbe474) in operator delete(void*, unsigned int)\nJan 01 00:56:44 X.prod.google.com ipmid[8395]: ==8395==ABORTING\n```\n\nAnd Peter suggested. https://engdoc.corp.google.com/eng/doc/devguide/cpp/styleguide.md?cl=head#Static_and_Global_Variables"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Ack"
                },
                {
                    "file": "bmc/buildjson.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: c++20 should allow partial template deduction (you can remove the number of elements)?"
                },
                {
                    "file": "bmc/buildjson.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "bmc/buildjson.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "bmc/buildjson.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 19,
            "sizeDeletions": 7
        },
        {
            "number": 3,
            "revision": "c277935e6fe0cdcf8aefc45b53d11bd6ca20f964",
            "parents": [
                "36af21c513378d8ba1d8335ce922caa8c34cbf82"
            ],
            "ref": "refs/changes/78/54278/3",
            "uploader": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "createdOn": 1654295846,
            "author": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "bmc/buildjson.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "bmc/buildjson.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 19,
            "sizeDeletions": 7
        }
    ]
}