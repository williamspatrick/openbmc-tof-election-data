{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I52e35075e522d0ae0d99e1c893db76156e299871",
    "number": 50070,
    "subject": "Fix for cpusensor going into D state.",
    "owner": {
        "name": "Arun Lal K M",
        "email": "arun.lal@intel.com",
        "username": "arunlalkm-intel"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/50070",
    "commitMessage": "Fix for cpusensor going into D state.\n\nWhen PECI driver returns the error code EAGAIN, async_read_until will\ngo into a keep trying again loop. As async_read_until does not handle\nEAGAIN reliably.\n\nSame issue was identified and fix for PSUSensor:\nhttps://github.com/openbmc/dbus-sensors/commit/bcf76717697238e380be785bd28150963ecf0e9e\n\nFix for this is to use async_wait instead of async_read_until.\n\nTested:\nIn Intel system verified cpusensor daemon is not getting into D state\nwhen there is a peci error EAGAIN.\nVerified sensors are getting populated as expected when there is no PECI\nerror.\n\nSigned-off-by: Arun Lal K M <arun.lal@intel.com>\nSigned-off-by: Arun P. Mohanan <arun.p.m@linux.intel.com>\nChange-Id: I52e35075e522d0ae0d99e1c893db76156e299871\n",
    "createdOn": 1640938850,
    "lastUpdated": 1650355178,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1640938850,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640938886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640938887,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1640938934,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/34785/ : FAILURE"
        },
        {
            "timestamp": 1640939129,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1640939141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640939141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1640939187,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/34786/ : FAILURE"
        },
        {
            "timestamp": 1640939305,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1640939316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640939317,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1640939563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/34787/ : SUCCESS"
        },
        {
            "timestamp": 1641321648,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1641431909,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1641431970,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1641432267,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1641775197,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Removed reviewer Andrew Jeffery."
        },
        {
            "timestamp": 1642686626,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1642686664,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642686664,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1642686843,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1642687274,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35834/ : SUCCESS"
        },
        {
            "timestamp": 1642687503,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642688427,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642757622,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1642795036,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642800837,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642801492,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1642809502,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1643812780,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1643812790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643812790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1643812837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/36485/ : FAILURE"
        },
        {
            "timestamp": 1643813092,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1643813105,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643813105,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1643813310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/36486/ : FAILURE"
        },
        {
            "timestamp": 1643826847,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1643826881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643826881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1643827136,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36495/ : SUCCESS"
        },
        {
            "timestamp": 1643848485,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1643882876,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1643882912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643882912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1643883154,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1643883165,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36526/ : SUCCESS"
        },
        {
            "timestamp": 1643906296,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1643913180,
            "reviewer": {
                "email": "akshay.raveendran.k@linux.intel.com",
                "username": "AkshayRav"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1643960868,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 9: Patch Set 8 was rebased."
        },
        {
            "timestamp": 1643960895,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643960895,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1643961142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36591/ : SUCCESS"
        },
        {
            "timestamp": 1644913144,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1644913166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1644913166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1644913412,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37275/ : SUCCESS"
        },
        {
            "timestamp": 1644967807,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1645525045,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 11: Patch Set 10 was rebased"
        },
        {
            "timestamp": 1645525058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645525058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1645525297,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37775/ : SUCCESS"
        },
        {
            "timestamp": 1645526985,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1645527002,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1645527003,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1645527079,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1645527250,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/37776/ : SUCCESS"
        },
        {
            "timestamp": 1645576221,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1645576626,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1646090034,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1646214403,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1646228515,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1646228541,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1646228541,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1646228783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/38350/ : SUCCESS"
        },
        {
            "timestamp": 1646842939,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 13: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1646926837,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 13: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1647411999,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1647864227,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1647864260,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1648774788,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 13: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1650350991,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Change has been successfully rebased and submitted as 8454571297812c51ae120812d245bbe88d697191"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8d166e43a51350ee8aa051b28e5e3976fb7aeec3",
            "parents": [
                "45f2702d3377aea10dd11f02299fcede4c707d69"
            ],
            "ref": "refs/changes/70/50070/1",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1640938850,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 124,
                    "deletions": -94
                }
            ],
            "sizeInsertions": 157,
            "sizeDeletions": 94
        },
        {
            "number": 2,
            "revision": "b73e0ebe350ab5f1f2bca7e61adf275463db67ab",
            "parents": [
                "45f2702d3377aea10dd11f02299fcede4c707d69"
            ],
            "ref": "refs/changes/70/50070/2",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1640939129,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 118,
                    "deletions": -94
                }
            ],
            "sizeInsertions": 151,
            "sizeDeletions": 94
        },
        {
            "number": 3,
            "revision": "0d0339bf091041d3604fe7fe5f095c772e487f8a",
            "parents": [
                "45f2702d3377aea10dd11f02299fcede4c707d69"
            ],
            "ref": "refs/changes/70/50070/3",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1640939305,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you elaborate on what these reasons would be?  EAGAIN generally means that the descriptor needs read again because it was interrupted, which is exactly what asio does."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "asio's async_read_until does not handle EAGAIN reliably. Same issue was identified and fix for PSUSensor here: https://github.com/openbmc/dbus-sensors/commit/bcf76717697238e380be785bd28150963ecf0e9e"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why would the driver use this error code if it didn't intend to be immediately re-read?  This seems like the wrong error code."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "50/72 wrapping please."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "+1"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "If CPU is going through a reset then PECI return EAGAIN. Since its temporary and PECI will work once CPU reset is done. But in some cases CPU reset may take minutes.\n\nBut because of EAGAIN return code, cpusensor daemon should not hang. It should be able to handle the error code and service other requests. Eg. When its handling EAGAIN it should be able to handle a D-Bus call to the cpusensor service."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "me"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Not sure how this git published. oops"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "need to check fd>=0"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "We might need to increase the sensor pollTime in this error case as well."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "100 sensor objects means 70 sec (100 * 0.7 sec, go through commit message for more derails) between consecutive read of same sensor object. So poll time will have to be 70 sec. Assuming all sensors are facing peci error. \n\nNow if sensor objects are 50, it will be 35 sec. So we cannot fix a sensorFailedPollTimeMs. \n\nWith pendingIoReqCnt, we can handle this in a better way. Line 165 we check if io is free to read, else we async wait again, so in my above example we will call restartRead 14 times (sensorFailedPollTimeMs = 5 sec, 70/5 = 14) before making inputDev.async_wait at line 178. Effectively giving us the appropriate wait time in every situation."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -82
                }
            ],
            "sizeInsertions": 140,
            "sizeDeletions": 82
        },
        {
            "number": 4,
            "revision": "18b83feacbaecd27b788cd66f62b3358fbc891f9",
            "parents": [
                "a25223c23506135a186581854e382f43d2cb6089"
            ],
            "ref": "refs/changes/70/50070/4",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1642686626,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "static?"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "The issue here is that some \"unlucky\" sensor may be starved. It does not ensure every sensor gets a chance to send the io request.\n\nHow about:\nWhen peci command fails  n consecutive times,  \n1) PECI state = fail\n2) Mark sensor non-available\n3) only allow one active io request\n4) also with a slower poll rate\n5) one successful poll, go back to Normal/Success state\n\nThis should be done on per CPU, i.e. PECI bus no ideally"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "> The issue here is that some \"unlucky\" sensor may be starved. It does not ensure every sensor gets a chance to send the io request.\n\nIf, \"unlucky\" sensor may be starved, is a concern in normal working condition (that is, when there is no peci error), then I believe it won't be. \n\nBecause we run on one thread and even tho we makes calls to io asynchronously, the execution in the io is happening sequentially. The same was observed during positive test case testing. \n\n> 4) also with a slower poll rate\nIssue here is that 100 sensor scenario explained in commit message means, 70 sec poll interval, and even if issue is resolved within 10 sec, BMC will wait 60 more sec to detect that issue is cleared. \n\n> 3) only allow one active io request\nWe are currently doing same rt? in the code under review. \n\nPoints 1) 2) and 5) is also handled in current code rt? \n\nOr is the suggestion that, once in error state we poll only one sensor object per CPU and keep a bigger poll rate. So if we have a system with two CPU, only two objects of CPUSensor object will be performing read. And once issue is resolved we enable read for all other sensor objects under that CPU?"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "On \"When peci command fails  n consecutive times\" \nThe cpusensor code makes all io request almost instantaneously, this is because make_shared from createsensors is called in a for loop. All 100 objects are created well under a sec. Now for error to be detected we need 0.7 sec (peci timeout). \n\nWhich means by the time cpusensor application has detected that there is an error, there will be 100 read request in io queue. Which also means io will hang for 70sec. \n\nI believe the better approach is to control requests to io, like in current patch, so that when cpusensor moves from state of no error to state of error there is no period of hang."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "We certainly don't want any of the sensors not able to send io request because some other sensor just send one or has not had a chance to clear the count yet because callback function has not been called yet. This will cause weird timing issues and really hard to track down.\n\nOn start up, we do PECI ping and get ID commands, those should block the flood of sensor reading requests if PECI does not work. If PECI only timesout in temp reading commands, we can make this \"PECI bus state\" be initialized to be \"NOT Ready\" so requests are serialized, but when successful read happen received, it transition to \"WORKING\" state."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Implemented a different solution and pushed as a seperate item https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50885"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Correct. Thanks"
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Better to do -ve check here. \nif (pendingIoReqCnt = 0)\n{\n  restartRead()\n  return;\n}\nThis helps to left shift below set of code."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 129,
                    "deletions": -82
                }
            ],
            "sizeInsertions": 184,
            "sizeDeletions": 82
        },
        {
            "number": 5,
            "revision": "4e2c8252d5b1b7a6e8bc9ab3de3a1da7feb3973c",
            "parents": [
                "30eb03f3d5054088727f3065e367266b2a82b31d"
            ],
            "ref": "refs/changes/70/50070/5",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1643812780,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 64,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -55
                }
            ],
            "sizeInsertions": 182,
            "sizeDeletions": 60
        },
        {
            "number": 6,
            "revision": "6781fd130ab07084e908b16f0370cad00a631acb",
            "parents": [
                "30eb03f3d5054088727f3065e367266b2a82b31d"
            ],
            "ref": "refs/changes/70/50070/6",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1643813092,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 64,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 59,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 184,
            "sizeDeletions": 63
        },
        {
            "number": 7,
            "revision": "f882c6de9027625ed0c7a0641a5a0b79d41fd1ce",
            "parents": [
                "30eb03f3d5054088727f3065e367266b2a82b31d"
            ],
            "ref": "refs/changes/70/50070/7",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1643826847,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Seems like there are two main changes in this review - the yield context and then the weak_ptr. It would be easier to review to separate it into two review."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I supose you mean the async_wait change. weak_ptr change was already there.\nI splitted the review. PLease find the new one https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50885"
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "line": 431,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This makes a copy of all the shared_ptr<CPUSensor>, it prevents line 386 to invoke the destructor. Then there can be two objects with the same name on dbus, which can cause undefined behaviors."
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "line": 431,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "line": 441,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "What does exit do here? CPUSensor service exits?"
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "line": 441,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Yes that is the intention. It is not suposed to happen.\nI updated it to exception. PLease find it on new review\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50885/1/src/CPUSensorMain.cpp#438"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -4
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 64,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 59,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 185,
            "sizeDeletions": 64
        },
        {
            "number": 8,
            "revision": "07e87141464578cf87cb5831284c677d04910dc1",
            "parents": [
                "30eb03f3d5054088727f3065e367266b2a82b31d"
            ],
            "ref": "refs/changes/70/50070/8",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1643882876,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 77,
                    "deletions": -48
                }
            ],
            "sizeInsertions": 106,
            "sizeDeletions": 48
        },
        {
            "number": 9,
            "revision": "85bb529ccf6190212b1ef3b2fd93c274386be2d2",
            "parents": [
                "74cffa8846cae2b083713cbf612d43f4b7f35432"
            ],
            "ref": "refs/changes/70/50070/9",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1643960868,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 77,
                    "deletions": -48
                }
            ],
            "sizeInsertions": 106,
            "sizeDeletions": 48
        },
        {
            "number": 10,
            "revision": "4b4e8b3602cd390cfb570ddd6d59f9c50da6bbda",
            "parents": [
                "73030639a5ba8adfc9d8e54ef66746c95e8958a7"
            ],
            "ref": "refs/changes/70/50070/10",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1644913144,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Seems like it might be a bit simpler to just use `pread(fd, ..., 0)` here instead of sprinkling (sometimes conditional) `lseek` calls around elsewhere."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": -50
                }
            ],
            "sizeInsertions": 107,
            "sizeDeletions": 50
        },
        {
            "number": 11,
            "revision": "a536323e7e4d03aa2e365ee304138c5e4628d935",
            "parents": [
                "27cac0bec1c8bc2f84bd91d5e9f74f0459f5a8fa"
            ],
            "ref": "refs/changes/70/50070/11",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1645525045,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": -50
                }
            ],
            "sizeInsertions": 107,
            "sizeDeletions": 50
        },
        {
            "number": 12,
            "revision": "0891e2bdddc0b4568599b4e592577ccd9214d1a4",
            "parents": [
                "27cac0bec1c8bc2f84bd91d5e9f74f0459f5a8fa"
            ],
            "ref": "refs/changes/70/50070/12",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1645526985,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 257,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Can fd < 0 be recovered by retry open?\nIf not, fd is static, it should be checked and return earlier."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 257,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> Can fd < 0 be recovered by retry open?\n\nSeems possible for PECI -- e.g. if the host CPU was offline and later came online, an `open()` call on the same path could go from failing to succeeding, I'd think."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 257,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Retry logic should be added then."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 257,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "In that case moving back file opening part inside setup read should work. Let me try that change."
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "line": 257,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 68,
                    "deletions": -51
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 51
        },
        {
            "number": 13,
            "revision": "720154d370ec5f58483a52c272caa44dba241137",
            "parents": [
                "5cf66dfc62ccf0c2648ad0f8c3fdf2673751a579"
            ],
            "ref": "refs/changes/70/50070/13",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1646228515,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "@Ed, Please review this PR. "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Keep it open for couple more days to give @Ed a chance to veto."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 60,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 88,
            "sizeDeletions": 44
        },
        {
            "number": 14,
            "revision": "8454571297812c51ae120812d245bbe88d697191",
            "parents": [
                "31ec7dbb6ae668b4c7bb4f9d630f80253b23f0d8"
            ],
            "ref": "refs/changes/70/50070/14",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1650350991,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/CPUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/CPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 60,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 88,
            "sizeDeletions": 44
        }
    ]
}