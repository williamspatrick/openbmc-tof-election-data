{
    "project": "openbmc/openbmc",
    "branch": "master",
    "topic": "mctp",
    "id": "I8629eb851a6120d8ad3bff1e222da1cf4ccf454c",
    "number": 46441,
    "subject": "meta-phosphor: Add mctp utilities",
    "owner": {
        "name": "Jeremy Kerr",
        "email": "jk@ozlabs.org",
        "username": "jk-ozlabs"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/46441",
    "commitMessage": "meta-phosphor: Add mctp utilities\n\nThis change adds a recipe for the MCTP userspace utilities to provide\ncontrol over the new kernel stack.\n\nSigned-off-by: Jeremy Kerr <jk@codeconstruct.com.au>\nChange-Id: I8629eb851a6120d8ad3bff1e222da1cf4ccf454c\n",
    "createdOn": 1630571869,
    "lastUpdated": 1639014030,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1630571869,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1630571906,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1630573168,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1: Ok-To-Test+1"
        },
        {
            "timestamp": 1630573177,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/6441/"
        },
        {
            "timestamp": 1630575646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/6441/ : FAILURE"
        },
        {
            "timestamp": 1630985578,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1631068866,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 1:\n\nLooks like the CI failure here was unrelated; moving from wip to ready."
        },
        {
            "timestamp": 1631101245,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631101255,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/6546/"
        },
        {
            "timestamp": 1631101362,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1631102626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/6546/ : SUCCESS"
        },
        {
            "timestamp": 1631103623,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1631103833,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1631156729,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1631156765,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631156767,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\nPS2: now in recipes-connectivity"
        },
        {
            "timestamp": 1631156775,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/6573/"
        },
        {
            "timestamp": 1631160136,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/6573/ : SUCCESS"
        },
        {
            "timestamp": 1631162053,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nIBM Hardware CI : witherspoon hardware test failed"
        },
        {
            "timestamp": 1631194712,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nIBM Hardware CI : witherspoon hardware test failed"
        },
        {
            "timestamp": 1631199015,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 2:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1634586168,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 2: Code-Review+1\n\n> Patch Set 2:\n> \n> PS2: now in recipes-connectivity\n\nThe recipe itself looks fine.  +1 for that.\n\nI think Patrick was suggesting that you consider submitting this to meta-openembedded.  If you want this project to be useful and usable outside of OpenBMC that might makes some sense?  No preference from me either way."
        },
        {
            "timestamp": 1634696729,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\nHi Brad,\n\n> The recipe itself looks fine.  +1 for that.\n\nthanks!\n\n> I think Patrick was suggesting that you consider submitting this to meta-openembedded.  If you want this project to be useful and usable outside of OpenBMC that might makes some sense?  No preference from me either way.\n\nOK, so moving the recipe out of meta-phosphor (rather than recipes-phosphor) then?\n\nI can do, but we'll still need some definitions within meta-phosphor for OpenBMC integration - most importantly, the systemd targets for MCTP stack init, and some reasonable defaults for platform configuration. That will mean at least an append in meta-phosphor.\n\nGiven the split will lead to more complex recipe structure, it doesn't sound like a net win, but can try that approach if you prefer."
        },
        {
            "timestamp": 1634938068,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n\n> > I think Patrick was suggesting that you consider submitting this to meta-openembedded.  If you want this project to be useful and usable outside of OpenBMC that might makes some sense?  No preference from me either way.\n> \n> OK, so moving the recipe out of meta-phosphor (rather than recipes-phosphor) then?\n\nThe main point of discussion was that our meta-layer guidelines say:\n\n    Meta layers recipes should only point to well maintained open source projects\nhttps://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md\n\nUnfortunately we never defined what \"well maintained open source projects\" are.  I suggested we needed to clarify what that means in order to have a fair standard and we had a discussion about it at the TOF but haven't written anything up.  The three possibilities were (effectively):\n\n1. Anything qualifies.\n2. Anything the TOF and/or the maintainers of this repository bless qualifies.\n3. Only code in our organization or able to be blessed /accepted by upstream Yocto qualifies.\n\nThere are downsides to all of these options.  It seemed to be the overall feeling was to go with #3, but again we need to codify that decision before it is set in stone.\n\nFor 'mctp' in particular it seems to me that either:\n\na. This is very specific to the BMC, in which case we shouldn't really have code for it outside the openbmc organization anyhow.\nb. It is not specific to the BMC, so it should easily be accepted by a Yocto/OE layer.\n\nMy understanding (playing a bit of telephone game here) is that you feel this repository is not specific to the BMC, so hopefully you also agree with \"it should easily be accepted by a Yocto/OE layer\"...\n\n> I can do, but we'll still need some definitions within meta-phosphor for OpenBMC integration - most importantly, the systemd targets for MCTP stack init, and some reasonable defaults for platform configuration. That will mean at least an append in meta-phosphor.\n\nAgreed.  bbappend of an existing recipe for configuration is fine.\n\n> Given the split will lead to more complex recipe structure, it doesn't sound like a net win, but can try that approach if you prefer.\n\nHopefully I've given you enough background on the discussion points.  We can talk offline if you'd like on more details around what I meant by \"in order to have a fair standard\"."
        },
        {
            "timestamp": 1634952442,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\nHi Patrick,\n\nThanks for the clarification!\n\n> For 'mctp' in particular it seems to me that either:\n> \n> a. This is very specific to the BMC, in which case we shouldn't really have code for it outside the openbmc organization anyhow.\n\nThat isn't the case here though, as we have applications with other build environments (buildroot-based, as well as general usage on the host side), and a completely-not-BMC-related user too.\n\nAlso, this is entirely theoretical, but: OpenBMC isn't the only BMC implementation.\n\n> b. It is not specific to the BMC, so it should easily be accepted by a Yocto/OE layer.\n\nSure, but there's no current OE-but-not-OpenBMC consumers, so this sounds like we're just punting maintenance work elsewhere (and making the openbmc recipe structure more complex), for no technical win.\n\n>  so hopefully you also agree with \"it should easily be accepted by a Yocto/OE layer\"...\n\nThat's hard to justify given the lack of other yocto users, but I can try the OE approach."
        },
        {
            "timestamp": 1634958339,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> > For 'mctp' in particular it seems to me that either:\n> > \n> > a. This is very specific to the BMC, in which case we shouldn't really have code for it outside the openbmc organization anyhow.\n> \n> That isn't the case here though, as we have applications with other build environments (buildroot-based, as well as general usage on the host side), and a completely-not-BMC-related user too.\n> \n> Also, this is entirely theoretical, but: OpenBMC isn't the only BMC implementation.\n\nYep, like I thought I heard: you believe it has more general applicability than just OpenBMC.\n\n> > b. It is not specific to the BMC, so it should easily be accepted by a Yocto/OE layer.\n> \n> Sure, but there's no current OE-but-not-OpenBMC consumers, so this sounds like we're just punting maintenance work elsewhere (and making the openbmc recipe structure more complex), for no technical win.\n> \n\nI understand.  We discussed this offline for quite a while across multiple days.  \n\nAs you mention, you have your reasons why you believe this is generally applicable and I'm not questioning that.  We could not come up with any obvious rules on why it is entirely reasonable for you to come to this conclusion while, at the same time, not allowing everyone to use the same argument for creating every single repository outside of the openbmc organization.  We already have cases of \"bad recipes\" that violate both the spirit and letter of our meta-layer guidelines and have caused problems.  Like I said, one option is for us to say \"with the approval of the TOF and/or openbmc maintainers\" but in my view that gives the impression that we unfairly favor some developers over others, unless there are clear rules on what we're looking for.  Until/unless we can come up with clear and unbiased rules it seems to me that (openbmc-org + OE) is the safest answer for the project.\n\nYou're right that it is not a \"technical win\".  Not every decision is on pure technical merits, unfortunately.\n\nHaving said all of this, if you want to help formulate concrete rules on what is a \"well maintained open-source repository\" which `mctp` would qualify but some of the one-off hack repositories in random companies' github orgs do not, I'd be more than happy to work with you codify them for the project.\n\n> >  so hopefully you also agree with \"it should easily be accepted by a Yocto/OE layer\"...\n> \n> That's hard to justify given the lack of other yocto users, but I can try the OE approach.\n\nYou mentioned host users, so that should make the justification easier to me.  Honestly, they are pretty easily accepting of new recipes, so the \"get it in an OE meta-layer\" is a fairly low bar as well."
        },
        {
            "timestamp": 1635301585,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\nOK - the recipe has now been accepted upstream, I'll convert this set to be an append instead.\n\n> Having said all of this, if you want to help formulate concrete rules on what is a \"well maintained open-source repository\" which `mctp` would qualify but some of the one-off hack repositories in random companies' github orgs do not, I'd be more than happy to work with you codify them for the project.\n\nShall do - that's probably a discussion for the list rather than here though. I'll start a thread there."
        },
        {
            "timestamp": 1639014030,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Abandoned\n\nRe-working to use meta-openembedded layer instead."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "79e19136d07a5116efa0097d0aec00b56432e723",
            "parents": [
                "30d7846f9858a1f461c0980de6ab4014fb21f866"
            ],
            "ref": "refs/changes/41/46441/1",
            "uploader": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "createdOn": 1630571869,
            "author": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meta-phosphor/recipes-phosphor/mctp/mctp_git.bb",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\ude1e"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/mctp/mctp_git.bb",
                    "line": 6,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "hey, it has wide compatibility, and the configuration data isn't complex (...at this stage) \ud83d\ude0a"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/mctp/mctp_git.bb",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this planned to be moved or is this the permanent location of it?  I don't think this should be in recipes-phosphor if we are keeping it outside openbmc github org."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/mctp/mctp_git.bb",
                    "line": 11,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "That doesn't need to be the permanent location, but the utilities are not OpenBMC-specific, so the repo probably shouldn't live under github.com/openbmc.\n\nI'm happy to put the recipes elsewhere; let me know what may suit (recipes-connectivity?)\n\n[By way of background: there is a bit of distro-specific infrastructure here: in a similar fashion to distros adding a little glue around ifupdown/netplan/networkmanager, we'll have some phosphor-specific infrastructure for AF_MCTP configuration; the repo provides some common bits, but we'll need to add those bits in future]"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/mctp/mctp_git.bb",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "19e757696c03252061d522ac5d5d011b97fc2174",
            "parents": [
                "03dc37f87bcbc70bd7d4c08954af00f8718f9bd2"
            ],
            "ref": "refs/changes/41/46441/2",
            "uploader": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "createdOn": 1631156729,
            "author": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-connectivity/mctp/mctp_git.bb",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 0
        }
    ]
}