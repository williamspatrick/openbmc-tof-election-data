{
    "project": "openbmc/phosphor-ipmi-blobs-binarystore",
    "branch": "master",
    "id": "I12e3473351be98820d8e5df1b71a6d43699aa671",
    "number": 48539,
    "subject": "binarystore: Add ReadOnly Mode",
    "owner": {
        "name": "Maksym Sloyko",
        "email": "maxims@google.com",
        "username": "maksymko"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-ipmi-blobs-binarystore/+/48539",
    "commitMessage": "binarystore: Add ReadOnly Mode\n\nAdd Read Only mode to the binary store. In this mode,\nall blobs are not writable, no new blobs can be created and\nthe storage protobuf can't be modified in any way.\n\nAlso added simple API for reading/examining blob store\nwithout modifying it.\n\nSigned-off-by: Maksym Sloyko <maxims@google.com>\nChange-Id: I12e3473351be98820d8e5df1b71a6d43699aa671\n",
    "createdOn": 1635883004,
    "lastUpdated": 1637181649,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1635883004,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1635883015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635883257,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29567/ : SUCCESS"
        },
        {
            "timestamp": 1635911047,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1635963291,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1635963313,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635963321,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1635963335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/29739/ : FAILURE"
        },
        {
            "timestamp": 1635963960,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1635963988,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635964234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29741/ : SUCCESS"
        },
        {
            "timestamp": 1636455776,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1636480617,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1636480631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636480875,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29968/ : SUCCESS"
        },
        {
            "timestamp": 1636481370,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1636624919,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1637176047,
            "reviewer": {
                "name": "Kun Yi",
                "email": "kunyi731@gmail.com",
                "username": "kunyi731"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1637181649,
            "reviewer": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "message": "Change has been successfully merged by Maksym Sloyko"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "3cbe6f311c475bec3d10f443e9fafe4c393f4d8f",
            "parents": [
                "c3abe753fca211f49eb68f7d34e37bfc9eb5d4c4"
            ],
            "ref": "refs/changes/39/48539/1",
            "uploader": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "createdOn": 1635883004,
            "author": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "binarystore.cpp",
                    "line": 117,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I think it would make more sense to make the `baseBlobId_` optional inside the class, so that you can decouple read-only from this overwrite behavior."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 117,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "What would make it optional?"
                },
                {
                    "file": "binarystore.cpp",
                    "line": 117,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "It seems like readonly mode changes this bit in a suprising way. If you don't set readonly, it clears out the entire eeprom if the name doesn't match. If you do set readonly, it ignores whatever name is in the config and assumes the name in the eeprom. This would be surprising if I hadn't seen the code. The name should probably be decoupled from the data to allow for renaming. Previously we didn't have two modes of operation, so it only behaved a single way (admittedly still somewhat surprising to me)."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 117,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "The \"readonly\" feature is not available via config and I don't plan to add it there.\n\nAnd I would agree that effectively trashing the whole blob, if the name does not match was quite surprising and the whole reason why this change is necessary.\n\nhttps://gbmc-internal-review.git.corp.google.com/c/meta-vendor-private/+/87953\n\nI've changed the logic of the baseBlobId_ getter, hopefully that makes it a little better."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Is this even the correct behavior? Should we just allow renaming without purging the data? Or provide this as a tweakable setting too?"
                },
                {
                    "file": "binarystore.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "Maybe. I'm keeping this backwards compatible, in case someone needs it. Fixing or changing this behavior is out of scope of this change."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 173,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: Boolean expression? `!readOnly_ && flags & blobs::OpenFlags::write`\n\nAlthough it would probably be nicer to produce an error if opening for write and the blob is read only?"
                },
                {
                    "file": "binarystore.cpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "I've added a short-circuit to return false in this case."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "throw `ipmi::HandlerCompletion(ipmi::ccUnspecifiedError)` (or more specific error if one fits) to differentiate from no data."
                },
                {
                    "file": "binarystore.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "Done"
                },
                {
                    "file": "binarystore.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Could you extend this to allow for readonly + overwriting id?"
                },
                {
                    "file": "binarystore.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "I don't quite understand the suggestion. If we are overwriting anything, calling it readonly would be misleading.\n\n\nAlso, these constructors are pretty useless anyway (with \"loadSerializedData\" being private). They should have been private or protected, because it's a little misleading."
                },
                {
                    "file": "binarystore.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Presumably though you would want the ability to ignore the blob id in the eeprom and still have it be readonly. It wouldn't update what is in the eeprom though. It would allow you to remap things like /skm/hss -> /skm/hss-backup and make the backup read-only. Otherwise you would just be prevented from using it this way."
                },
                {
                    "file": "binarystore.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Maksym Sloyko",
                        "email": "maxims@google.com",
                        "username": "maksymko"
                    },
                    "message": "I see.\n\nThat would be useful, but this is a big feature by itself, with changes to both API and behavior, so it's out of scope of this change.\n\nI'm trying not to change the existing behavior and the feature that I add are not available via config."
                },
                {
                    "file": "binarystore.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Alright, should be fine for now."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "binarystore.cpp",
                    "type": "MODIFIED",
                    "insertions": 72,
                    "deletions": -14
                },
                {
                    "file": "binarystore.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "binarystore_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "binarystore_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "test/binarystore_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 260,
            "sizeDeletions": 15
        },
        {
            "number": 2,
            "revision": "67b95ae41ec0122928f2c61787cb5ea69d462fa9",
            "parents": [
                "c3abe753fca211f49eb68f7d34e37bfc9eb5d4c4"
            ],
            "ref": "refs/changes/39/48539/2",
            "uploader": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "createdOn": 1635963291,
            "author": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "binarystore.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -13
                },
                {
                    "file": "binarystore.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "binarystore_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "binarystore_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "test/binarystore_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 290,
            "sizeDeletions": 14
        },
        {
            "number": 3,
            "revision": "5429d15159426934e84c7888a03a64d33d980b24",
            "parents": [
                "c3abe753fca211f49eb68f7d34e37bfc9eb5d4c4"
            ],
            "ref": "refs/changes/39/48539/3",
            "uploader": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "createdOn": 1635963960,
            "author": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "binarystore.cpp",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": -13
                },
                {
                    "file": "binarystore.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "binarystore_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "binarystore_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "test/binarystore_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 290,
            "sizeDeletions": 14
        },
        {
            "number": 4,
            "revision": "eb2741198d9a9a4e859c77cbe9a9642e575f21b8",
            "parents": [
                "c3abe753fca211f49eb68f7d34e37bfc9eb5d4c4"
            ],
            "ref": "refs/changes/39/48539/4",
            "uploader": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "createdOn": 1636480617,
            "author": {
                "name": "Maksym Sloyko",
                "email": "maxims@google.com",
                "username": "maksymko"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "binarystore.cpp",
                    "type": "MODIFIED",
                    "insertions": 71,
                    "deletions": -7
                },
                {
                    "file": "binarystore.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "binarystore_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "binarystore_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                },
                {
                    "file": "test/binarystore_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 282,
            "sizeDeletions": 8
        }
    ]
}