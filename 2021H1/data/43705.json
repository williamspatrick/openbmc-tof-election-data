{
    "project": "openbmc/x86-power-control",
    "branch": "master",
    "id": "Ief94748da6c8e84f0d1b74578cee159d16b605fa",
    "number": 43705,
    "subject": "Add option to stop host watchdog timer",
    "owner": {
        "name": "George Hung",
        "email": "george.hung@quantatw.com",
        "username": "georgehung1210"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/43705",
    "commitMessage": "Add option to stop host watchdog timer\n\nThe host of some platform would set host watchdog timer\nto BMC and when the host power is powered off/cycle/reset\nby BMC, the host watchdog timer need to be disabled to\navoid doing the action of the host watchdog timeout\n\nAdd STOP_HOST_WATCHDOG_TIMER option to be able to add\nyour owned stopping watchdog timer service\n\nTested:\nAdd stopping host watchdog timer service and target\nFor example:\nthe ExecStart of the serivce:\nbusctl set-property xyz.openbmc_project.Watchdog\n    /xyz/openbmc_project/watchdog/host0\n      xyz.openbmc_project.State.Watchdog Enabled b false\n\nRun ipmtool power off/cycle/reset and then confirmed\nthat x86-power-control log \"stop host watchdog timer\"\nand phosphor-watchdog log \"watchdog: disabled\"\n\nSigned-off-by: George Hung <george.hung@quantatw.com>\nChange-Id: Ief94748da6c8e84f0d1b74578cee159d16b605fa\n",
    "createdOn": 1622630388,
    "lastUpdated": 1622751711,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1622630388,
            "reviewer": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1622630398,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622630438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/18528/ : SUCCESS"
        },
        {
            "timestamp": 1622671749,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1622728003,
            "reviewer": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1622728019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622728133,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/18632/ : SUCCESS"
        },
        {
            "timestamp": 1622729276,
            "reviewer": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1622747208,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1622749957,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1622751711,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6ab54f177328186c84b2fd85f151e75f7396f151",
            "parents": [
                "afd04f0283bfc4854c0100c56ccf8bc1c10c799a"
            ],
            "ref": "refs/changes/05/43705/1",
            "uploader": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "createdOn": 1622630388,
            "author": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "x86-power-control doesn't feel like the right place for this change.  I think it would make more sense to add a match for the CurrentHostState property in the host watchdog service and start and stop the timer based on that match.  You can find an example match in currentHostStateMonitor().\n\nIf x86-power-control is really the best place, we can put it in."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "George Hung",
                        "email": "george.hung@quantatw.com",
                        "username": "georgehung1210"
                    },
                    "message": "It's a good question, so far I just think that stop host watchdog timer after sending power off/cycle/reset request, thus I add it to x86-power-control. Maybe other reviewers could give us the suggestion about it. Anyway, I still submit the update first and it changes to handle stop watchdog timer in currentHostStateMonitor() by your advice."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Hmm, I think the host watchdog should be there in case we want to try to power it up when the host goes down unexpectedly - wouldn't basing it off of \"currentHostStatusMonitor\" defeat the purpose of the watchdog?\n\nWe want to only turn the watchdog off when we mean to turn off the host - ie. when the BMC instructs the host to turn itself off, so I think this living in x86-power-control code makes sense to me."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Interesting.  In what cases would you call the host turning off expected vs. unexpected?  What if a user shuts down from the host OS?"
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "That's a good point - I think when the host shuts itself down, the OS usually turns the IPMI watchdog off, but let me double check on that."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 518,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "This would be better in currentHostStateMonitor() where other things like the POH counter are already handled based on the host state.\n\nAlso, does anything ever start the host watchdog timer?"
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 518,
                    "reviewer": {
                        "name": "George Hung",
                        "email": "george.hung@quantatw.com",
                        "username": "georgehung1210"
                    },
                    "message": "I follow your suggestion and move to currentHostStateMonitor() to handle it.\n\nAnd I think starting the host watchdog timer by the host usually."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "bb764ea7b2787cb659f5407df1dcf621cc3f7fcd",
            "parents": [
                "afd04f0283bfc4854c0100c56ccf8bc1c10c799a"
            ],
            "ref": "refs/changes/05/43705/2",
            "uploader": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "createdOn": 1622728003,
            "author": {
                "name": "George Hung",
                "email": "george.hung@quantatw.com",
                "username": "georgehung1210"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "type": "MODIFIED",
                    "insertions": 61,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 69,
            "sizeDeletions": 0
        }
    ]
}