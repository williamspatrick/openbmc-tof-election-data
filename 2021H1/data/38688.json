{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Ia479bb7dadb68bc7897ec67b9237bbe8e6a3bfa1",
    "number": 38688,
    "subject": "Add support to take actions if NIC sensor values crossed thresholds",
    "owner": {
        "name": "Kumar Thangavel",
        "email": "thangavel.k@hcl.com",
        "username": "HCL-BMC"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38688",
    "commitMessage": "Add support to take actions if NIC sensor values crossed thresholds\n\nAdded support to take platform specific actions if the NIC sensors\nvalues getting low/high compared to threshold values. Based on this,\nSlots are getting powered Off/on.\n\nTESTED : Built Facebook YosemiteV2 images and loaded on the target hardware.\nVerified all the slots getting powered Off/on when nic sensor values crossed\nthreshold values.\n\nSigned-off-by: Kumar Thangavel <thangavel.k@hcl.com>\nChange-Id: Ia479bb7dadb68bc7897ec67b9237bbe8e6a3bfa1\n",
    "createdOn": 1606827376,
    "lastUpdated": 1623089847,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1606827376,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1606827390,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606827472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/8821/ : FAILURE"
        },
        {
            "timestamp": 1609773956,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\nHi All,\n\nCould you please provide your comments if any or please provide your approvals.\n\nThanks."
        },
        {
            "timestamp": 1609877176,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(2 comments)\n\nPlease reconsider the design, can it be made generic? I don't think nic specific handling should be added into the generic class."
        },
        {
            "timestamp": 1609901408,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1: Code-Review-1\n\nAgree with Zhikui.  This needs an overall design.  I suspect the sensor subsystem shouldn't be interacting with these things at all, and instead we need to define a new subsyystem responsible for resetting things when they get too hot.\n\nThis seems very similar to what Matt Spinler is working on currently, although he's doing it for front-end temperatures.  You should look and see if any of his work adds to yours, but as-written, this breaks too many abstraction boundaries for my liking."
        },
        {
            "timestamp": 1609913902,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1: Code-Review-1\n> \n> Agree with Zhikui.  This needs an overall design.  I suspect the sensor subsystem shouldn't be interacting with these things at all, and instead we need to define a new subsyystem responsible for resetting things when they get too hot.\n> \n> This seems very similar to what Matt Spinler is working on currently, although he's doing it for front-end temperatures.  You should look and see if any of his work adds to yours, but as-written, this breaks too many abstraction boundaries for my liking.\n\nThanks All for your comments and suggestions. \n\nI will discuss with Matt Spinler and will plan for what needs to done for this."
        },
        {
            "timestamp": 1610039831,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\nHi Matt,\n\nPlease share the patch details of what you are working regd this feature. I will check and try to update as per our use case.\n\nThanks."
        },
        {
            "timestamp": 1610041272,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> Hi Matt,\n> \n> Please share the patch details of what you are working regd this feature. I will check and try to update as per our use case.\n> \n> Thanks.\n\nI just started working on a new application called 'thermal-monitor' where I think this would fit.  This morning I sent a note to the email list about it.  It will probably be a few days until I have enough together to allow you to plug in your own actions."
        },
        {
            "timestamp": 1610080071,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > Hi Matt,\n> > \n> > Please share the patch details of what you are working regd this feature. I will check and try to update as per our use case.\n> > \n> > Thanks.\n> \n> I just started working on a new application called 'thermal-monitor' where I think this would fit.  This morning I sent a note to the email list about it.  It will probably be a few days until I have enough together to allow you to plug in your own actions.\n\nOk. Thanks."
        },
        {
            "timestamp": 1610114780,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > > Hi Matt,\n> > > \n> > > Please share the patch details of what you are working regd this feature. I will check and try to update as per our use case.\n> > > \n> > > Thanks.\n> > \n> > I just started working on a new application called 'thermal-monitor' where I think this would fit.  This morning I sent a note to the email list about it.  It will probably be a few days until I have enough together to allow you to plug in your own actions.\n> \n> Ok. Thanks.\n\nFYI, if you wanted you could use phosphor-dbus-monitor to do this just by using a YAML config.  We did a similar thing on our witherspoon system, see https://github.com/openbmc/meta-ibm/blob/master/recipes-phosphor/dbus/fan-policy/witherspoon/air-cooled.yaml."
        },
        {
            "timestamp": 1610341693,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > > > Patch Set 1:\n> > > > \n> > > > Hi Matt,\n> > > > \n> > > > Please share the patch details of what you are working regd this feature. I will check and try to update as per our use case.\n> > > > \n> > > > Thanks.\n> > > \n> > > I just started working on a new application called 'thermal-monitor' where I think this would fit.  This morning I sent a note to the email list about it.  It will probably be a few days until I have enough together to allow you to plug in your own actions.\n> > \n> > Ok. Thanks.\n> \n> FYI, if you wanted you could use phosphor-dbus-monitor to do this just by using a YAML config.  We did a similar thing on our witherspoon system, see https://github.com/openbmc/meta-ibm/blob/master/recipes-phosphor/dbus/fan-policy/witherspoon/air-cooled.yaml.\n\nSure. Thanks"
        },
        {
            "timestamp": 1623089847,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Abandoned\n\nI think this got resolved with pointers to a better place to put this behavior.  In the meantime, I believe the new shutdown threshold interfaces have been upstreamed, which largely obsolete this patch.  Feel free to reopen if this is something you're still looking to push for."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b00221219312eb4f0bd1236755dc24c7ababc1f1",
            "parents": [
                "da27423cdaf0558579fbdcf1eaa2a34ea19cb8de"
            ],
            "ref": "refs/changes/88/38688/1",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1606827376,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/Thresholds.cpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "I don't think nicFaultHandle support should be in this generic construct"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 275,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This is incorrect, the Threshold can be low Threshold"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 0
        }
    ]
}