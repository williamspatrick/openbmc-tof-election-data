{
    "project": "openbmc/openpower-vpd-parser",
    "branch": "master",
    "id": "I4e53c6c9990ecc1f61bd64d32cdd151f73093272",
    "number": 41811,
    "subject": "vpd:False Positive errors fix",
    "owner": {
        "email": "priyanga24@in.ibm.com",
        "username": "PriyangaRamasamy"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openpower-vpd-parser/+/41811",
    "commitMessage": "vpd:False Positive errors fix\n\nFixed the false positive errors which the code analyzer throws.\n\nSome of the false positive errors fixed in this commit are,\n-noExplicitConstructor\n-missingOverride\n-unReadVariable\n-uninitMemVariable\n-passedByValue\n-postfixOperator\n-KnownConditionTrueFalse\n-redundantInitialisation\n-redundantAssignment\n-variableScope\n-redundantCondition\n-exceptRethrowCopy\n-shadowVariable\n-shadowArgument\n\nTESTED THE FOLLOWING CASES WHICH WORKS AS EXPECTED WITH THIS COMMIT's CHANGE\n1. CHECK FOR THE LOCATION CODE EXPANSION\n2. SYSTEM VPD PARSING SUCCESS\n3. CHECK IF RIGHT ECC/DATA EXCEPTION IS THROWN\n4. PRINTABLE DATA CHECK WHILE BOTH READING AND WRITING VIA VPD-TOOL\n5. UPDATE DBUS IF THE GIVEN FRU&MODULE CPU's RECORD DATA IS PART OF CI\n6. IPZ-PARSER PARSE FUNCTIONALITY\n7. INVENTORY JSON PARSING\n\nSigned-off-by: PriyangaRamasamy <priyanga24@in.ibm.com>\nChange-Id: I4e53c6c9990ecc1f61bd64d32cdd151f73093272\n",
    "createdOn": 1617352321,
    "lastUpdated": 1623954811,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1617352321,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1617352338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617352539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14795/ : SUCCESS"
        },
        {
            "timestamp": 1617600227,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1617604183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617604775,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1617604862,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Patch Set 3:\n\nFew other cases needs to be fixed in next ps."
        },
        {
            "timestamp": 1617612875,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1617622932,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14848/ : SUCCESS"
        },
        {
            "timestamp": 1617722085,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1617783178,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Patch Set 3:\n\nERROR STATEMENTS:\n\nvpd-parser/keyword_vpd_parser.hpp:52:5: style: Class 'KeywordVpdParser' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]\n    KeywordVpdParser(openpower::vpd::Binary&& kwVpdVector) :\n    ^\nvpd-parser/ipz_parser.hpp:35:5: style: Class 'IpzVpdParser' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]\n    IpzVpdParser(Binary&& VpdVector) : vpd(std::move(VpdVector))\n    ^\nvpd-parser/keyword_vpd_parser.hpp:73:17: style: The function 'getInterfaceName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]\n    std::string getInterfaceName() const;\n                ^\nvpd-parser/parser_interface.hpp:46:25: note: Virtual function in base class\n    virtual std::string getInterfaceName() const = 0;\n                        ^\nvpd-parser/keyword_vpd_parser.hpp:73:17: note: Function in derived class\n    std::string getInterfaceName() const;\n                ^\nvpd-parser/ipz_parser.hpp:45:36: style: The function 'parse' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]\n    std::variant<kwdVpdMap, Store> parse();\n                                   ^\nvpd-parser/parser_interface.hpp:36:44: note: Virtual function in base class\n    virtual std::variant<kwdVpdMap, Store> parse() = 0;\n                                           ^\nvpd-parser/ipz_parser.hpp:45:36: note: Function in derived class\n    std::variant<kwdVpdMap, Store> parse();\n                                   ^\nvpd-parser/memory_vpd_parser.hpp:33:5: style: Class 'memoryVpdParser' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]\n    memoryVpdParser(Binary&& VpdVector) : memVpd(std::move(VpdVector))\n    ^\nvpd-parser/ipz_parser.hpp:53:17: style: The function 'getInterfaceName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]\n    std::string getInterfaceName() const;\n                ^\nvpd-parser/parser_interface.hpp:46:25: note: Virtual function in base class\n    virtual std::string getInterfaceName() const = 0;\n                        ^\nvpd-parser/ipz_parser.hpp:53:17: note: Function in derived class\n    std::string getInterfaceName() const;\n                ^\nvpd-parser/memory_vpd_parser.hpp:43:36: style: The function 'parse' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]\n    std::variant<kwdVpdMap, Store> parse();\n                                   ^\nvpd-parser/parser_interface.hpp:36:44: note: Virtual function in base class\n    virtual std::variant<kwdVpdMap, Store> parse() = 0;\n                                           ^\nvpd-parser/memory_vpd_parser.hpp:43:36: note: Function in derived class\n    std::variant<kwdVpdMap, Store> parse();\n                                   ^\nvpd-parser/memory_vpd_parser.hpp:51:17: style: The function 'getInterfaceName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]\n    std::string getInterfaceName() const;\n                ^\nvpd-parser/parser_interface.hpp:46:25: note: Virtual function in base class\n    virtual std::string getInterfaceName() const = 0;\n                        ^\nvpd-parser/memory_vpd_parser.hpp:51:17: note: Function in derived class\n    std::string getInterfaceName() const;\n                ^\nvpdecc/vpdecc.c:8:9: style: Unused variable: i [unusedVariable]\n    int i, vRet = 0;\n        ^\nvpd_tool_impl.hpp:186:5: style: Class 'VpdTool' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]\n    VpdTool(const std::string&& fru) : fruPath(std::move(fru))\n    ^\ntest/vpd-manager-test/reader_test.cpp:196:15: style: Variable 'paths' is assigned a value that is never used. [unreadVariable]\n        paths =\n              ^\nvpd-manager/editor_impl.hpp:59:5: warning: Member variable 'EditorImpl::isCI' is not initialized in the constructor. [uninitMemberVar]\n    EditorImpl(const std::string& record, const std::string& kwd,\n    ^\nvpd-manager/editor_impl.hpp:70:5: warning: Member variable 'EditorImpl::isCI' is not initialized in the constructor. [uninitMemberVar]\n    EditorImpl(const inventory::Path& path, const nlohmann::json& json,\n    ^\nvpd-manager/editor_impl.hpp:85:5: warning: Member variable 'EditorImpl::isCI' is not initialized in the constructor. [uninitMemberVar]\n    EditorImpl(const inventory::Path& invPath, const std::string& record,\n    ^\nvpd-manager/editor_impl.hpp:205:9: style: Struct 'RecInfo' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]\n        RecInfo(const std::string& rec) :\n        ^\nvpd-manager/manager.hpp:73:41: performance: Function parameter 'recordName' should be passed by const reference. [passedByValue]\n                      const std::string recordName, const std::string keyword,\n                                        ^\nvpd-manager/manager.hpp:73:71: performance: Function parameter 'keyword' should be passed by const reference. [passedByValue]\n                      const std::string recordName, const std::string keyword,\n                                                                      ^\nvpd-manager/manager.hpp:89:59: performance: Function parameter 'locationCode' should be passed by const reference. [passedByValue]\n        getFRUsByUnexpandedLocationCode(const std::string locationCode,\n                                                          ^\nvpd-manager/manager.hpp:103:57: performance: Function parameter 'locationCode' should be passed by const reference. [passedByValue]\n        getFRUsByExpandedLocationCode(const std::string locationCode);\n                                                        ^\nvpd-manager/manager.hpp:115:59: performance: Function parameter 'locationCode' should be passed by const reference. [passedByValue]\n    std::string getExpandedLocationCode(const std::string locationCode,\n                                                          ^\nvpd-parser/parser_factory.cpp:54:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg] \n        parser = nullptr;\n        ^\nvpd-parser/keyword_vpd_parser.cpp:117:5: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]\n    kwVpdIterator++;\n    ^\nvpd-parser/keyword_vpd_parser.cpp:142:9: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]\n        kwVpdIterator++;\n        ^\nvpd_tool_impl.cpp:357:31: style: Condition 'value.find(\"0x\")!=std::string::npos' is always true [knownConditionTrueFalse]\n    else if (value.find(\"0x\") != string::npos)\n                              ^\nvpd_tool_impl.cpp:118:20: style: Redundant initialization for 'objectName'. The initialized value is overwritten before it is read. [redundantInitialization]\n        objectName = invPath;\n                   ^\nvpd_tool_impl.cpp:114:23: note: objectName is initialized\n    string objectName = {};\n                      ^\nvpd_tool_impl.cpp:118:20: note: objectName is overwritten\n        objectName = invPath;\n                   ^\nvpd_tool_impl.cpp:337:29: style: Variable 'hexByte' is reassigned a value before the old one has been used. [redundantAssignment]\n                    hexByte = ss.str();\n                            ^\nvpd_tool_impl.cpp:334:33: note: hexByte is assigned\n                        hexByte = ss.str();\n                                ^\nvpd_tool_impl.cpp:337:29: note: hexByte is overwritten\n                    hexByte = ss.str();\n                            ^\nvpd_tool_impl.cpp:86:20: style: The scope of the variable 'LOCATION_CODE_IF' can be reduced. [variableScope]\n    constexpr auto LOCATION_CODE_IF = \"com.ibm.ipzvpd.Location\";\n                   ^\nvpd_tool_impl.cpp:225:10: style: The scope of the variable 'validObject' can be reduced. [variableScope]\n    bool validObject = false;\n         ^\nvpd_tool_impl.cpp:150:66: performance: Function parameter 'extraInterface' should be passed by const reference. [passedByValue]\nvoid VpdTool::getExtraInterfaceProperties(string invPath, string extraInterface,\n                                                                 ^\nvpd_tool_impl.cpp:222:68: performance: Function parameter 'fruPath' should be passed by const reference. [passedByValue]\njson VpdTool::parseInvJson(const json& jsObject, char flag, string fruPath)\n                                                                   ^\nvpd-manager/manager.cpp:61:46: performance: Function parameter 'recordName' should be passed by const reference. [passedByValue]\n                           const std::string recordName,\n                                             ^\nvpd-manager/manager.cpp:62:46: performance: Function parameter 'keyword' should be passed by const reference. [passedByValue]\n                           const std::string keyword, const Binary value)\n                                             ^\nvpd-manager/editor_impl.cpp:398:36: style: Redundant condition: isCpuModuleOnly. '!isCpuModuleOnly || (isCpuModuleOnly && isCI)' is equivalent to '!isCpuModuleOnly || isCI' [redundantCondition]\n            if ((!isCpuModuleOnly) || (isCpuModuleOnly && isCI))\n                              \nvpd-manager/editor_impl.cpp:133:28: style: Variable 'dataLength' is assigned a value that is never used. [unreadVariable] -CPP ISSUE\n    std::size_t dataLength = 0;\n                           ^\nimpl.cpp:443:21: style: The scope of the variable 'lengthHighByte' can be reduced. [variableScope]\n        std::size_t lengthHighByte;\n                    ^\nibm_vpd_app.cpp:997:13: style: Throwing a copy of the caught exception instead of rethrowing the original exception. [exceptRethrowCopy]\n            throw e;\n            ^\nibm_vpd_app.cpp:81:27: style: The scope of the variable 'SYSTEM_OBJECT' can be reduced. [variableScope]\n    static constexpr auto SYSTEM_OBJECT = \"/system/chassis/motherboard\";\n                          ^\nibm_vpd_app.cpp:82:27: style: The scope of the variable 'VCEN_IF' can be reduced. [variableScope]\n    static constexpr auto VCEN_IF = \"com.ibm.ipzvpd.VCEN\";\n                          ^\nibm_vpd_app.cpp:83:27: style: The scope of the variable 'VSYS_IF' can be reduced. [variableScope]\n    static constexpr auto VSYS_IF = \"com.ibm.ipzvpd.VSYS\";\n                          ^\nibm_vpd_app.cpp:748:46: style: Local variable 'interfaces' shadows outer variable [shadowVariable]\n                    std::vector<std::string> interfaces = {\n                                             ^\nibm_vpd_app.cpp:725:29: note: Shadowed declaration\n    inventory::InterfaceMap interfaces;\n                            ^\nibm_vpd_app.cpp:748:46: note: Shadow variable\n                    std::vector<std::string> interfaces = {\n                                             ^\nibm_vpd_app.cpp:873:14: style: Local variable 'js' shadows outer argument [shadowArgument]\n        auto js = json::parse(inventoryJson);\n             ^\nibm_vpd_app.cpp:723:53: note: Shadowed declaration\nstatic void populateDbus(T& vpdMap, nlohmann::json& js, const string& filePath)\n                                                    ^\nibm_vpd_app.cpp:873:14: note: Shadow variable\n        auto js = json::parse(inventoryJson);\n             ^\nibm_vpd_app.cpp:911:16: style: Local variable 'file' shadows outer variable [shadowVariable]\n        string file{};\n               ^\nibm_vpd_app.cpp:897:12: note: Shadowed declaration\n    string file{};\n           ^\nibm_vpd_app.cpp:911:16: note: Shadow variable\n        string file{};\n               ^\nimpl.cpp:194:12: style: Redundant initialization for 'rc'. The initialized value is overwritten before it is read. [redundantInitialization]\n        rc = vhdrEccCheck();\n           ^\nimpl.cpp:193:16: note: rc is initialized\n        int rc = eccStatus::FAILED;\n               ^\nimpl.cpp:194:12: note: rc is overwritten\n        rc = vhdrEccCheck();\n           ^\nimpl.cpp:225:8: style: Redundant initialization for 'rc'. The initialized value is overwritten before it is read. [redundantInitialization]\n    rc = vtocEccCheck();\n       ^\nimpl.cpp:224:12: note: rc is initialized\n    int rc = eccStatus::FAILED;\n           ^\nimpl.cpp:225:8: note: rc is overwritten\n    rc = vtocEccCheck();\n       ^\n\n++ date\n+ echo 'Unit test build completed, Mon Mar 29 07:00:17 CDT 2021'\nUnit test build completed, Mon Mar 29 07:00:17 CDT 2021\n+ rm /home/jenkins-op/workspace/ci-repository/openbmc/unit-test.py\n+ rm /home/jenkins-op/workspace/ci-repository/openbmc/dbus-unit-test.py\n+ rm /home/jenkins-op/workspace/ci-repository/openbmc/format-code.sh\nNew run name is '#14480-'\nFinished: SUCCESS"
        },
        {
            "timestamp": 1617811322,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1623945855,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1623945867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623946246,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20033/ : SUCCESS"
        },
        {
            "timestamp": 1623954674,
            "reviewer": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1623954687,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623954811,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20042/ : SUCCESS"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "3408ffe23be35aefa5e33ae41628ea9eb93cbb73",
            "parents": [
                "887a42adeda24a05215923208b645ac6a59fdf6e"
            ],
            "ref": "refs/changes/11/41811/1",
            "uploader": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "createdOn": 1617352321,
            "author": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "const.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -10
                },
                {
                    "file": "impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "utils_templated.hpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "vpd-manager/editor_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/ipz_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/memory_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "vpd-parser/parser_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -9
                },
                {
                    "file": "vpd_tool_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 83,
            "sizeDeletions": 46
        },
        {
            "number": 2,
            "revision": "dcd8c29e89bf9a89e35feaad5d70fd09dea1943e",
            "parents": [
                "887a42adeda24a05215923208b645ac6a59fdf6e"
            ],
            "ref": "refs/changes/11/41811/2",
            "uploader": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "createdOn": 1617600227,
            "author": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "const.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -11
                },
                {
                    "file": "impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "utils_templated.hpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-manager/editor_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/ipz_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/memory_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "vpd-parser/parser_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/parser_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/parser_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -23
                },
                {
                    "file": "vpd_tool_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 67
        },
        {
            "number": 3,
            "revision": "e26a810cf5f82538f1bc0d55bbfe84e51f1e4d5e",
            "parents": [
                "887a42adeda24a05215923208b645ac6a59fdf6e"
            ],
            "ref": "refs/changes/11/41811/3",
            "uploader": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "createdOn": 1617604775,
            "author": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "These are not really false positives :) .."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "cpp standard error checks ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Why is this in all CAPS? \ud83d\ude0a"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "effect of copy paste from my notepad.. will make the change"
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "line": 258,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "Remove the new line"
                },
                {
                    "file": "utils_templated.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "I don't understand, why was this needed? How will this for for any type T?"
                },
                {
                    "file": "utils_templated.hpp",
                    "line": 18,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "the vpdData can be of vector or can be of string.\nvector in the case of vpd_tool_impl.cpp line 31\nand string in vpd_tool_impl.cpp line 355"
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Why? In general we always want to initialize all locals, I believe this warning should be ignored."
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "line": 132,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "yeah..there creates an ambiguity with the two warnings - unReadVariable and uninitialsedVariable\n\nvpd-manager/editor_impl.cpp:133:28: style: Variable 'dataLength' is assigned a value that is never used. [unreadVariable] -CPP ISSUE\n    std::size_t dataLength = 0;\n\nthe data_length is getting overwritten before reading the default value..so it says unreadVariable.."
                },
                {
                    "file": "vpd-parser/parser_factory.cpp",
                    "line": 49,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "the reason I wanted to make parser variable a double pointer is \nvpd-parser/parser_factory.cpp:54:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg] \n        parser = nullptr;\n\nIf its a single pointer, the scope of the variable ends in this api itself.. so getting the above warning.\nso made it to double pointer and its scope remains active in the caller..\n\neither should remove parser=nullptr... or should make double pointer like the one which I did."
                },
                {
                    "file": "vpd-parser/parser_factory.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "This is wrong? It should read:\ndelete *parser;\n*parser = nullptr;"
                },
                {
                    "file": "vpd-parser/parser_factory.cpp",
                    "line": 54,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "no..after the pointer gets deleted, not able to assign the nullptr value to the pointer. throwing errors.."
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Why did you need to move this to a templated function?"
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "line": 34,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "The template function If I define in .cpp file, compiler is throwing linker error - as its not able to identify the definition of the templated function in .cpp files.\n\nso it needs to be defined in a header file and if I define it in utils.hpp - the templated function will get processed and included in most of the files where we include utils.hpp..which is not necessary..\n\nso created a seperate utils_templated.hpp file - so that we include this template function wherever necessary.. (currently its needed only in vpd_tool_impl.cpp)"
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "line": 6,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Why are these not needed anymore?"
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "line": 6,
                    "reviewer": {
                        "email": "priyanga24@in.ibm.com",
                        "username": "PriyangaRamasamy"
                    },
                    "message": "even after having this, I get unused variable warning.. need to look on it"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "const.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -11
                },
                {
                    "file": "impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "utils_templated.hpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-manager/editor_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/ipz_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/memory_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "vpd-parser/parser_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/parser_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/parser_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -23
                },
                {
                    "file": "vpd_tool_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 67
        },
        {
            "number": 4,
            "revision": "41f506597fd5063cba9b84d3ba34604401db2e41",
            "parents": [
                "3aec47874136b3eb46fce0feb3038f19fa46b79d"
            ],
            "ref": "refs/changes/11/41811/4",
            "uploader": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "createdOn": 1623945855,
            "author": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "const.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -7
                },
                {
                    "file": "ibm_vpd_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -7
                },
                {
                    "file": "ibm_vpd_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_utils_templated.hpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-manager/editor_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -6
                },
                {
                    "file": "vpd-parser/ipz_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/memory_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "vpd-parser/parser_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "vpd-parser/parser_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -25
                },
                {
                    "file": "vpd_tool_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 129,
            "sizeDeletions": 72
        },
        {
            "number": 5,
            "revision": "ffb6c4a95fe187d81c02ec516d22bf518e5fd380",
            "parents": [
                "3aec47874136b3eb46fce0feb3038f19fa46b79d"
            ],
            "ref": "refs/changes/11/41811/5",
            "uploader": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "createdOn": 1623954674,
            "author": {
                "email": "priyanga24@in.ibm.com",
                "username": "PriyangaRamasamy"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "const.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_app.cpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -7
                },
                {
                    "file": "ibm_vpd_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -7
                },
                {
                    "file": "ibm_vpd_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "ibm_vpd_utils_templated.hpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "test/vpd-manager-test/reader_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "vpd-manager/editor_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-manager/editor_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -6
                },
                {
                    "file": "vpd-parser/ipz_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/keyword_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "vpd-parser/memory_vpd_parser.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "vpd-parser/parser_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "vpd-parser/parser_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "vpd_tool_impl.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -25
                },
                {
                    "file": "vpd_tool_impl.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "vpdecc/vpdecc.c",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 72
        }
    ]
}