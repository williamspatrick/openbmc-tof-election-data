{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I506266509b88fd0968cd2c6dd32d281a8211129e",
    "number": 47118,
    "subject": "Stagger out the timing of sensor readings",
    "owner": {
        "name": "Josh Lehan",
        "email": "krellan@google.com",
        "username": "Krellan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47118",
    "commitMessage": "Stagger out the timing of sensor readings\n\nThis is an experiment, to see if it makes a difference in performance,\nto avoid the \"thundering herd\" problem of having every sensor attempt\na reading at roughtly the same time.\n\nSpreading the sensor readings out in time, so that the sensor reading\ntimes are in a staggered fashion.\n\nThe timing for the overall sensor reading intervals are unchanged.\nHowever, at program start, each sensor will be offset in time by a\nshort amount, currently 0.1 seconds, instead of all sensors being\nqueued up at once. The intent is to stagger them out, to provide some\nspacing in time, between each sensor read attempt.\n\nIf the number of sensors exceeds what can fit in the interval, that is\nnot a problem, they will simply be doubled-up, tripled-up, and so on.\n\nTested: It runs for me. Timer intervals look correctly determined.\n\nSigned-off-by: Josh Lehan <krellan@google.com>\nChange-Id: I506266509b88fd0968cd2c6dd32d281a8211129e\n",
    "createdOn": 1632343362,
    "lastUpdated": 1634278902,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1632343362,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1632343373,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632343469,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1632343515,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/26782/ : SUCCESS"
        },
        {
            "timestamp": 1632782785,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1632782800,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632782944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27051/ : SUCCESS"
        },
        {
            "timestamp": 1632783272,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1632783409,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\nHere's an idea to help improve sensor performance on some systems."
        },
        {
            "timestamp": 1632846408,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1632846676,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1632856849,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1632932982,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1634278902,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Set Work In Progress"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "5c5da50d2ee1eba9dff564e8dbc10b1b377c797a",
            "parents": [
                "33703af797949b47375086988daeac89b47b5db1"
            ],
            "ref": "refs/changes/18/47118/1",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1632343362,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/HwmonTempSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -4
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -3
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -2
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 12
        },
        {
            "number": 2,
            "revision": "580e852eca182f9306ca4616326c8eb633ed021f",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/18/47118/2",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1632782785,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/HwmonTempSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -3
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -3
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -2
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 51,
            "sizeDeletions": 11
        },
        {
            "number": 3,
            "revision": "ede1ca03d8e11030bc3ddfa25e463ff07979d779",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/18/47118/3",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1632783272,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't add prints that print on every startup."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "OK, I will have it print only if \"debug\" is enabled."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I like this idea in concept, but instead of picking a hardcoded value at the top scope and passing it through all the layers, would it make more sense to just pick a uniform random number between 0 and poll rate for each sensor and use that as the first delay?  That way, the sensors get staggered randomly based on their poll rate?  As written, because we don't take poll rate into account, if I had 100 tmp75 sensors, it would take 10 seconds for all of them to init, which doesn't seem great.\n\nAlso, that would greatly simplify this patch."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "That's a good idea. We don't know the total number of sensors in the system in advance, otherwise it would be easy to evenly split up the polling interval.\n\nAs for a random number, I don't like introducing intentional randomness into the BMC, which is supposed to act deterministically. I really like the idea of making it pseudorandom, though. Do the existing libraries on the BMC contain a CRC32 function call or anything like that? Taking a CRC32, or other good equivalent, over the sensor name, then mod it over the polling interval, would be enough to accomplish the goal of breaking up the \"thundering herd\" without being truly random."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "CRC32 is probably overkill.  std::hash would be fine if we were doing that, and sure, we could base it on the last few digits of the hash if we wanted.\n\nOne thing to keep in mind, std::random has several pseudorandom engines we could use here as well, although I don't have a strong opinion on what we should use."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/HwmonTempSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -3
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -3
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -2
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 51,
            "sizeDeletions": 11
        }
    ]
}