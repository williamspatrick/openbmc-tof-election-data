{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "41398-timeout",
    "id": "I53b9ff4c0aa771aff4aaf3449fcab23c07afa296",
    "number": 41398,
    "subject": "Add timer expiration feature to ExternalSensor",
    "owner": {
        "name": "Josh Lehan",
        "email": "krellan@google.com",
        "username": "Krellan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/41398",
    "commitMessage": "Add timer expiration feature to ExternalSensor\n\nExternalSensor now functions as intended, wholly within dbus-sensors,\nwithout requiring any modification to the IPMI or Redfish servers,\nto provide the feature of timeout expiration of external data, so that\nstale/lost external connections can be properly indicated as such.\n\nA \"Timeout\" parameter is added, in decimal seconds, providing a\nwatchdog for the arrival of external data. The expectation is that the\nexternal source will provide D-Bus updates, to the sensor Value\nproperty, at regular intervals, repeating indefinitely.\nIf this external source stops doing this, the watchdog barks, and\nthe Value of this Sensor will become set to \"NaN\". This provides\nan indication to consumers of this Sensor, to realize that the Value\nof this sensor has became stale/disconnected.\n\nA practical application of this is fan control. Upon loss of external\ntemperature notification, the fans could be thrown into failsafe\nmode, instead of risking the system overheating by wrongly continuing\nto believe an old temperature value that has become stale.\n\nTested: Works for me. I started an external data source, data arrived\ninto the Value of the sensor. I stopped that external data source,\nafter the Timeout period, the Value became \"NaN\". I started the\nexternal source again, the Value became correct again, as soon as\nexternal data started to arrive again. I repeated this stop and start\nprocedure a few times, verifying that it operated as intended.\n\nSigned-off-by: Josh Lehan <krellan@google.com>\nChange-Id: I53b9ff4c0aa771aff4aaf3449fcab23c07afa296\n",
    "createdOn": 1616024406,
    "lastUpdated": 1617397997,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1616024406,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1616024417,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616024643,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13950/ : FAILURE"
        },
        {
            "timestamp": 1616024978,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1616024992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616025205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13953/ : SUCCESS"
        },
        {
            "timestamp": 1616025465,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\nThis is a rewrite of ExternalSensor that completes the idea of functionality I had for it. The timeout watchdog has been moved from the IPMI server (a local patch, not yet published) to here. This is a large advantage, as it means there is no more dependency on IPMI, and the timeout functionality is all self-contained within ExternalSensor, as it should have been all along."
        },
        {
            "timestamp": 1616025577,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Topic set to 41398-timeout"
        },
        {
            "timestamp": 1616032946,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 2:\n\n(5 comments)\n\nThanks for moving the logic from IPMI to sensor daemons!"
        },
        {
            "timestamp": 1616103683,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased."
        },
        {
            "timestamp": 1616103709,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616103936,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14014/ : SUCCESS"
        },
        {
            "timestamp": 1616106290,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(8 comments)\n\nSome initial comments on this.  I'm a little worried about safety if one of these sensors is removed while the global timer is running.  We normally handle this by isolating the sensors so they really only share the io_service.  I need to think on this a little more."
        },
        {
            "timestamp": 1616107823,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1616107836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616107863,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1616108066,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14017/ : SUCCESS"
        },
        {
            "timestamp": 1616109491,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1616110652,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1616112780,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1616112792,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616112803,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1616112853,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1616113044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14019/ : SUCCESS"
        },
        {
            "timestamp": 1616179405,
            "reviewer": {
                "name": "Peter Lundgren",
                "email": "peterlundgren@google.com",
                "username": "peterlundgren"
            },
            "message": "Patch Set 5:\n\nPlease add your design doc to this chain."
        },
        {
            "timestamp": 1616192941,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased."
        },
        {
            "timestamp": 1616192952,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616193073,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14069/ : SUCCESS"
        },
        {
            "timestamp": 1616199331,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 5:\n> \n> Please add your design doc to this chain.\n\nDone: https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/41452"
        },
        {
            "timestamp": 1616435578,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1616435592,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616435633,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 7:\n\nAdded link to design document, in the comment block at top. Other than that, no code change since last patchset."
        },
        {
            "timestamp": 1616435705,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14144/ : SUCCESS"
        },
        {
            "timestamp": 1617140585,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased."
        },
        {
            "timestamp": 1617140596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617140716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14603/ : SUCCESS"
        },
        {
            "timestamp": 1617145654,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1617211833,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(3 comments)\n\nHaven't re-reviewed this patchset yet, just answered some questions."
        },
        {
            "timestamp": 1617320877,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1617355974,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1617355993,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617356040,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/14797/ : FAILURE"
        },
        {
            "timestamp": 1617356962,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1617356989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617357115,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14800/ : SUCCESS"
        },
        {
            "timestamp": 1617358904,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1617358919,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617359050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14802/ : SUCCESS"
        },
        {
            "timestamp": 1617363964,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 11:\n\n(7 comments)"
        },
        {
            "timestamp": 1617376590,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 11: Code-Review+1"
        },
        {
            "timestamp": 1617383837,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(1 comment)\n\nMy concerns have been addressed"
        },
        {
            "timestamp": 1617397950,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11: Code-Review+2"
        },
        {
            "timestamp": 1617397997,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "bce256407ceece7b0d84ac73d5d8f268ad4f434f",
            "parents": [
                "9450e6916b8a21886224516e234e5f979579eaa9"
            ],
            "ref": "refs/changes/98/41398/1",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616024406,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": -2
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 35
        },
        {
            "number": 2,
            "revision": "af7bc77c8bc29386fff4a72eea7a6d738dd2e1e8",
            "parents": [
                "9450e6916b8a21886224516e234e5f979579eaa9"
            ],
            "ref": "refs/changes/98/41398/2",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616024978,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "The underscore makes this variable not consistent and stand out from others. I'm not sure if it's a good thing to do... At first glance, I thought it was an unused variable inherited from the interface of HwmonTempSensor."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Thanks. The underscore at the beginning was changed to \"In\" at the end, during a later upstream update, but I had earlier forked ExternalSensor from an older version. So, I brought it up to date, to match."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit.  Double floats can be passed by value."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "No objection. The variable is of such small size that it doesn't really make a difference whether it's passed by value or reference."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Done. The size is small, so it doesn't make a difference here, and passing by value takes less typing."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Same here."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Got it."
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Would appreciate comments describing what these functions do. Thanks!"
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Good idea. I have added a comment line, for each of the new functions added."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Haven't thought it thoroughly, but I feel it would make code much simpler if this function does not have a dependency on writeAlive, as I feel there are quite a few guarding boolean out there. Could we make this function return writePerishable only to make it obvious? Can we check writeAlive in updateReaper() instead?"
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I thought about having it return writePerishable only, at first, in fact I had that in an early draft. The caller had to check writeAlive anyway, to avoid being given misleading results, in all cases. Instead of making the caller have to worry about this, I just added it to the function internally. If it's no longer alive, it's no longer considered perishable."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "I'm not sure if it's a good idea to initialize nextCheck as +inf, so we only need to do:\n```\nnextCheck = std::min(nextCheck, expiration);\nneedCheck = true;\n```\nin the loop to reduce one if branch."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I already need to set needCheck to true, if at least one perishable sensor was found, for use later in the function. It feels safer to me to set this to true and check it, instead of trying to use +inf as a constant to mean \"uninitialized\". There's also weird gotchas with floating-point comparisons, and I didn't want to introduce this complexity here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": -2
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 35
        },
        {
            "number": 3,
            "revision": "d9b8dd4ba62c9c3ed500e1887241fc4e5d99c55f",
            "parents": [
                "ea34a3a078e415d77f99eea4e358ae12c8562a71"
            ],
            "ref": "refs/changes/98/41398/3",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616103683,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should probably move ExternalSensor to a smart_ptr, and capture weak_from_this here, to avoid possible pointer safety issues.  We do this in other places to great effect."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Agreed. There's already enable_shared_from_this() being done in the constructor."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the future, please add debug logging like this in a different patchset.  With that said, not worth splitting out at this point."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "This was very useful during development and testing of this feature, and the logging should stay with the code, in case somebody else wants to enable it as well."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need to explicitly null out the new callback you added to avoid shutdown seg faults."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Done."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is logic that really should be going into each individual sensor.  The memory safety issues with this method are a little scary, and I'm having trouble divining how this would work if a sensor got destroyed at the same time as the timer expired.\n\nI suspect if you rolled this logic into the ExternalSensor class, it would be significantly simpler, as you could simply rearm the existing poll timer every time a value was set."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm. The \"sensors\" container object has essentially global lifetime (it's in main() and passed around by reference), but each individual ExternalSensor in it could be a concern. The program is single-threaded, so only one Boost callback should be able to happen at a time. If it's in the middle of executing the callback that calls createSensors(), the timer callback shouldn't be able to also fire at the same time. So, even if createSensors() disturbs the container, it should be settled down by the time the timer callback gets to execute."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In practice, that's not how that works, and we've been burned by it in the past.  If a sensor expires while io loop is executing something else, the expiration gets added to the bottom of the poll queue.  At one point, we believed that timers would return operation_aborted in all cases, but there turns out to a be a race condition there if we do that.\n\nThe best compromise we've found to avoid this is to either use weak_ptr for every callback capture, and to make sure that the sensor itself owns everything about its being, and avoid globals like this."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm. I went over it again, and still can't see a problem.\n\nThe \"sensors\" container is passed around by reference, and has main() lifetime. Each individual ExternalSensor object in the container could be removed at any time, though. That's fine.\n\nIn the updateReaper() function, the container is iterated through, so if an ExternalSensor object isn't in there anymore, nothing more can be done to it. Even if the timer is late being called, that's fine. Perhaps an entry could get replaced by null. I added a check for the container having an entry that's null, as an extra check."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "time points can be passed by value."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "In general, I like passing structures by const reference, as that frees the user from having to worry about the size of them. However, I checked, and the size of time_point here is only 8 bytes, so it's fine."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In this case, time_point is a typedef for int, not a struct.  I'm surprised you found it to be 8 bytes.  On the BMC (which is 32 bit) I'd expect it to be 4 bytes.\n\nEither way, fine to pass by value."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 57,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It's buried under layers of templates, and I couldn't find what it's really defined as. It has subsecond precision, so I would expect it to be \"struct timespec\" somewhere down deep. Thus, 8 bytes (and a big Y2038 problem) on 32-bit, and probably 16 bytes on 64-bit."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "expires_from_now seems better in this case, rather than doing the \"from now\" math yourself."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I wanted to use the existing \"now\" that was passed in. The reason is, this gets the timer math more correct, instead of introducing timing slop caused by the execution time between the \"now\" timestamp that was passed in, and the current time of day whenever Boost calculates expires_from_now(). Also, I want to minimize the amount of timestamps being taken, as the act of taking a timestamp is fairly slow."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Shouldn't we have one of these per-sensor?  That seems significantly simpler, and requires ExternalSensor to be more self-contained."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "I don't like free-running timers on a per-sensor basis, that got us into all sorts of issues with PSUSensor easier, and it would greatly complicate cleanup, as you mention in other comments."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": -2
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 35
        },
        {
            "number": 4,
            "revision": "77663f26e040b53625841d92bc25445ebfca32de",
            "parents": [
                "ea34a3a078e415d77f99eea4e358ae12c8562a71"
            ],
            "ref": "refs/changes/98/41398/4",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616107823,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 116,
                    "deletions": -2
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 298,
            "sizeDeletions": 35
        },
        {
            "number": 5,
            "revision": "e56568bd706c557633ccf26460610a2d9f7ed87b",
            "parents": [
                "ea34a3a078e415d77f99eea4e358ae12c8562a71"
            ],
            "ref": "refs/changes/98/41398/5",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616112780,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 36
        },
        {
            "number": 6,
            "revision": "a012a5b0de8d25b43c11ceaa0cf4fd6933c0e161",
            "parents": [
                "61e0de9a14b6a690bd659014a322241c43a38acc"
            ],
            "ref": "refs/changes/98/41398/6",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616192941,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 36
        },
        {
            "number": 7,
            "revision": "24630f124b4b5b5b7e685cb4a987eca0ee0ca012",
            "parents": [
                "61e0de9a14b6a690bd659014a322241c43a38acc"
            ],
            "ref": "refs/changes/98/41398/7",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1616435578,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 146,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 310,
            "sizeDeletions": 36
        },
        {
            "number": 8,
            "revision": "30411a9eb5bf0a9b94302498ebb47b4defc4237c",
            "parents": [
                "38a02b348c2e598cde64aa017fbeed36f94f964f"
            ],
            "ref": "refs/changes/98/41398/8",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1617140585,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "where is this used?"
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It's here: https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/41394\n\nIt is called by the underlying Sensor class, when it has detected an incoming external write. The Sensor class manages the D-Bus callbacks, and externalSetHook() is called during the execution of that callback. So, it is used to gain control when a D-Bus write comes in."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "thanks"
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Now that you're using weak_ptr, this isn't required, right?\n\nAt most it should be = nullptr, but I suspect this can be removed entirely."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It's still a good idea to set it explicitly to nullptr, for cleanliness, I think."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Initially it was not clear to me why this function does not just return writePerishable?\nAfter reading it in other file on how this function is used, I think it is meant to be isPerishable and has not perished yet. Maybe renaming the function or add comments to clarify."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "You are correct. I renamed the function, and simplified the logic, to make it more clear what's going on."
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Same as above, initial comment was: should this be true, i.e. not perishable, always viable.\nBut after reading the next file, I can see it is \"is Perishable but still Viable now\".\nPlease either rename or comment"
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Similar, improved the comments, and renamed the function to make it more clear what it does."
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "also check for positive?"
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The ExternalSensor constructor already checks for the timeout being positive, and if it's zero or negative, doesn't enable the timeout feature. However, I see no reason not to make negative timeout a more explicit error message here, so I accepted your suggestion."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 146,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 310,
            "sizeDeletions": 36
        },
        {
            "number": 9,
            "revision": "95ed5b5a3c950d04bb8b3ef7bd21918e84bb8bd4",
            "parents": [
                "ffe1834826cd45d3021ca489ada7fe7c5278769e"
            ],
            "ref": "refs/changes/98/41398/9",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1617355974,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 118,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 180,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 338,
            "sizeDeletions": 70
        },
        {
            "number": 10,
            "revision": "141226186f16b2e7291e0e865899bd02c244bb6c",
            "parents": [
                "ffe1834826cd45d3021ca489ada7fe7c5278769e"
            ],
            "ref": "refs/changes/98/41398/10",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1617356962,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 118,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 147,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 36
        },
        {
            "number": 11,
            "revision": "7243217b80ab755615dab266ac242f7b5a8ade96",
            "parents": [
                "ffe1834826cd45d3021ca489ada7fe7c5278769e"
            ],
            "ref": "refs/changes/98/41398/11",
            "uploader": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "createdOn": 1617358904,
            "author": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/ExternalSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                },
                {
                    "file": "src/ExternalSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 118,
                    "deletions": -3
                },
                {
                    "file": "src/ExternalSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 161,
                    "deletions": -24
                }
            ],
            "sizeInsertions": 319,
            "sizeDeletions": 36
        }
    ]
}