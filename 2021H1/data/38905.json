{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I3a08cf9a2b57da398e7b413ddcb6db6aeaa739b9",
    "number": 38905,
    "subject": "Added support for IPMB based SDR detection dynamically.",
    "owner": {
        "name": "Sathish Sivasekar",
        "email": "sathish-s@hcl.com",
        "username": "sathish034"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38905",
    "commitMessage": "Added support for IPMB based SDR detection dynamically.\n\nSDR is a data record that provides platform management sensor type,\nlocations, event generation and access information.\n\nA data records that contain information about the type and the\nnumber of sensors in the platform, sensor threshold support,\nevent generation capabilities and information on what type\nof readings the sensor provides.\n\nHere, SDR of Type 1 records are implemented based on IPMB to read\nthe sensor information from each bus which can be configured\nusing IPMB FRU from the EM file.\n\nSample Config :\n\n{\n   \"Name\": \"$bus + 1 SDR\",\n   \"Bus\": \"$bus\",\n   \"Class\": \"IpmbSDR\",\n   \"PowerState\": \"Always\",\n   \"Type\": \"SDRSensor\"\n}\n\nThis configuration is based on the \"xyz.openbmc_project.Ipmb.FruDevice\"\nservice, which will read FRU information from each IPMB bus. \"$bus\"\nwill give the bus index for each IPMB channel.\n\nIf IPMB FRU is detected, SDR info and record count of the sensor in\neach bus will be identified. After getting the record count,\nReservation ID for each IPMB bus will be received.\n\nThen, data packet will be framed based on reservation ID to get the\nfull information of each sensor like sensor name, sensor type,\nsensor unit, threshold values, sensor unique number using IPMB.\n\nOnce the information is retrieved for all the sensor based on record\ncount, dbus objects will be populated for each sensor. Finally, it\nwill read the sensor value from sensor unique number and the values\nwill be updated.\n\nTested : Tested on YosemiteV2 platform and verified all the IPMB based\n         SDR Type 1 supported device data.\n\nSigned-off-by: Sathish Sivasekar <sathish-s@hcl.com>\nDepends On: I02255d7374379749234cbc97e3974330deab95fd\nChange-Id: I3a08cf9a2b57da398e7b413ddcb6db6aeaa739b9\n",
    "createdOn": 1607505094,
    "lastUpdated": 1636565747,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1607505094,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1607505107,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607505138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9381/ : FAILURE"
        },
        {
            "timestamp": 1607509200,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1607529299,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1607529310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607529339,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9405/ : FAILURE"
        },
        {
            "timestamp": 1607529912,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1607529925,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607530019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/9406/ : SUCCESS"
        },
        {
            "timestamp": 1607531083,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 4: Commit message was updated."
        },
        {
            "timestamp": 1607532177,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 5: Commit message was updated."
        },
        {
            "timestamp": 1607576730,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 6: Commit message was updated."
        },
        {
            "timestamp": 1607577022,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 6:\n\nKindly review the code and give comments."
        },
        {
            "timestamp": 1607577022,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1607619860,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(2 comments)\n\nI'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic."
        },
        {
            "timestamp": 1607682204,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1607682220,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607682253,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9561/ : FAILURE"
        },
        {
            "timestamp": 1607682455,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 8: Commit message was updated."
        },
        {
            "timestamp": 1607682841,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1607682870,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607683009,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/9563/ : SUCCESS"
        },
        {
            "timestamp": 1607683093,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10: Commit message was updated."
        },
        {
            "timestamp": 1607683343,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10:\n\n(2 comments)\n\n> Patch Set 6:\n> \n> (2 comments)\n> \n> I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n\nHi Ed Tanous,\n\nThis application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\nThis change has the following implementation\n\n1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \nthis Dbus can be parsed using \"GetSubTreePaths\"\n\troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n\t\u2514\u2500/xyz\n\t  \u2514\u2500/xyz/openbmc_project\n\t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n\t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n\t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n\n2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n\ta) In our example he have 4 IPMB-Fru devices getting detected \n\t\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n\t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n\t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n\n\tb) From these Dbus properties we can get the IPMB Bus addresses \n\t\n3. With the received IPMB parameters we can probe the SDR sensor lists\n\ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n\tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n\t\n4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\nand get the response as full information about the specific sensor details, \nit combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n\n6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n\troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n\t\u2514\u2500/xyz\n\t  \u2514\u2500/xyz/openbmc_project\n\t\t\u251c\u2500/xyz/openbmc_project/sensors\n\t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n\t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n\t\t\t.\n\t\t\t.\n\t\t\t.\n\n\t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n\t\t\u2514\u2500/xyz/openbmc_project/software\n\t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n\t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n\t\t  .\n\t\t  .\n\t\t  .\n\t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n\t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n\t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n\t\t\t.\n\t\t\t.\n\t\t\t.\n\t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n\n7. Same flow we can repeat for all the record count and same for all the detected devices \n\nNote: -\n\"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608206039,
            "reviewer": {
                "name": "Velumani Thangavel",
                "email": "velumanit@hcl.com",
                "username": "velumanit"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1608222189,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> (2 comments)\n> \n> > Patch Set 6:\n> > \n> > (2 comments)\n> > \n> > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> \n> Hi Ed Tanous,\n> \n> This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n\nI'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n\n> This change has the following implementation\n> \n> 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> this Dbus can be parsed using \"GetSubTreePaths\"\n> \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> \t\u2514\u2500/xyz\n> \t  \u2514\u2500/xyz/openbmc_project\n> \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n\nPlease don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n\nI'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n\n> \n> 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> \ta) In our example he have 4 IPMB-Fru devices getting detected \n> \t\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> \n> \tb) From these Dbus properties we can get the IPMB Bus addresses \n> \t\n> 3. With the received IPMB parameters we can probe the SDR sensor lists\n> \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> \t\n> 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> and get the response as full information about the specific sensor details, \n> it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> \n> 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> \t\u2514\u2500/xyz\n> \t  \u2514\u2500/xyz/openbmc_project\n> \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n\nFYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n\n> \t\t\t.\n> \t\t\t.\n> \t\t\t.\n> \n> \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> \t\t\u2514\u2500/xyz/openbmc_project/software\n> \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> \t\t  .\n> \t\t  .\n> \t\t  .\n> \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> \t\t\t.\n> \t\t\t.\n> \t\t\t.\n> \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n\nThese two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n\n> \n> 7. Same flow we can repeat for all the record count and same for all the detected devices \n> \n> Note: -\n> \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608222703,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(6 comments)"
        },
        {
            "timestamp": 1608297842,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > (2 comments)\n> > \n> > > Patch Set 6:\n> > > \n> > > (2 comments)\n> > > \n> > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > \n> > Hi Ed Tanous,\n> > \n> > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> \n> I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n\nWe understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\nwe can get the sensor configuration detatils from the supported device, \nso new configuration file is not required to get the sensor details.\nI list the below how my design to get the sensor details dynamically.\n\nIn this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \nand for all the detected device, request the \"StorageGetSdrInfo\" command. \nBased on the response if SDR is available then do the remaning processing\nor it will return and check the next device and unsing this command we can\nget the total sensor record count available in each device.\n\n> \n> > This change has the following implementation\n> > \n> > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > this Dbus can be parsed using \"GetSubTreePaths\"\n> > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > \t\u2514\u2500/xyz\n> > \t  \u2514\u2500/xyz/openbmc_project\n> > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> \n> Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> \n> I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n\nRequest the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\nAfter dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n\n> \n> > \n> > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > \t\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > \n> > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > \t\n> > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > \t\n> > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > and get the response as full information about the specific sensor details, \n> > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > \n> > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > \t\u2514\u2500/xyz\n> > \t  \u2514\u2500/xyz/openbmc_project\n> > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> \n> FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n\nChange the name as per the Sensor Name and append with FRU device number.\n\n> \n> > \t\t\t.\n> > \t\t\t.\n> > \t\t\t.\n> > \n> > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > \t\t  .\n> > \t\t  .\n> > \t\t  .\n> > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > \t\t\t.\n> > \t\t\t.\n> > \t\t\t.\n> > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> \n> These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n\nSure, first focus on Type 1 and then move to next type.\n\n> \n> > \n> > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > \n> > Note: -\n> > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608306909,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > (2 comments)\n> > > \n> > > > Patch Set 6:\n> > > > \n> > > > (2 comments)\n> > > > \n> > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > \n> > > Hi Ed Tanous,\n> > > \n> > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > \n> > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> \n> We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> we can get the sensor configuration detatils from the supported device, \n> so new configuration file is not required to get the sensor details.\n> I list the below how my design to get the sensor details dynamically.\n\nAt the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n\n> \n> In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> Based on the response if SDR is available then do the remaning processing\n> or it will return and check the next device and unsing this command we can\n> get the total sensor record count available in each device.\n\nHow does IPMB know what devices exist and on what addresses?\n\n> \n> > \n> > > This change has the following implementation\n> > > \n> > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > \t\u2514\u2500/xyz\n> > > \t  \u2514\u2500/xyz/openbmc_project\n> > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > \n> > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > \n> > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> \n> Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n\nThat makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n\n> \n> > \n> > > \n> > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > \t\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > \n> > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > \t\n> > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > \t\n> > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > and get the response as full information about the specific sensor details, \n> > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > \n> > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > \t\u2514\u2500/xyz\n> > > \t  \u2514\u2500/xyz/openbmc_project\n> > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > \n> > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> \n> Change the name as per the Sensor Name and append with FRU device number.\n\nTechnically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n\n> \n> > \n> > > \t\t\t.\n> > > \t\t\t.\n> > > \t\t\t.\n> > > \n> > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > \t\t  .\n> > > \t\t  .\n> > > \t\t  .\n> > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > \t\t\t.\n> > > \t\t\t.\n> > > \t\t\t.\n> > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > \n> > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> \n> Sure, first focus on Type 1 and then move to next type.\n\nGreat.  I think that'll help a lot in keeping this review small and self contained.\n\n> \n> > \n> > > \n> > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > \n> > > Note: -\n> > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608647777,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > > Patch Set 10:\n> > > > \n> > > > (2 comments)\n> > > > \n> > > > > Patch Set 6:\n> > > > > \n> > > > > (2 comments)\n> > > > > \n> > > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > > \n> > > > Hi Ed Tanous,\n> > > > \n> > > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > > \n> > > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> > \n> > We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> > we can get the sensor configuration detatils from the supported device, \n> > so new configuration file is not required to get the sensor details.\n> > I list the below how my design to get the sensor details dynamically.\n> \n> At the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n> \nCan we set scan rate for all the sensor as same?\nNeed to add any parameter for power state(Power sensor)?\n> > \n> > In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> > and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> > Based on the response if SDR is available then do the remaning processing\n> > or it will return and check the next device and unsing this command we can\n> > get the total sensor record count available in each device.\n> \n> How does IPMB know what devices exist and on what addresses?\n> \nAddress for the IPMB device set in one of the parameter as \"BUS\", read that parameter value and map the same for device address.\n> > \n> > > \n> > > > This change has the following implementation\n> > > > \n> > > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > > \t\u2514\u2500/xyz\n> > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > \n> > > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > > \n> > > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> > \n> > Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> > After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n> \n> That makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n> \nFor dynamic sensor updating, Configuration details itself got from by giving SDR command, \nhave doubt how we can map that parameters with configuration item.\n> > \n> > > \n> > > > \n> > > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > > \t\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > \n> > > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > > \t\n> > > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > > \t\n> > > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > > and get the response as full information about the specific sensor details, \n> > > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > > \n> > > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > > \t\u2514\u2500/xyz\n> > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > > \n> > > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> > \n> > Change the name as per the Sensor Name and append with FRU device number.\n> \n> Technically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n> \nIs there any idea how we differentiate the same sensor for multi Fru device.\n> > \n> > > \n> > > > \t\t\t.\n> > > > \t\t\t.\n> > > > \t\t\t.\n> > > > \n> > > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > > \t\t  .\n> > > > \t\t  .\n> > > > \t\t  .\n> > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > > \t\t\t.\n> > > > \t\t\t.\n> > > > \t\t\t.\n> > > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > > \n> > > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> > \n> > Sure, first focus on Type 1 and then move to next type.\n> \n> Great.  I think that'll help a lot in keeping this review small and self contained.\n> \n> > \n> > > \n> > > > \n> > > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > > \n> > > > Note: -\n> > > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608696209,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > > Patch Set 10:\n> > > > \n> > > > > Patch Set 10:\n> > > > > \n> > > > > (2 comments)\n> > > > > \n> > > > > > Patch Set 6:\n> > > > > > \n> > > > > > (2 comments)\n> > > > > > \n> > > > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > > > \n> > > > > Hi Ed Tanous,\n> > > > > \n> > > > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > > > \n> > > > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> > > \n> > > We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> > > we can get the sensor configuration detatils from the supported device, \n> > > so new configuration file is not required to get the sensor details.\n> > > I list the below how my design to get the sensor details dynamically.\n> > \n> > At the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n> > \n> Can we set scan rate for all the sensor as same?\n\nI don't think that would work for all controllers.\n\n> Need to add any parameter for power state(Power sensor)?\n\nCorrect.\n\n\n\n> > > \n> > > In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> > > and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> > > Based on the response if SDR is available then do the remaning processing\n> > > or it will return and check the next device and unsing this command we can\n> > > get the total sensor record count available in each device.\n> > \n> > How does IPMB know what devices exist and on what addresses?\n> > \n> Address for the IPMB device set in one of the parameter as \"BUS\", read that parameter value and map the same for device address.\n\n\nSo you're relying on the IPMB sensor invocations?  That might work, but it likely needs thought through.\n\n> > > \n> > > > \n> > > > > This change has the following implementation\n> > > > > \n> > > > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > > > \t\u2514\u2500/xyz\n> > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > \n> > > > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > > > \n> > > > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> > > \n> > > Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> > > After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n> > \n> > That makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n> > \n> For dynamic sensor updating, Configuration details itself got from by giving SDR command, \n> have doubt how we can map that parameters with configuration item.\n> > > \n> > > > \n> > > > > \n> > > > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > > > \t\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > \n> > > > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > > > \t\n> > > > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > > > \t\n> > > > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > > > and get the response as full information about the specific sensor details, \n> > > > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > > > \n> > > > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > > > \t\u2514\u2500/xyz\n> > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > > > \n> > > > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> > > \n> > > Change the name as per the Sensor Name and append with FRU device number.\n> > \n> > Technically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n> > \n> Is there any idea how we differentiate the same sensor for multi Fru device.\n\nThe \"name\" property in the SDR we've gotten should uniquely identify the sensors.  We could add the entity name into the sensor name, but we still need an association back to the entity.\n\n> > > \n> > > > \n> > > > > \t\t\t.\n> > > > > \t\t\t.\n> > > > > \t\t\t.\n> > > > > \n> > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > > > \t\t  .\n> > > > > \t\t  .\n> > > > > \t\t  .\n> > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > > > \t\t\t.\n> > > > > \t\t\t.\n> > > > > \t\t\t.\n> > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > > > \n> > > > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> > > \n> > > Sure, first focus on Type 1 and then move to next type.\n> > \n> > Great.  I think that'll help a lot in keeping this review small and self contained.\n> > \n> > > \n> > > > \n> > > > > \n> > > > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > > > \n> > > > > Note: -\n> > > > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1608723116,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > > Patch Set 10:\n> > > > \n> > > > > Patch Set 10:\n> > > > > \n> > > > > > Patch Set 10:\n> > > > > > \n> > > > > > (2 comments)\n> > > > > > \n> > > > > > > Patch Set 6:\n> > > > > > > \n> > > > > > > (2 comments)\n> > > > > > > \n> > > > > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > > > > \n> > > > > > Hi Ed Tanous,\n> > > > > > \n> > > > > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > > > > \n> > > > > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> > > > \n> > > > We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> > > > we can get the sensor configuration detatils from the supported device, \n> > > > so new configuration file is not required to get the sensor details.\n> > > > I list the below how my design to get the sensor details dynamically.\n> > > \n> > > At the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n> > > \n> > Can we set scan rate for all the sensor as same?\n> \n> I don't think that would work for all controllers.\n> \nThen Need to create Json configuration file for getting the scan rate for \ndifferent types of sensors (Ex:- Temperature, Power, Voltage etc...)\n\n> > Need to add any parameter for power state(Power sensor)?\n> \n> Correct.\n> \nAdd some more parameter (Ex:- Power sensor) means what are the property need to be add under which interface.(Kindly give any reference)\nIs anyother type or details to be add in the json file.\nNow for each sensor we can update the Upper/Lower Threshold and sensor reading values under dbus object of specific sensor.\n> \n> \n> > > > \n> > > > In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> > > > and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> > > > Based on the response if SDR is available then do the remaning processing\n> > > > or it will return and check the next device and unsing this command we can\n> > > > get the total sensor record count available in each device.\n> > > \n> > > How does IPMB know what devices exist and on what addresses?\n> > > \n> > Address for the IPMB device set in one of the parameter as \"BUS\", read that parameter value and map the same for device address.\n> \n> \n> So you're relying on the IPMB sensor invocations?  That might work, but it likely needs thought through.\n> \n> > > > \n> > > > > \n> > > > > > This change has the following implementation\n> > > > > > \n> > > > > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > > > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > > > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > > > > \t\u2514\u2500/xyz\n> > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > \n> > > > > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > > > > \n> > > > > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> > > > \n> > > > Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> > > > After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n> > > \n> > > That makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n> > > \n> > For dynamic sensor updating, Configuration details itself got from by giving SDR command, \n> > have doubt how we can map that parameters with configuration item.\n> > > > \n> > > > > \n> > > > > > \n> > > > > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > > > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > > > > \t\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > > \n> > > > > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > > > > \t\n> > > > > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > > > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > > > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > > > > \t\n> > > > > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > > > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > > > > and get the response as full information about the specific sensor details, \n> > > > > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > > > > \n> > > > > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > > > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > > > > \t\u2514\u2500/xyz\n> > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > > > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > > > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > > > > \n> > > > > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> > > > \n> > > > Change the name as per the Sensor Name and append with FRU device number.\n> > > \n> > > Technically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n> > > \n> > Is there any idea how we differentiate the same sensor for multi Fru device.\n> \n> The \"name\" property in the SDR we've gotten should uniquely identify the sensors.  We could add the entity name into the sensor name, but we still need an association back to the entity.\n> \n> > > > \n> > > > > \n> > > > > > \t\t\t.\n> > > > > > \t\t\t.\n> > > > > > \t\t\t.\n> > > > > > \n> > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > > > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > > > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > > > > \t\t  .\n> > > > > > \t\t  .\n> > > > > > \t\t  .\n> > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > > > > \t\t\t.\n> > > > > > \t\t\t.\n> > > > > > \t\t\t.\n> > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > > > > \n> > > > > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> > > > \n> > > > Sure, first focus on Type 1 and then move to next type.\n> > > \n> > > Great.  I think that'll help a lot in keeping this review small and self contained.\n> > > \n> > > > \n> > > > > \n> > > > > > \n> > > > > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > > > > \n> > > > > > Note: -\n> > > > > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
        },
        {
            "timestamp": 1609239972,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > > Patch Set 10:\n> > > > \n> > > > > Patch Set 10:\n> > > > > \n> > > > > > Patch Set 10:\n> > > > > > \n> > > > > > > Patch Set 10:\n> > > > > > > \n> > > > > > > (2 comments)\n> > > > > > > \n> > > > > > > > Patch Set 6:\n> > > > > > > > \n> > > > > > > > (2 comments)\n> > > > > > > > \n> > > > > > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > > > > > \n> > > > > > > Hi Ed Tanous,\n> > > > > > > \n> > > > > > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > > > > > \n> > > > > > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> > > > > \n> > > > > We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> > > > > we can get the sensor configuration detatils from the supported device, \n> > > > > so new configuration file is not required to get the sensor details.\n> > > > > I list the below how my design to get the sensor details dynamically.\n> > > > \n> > > > At the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n> > > > \n> > > Can we set scan rate for all the sensor as same?\n> > \n> > I don't think that would work for all controllers.\n> > \n> Then Need to create Json configuration file for getting the scan rate for \n> different types of sensors (Ex:- Temperature, Power, Voltage etc...)\n> \n> > > Need to add any parameter for power state(Power sensor)?\n> > \n> > Correct.\n> > \n> Add some more parameter (Ex:- Power sensor) means what are the property need to be add under which interface.(Kindly give any reference)\n> Is anyother type or details to be add in the json file.\n> Now for each sensor we can update the Upper/Lower Threshold and sensor reading values under dbus object of specific sensor.\n> > \n> > \n> > > > > \n> > > > > In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> > > > > and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> > > > > Based on the response if SDR is available then do the remaning processing\n> > > > > or it will return and check the next device and unsing this command we can\n> > > > > get the total sensor record count available in each device.\n> > > > \n> > > > How does IPMB know what devices exist and on what addresses?\n> > > > \n> > > Address for the IPMB device set in one of the parameter as \"BUS\", read that parameter value and map the same for device address.\n> > \n> > \n> > So you're relying on the IPMB sensor invocations?  That might work, but it likely needs thought through.\n> > \n> > > > > \n> > > > > > \n> > > > > > > This change has the following implementation\n> > > > > > > \n> > > > > > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > > > > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > > > > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > > > > > \t\u2514\u2500/xyz\n> > > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > > \n> > > > > > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > > > > > \n> > > > > > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> > > > > \n> > > > > Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> > > > > After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n> > > > \n> > > > That makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n> > > > \n> > > For dynamic sensor updating, Configuration details itself got from by giving SDR command, \n> > > have doubt how we can map that parameters with configuration item.\n> > > > > \n> > > > > > \n> > > > > > > \n> > > > > > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > > > > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > > > > > \t\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > > > \n> > > > > > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > > > > > \t\n> > > > > > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > > > > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > > > > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > > > > > \t\n> > > > > > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > > > > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > > > > > and get the response as full information about the specific sensor details, \n> > > > > > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > > > > > \n> > > > > > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > > > > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > > > > > \t\u2514\u2500/xyz\n> > > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > > > > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > > > > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > > > > > \n> > > > > > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> > > > > \n> > > > > Change the name as per the Sensor Name and append with FRU device number.\n> > > > \n> > > > Technically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n> > > > \n> > > Is there any idea how we differentiate the same sensor for multi Fru device.\n> > \n> > The \"name\" property in the SDR we've gotten should uniquely identify the sensors.  We could add the entity name into the sensor name, but we still need an association back to the entity.\n> > \n> > > > > \n> > > > > > \n> > > > > > > \t\t\t.\n> > > > > > > \t\t\t.\n> > > > > > > \t\t\t.\n> > > > > > > \n> > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > > > > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > > > > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > > > > > \t\t  .\n> > > > > > > \t\t  .\n> > > > > > > \t\t  .\n> > > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > > > > > \t\t\t.\n> > > > > > > \t\t\t.\n> > > > > > > \t\t\t.\n> > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > > > > > \n> > > > > > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> > > > > \n> > > > > Sure, first focus on Type 1 and then move to next type.\n> > > > \n> > > > Great.  I think that'll help a lot in keeping this review small and self contained.\n> > > > \n> > > > > \n> > > > > > \n> > > > > > > \n> > > > > > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > > > > > \n> > > > > > > Note: -\n> > > > > > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512).\n\n\nKindly Review the comments"
        },
        {
            "timestamp": 1609736331,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1609736353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609736436,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/10403/ : FAILURE"
        },
        {
            "timestamp": 1609744759,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1609744774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609744857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10412/ : SUCCESS"
        },
        {
            "timestamp": 1609751568,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 12:\n\n(8 comments)\n\n> Patch Set 10:\n> \n> > Patch Set 10:\n> > \n> > > Patch Set 10:\n> > > \n> > > > Patch Set 10:\n> > > > \n> > > > > Patch Set 10:\n> > > > > \n> > > > > > Patch Set 10:\n> > > > > > \n> > > > > > > Patch Set 10:\n> > > > > > > \n> > > > > > > > Patch Set 10:\n> > > > > > > > \n> > > > > > > > (2 comments)\n> > > > > > > > \n> > > > > > > > > Patch Set 6:\n> > > > > > > > > \n> > > > > > > > > (2 comments)\n> > > > > > > > > \n> > > > > > > > > I'm still trying to wrap my head around this a bit.  Does this have an associated entity-manager config format change that comes with it?  If so, please add them to the same topic.\n> > > > > > > > \n> > > > > > > > Hi Ed Tanous,\n> > > > > > > > \n> > > > > > > > This application doesn't require any configuration file from entity manager, this is purely based on the IPMB-Fru detection.\n> > > > > > > \n> > > > > > > I'm not following.  Surely we can't enable this for all IPMB devices without a config item.  Lots of IPMB enabled devices don't have an SDR.\n> > > > > > \n> > > > > > We understand your concern, in this design we Dynamically detect IPMB device which support SDR or Not,\n> > > > > > we can get the sensor configuration detatils from the supported device, \n> > > > > > so new configuration file is not required to get the sensor details.\n> > > > > > I list the below how my design to get the sensor details dynamically.\n> > > > > \n> > > > > At the very least we'll need to configure a sensor scan rate for the IPMB sensors in a config file, as well as a power state parameter.  The scan rate parameter might even need to be per-sensor, although that might have other ramifications.\n> > > > > \n> > > > Can we set scan rate for all the sensor as same?\n> > > \n> > > I don't think that would work for all controllers.\n> > > \n> > Then Need to create Json configuration file for getting the scan rate for \n> > different types of sensors (Ex:- Temperature, Power, Voltage etc...)\n> > \n> > > > Need to add any parameter for power state(Power sensor)?\n> > > \n> > > Correct.\n> > > \n> > Add some more parameter (Ex:- Power sensor) means what are the property need to be add under which interface.(Kindly give any reference)\n> > Is anyother type or details to be add in the json file.\n> > Now for each sensor we can update the Upper/Lower Threshold and sensor reading values under dbus object of specific sensor.\n> > > \n> > > \n> > > > > > \n> > > > > > In this logic first list all the detected IPMB-FRU device by using object mapper call of \"GetSubTreePaths\" method, \n> > > > > > and for all the detected device, request the \"StorageGetSdrInfo\" command. \n> > > > > > Based on the response if SDR is available then do the remaning processing\n> > > > > > or it will return and check the next device and unsing this command we can\n> > > > > > get the total sensor record count available in each device.\n> > > > > \n> > > > > How does IPMB know what devices exist and on what addresses?\n> > > > > \n> > > > Address for the IPMB device set in one of the parameter as \"BUS\", read that parameter value and map the same for device address.\n> > > \n> > > \n> > > So you're relying on the IPMB sensor invocations?  That might work, but it likely needs thought through.\n> > > \n> > > > > > \n> > > > > > > \n> > > > > > > > This change has the following implementation\n> > > > > > > > \n> > > > > > > > 1. Keep monitoring the new FRU device detected in IPMB-FRU in the below DBus path \n> > > > > > > > this Dbus can be parsed using \"GetSubTreePaths\"\n> > > > > > > > \troot@yosemitev2:~# busctl tree xyz.openbmc_project.Ipmb.FruDevice\n> > > > > > > > \t\u2514\u2500/xyz\n> > > > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > > > \t\t\u2514\u2500/xyz/openbmc_project/Ipmb\n> > > > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > > > \n> > > > > > > Please don't monitor Fru device directly.  Use an entity config to instantiate the correct configuration items.  In this case, you'll likely only instantiate a \"has IPMB fru\" like device.\n> > > > > > > \n> > > > > > > I'd like to see this done because there's surely more things we'll need to instantiate based on the IPMB FRU than just sensors, and we'll need the entity mapping for Redfish to work properly with these new sensors.\n> > > > > > \n> > > > > > Request the \"StorageGetSdr\" command with specific sensor RecordID it will return configuration details (Ex. Upper/Lower Critical Thresholds, Unit, Sensor Name, Sensor ID etc. ) for each sensor, based on this details dbus object will create for each sensor using Sensor name Dynamically.\n> > > > > > After dbus object create for each sensor update the sensor value using \"GetSensorReading\" command.\n> > > > > \n> > > > > That makes sense, but we still need an entity to map the sensors back to in Redfish, so you'll need a configuration item.\n> > > > > \n> > > > For dynamic sensor updating, Configuration details itself got from by giving SDR command, \n> > > > have doubt how we can map that parameters with configuration item.\n> > > > > > \n> > > > > > > \n> > > > > > > > \n> > > > > > > > 2. If any FRU detected in IPMB using SDR commands we probe for the sensor list (Storage SDR info command [Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.9])\n> > > > > > > > \ta) In our example he have 4 IPMB-Fru devices getting detected \n> > > > > > > > \t\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_0\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_1\n> > > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/Ipmb/FruDevice/Twin_Lakes_Passive_MP_2\n> > > > > > > > \n> > > > > > > > \tb) From these Dbus properties we can get the IPMB Bus addresses \n> > > > > > > > \t\n> > > > > > > > 3. With the received IPMB parameters we can probe the SDR sensor lists\n> > > > > > > > \ta) If the detected IPMB Fru does not support SDR function then we don't do anything \n> > > > > > > > \tb) If the detected IPMB Fru reponse for the sdr inform command we can get the sensor list \n> > > > > > > > \t\n> > > > > > > > 4. Execute Storage Reserve SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.11)and get the response as Reservation ID. \n> > > > > > > > 5. After getting Record Count and Reservation ID frame the packet for execute the Storage Get SDR command (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 33.12)\n> > > > > > > > and get the response as full information about the specific sensor details, \n> > > > > > > > it combines of sensor number, sensor name, threshold config values, sensor units etc. (Refer :- ipmi-second-gen-interface-spec-v2-rev1, Section 43)\n> > > > > > > > \n> > > > > > > > 6. Map the respective values into the specific property and create the Dbus object in IpmbSensor using the SDR type and respective sensor name.\n> > > > > > > > \troot@yosemitev2:/lib/systemd/system# busctl tree xyz.openbmc_project.IpmbSensor\n> > > > > > > > \t\u2514\u2500/xyz\n> > > > > > > > \t  \u2514\u2500/xyz/openbmc_project\n> > > > > > > > \t\t\u251c\u2500/xyz/openbmc_project/sensors\n> > > > > > > > \t\t\u2502 \u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01\n> > > > > > > > \t\t\u2502   \u251c\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_0_INA230_Power\n> > > > > > > \n> > > > > > > FYI, SDR_TYPE_01 isn't a valid sensor type.  You'll need to map this to the appropriate dbus types.\n> > > > > > \n> > > > > > Change the name as per the Sensor Name and append with FRU device number.\n> > > > > \n> > > > > Technically Fru device number isn't required to be in Name, it can be gotten through the association back to the primary entity.\n> > > > > \n> > > > Is there any idea how we differentiate the same sensor for multi Fru device.\n> > > \n> > > The \"name\" property in the SDR we've gotten should uniquely identify the sensors.  We could add the entity name into the sensor name, but we still need an association back to the entity.\n> > > \n> > > > > > \n> > > > > > > \n> > > > > > > > \t\t\t.\n> > > > > > > > \t\t\t.\n> > > > > > > > \t\t\t.\n> > > > > > > > \n> > > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/sensors/SDR_Type_01/Host_3_SOC_Tjmax\n> > > > > > > > \t\t\u2514\u2500/xyz/openbmc_project/software\n> > > > > > > > \t\t  \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02\n> > > > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_0_CPU_DIMM_HOT\n> > > > > > > > \t\t  .\n> > > > > > > > \t\t  .\n> > > > > > > > \t\t  .\n> > > > > > > > \t\t  \u2502 \u251c\u2500/xyz/openbmc_project/software/SDR_Type_02/Host_3_Sys_booting_sts\n> > > > > > > > \t\t  \u2514\u2500/xyz/openbmc_project/software/SDR_Type_03\n> > > > > > > > \t\t\t\u251c\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_0_CATERR\n> > > > > > > > \t\t\t.\n> > > > > > > > \t\t\t.\n> > > > > > > > \t\t\t.\n> > > > > > > > \t\t\t\u2514\u2500/xyz/openbmc_project/software/SDR_Type_03/Host_3_SPS_FW_Health\n> > > > > > > \n> > > > > > > These two need different dbus abstractions.  Can we focus on getting Type 1 records supported first, then move on to how we map type 2 and 3 records to dbus?\n> > > > > > \n> > > > > > Sure, first focus on Type 1 and then move to next type.\n> > > > > \n> > > > > Great.  I think that'll help a lot in keeping this review small and self contained.\n> > > > > \n> > > > > > \n> > > > > > > \n> > > > > > > > \n> > > > > > > > 7. Same flow we can repeat for all the record count and same for all the detected devices \n> > > > > > > > \n> > > > > > > > Note: -\n> > > > > > > > \"xyz.openbmc_project.Ipmb.FruDevice\" IPMB FRU implementation in separate gerrit review(https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512).\n> \n> \n> Kindly Review the comments\n\nStill one comment need to update as per from Patch Set 10, Kindly review the same."
        },
        {
            "timestamp": 1609812552,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 12:\n\nThis patch added if or switch statements for the new types in many places throughout the package, sometime duplicating part of existing functions. \nWhat is common between the new types and existing types, what is different? Can the abstraction be refactored to a cleaner design?"
        },
        {
            "timestamp": 1609812694,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1609844193,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1609844212,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609844289,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10498/ : SUCCESS"
        },
        {
            "timestamp": 1609844566,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 13:\n\n(1 comment)\n\n> Patch Set 12:\n> \n> This patch added if or switch statements for the new types in many places throughout the package, sometime duplicating part of existing functions. \nRemove the duplicating section and optimized the logic for better understanding.\n\n> What is common between the new types and existing types, what is different? Can the abstraction be refactored to a cleaner design?\nNew type is fully read and create the sensor object dynamically based on device detected in the FRU.\nUpdate with new design in the Patchset 13, kindly review the same."
        },
        {
            "timestamp": 1610943647,
            "reviewer": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> (1 comment)\n> \n> > Patch Set 12:\n> > \n> > This patch added if or switch statements for the new types in many places throughout the package, sometime duplicating part of existing functions. \n> Remove the duplicating section and optimized the logic for better understanding.\n> \n> > What is common between the new types and existing types, what is different? Can the abstraction be refactored to a cleaner design?\n> New type is fully read and create the sensor object dynamically based on device detected in the FRU.\n> Update with new design in the Patchset 13, kindly review the same.\n\nKindly Review the comments"
        },
        {
            "timestamp": 1612218541,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 13:\n\nI still question the overall design. Discover and read the new SDR type are quite different than existing functions. Abstract the common attributes into a base class and have derived class to handle the differences can avoid adding more if/switch cases."
        },
        {
            "timestamp": 1613049152,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> I still question the overall design. Discover and read the new SDR type are quite different than existing functions. Abstract the common attributes into a base class and have derived class to handle the differences can avoid adding more if/switch cases.\n\nThanks for your comment.\n\nThere is no much difference between read and sdrRead function, read() has async_method_call and sdrRead() has new_method_call. Since this type depends on current task for next execution, new_method_call is used for sdrRead(). In my opinion, this process will be much better. Please provide if you have any other suggesstions."
        },
        {
            "timestamp": 1613049164,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1613049179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613049256,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12301/ : SUCCESS"
        },
        {
            "timestamp": 1614334028,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1614334041,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614334097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13095/ : SUCCESS"
        },
        {
            "timestamp": 1614947439,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 15:\n\nHi All,\n\nCould you please review this patch and provide your suggestions.\n\nThanks."
        },
        {
            "timestamp": 1615957910,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 15:\n\nHi All,\n\nCould you please review this patch and provide your suggestions.\n\nThanks."
        },
        {
            "timestamp": 1617278158,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1617278173,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617278307,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/14717/ : FAILURE"
        },
        {
            "timestamp": 1617279541,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1617279556,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617279827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/14718/ : FAILURE"
        },
        {
            "timestamp": 1617280760,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1617280783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617280906,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14721/ : SUCCESS"
        },
        {
            "timestamp": 1617341146,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(14 comments)\n\nStill lots to be done here.  I reviewed as much as I could, but ran out of time and haven't reviewed all of it.  As written, this is pretty rough, need split up, and abstracted in a reasonable way such that:\n\n1. We have confidence that the existing IPMBSensors aren't broken.\n2. We're pulling our configuration from entity-manager\n3. We're publishing the appropriate dbus interfaces, per phosphor-dbus-interfaces.\n4. We're abstracting in a way that doesn't go against OpenBMC coding standards, and the local coding convention in dbus-sensors.  Declaring 30 global variables for example, isn't going to work.\n\nPlease also move the discrete sensors to another patchset.  This is going to be complex enough with just handling type 1 records."
        },
        {
            "timestamp": 1619176267,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Change message removed by: Ed Tanous"
        },
        {
            "timestamp": 1619176282,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1619176297,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619176562,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/16089/ : FAILURE"
        },
        {
            "timestamp": 1619176883,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1619176912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619177340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16090/ : SUCCESS"
        },
        {
            "timestamp": 1620814418,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1620814429,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620814546,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/17099/ : FAILURE"
        },
        {
            "timestamp": 1620814963,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1620814974,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620815097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17100/ : SUCCESS"
        },
        {
            "timestamp": 1621496597,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 22:\n\nHi All,\n\nCould you please review this patch and provide your suggestions.\n\nThanks."
        },
        {
            "timestamp": 1622014038,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 22:\n\nHi All,\n\nCould you please review this patch and provide your suggestions.\n\nThanks."
        },
        {
            "timestamp": 1622055467,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n> Change message removed by: Ed Tanous\n\nSorry, I misclicked here;  I didn't intend to delete your comment (why do they put delete right next to reply).  I don't know how to recover a message.... apologies."
        },
        {
            "timestamp": 1622064714,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n(13 comments)\n\nThis is moving the right direction, but it's still missing a lot of critical abstraction, and mixes in blocking calls into this async daemon.\n\nWork still to do here;  Please keep at it."
        },
        {
            "timestamp": 1628488854,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 22:\n\n(13 comments)"
        },
        {
            "timestamp": 1628488868,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1628488899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628489352,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24036/ : FAILURE"
        },
        {
            "timestamp": 1628489397,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 24."
        },
        {
            "timestamp": 1628489417,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628489871,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24038/ : FAILURE"
        },
        {
            "timestamp": 1628490032,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1628490043,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628490196,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24041/ : FAILURE"
        },
        {
            "timestamp": 1628490965,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1628490978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628491112,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/24042/ : SUCCESS"
        },
        {
            "timestamp": 1628660040,
            "reviewer": {
                "name": "Velumani Thangavel",
                "email": "velumanit@hcl.com",
                "username": "velumanit"
            },
            "message": "Patch Set 26:\n\n(6 comments)\n\nPlease check my comments inline."
        },
        {
            "timestamp": 1629105671,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 26:\n\n(6 comments)\n\nThanks for your comments, I updated the latest patchset."
        },
        {
            "timestamp": 1629105680,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 27."
        },
        {
            "timestamp": 1629105696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629105744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24390/ : FAILURE"
        },
        {
            "timestamp": 1629106621,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 28."
        },
        {
            "timestamp": 1629106636,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629106773,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24392/ : FAILURE"
        },
        {
            "timestamp": 1629110441,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 29."
        },
        {
            "timestamp": 1629110457,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629110484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24396/ : FAILURE"
        },
        {
            "timestamp": 1629110613,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 30."
        },
        {
            "timestamp": 1629110627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629111387,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/24397/ : SUCCESS"
        },
        {
            "timestamp": 1629978820,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 30:\n\nHi All,\n\nCould you please review this patch and provide your suggestions.\n\nThanks."
        },
        {
            "timestamp": 1630084927,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 30:\n\n(18 comments)\n\n> Patch Set 30:\n> \n> Hi All,\n> \n> Could you please review this patch and provide your suggestions.\n\nI made it part of the way through.  Please engage with someone on your team to at least do the initial code review (feel free to do it here) if you need faster feedback.  There's still a lot to do here in terms of getting this patchset ready for master.\n \n> \n> Thanks."
        },
        {
            "timestamp": 1630085856,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 30:\n\n(14 comments)"
        },
        {
            "timestamp": 1633100000,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 31."
        },
        {
            "timestamp": 1633100014,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633100062,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27296/ : FAILURE"
        },
        {
            "timestamp": 1633100199,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 32."
        },
        {
            "timestamp": 1633100214,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633100354,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27297/ : FAILURE"
        },
        {
            "timestamp": 1633422350,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 33."
        },
        {
            "timestamp": 1633422369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633422506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27463/ : FAILURE"
        },
        {
            "timestamp": 1633423002,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 34."
        },
        {
            "timestamp": 1633423014,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633423167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27464/ : FAILURE"
        },
        {
            "timestamp": 1633607535,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 35."
        },
        {
            "timestamp": 1633607545,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633607701,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27702/ : FAILURE"
        },
        {
            "timestamp": 1633948752,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 36: Commit message was updated."
        },
        {
            "timestamp": 1635251024,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 36:\n\n(4 comments)"
        },
        {
            "timestamp": 1635251733,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 36:\n\n(32 comments)"
        },
        {
            "timestamp": 1635251786,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 36:\n\n(4 comments)"
        },
        {
            "timestamp": 1635342040,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Patch Set 36:\n\n(4 comments)"
        },
        {
            "timestamp": 1635466336,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Removed reviewer Andrew Jeffery."
        },
        {
            "timestamp": 1635494534,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Uploaded patch set 37."
        },
        {
            "timestamp": 1635494550,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635494702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/29360/ : FAILURE"
        },
        {
            "timestamp": 1635494930,
            "reviewer": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "message": "Patch Set 37:\n\n(8 comments)"
        },
        {
            "timestamp": 1636565590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: -Ok-To-Test"
        },
        {
            "timestamp": 1636565599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636565747,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/30065/ : FAILURE"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "f309ff8c67f76ab024a61146a594347647fbb5cd",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/1",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607505094,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 438,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 12
        },
        {
            "number": 2,
            "revision": "7337d9d953b058a1fb3d3856348b0939af8508e2",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/2",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607529299,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 15
        },
        {
            "number": 3,
            "revision": "c6b0990087af508b5d5683c4c9bb89e27372d4ad",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/3",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607529912,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 15
        },
        {
            "number": 4,
            "revision": "80fea3f6093f80b7034bd5db7cfa1b4dc312f230",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/4",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607531083,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 15
        },
        {
            "number": 5,
            "revision": "6cafd54260e46658fd6a734d5a595bc545827757",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/5",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607532177,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 15
        },
        {
            "number": 6,
            "revision": "bf77ce4505a77e7168c0877b7d21232b27020c74",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/6",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607576730,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please make these names more descriptive.  SDR does not have a net function, storage does.\n\nGetInfo.... represents a command, so please add that to the name."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Thanks for your comment, updated as per your suggestion."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't declare your own io_service.  Please use the main one."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Thanks for your comment, updated as per your suggestion."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 15
        },
        {
            "number": 7,
            "revision": "9bdd4845b9387345d65abbc82c25192ef3c64336",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/7",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607682204,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 445,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 538,
            "sizeDeletions": 15
        },
        {
            "number": 8,
            "revision": "ba9b5d300d94e3f8f3f61673636055822c9ab029",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/8",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607682455,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 445,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 538,
            "sizeDeletions": 15
        },
        {
            "number": 9,
            "revision": "0c7382e16d9693a19a966a6eccea522899b1549f",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/9",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607682841,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 542,
            "sizeDeletions": 15
        },
        {
            "number": 10,
            "revision": "18a6c51ebe9c9a70b560d05255b6a6df7e796d4f",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/10",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1607683093,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "include/Utils.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't monitor these directly."
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "This interface was fixed, if any new FRU device add means it must list under this and this section covered under another repo (https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512)."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "Is this name required in DBUS?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Update."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This interface needs looked at.  It doesn't look like the appropriate sensor interface at all.\n\n1. Unit isn't a uint\n2. Thresholds aren't on the sensor interface\n3. thresholds aren't uint8\n4. Thresholds aren't read-write\n5. Unit is set twice.\n6. Unit is not a fixed value."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Update"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Neither of these are valid dbus interfaces, lets get them removed for the time being, so we can focus on type 1 records, then once those are handled, we can work on these."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Update"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Can this be avoided through a better design? See my overall comment"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Optimized with better design."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't use blocking method calls.  Use async ones."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "This section fully depends on line by line execution and it need to have output from the current task for next execution, using async method we can't get that, so I go with new_method_call."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 263,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't use at, check your lengths and handle errors appropriately."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 263,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Update"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1000,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "instead of having Host-+instanceId can we have instanceId only as this this applicable for any FRU that supports SDR."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1000,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Update"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1003,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This scans once at startup.  How do you handle devices that are only available after a host boot?  What if the SDR was updated?  Should we poll these periodically (I'm thinking once every 5 minutes) to see if the sdr has a new ID, and needs re-read?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1003,
                    "reviewer": {
                        "name": "Sathish Sivasekar",
                        "email": "sathish-s@hcl.com",
                        "username": "sathish034"
                    },
                    "message": "Need to Update"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 542,
            "sizeDeletions": 15
        },
        {
            "number": 11,
            "revision": "2b03736661b07945c3dafc37beb6554b46fda66b",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/11",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1609736331,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 467,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 561,
            "sizeDeletions": 4
        },
        {
            "number": 12,
            "revision": "e13bf6ca903f462196e975cb75fd45589b1ab700",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/12",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1609744759,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 118,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 467,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 592,
            "sizeDeletions": 3
        },
        {
            "number": 13,
            "revision": "f5115b0677b8f9465ffb9ec53a514cd6edaea111",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/13",
            "uploader": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "createdOn": 1609844193,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 117,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 458,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 582,
            "sizeDeletions": 2
        },
        {
            "number": 14,
            "revision": "4caf9c5cc2c46bcefffcba955d57d1167eef9b57",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/14",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1613049164,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 117,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 454,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 578,
            "sizeDeletions": 1
        },
        {
            "number": 15,
            "revision": "2a95798fcf813683264d62597dd5a3fa39f9f866",
            "parents": [
                "832a2c604956a2e37da9acedb32ebc8f6d9abae1"
            ],
            "ref": "refs/changes/05/38905/15",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1614334028,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 117,
                    "deletions": -1
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 455,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 579,
            "sizeDeletions": 1
        },
        {
            "number": 16,
            "revision": "3b2b303d6fd8ce28750976d38377155025d94b34",
            "parents": [
                "ba6379336dccd7cc3e4ab244e8159a71bdea7801"
            ],
            "ref": "refs/changes/05/38905/16",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1617278158,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 448,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 558,
            "sizeDeletions": 2
        },
        {
            "number": 17,
            "revision": "e8084c75057ad9e260d430124adf0c33a7974b13",
            "parents": [
                "ba6379336dccd7cc3e4ab244e8159a71bdea7801"
            ],
            "ref": "refs/changes/05/38905/17",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1617279541,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 451,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 561,
            "sizeDeletions": 2
        },
        {
            "number": 18,
            "revision": "25897157bed111f8ea0e1d533a8e0613fb147f84",
            "parents": [
                "ba6379336dccd7cc3e4ab244e8159a71bdea7801"
            ],
            "ref": "refs/changes/05/38905/18",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1617280760,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please try again here.  This isn't anywhere close to the units OpenBMC uses."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't declare this many global variables.  zero global variables is generally the right answer for any temporal state.  Retained state should be held in main, and passed through the methods."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 189,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering that IPMBSensor is currently reading sensor values on fixed interfaces, this kind of feels like it needs a different class, with some possibly similar interfaces."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 189,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "declare your variables where they're used."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we reading FruDevice directly?  This should be passed through as an exposes record in EM, and we should be looking for exposes records."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 159,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't use blocking method calls in an asynchronous daemon."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "range based for loop here please."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you need the bus parameter, come up with an IPMB exposes record type, and pass it through as a parameter."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Another blocking call."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "THis does nothing.  remove."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 624,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Discretes are represented differently in OpenBMC.  Please parse the SDR, and apply the appropriate interfaces to it.\n\nDiscretes alone probably deserve their own CR."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 624,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 713,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More blocking calls."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 716,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Presumably you didn't mean to continue if there's an error."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 716,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "yes"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 723,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Fully copy of the data here for no good reason."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 723,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This data will be passed as argument to processReading function to update the sensor value."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 451,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 561,
            "sizeDeletions": 2
        },
        {
            "number": 19,
            "revision": "ac211810839d6ce7b79b3dcfb7c62d4687258676",
            "parents": [
                "eb0b84de9fd39a74a4a67990de6054b9d9f49833"
            ],
            "ref": "refs/changes/05/38905/19",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1619176282,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -4
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 423,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 521,
            "sizeDeletions": 4
        },
        {
            "number": 20,
            "revision": "0bfc489ef9326bc70e51a409fd18d0a112c216c0",
            "parents": [
                "eb0b84de9fd39a74a4a67990de6054b9d9f49833"
            ],
            "ref": "refs/changes/05/38905/20",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1619176883,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 423,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 521,
            "sizeDeletions": 2
        },
        {
            "number": 21,
            "revision": "7e3f39b97338d906e7cd1ca316eb21a0f4faa06c",
            "parents": [
                "5636d52baad683fbb51447a716d66cb06959e52f"
            ],
            "ref": "refs/changes/05/38905/21",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1620814418,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 426,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 521,
            "sizeDeletions": 2
        },
        {
            "number": 22,
            "revision": "92cfcae87ca467f8948d8adef43342640c7b2dce",
            "parents": [
                "5636d52baad683fbb51447a716d66cb06959e52f"
            ],
            "ref": "refs/changes/05/38905/22",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1620814963,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "50/72 line endings please."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please put some more details in the commit message please.  Why is this useful?  How does one invoke this config?  Are there any related patches?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More details please."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please call it \"SDRType1\""
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this a different reading format than elevenBit?  I thought elevenBit was the format we used for IPMI type 1 sensors?"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, Used the existing ReadingFormat type."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are all these parameters vector<thing>?  Presumably a sensor only has one name for example?"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "For each host, sensors information will be stored in this vector. After reading the value for each sensor, data conversion will takes place for each sdr sensor to ensure the exact value."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These seem like variables that should exist on stack."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These kinds of things don't really belong put together with a runtime data class, and these all should be constexpr."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need to return here?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 889,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why static?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 889,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, Updated latest patchset."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 891,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 891,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, Updated latest patch set."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 900,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't use blocking calls in this async daemon.  There are examples of how to do async calls elsewhere, and I believe I mentioned this previously."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 900,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, Refractored code based on dbus async call in the latest patchset."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1029,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Use a range based for loop for this please."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1029,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 434,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 529,
            "sizeDeletions": 2
        },
        {
            "number": 23,
            "revision": "a687a6f59bb546f6ca738768166d4f1663707927",
            "parents": [
                "5cf0f99210890d0cd52d5929e919316d238a5701"
            ],
            "ref": "refs/changes/05/38905/23",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1628488868,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 434,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 529,
            "sizeDeletions": 2
        },
        {
            "number": 24,
            "revision": "7e4ecfcf8b45fda81a10e38093aead87638dfb97",
            "parents": [
                "5cf0f99210890d0cd52d5929e919316d238a5701"
            ],
            "ref": "refs/changes/05/38905/24",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1628489397,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -3
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 445,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 538,
            "sizeDeletions": 5
        },
        {
            "number": 25,
            "revision": "f52045070d7c901aeec834695c1531c98f91f979",
            "parents": [
                "5cf0f99210890d0cd52d5929e919316d238a5701"
            ],
            "ref": "refs/changes/05/38905/25",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1628490032,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 436,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 527,
            "sizeDeletions": 4
        },
        {
            "number": 26,
            "revision": "73faa3164ca17393eef8c9c8911deb872c34d56a",
            "parents": [
                "5cf0f99210890d0cd52d5929e919316d238a5701"
            ],
            "ref": "refs/changes/05/38905/26",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1628490965,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "IPMBbusIndex looks to me more relevant. can we remove Host?"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "same as above comment in line no 85."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "remove host from the naming as it is a common implementation for any device that supports SDR."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 403,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "sdrCount is only one byte?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 403,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "yes, it is a loopcount for each sensor to read the data."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 886,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "as mentioned in the earlier comment, it is common for any ipmb-sdr supported devices. remove the name host. Also why it is restricted to 4? can we get the instance from a config or machine  specific variable?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 886,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Yes, Updated in the latest patchset."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 896,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "can we get the name from fru?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 896,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Yes, Updated in the latest patchset."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 436,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 527,
            "sizeDeletions": 4
        },
        {
            "number": 27,
            "revision": "969a682c2310d2967a517cbf5f93ea2968006d01",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/27",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1629105680,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 440,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 4
        },
        {
            "number": 28,
            "revision": "9b64ff4946fbf18c5dc39c058ffa136f7a9024b4",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/28",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1629106621,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 441,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 536,
            "sizeDeletions": 6
        },
        {
            "number": 29,
            "revision": "a96baea096a058ca2332065a8f1f4dd04c769741",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/29",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1629110441,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 441,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 536,
            "sizeDeletions": 6
        },
        {
            "number": 30,
            "revision": "887b1172646f960aad113491b1676c078fcec999",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/30",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1629110613,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please write this as prose, not a list.  There's lots of details missing here.\n\nWhat does the EM config look like?  What does each parameter do?\nWhy does openbmc need this?  Why does a user care?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No other patches are required to get this result on Yosemite2?  I would've expected to see a config change."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Sample config is present in commit message, Config change will be submitted in entity-manager repo."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please put the SDR stuff in its own header."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Globals like this are generally discouraged, as I thought was pointed out earlier.  It's not very clear why this is here, I suspect this needs to be abstracted into one of the classes."
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: please try to avoid making random whitespace changes.  If these were intentional to improve the readability, please put them in their own commit."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Magic number?  At least document why we're shifting here."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 321,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please deduplicate this with the call to the identical API in createSensors.  That code already handles several types."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 321,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Capturing by \"this\" has lifetime issues.  Use shared_from_this if you need access to this directly."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "conn is a shared_ptr, and should be captured by value."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 334,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "integers should be referenced by value unless being modified."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 334,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 344,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please handle this error better.  as-written, it's possible for this to call ipmbSdrRsrv with undefined behavior, as recordCount hasn't been filled in.\n\nI suspect you need to pass through an error path."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 344,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 346,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "data[] is a uint8_t;  This mask looks like it does nothing."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 346,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 360,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just construct this inline"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 360,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same comment as earlier."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 384,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this looks very similar;  I suspect that you need to abstract this function into a \"run IPMB command\" method to abstract a little."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 384,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 399,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  this object was constructed the line above.  It's already clear in this context."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 399,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 418,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You've been told this before.....  Please don't do blocking calls in an async daemon.  It causes the whole application to pause, not just your routine."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 418,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Handle your errors, don't just print them and continue on."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 456,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "please prefer to declare variables where they're used."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 456,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This code looks like it doesn't ahndle anything other than type 1 records?  if so, please prefer to return early.  As written, this looks like it has undefined behavior with some of the varialbes."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 462,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Every place you call data[] is missing a range check.  I suspect you need one range check to begin with."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 462,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, extra parens."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 462,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 462,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 503,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering this is being converted directly into some dbus params, some level of sanity checks are needed on this.  At a minimum, just check for unprintable characters and removing them should be fine."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 503,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 505,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect this can be simplified with something like\n\ntempName = std::string(data.data() + iStrAddr, data.data() + iStrAddr + iStrLen);"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 505,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 508,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why?  tempName is about to go out of scope."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 508,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 516,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "another missing range check."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 516,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 518,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Magic numbers?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 518,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 531,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It seems odd this is a vector<uint8_t>  Shouldn't this just take a single uint8_t value?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 531,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "This value is a command data which will be passed to read the sensor which is in vector type."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 534,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "continued missing range checks."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 534,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 557,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't this method already exist?  I thought we had methods for converting IPMI-raw to double value already?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 557,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "For few SDR sensor, there will be no threshold values and sensor value will be in negative. Therefore, if the sensor value exceeds max margin, the value will be reduced by thermal margin and that value will be updated for those sensors."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 883,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please merge this with the existing createSensors method."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 883,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1089,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please look at how we handle this in other sensors.  Generally it involves looping over the interfaces and adding matches for each interface this sensors supports.  I would expect this pattern to look similar."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 1089,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -2
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 442,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 537,
            "sizeDeletions": 6
        },
        {
            "number": 31,
            "revision": "6157da5d6db519ec909e735a4e2b5536cd0393b5",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/31",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633100000,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 541,
                    "deletions": -80
                }
            ],
            "sizeInsertions": 649,
            "sizeDeletions": 82
        },
        {
            "number": 32,
            "revision": "8cd6606e1b147c058e651899b4c2b8c00beffe3c",
            "parents": [
                "e5fc3a55d344167832cab45cc3626fe5cf44d76c"
            ],
            "ref": "refs/changes/05/38905/32",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633100199,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 540,
                    "deletions": -80
                }
            ],
            "sizeInsertions": 648,
            "sizeDeletions": 82
        },
        {
            "number": 33,
            "revision": "e17d822a7a47625ee5c479f4034b6e156431f7ee",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/05/38905/33",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633422350,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 541,
                    "deletions": -80
                }
            ],
            "sizeInsertions": 648,
            "sizeDeletions": 82
        },
        {
            "number": 34,
            "revision": "ca158c8bf36e11efef44018365512e2a83479770",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/05/38905/34",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633423002,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 537,
                    "deletions": -81
                }
            ],
            "sizeInsertions": 644,
            "sizeDeletions": 83
        },
        {
            "number": 35,
            "revision": "6c183f02f10e2e40c0cacb68cfdf710c2218e5ea",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/05/38905/35",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633607535,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 544,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 651,
            "sizeDeletions": 90
        },
        {
            "number": 36,
            "revision": "2efe16f63a9da2638b42ac4ab9d8115087711df4",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/05/38905/36",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1633948752,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "it would be helpful if the flag name is named more specific."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "a suitable name based on the timer's functionality shall be given."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 482,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Can you add detailed comment here for this bit operations ?\nAlso, is it possible do it in separate function or split this function ?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 482,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 482,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 806,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Variable name should be meaningful and relevant to that struct name."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 806,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 806,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 857,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "sensorSDRType can look up from map ?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 857,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 857,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 873,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Instead of comparing constants with sensor unit, can we use enum or constexpr for that ?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 873,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 873,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 944,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "moving this code inside a new method setSensorType() can improve readability"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 944,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, This is already submitted as below patch\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47241"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 965,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "similarly this code can also be moved to a method named setSensorSubType() to improve\nreadability"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 965,
                    "reviewer": {
                        "name": "Jayashree Dhanapal",
                        "email": "jayashree-d@hcl.com",
                        "username": "Jayashree-D"
                    },
                    "message": "Ack, This is already submitted as below patch\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47241"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 544,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 651,
            "sizeDeletions": 90
        },
        {
            "number": 37,
            "revision": "11f51c865b22be184c6f31a555a1fb1355620be9",
            "parents": [
                "b782eec69267206863c07f9ea26b475be7f0f291"
            ],
            "ref": "refs/changes/05/38905/37",
            "uploader": {
                "name": "Jayashree Dhanapal",
                "email": "jayashree-d@hcl.com",
                "username": "Jayashree-D"
            },
            "createdOn": 1635494534,
            "author": {
                "name": "Sathish Sivasekar",
                "email": "sathish-s@hcl.com",
                "username": "sathish034"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSDRSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/IpmbSDRSensor.cpp",
                    "type": "ADDED",
                    "insertions": 342,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 287,
                    "deletions": -88
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 745,
            "sizeDeletions": 90
        }
    ]
}