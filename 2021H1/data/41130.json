{
    "project": "openbmc/x86-power-control",
    "branch": "master",
    "id": "Iba70f81a67db22b0c5567b248db00066b1b2be09",
    "number": 41130,
    "subject": "Add optional boot progress interface",
    "owner": {
        "name": "Lei YU",
        "email": "yulei.sh@bytedance.com",
        "username": "mine260309"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/41130",
    "commitMessage": "Add optional boot progress interface\n\nAdd the optional config to enable boot progress interface on host\nserver.\nWhen enabled, the host server will implement the Boot.Porgress interface\nand add the BootProgress and BootProgressLastUpdate properties.\n\nTested: Verify the interface is implemented when -DBOOT_PROGRESS=ON is\n        set on building this repo.\n\n        xyz.openbmc_project.State.Boot      interface -         -                                        -\n        .BootProgress                       property  s         \"xyz.openbmc_project.State.Boot.Progr... emits-change\n        .BootProgressLastUpdate             property  t         5306759606                               emits-change\n\nSigned-off-by: Lei YU <yulei.sh@bytedance.com>\nChange-Id: Iba70f81a67db22b0c5567b248db00066b1b2be09\n",
    "createdOn": 1615213948,
    "lastUpdated": 1616749453,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1615213948,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1615213960,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615213996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13471/ : SUCCESS"
        },
        {
            "timestamp": 1615236418,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1615302760,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased."
        },
        {
            "timestamp": 1615302778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615302821,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13546/ : SUCCESS"
        },
        {
            "timestamp": 1615303004,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1616550447,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Abandoned\n\nAbandon this. The openbmc-test-automation could be updated to support the properties hosted by x86-power-control."
        },
        {
            "timestamp": 1616659828,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\nHi!\nAs I understand this commit purpose was mainly to get the x86 system working with the openbmc-test-automation framework.\nI've recently commited several changes to the openbmc-test-automation repo and they all are now merged upstream.\n\nExample from the updated README.md:\n```\nBy default openbmc-test-automation framework assumes that host CPU is based on the POWER architecture. If your host CPU is x86 add `-v PLATFORM_ARCH_TYPE:x86` variable setting to your CLI commands.\n```\nWith this option enabled openbmc-test-automation framework simply ignores BootProgress interface in its state checks and all tests seem to be working correctly.\n\nPlease check it out when you'll have a chance."
        },
        {
            "timestamp": 1616660065,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> Hi!\n> As I understand this commit purpose was mainly to get the x86 system working with the openbmc-test-automation framework.\n> I've recently commited several changes to the openbmc-test-automation repo and they all are now merged upstream.\n> \n> Example from the updated README.md:\n> ```\n> By default openbmc-test-automation framework assumes that host CPU is based on the POWER architecture. If your host CPU is x86 add `-v PLATFORM_ARCH_TYPE:x86` variable setting to your CLI commands.\n> ```\n> With this option enabled openbmc-test-automation framework simply ignores BootProgress interface in its state checks and all tests seem to be working correctly.\n\nYup, this is why I abandoned this patch.\n\n> \n> Please check it out when you'll have a chance.\n\nSure, will do."
        },
        {
            "timestamp": 1616669023,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> Hi!\n> As I understand this commit purpose was mainly to get the x86 system working with the openbmc-test-automation framework.\n> I've recently commited several changes to the openbmc-test-automation repo and they all are now merged upstream.\n> \n> Example from the updated README.md:\n> ```\n> By default openbmc-test-automation framework assumes that host CPU is based on the POWER architecture. If your host CPU is x86 add `-v PLATFORM_ARCH_TYPE:x86` variable setting to your CLI commands.\n> ```\n> With this option enabled openbmc-test-automation framework simply ignores BootProgress interface in its state checks and all tests seem to be working correctly.\n> \n> Please check it out when you'll have a chance.\n\nI was using `tox` to run the HW CI, that the `-v PLATFORM_ARCH_TYPE:x86` is not a valid option.\nInstead, I tried to run with environment defined as below:\n\n OPENBMC_HOST=${OPENBMC_HOST} OPENBMC_PASSWORD=${OPENBMC_PASSWORD} SSH_PORT=22 PLATFORM_ARCH_TYPE=x86 tox -e default -- --argumentfile test_lists/HW_CI tests redfish\n\nBut it does not work, that it still checks the boot progress and operation system properties.\n\nCould you kindly let me know how to let the test-automation to pick the x86 json?"
        },
        {
            "timestamp": 1616672884,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > Hi!\n> > As I understand this commit purpose was mainly to get the x86 system working with the openbmc-test-automation framework.\n> > I've recently commited several changes to the openbmc-test-automation repo and they all are now merged upstream.\n> > \n> > Example from the updated README.md:\n> > ```\n> > By default openbmc-test-automation framework assumes that host CPU is based on the POWER architecture. If your host CPU is x86 add `-v PLATFORM_ARCH_TYPE:x86` variable setting to your CLI commands.\n> > ```\n> > With this option enabled openbmc-test-automation framework simply ignores BootProgress interface in its state checks and all tests seem to be working correctly.\n> > \n> > Please check it out when you'll have a chance.\n> \n> I was using `tox` to run the HW CI, that the `-v PLATFORM_ARCH_TYPE:x86` is not a valid option.\n> Instead, I tried to run with environment defined as below:\n> \n>  OPENBMC_HOST=${OPENBMC_HOST} OPENBMC_PASSWORD=${OPENBMC_PASSWORD} SSH_PORT=22 PLATFORM_ARCH_TYPE=x86 tox -e default -- --argumentfile test_lists/HW_CI tests redfish\n> \n> But it does not work, that it still checks the boot progress and operation system properties.\n> \n> Could you kindly let me know how to let the test-automation to pick the x86 json?\n\nTo use PLATFORM_ARCH_TYPE as an environment variable please cherry-pick this change:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/41588"
        },
        {
            "timestamp": 1616673414,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> To use PLATFORM_ARCH_TYPE as an environment variable please cherry-pick this change:\n> https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/41588\n\nThanks, will try it and feedback.\n\nBtw, we need this change as well to make it pass on x86 system:\n\ndiff --git a/redfish/systems/test_power_operations.robot b/redfish/systems/test_power_operations.robot\nindex 563f24e..11ee1d6 100644\n--- a/redfish/systems/test_power_operations.robot\n+++ b/redfish/systems/test_power_operations.robot\n@@ -38,7 +38,7 @@ Verify Redfish BMC PowerOn\n\n     Redfish Power On\n\n-    Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n+    #Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n\nBecause it was trying to do occ check.\nCould you kindly help to disable such check for x86?"
        },
        {
            "timestamp": 1616677468,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > To use PLATFORM_ARCH_TYPE as an environment variable please cherry-pick this change:\n> > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/41588\n> \n> Thanks, will try it and feedback.\n> \n> Btw, we need this change as well to make it pass on x86 system:\n> \n> diff --git a/redfish/systems/test_power_operations.robot b/redfish/systems/test_power_operations.robot\n> index 563f24e..11ee1d6 100644\n> --- a/redfish/systems/test_power_operations.robot\n> +++ b/redfish/systems/test_power_operations.robot\n> @@ -38,7 +38,7 @@ Verify Redfish BMC PowerOn\n> \n>      Redfish Power On\n> \n> -    Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> +    #Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> \n> Because it was trying to do occ check.\n> Could you kindly help to disable such check for x86?\n\nYou can just disable it with `-v additional_power_check:0`:\n\nOPENBMC_HOST=${OPENBMC_HOST} OPENBMC_PASSWORD=${OPENBMC_PASSWORD} SSH_PORT=22 PLATFORM_ARCH_TYPE=x86 tox -e default -- -v additional_power_check:0 --argumentfile test_lists/HW_CI tests redfish"
        },
        {
            "timestamp": 1616724561,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > To use PLATFORM_ARCH_TYPE as an environment variable please cherry-pick this change:\n> > > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/41588\n> > \n> > Thanks, will try it and feedback.\n> > \n> > Btw, we need this change as well to make it pass on x86 system:\n> > \n> > diff --git a/redfish/systems/test_power_operations.robot b/redfish/systems/test_power_operations.robot\n> > index 563f24e..11ee1d6 100644\n> > --- a/redfish/systems/test_power_operations.robot\n> > +++ b/redfish/systems/test_power_operations.robot\n> > @@ -38,7 +38,7 @@ Verify Redfish BMC PowerOn\n> > \n> >      Redfish Power On\n> > \n> > -    Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> > +    #Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> > \n> > Because it was trying to do occ check.\n> > Could you kindly help to disable such check for x86?\n> \n> You can just disable it with `-v additional_power_check:0`:\n> \n> OPENBMC_HOST=${OPENBMC_HOST} OPENBMC_PASSWORD=${OPENBMC_PASSWORD} SSH_PORT=22 PLATFORM_ARCH_TYPE=x86 tox -e default -- -v additional_power_check:0 --argumentfile test_lists/HW_CI tests redfish\n\nYup, with the commit the test went fine.\nHowever, the boot_table_x86.json only checks the chassis and host state, but no OperatingSystemState.\nCould you kindly add check for OperatingSystemState with \"Inactive\" on powered off, and \"Standby\" when OS is ready?\nThat will be perfect for the x86 boot test."
        },
        {
            "timestamp": 1616745582,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > To use PLATFORM_ARCH_TYPE as an environment variable please cherry-pick this change:\n> > > > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/41588\n> > > \n> > > Thanks, will try it and feedback.\n> > > \n> > > Btw, we need this change as well to make it pass on x86 system:\n> > > \n> > > diff --git a/redfish/systems/test_power_operations.robot b/redfish/systems/test_power_operations.robot\n> > > index 563f24e..11ee1d6 100644\n> > > --- a/redfish/systems/test_power_operations.robot\n> > > +++ b/redfish/systems/test_power_operations.robot\n> > > @@ -38,7 +38,7 @@ Verify Redfish BMC PowerOn\n> > > \n> > >      Redfish Power On\n> > > \n> > > -    Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> > > +    #Run Keyword If  ${additional_power_check} == ${1}  Additional OCC And Power Check\n> > > \n> > > Because it was trying to do occ check.\n> > > Could you kindly help to disable such check for x86?\n> > \n> > You can just disable it with `-v additional_power_check:0`:\n> > \n> > OPENBMC_HOST=${OPENBMC_HOST} OPENBMC_PASSWORD=${OPENBMC_PASSWORD} SSH_PORT=22 PLATFORM_ARCH_TYPE=x86 tox -e default -- -v additional_power_check:0 --argumentfile test_lists/HW_CI tests redfish\n> \n> Yup, with the commit the test went fine.\n> However, the boot_table_x86.json only checks the chassis and host state, but no OperatingSystemState.\n> Could you kindly add check for OperatingSystemState with \"Inactive\" on powered off, and \"Standby\" when OS is ready?\n> That will be perfect for the x86 boot test.\n\nThis is what I was doing in a first place. However I was having troubles with this approach. Therefore I've disabled `OperatingSystemState` alltogether with the `BootProgress`. \nDoes `OperatingSystemState` provide any useful information on x86? Or does it simply mimic the host/chassis interface? In the second case I don't belive there is any need in it."
        },
        {
            "timestamp": 1616746510,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> > Yup, with the commit the test went fine.\n> > However, the boot_table_x86.json only checks the chassis and host state, but no OperatingSystemState.\n> > Could you kindly add check for OperatingSystemState with \"Inactive\" on powered off, and \"Standby\" when OS is ready?\n> > That will be perfect for the x86 boot test.\n> \n> This is what I was doing in a first place. However I was having troubles with this approach. Therefore I've disabled `OperatingSystemState` alltogether with the `BootProgress`. \n> Does `OperatingSystemState` provide any useful information on x86? Or does it simply mimic the host/chassis interface? In the second case I don't belive there is any need in it.\n\nIt does work.\nThe `OperatingSystemState` will be changed to `Standby` when the BIOS post ends, that is when we know the BIOS boots is OK."
        },
        {
            "timestamp": 1616747765,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > > Yup, with the commit the test went fine.\n> > > However, the boot_table_x86.json only checks the chassis and host state, but no OperatingSystemState.\n> > > Could you kindly add check for OperatingSystemState with \"Inactive\" on powered off, and \"Standby\" when OS is ready?\n> > > That will be perfect for the x86 boot test.\n> > \n> > This is what I was doing in a first place. However I was having troubles with this approach. Therefore I've disabled `OperatingSystemState` alltogether with the `BootProgress`. \n> > Does `OperatingSystemState` provide any useful information on x86? Or does it simply mimic the host/chassis interface? In the second case I don't belive there is any need in it.\n> \n> It does work.\n> The `OperatingSystemState` will be changed to `Standby` when the BIOS post ends, that is when we know the BIOS boots is OK.\n\nOh, thanks, now I see it, there is a special pin \"PostComplete\" that is checked.\n```\n\"PostComplete\": \"POST_COMPLETE\"\n```\nHowever my HOST is based on the AMD CPU. And AMD CPUs aren't natively supported in the `x86-power-control` app. To use this app AMD have created a patch https://github.com/openbmc/meta-amd/blob/master/meta-ethanolx/recipes-x86/chassis/x86-power-control/0001-Amd-power-control-modifications-for-EthanolX.patch. In this patch I see that this signal is getting assigned to\n```\n\"PostComplete\": \"MON_PWROK\",\n```\nFrom the pin name it seems that it doesn't provide the same functionality the Intel CPUs have on \"POST_COMPLETE\" pin. But I can't say for sure.\n\n\nBy the way, could someone help me with the integration of this patch to the `x86-power-control` repo? I've created an issue https://github.com/openbmc/x86-power-control/issues/8, but haven't received any response.."
        },
        {
            "timestamp": 1616749453,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > > Yup, with the commit the test went fine.\n> > > > However, the boot_table_x86.json only checks the chassis and host state, but no OperatingSystemState.\n> > > > Could you kindly add check for OperatingSystemState with \"Inactive\" on powered off, and \"Standby\" when OS is ready?\n> > > > That will be perfect for the x86 boot test.\n> > > \n> > > This is what I was doing in a first place. However I was having troubles with this approach. Therefore I've disabled `OperatingSystemState` alltogether with the `BootProgress`. \n> > > Does `OperatingSystemState` provide any useful information on x86? Or does it simply mimic the host/chassis interface? In the second case I don't belive there is any need in it.\n> > \n> > It does work.\n> > The `OperatingSystemState` will be changed to `Standby` when the BIOS post ends, that is when we know the BIOS boots is OK.\n> \n> Oh, thanks, now I see it, there is a special pin \"PostComplete\" that is checked.\n> ```\n> \"PostComplete\": \"POST_COMPLETE\"\n> ```\n> However my HOST is based on the AMD CPU. And AMD CPUs aren't natively supported in the `x86-power-control` app. To use this app AMD have created a patch https://github.com/openbmc/meta-amd/blob/master/meta-ethanolx/recipes-x86/chassis/x86-power-control/0001-Amd-power-control-modifications-for-EthanolX.patch. In this patch I see that this signal is getting assigned to\n> ```\n> \"PostComplete\": \"MON_PWROK\",\n> ```\n> From the pin name it seems that it doesn't provide the same functionality the Intel CPUs have on \"POST_COMPLETE\" pin. But I can't say for sure.\n> \n> \n> By the way, could someone help me with the integration of this patch to the `x86-power-control` repo? I've created an issue https://github.com/openbmc/x86-power-control/issues/8, but haven't received any response..\n\n@Wang Kuiying is the maintainer of this repo, please ping him \ud83d\ude0a"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ee80dc3148adea5ca37721bda2bfff471c67d466",
            "parents": [
                "dfab291cee6c997e8a1373efefd6ba7f74f1ebb0"
            ],
            "ref": "refs/changes/30/41130/1",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1615213948,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Does this provide any more information than \"OperatingSystemState\" that is already provided?"
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "This patch is submitted for reference (as discussed in Discord #test-automation channel.\nThe whole idea is to make x86-power-control to implement BootProgress interface, so that it passes the HW-CI test in openbmc-test-automation."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 482,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Is there a reason to make this change?  It looks like it will cause an unnecessary std::string construction."
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "line": 482,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "The code below uses the `hostState` variable."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "01668b0c1b0a40e3477a8e9fd9210137c9d851e3",
            "parents": [
                "92caa4c639903ef076e2f09e985291781edd927d"
            ],
            "ref": "refs/changes/30/41130/2",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1615302760,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "power-control-x86/src/power_control.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        }
    ]
}