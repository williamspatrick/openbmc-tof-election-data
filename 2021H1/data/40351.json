{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "topic": "get-log-entry",
    "id": "I7774f047f94d6ceaf018711660d136529be44b7f",
    "number": 40351,
    "subject": "Entry: Add GetEntry method",
    "owner": {
        "name": "Adriana Kobylak",
        "email": "anoo@linux.ibm.com",
        "username": "anoo1"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/40351",
    "commitMessage": "Entry: Add GetEntry method\n\nAdd a GetEntry method to return the file descriptor of the Entry\nlog file. Even though there's a File Path property that has the\npath to the Entry file, the caller may not have privileges to\naccess the file. This new method would allow  bmcweb to be able\nto offload the Entry log file.\n\nThe Entry log file is a binary blob file and is to be opened in\nread-only mode.\n\nChange-Id: I7774f047f94d6ceaf018711660d136529be44b7f\nSigned-off-by: Adriana Kobylak <anoo@us.ibm.com>\n",
    "createdOn": 1612562201,
    "lastUpdated": 1612961249,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1612562201,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1612562213,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612562514,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12002/ : SUCCESS"
        },
        {
            "timestamp": 1612632468,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Topic set to get-log-entry"
        },
        {
            "timestamp": 1612791189,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1612800795,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1612800810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612801081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12104/ : SUCCESS"
        },
        {
            "timestamp": 1612801665,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1612802475,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1612802789,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1612807083,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1612807095,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612807244,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1612807505,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12111/ : SUCCESS"
        },
        {
            "timestamp": 1612866594,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1612877602,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1612880279,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1612881332,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1612910164,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1612961244,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1612961249,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "324c0c9c1a9f0f9ae0285b0810597c9865cd24d2",
            "parents": [
                "1b4a98af49059da61695c41469e4b7b134c1bf68"
            ],
            "ref": "refs/changes/51/40351/1",
            "uploader": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "createdOn": 1612562201,
            "author": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Doesn\u2019t this imply that the consumer knows the file format here?  Or is it going to be treated as a binary blob?  Can we document that?"
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 76,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Done. Yeah, binary blob, added it to the description."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What state is the FD in?  Hopefully read-only?\n\nDoes this actually satisfy permission issues?  If one process has ability to read a file, opens a file descriptor, and then sends the file descriptor along dbus, the recipient gains permissions to the file?  That is surprising to me."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 78,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Yeah state is read-only. I'd assume it satisfies the permission issue since theoretically from the kernel's perspective, having the fd allows access to the file that the fd points to."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "https://unix.stackexchange.com/questions/526172/how-does-linux-check-permission-for-file-descriptor"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 9,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d8de815552ace9f2b329ed760400ccd632848de7",
            "parents": [
                "1b4a98af49059da61695c41469e4b7b134c1bf68"
            ],
            "ref": "refs/changes/51/40351/2",
            "uploader": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "createdOn": 1612800795,
            "author": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Do you mean the caller may not have read permissions on the file but will be able to read off of the fd?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Yeah, the concern is that the bmcweb process may not be able to open the file when privilege features are implemented , but by having the file descriptor, it can read its contents. Ed's concern here: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40136/3..4/redfish-core/lib/log_services.hpp"
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 81,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Why not just call \"fd\"? Data seems kind of vague? Not a show stopper for me though."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 81,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Done. Yeah, changed. Probably leftover when I was looking at returning the actual data vs the fd. Per Ed in the bmcweb commit, he suggests using an fd."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 82,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Is it guaranteed that all implementations must have an associated fd?"
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 82,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Yeah, phosphor-logging, when it recreates the d-bus interfaces, checks that a file exists for the entry and if it exists, it creates its interface and populates the FilePath property with the file, so we're guaranteed that phosphor-logging can open the associated file and return the fd."
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 82,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Right, but that implies phosphor-logging is the only implementer of this interface. Is that a safe thing to assume?"
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "line": 82,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Since this method is in the Entry interface instead of in a Common interface, I'd say phosphor-logging would be the only implementer. If other app implements it, all Entry d-bus objects are created only if a file exists for each, and if the open operation fails, this method should fail as it's an unexpected error."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 10,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "66119c0e3eadbcdc611c3f374ae83acbd066506e",
            "parents": [
                "1b4a98af49059da61695c41469e4b7b134c1bf68"
            ],
            "ref": "refs/changes/51/40351/3",
            "uploader": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "createdOn": 1612807083,
            "author": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Logging/Entry.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 10,
            "sizeDeletions": 0
        }
    ]
}