{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "If4c327061bfc60481748707168ddd149d7e9b7e1",
    "number": 44640,
    "subject": "Add message entry for CPU High/Over Temp event",
    "owner": {
        "name": "Thang Q. Nguyen",
        "email": "thang@os.amperecomputing.com",
        "username": "thangqn-ampere"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/44640",
    "commitMessage": "Add message entry for CPU High/Over Temp event\n\nHIGHTEMP and OVERTEMP are signals from the Host CPU to notify BMC that\nit is in High Temp or Over Temp condition.\nWhen detecting High Temp, BMC might take actions like reduce the CPU\nfrequency.\nWhen detecting Over Temp, BMC should power OFF the Host CPU\nto avoid hardware damage.\nThis commit adds CPUHighTemp and CPUOverTemp messages to log above\nevents.\n\nTested:\nInserted message into journal using logger-systemd and observed\nRedfish event at redfish/v1/Systems/system/LogServices/EventLog/Entries.\n\nSigned-off-by: Thang Q. Nguyen <thang@os.amperecomputing.com>\nChange-Id: If4c327061bfc60481748707168ddd149d7e9b7e1\n",
    "createdOn": 1625131555,
    "lastUpdated": 1630764907,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1625131555,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1625131575,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625131873,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1625131900,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625131903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/21231/ : ABORTED"
        },
        {
            "timestamp": 1625132331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21233/ : SUCCESS"
        },
        {
            "timestamp": 1625158736,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\nI wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n\nAs written, I see this devolving into signals for every single component in the system, ie:\nDriveOverTemp\nPCIeCardOverTemp\nect.\n\nAnd that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?"
        },
        {
            "timestamp": 1625189387,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> I wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n> \n> As written, I see this devolving into signals for every single component in the system, ie:\n> DriveOverTemp\n> PCIeCardOverTemp\n> ect.\n> \n> And that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?\nCan you give me information about gerrit or discuss about about throttling temperature you recommended above?"
        },
        {
            "timestamp": 1625672111,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > I wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n> > \n> > As written, I see this devolving into signals for every single component in the system, ie:\n> > DriveOverTemp\n> > PCIeCardOverTemp\n> > ect.\n> > \n> > And that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?\n> Can you give me information about gerrit or discuss about about throttling temperature you recommended above?\n\nThere are design docs and phosphor-dbus-interfaces reviews that have been merged for this.  Please take a look at them (I don't have the link offhand).  If you search and can't find them, let me know."
        },
        {
            "timestamp": 1625914981,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > I wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n> > > \n> > > As written, I see this devolving into signals for every single component in the system, ie:\n> > > DriveOverTemp\n> > > PCIeCardOverTemp\n> > > ect.\n> > > \n> > > And that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?\n> > Can you give me information about gerrit or discuss about about throttling temperature you recommended above?\n> \n> There are design docs and phosphor-dbus-interfaces reviews that have been merged for this.  Please take a look at them (I don't have the link offhand).  If you search and can't find them, let me know.\n\nI tried to find codes related to thermal or throttling but seem not found anywhere that check for temperature issue and log the events to Redfish.\nSomething I can find:\n1. OCC throttle property: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/org/open_power/OCC/Status.interface.yaml\n2. gpuOverTemp property: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/power-sequencer/types.hpp#L27\n3. dbus property xyz.openbmc_project.Power.Fault.GPUOverTemp: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/org/open_power/Witherspoon/Fault.errors.yaml#L150\n\nThey just check OverTemp as a failure but no event logged for it."
        },
        {
            "timestamp": 1625915120,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 2:\n\nHow's about adding HighTemp and OverTemp events to use for any HIGHTEMP and OVERTEMP condition? I think we can give option to add more information like GPU, CPU, PCIE, ..."
        },
        {
            "timestamp": 1626235741,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > I wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n> > > > \n> > > > As written, I see this devolving into signals for every single component in the system, ie:\n> > > > DriveOverTemp\n> > > > PCIeCardOverTemp\n> > > > ect.\n> > > > \n> > > > And that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?\n> > > Can you give me information about gerrit or discuss about about throttling temperature you recommended above?\n> > \n> > There are design docs and phosphor-dbus-interfaces reviews that have been merged for this.  Please take a look at them (I don't have the link offhand).  If you search and can't find them, let me know.\n> \n> I tried to find codes related to thermal or throttling but seem not found anywhere that check for temperature issue and log the events to Redfish.\n> Something I can find:\n> 1. OCC throttle property: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/org/open_power/OCC/Status.interface.yaml\n> 2. gpuOverTemp property: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/power-sequencer/types.hpp#L27\n> 3. dbus property xyz.openbmc_project.Power.Fault.GPUOverTemp: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/org/open_power/Witherspoon/Fault.errors.yaml#L150\n> \n> They just check OverTemp as a failure but no event logged for it.\n\nThis is the one I was thinking of:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Sensor/Threshold/HardShutdown.interface.yaml\nFor hard shutdowns\n\nat that same folder level there is also SoftShutdown, and PerformanceLoss."
        },
        {
            "timestamp": 1626235797,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> How's about adding HighTemp and OverTemp events to use for any HIGHTEMP and OVERTEMP condition? I think we can give option to add more information like GPU, CPU, PCIE, ...\n\nThis needs to be compared and contrasted with the existing interfaces.  If you map something to that, that has much more utility for everyone else."
        },
        {
            "timestamp": 1626508583,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > > Patch Set 2:\n> > > > > \n> > > > > I wonder if these signals better fit into the thresholding we just added for shutdown temperature and throttling temperature.  They seem like the same use case, and could just be attached to the existing CPU sensors, which would be generic, and not specific to CPU sensors.\n> > > > > \n> > > > > As written, I see this devolving into signals for every single component in the system, ie:\n> > > > > DriveOverTemp\n> > > > > PCIeCardOverTemp\n> > > > > ect.\n> > > > > \n> > > > > And that will gen unweildy to maintain very quickly.  Can you please participate in the discussions on shutdown and throttling threshold interfaces, and make sure your use cases are covered?\n> > > > Can you give me information about gerrit or discuss about about throttling temperature you recommended above?\n> > > \n> > > There are design docs and phosphor-dbus-interfaces reviews that have been merged for this.  Please take a look at them (I don't have the link offhand).  If you search and can't find them, let me know.\n> > \n> > I tried to find codes related to thermal or throttling but seem not found anywhere that check for temperature issue and log the events to Redfish.\n> > Something I can find:\n> > 1. OCC throttle property: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/org/open_power/OCC/Status.interface.yaml\n> > 2. gpuOverTemp property: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/power-sequencer/types.hpp#L27\n> > 3. dbus property xyz.openbmc_project.Power.Fault.GPUOverTemp: https://github.com/openbmc/phosphor-power/blob/681b2a36e646b07c26fbdd2bae8f0ee1c4f3f930/org/open_power/Witherspoon/Fault.errors.yaml#L150\n> > \n> > They just check OverTemp as a failure but no event logged for it.\n> \n> This is the one I was thinking of:\n> \n> https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Sensor/Threshold/HardShutdown.interface.yaml\n> For hard shutdowns\n> \n> at that same folder level there is also SoftShutdown, and PerformanceLoss.\nI read the HardShutdown.interface.yaml interface you indicated. It provides more properties for sensors so that application can take some actions like shutdown if the condition happens.\nBut it does not indicate the Redfish event will be logged when the condition happen.\nIn another side, CPU or devices might have different mechanism to send HighTemp and OverTemp indicator to BMC. Platform design might process the signals and log events into Redfish EventLog. With current registries inside openbmc_message_registry.hpp does not have any for such events"
        },
        {
            "timestamp": 1630764838,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > How's about adding HighTemp and OverTemp events to use for any HIGHTEMP and OVERTEMP condition? I think we can give option to add more information like GPU, CPU, PCIE, ...\n> \n> This needs to be compared and contrasted with the existing interfaces.  If you map something to that, that has much more utility for everyone else.\n\nI found CPUThermalTrip has the same description as our over tempt concept. About HighTemp, it might be considered as a sensor which is asserted when rising and deasserted when falling.\nI will close this MR and will check if can define a GPIO sensor"
        },
        {
            "timestamp": 1630764907,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Abandoned\n\nI can use CPUThermalTrip for over tempt and will check if can implement HIGHTEMP GPIO as a sensor."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "834d6d1cfd3d97ed8abcce74b222a703d98303b3",
            "parents": [
                "729f55fe555e07821626aba322f42ca783652928"
            ],
            "ref": "refs/changes/40/44640/1",
            "uploader": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "createdOn": 1625131555,
            "author": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/registries/openbmc_message_registry.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "78c60c56a9b664397c4db6a8d67296df1ebcdda9",
            "parents": [
                "729f55fe555e07821626aba322f42ca783652928"
            ],
            "ref": "refs/changes/40/44640/2",
            "uploader": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "createdOn": 1625131873,
            "author": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/registries/openbmc_message_registry.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 1
        }
    ]
}