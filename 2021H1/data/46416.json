{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Ide119d717ec70c711e14a93c65c72b0536c68f5d",
    "number": 46416,
    "subject": "Add Step and Microcode properties to Cpu Interface",
    "owner": {
        "name": "Brandon Kim",
        "email": "brandonkim@google.com",
        "username": "brandonkimbk"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/46416",
    "commitMessage": "Add Step and Microcode properties to Cpu Interface\n\nAdd Step and Microcode properties to follow the Redfish Schema for\nProcessorId:\nhttps://redfish.dmtf.org/schemas/v1/Processor.v1_12_0.json\n\nSigned-off-by: Brandon Kim <brandonkim@google.com>\nChange-Id: Ide119d717ec70c711e14a93c65c72b0536c68f5d\n",
    "createdOn": 1630515722,
    "lastUpdated": 1631102174,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1630515722,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1630515733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630515823,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\nNot sure if this overlaps too much with Cpu.interface.yaml, but looking at how that interface was generated, it was following the DMTF Spec DSP0134 - https://github.com/openbmc/phosphor-dbus-interfaces/commit/259f49e0c40b287d9ea79f77db1654da47161340\n\nI see that Redfish Schema for ProcessorId has the properties I'm looking for (family, model, microcode and step) https://redfish.dmtf.org/schemas/v1/Processor.v1_12_0.json"
        },
        {
            "timestamp": 1630516125,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25469/ : SUCCESS"
        },
        {
            "timestamp": 1630523215,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(6 comments)"
        },
        {
            "timestamp": 1630523800,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nThanks for the comments Patrick, I'll go through them after lunch."
        },
        {
            "timestamp": 1630523968,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1630526088,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1630527447,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1630615513,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1630615518,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1630615528,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630615928,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25611/ : SUCCESS"
        },
        {
            "timestamp": 1631102171,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1631102174,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "20937daa3e24a76bce3e8ea5f27877a4d6d354e1",
            "parents": [
                "3e9aa3b284d54a047e694b0eb4195b60396830d3"
            ],
            "ref": "refs/changes/16/46416/1",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1630515722,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really don't like the name \"Telemetry\" here unless you can provide some additional context why that is a good name.  Telemetry is one of those way overloaded terms like \"Metrics\" and the way you're using it here is certainly not how it is used in xyz.openbmc_project.Telemetry."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there a reason we wouldn't add these to the Cpu object directly?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I was under the impression that new properties being added to an existing interface was not encouraged (in case they break existing implementation?).\n\nAlso, as noted in my other comment:\n\n\"\"\"\nNot sure if this overlaps too much with Cpu.interface.yaml, but looking at how that interface was generated, it was following the DMTF Spec DSP0134 - https://github.com/openbmc/phosphor-dbus-interfaces/commit/259f49e0c40b287d9ea79f77db1654da47161340\n\nI see that Redfish Schema for ProcessorId has the properties I'm looking for (family, model, microcode and step) https://redfish.dmtf.org/schemas/v1/Processor.v1_12_0.json\n\"\"\"\n\nI probably should have marked this WIP, I pushed this to get brief feedback from Ed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I was under the impression that new properties being added to an existing interface was not encouraged (in case they break existing implementation?).\n\nAdding properties should mostly be acceptable, except I think we have a few minor cases where we need to confirm that there aren't any backwards compatibility issues (there was a recent discussion about PowerCap w.r.t. the settings-manager implementation).  We just need to make sure that the properties all have a sane default for \"the implementation doesn't have any answer here\".  Most of these properties you have are strings so empty strings are a fine indicator to me."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Perfect, I'll add the processor information properties to the existing Cpu.interface then - I will have to reconsider how I want to add the core and threads"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d\n\nSomeone once upon a time added CpuCore.interface as well.  I think they were expecting to model each core.\n\nAlso there is Cpu/OperatingConfig, which I think is different but also has AvailableCoreCount."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There is already at least one Location decorator (or similar).  Is that sufficient for this property?  It doesn't seem like we need something unique for processors where there is both a Location and a Socket, do we?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We probably need a default value used to indicate \"the implementation is unable to determine this information\".  0 is not a good default in that case because you could, in theory, have a hardware design of a device that fits in a processor socket with 0 used to expand the IO of the system."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "size_t?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 25,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I suspect these are core/thread counts and not \"number\"?  Number is possibly ambiguous to mean position."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Item/CpuTelemetry/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Item/meson.build",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/CpuTelemetry.interface.yaml",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 59,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d81cff3c7a1b4b8f4a4442c26dcac3773e457ad2",
            "parents": [
                "3e9aa3b284d54a047e694b0eb4195b60396830d3"
            ],
            "ref": "refs/changes/16/46416/2",
            "uploader": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "createdOn": 1630615513,
            "author": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Cpu.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 9,
            "sizeDeletions": 1
        }
    ]
}