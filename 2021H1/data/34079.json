{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I5709652dd32ed9999cabbbfe8866bc065707f605",
    "number": 34079,
    "subject": "Add support for memory matrics schema",
    "owner": {
        "name": "Nirmal Patel",
        "email": "nirmal.patel@intel.com",
        "username": "patelnix"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/34079",
    "commitMessage": "Add support for memory matrics schema\n\nAdd support for memory mectrics schema to represent health data.\nThese properties can be obtained by get requests.\n\nTested:\n    - Successful build and verified changes in\n      server.hpp and server.cpp.\n\nSigned-off-by: Nirmal Patel <nirmal.patel@intel.com>\nChange-Id: I5709652dd32ed9999cabbbfe8866bc065707f605\n",
    "createdOn": 1593042596,
    "lastUpdated": 1613766073,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1593042596,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1593042638,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593042663,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/52869/"
        },
        {
            "timestamp": 1593042854,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/52869/ : SUCCESS"
        },
        {
            "timestamp": 1600991086,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1601054020,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1601054222,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1601054235,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1601054242,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5217/"
        },
        {
            "timestamp": 1601054255,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601054377,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5217/ : SUCCESS"
        },
        {
            "timestamp": 1601055235,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n@Nirmal, I see some activity on this so I'm cycling back.  This has been sitting since June because you didn't add any reviewers.  If I don't see any reviewers, I assume you're not ready for review and delete any notifications I get.  Please make sure the people in MAINTAINERS are added when you're ready for review."
        },
        {
            "timestamp": 1601055341,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\nbtw, the commit needs to be rebased and meson.build files added (see README under the 'gen' subdirectory).  Autotools is now deprecated."
        },
        {
            "timestamp": 1601306454,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> @Nirmal, I see some activity on this so I'm cycling back.  This has been sitting since June because you didn't add any reviewers.  If I don't see any reviewers, I assume you're not ready for review and delete any notifications I get.  Please make sure the people in MAINTAINERS are added when you're ready for review.\n\nPatrick for better or worse, when I was the only maintainer of this repository I told a lot of people they didn't have to add reviewers (other than their own peers at their own company - I expect them to review patches from their peers) - that I monitor all submissions so they don't need to add me, and that it is not the contributors responsibility to find people that are interested in their code at other companies.\n\nI'm fine with whatever direction you want to take us on this Patrick but I just wanted to make you aware that I had given somewhat conflicting instructions in the past.  Maybe the best thing to do would be explicitly outline the expectations in a CONTRIBUTING file."
        },
        {
            "timestamp": 1601306710,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1601568741,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1601569392,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601569473,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601570034,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601570585,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601570958,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601573123,
            "reviewer": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601574876,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1604354567,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\nNirmal - Are you planning to update this commit?"
        },
        {
            "timestamp": 1613766072,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\nI suspect this can be abandoned."
        },
        {
            "timestamp": 1613766073,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Removed reviewer Ed Tanous."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "252a2a8dc4fe07538d06e0d0a33ee0218dcc53ce",
            "parents": [
                "12a8ca89d996ecebe09f70d107d8a63f9cbd441a"
            ],
            "ref": "refs/changes/79/34079/1",
            "uploader": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "createdOn": 1593042596,
            "author": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "spelling"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Nirmal Patel",
                        "email": "nirmal.patel@intel.com",
                        "username": "patelnix"
                    },
                    "message": "Ack"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Nirmal Patel",
                        "email": "nirmal.patel@intel.com",
                        "username": "patelnix"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 67,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
            "parents": [
                "12a8ca89d996ecebe09f70d107d8a63f9cbd441a"
            ],
            "ref": "refs/changes/79/34079/2",
            "uploader": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "createdOn": 1601054222,
            "author": {
                "name": "Nirmal Patel",
                "email": "nirmal.patel@intel.com",
                "username": "patelnix"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "BandwidthPercent BlocksReadLifetime BlocksWrittenLifetime BlocksReadCurrent BlocksWrittenCurrent RemainingSpareBlockPercentage, PredictedMediaLifeLeftPercent\n\nAll seem like they would be updated a lot, and likely should be sensors, not individual properties on the memory schema"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Nirmal Patel",
                        "email": "nirmal.patel@intel.com",
                        "username": "patelnix"
                    },
                    "message": "Good suggestion. Let me try this one."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "They are part of the memory schema if we're talking Redfish. If they were part of sensors we'd need some weird lookup to pull these out of sensors schema and into memory. Also, I don't think we have a unit of Blocks for sensors, and I'm not sure that makes sense either?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "https://github.com/openbmc/bmcweb/blob/0f8472a78ec387efea09c4494e3a664cb9ffd0e8/static/redfish/v1/schema/MemoryMetrics_v1.xml#L131"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The Redfish APIs would be tough to write, but it means that we get all the telemetry/aggregation stuff for \"free\".  Also, we already know how to write the redfish APIs for this stuff, and if we defined a consistent path naming, it seems like it would be pretty simple."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Another, half-baked idea: What if this interface just produced object paths that were pointers to the sensors that did this work.  That way, we'd avoid a little bit of the complexity, but would still have an interface that we could access to get the complete \"memory metrics\" picture."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Most of these seem like they would be better as log events rather than directly accessible struct members.  Is there a use case for directly accessing the CorrectableEccError bool aside from logging?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 65,
                    "reviewer": {
                        "name": "Nirmal Patel",
                        "email": "nirmal.patel@intel.com",
                        "username": "patelnix"
                    },
                    "message": "Yes all of these properties are being used for logging purpose. Can you please explain why it is better to log as events rather than bool properties?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because it's much easier to track multiples of them, and it's designed to keep information around in a persistent circular buffer.  It also tracks the time the event occurred, and produces a user facing log.  With that said, it looks like some of these are coming from the redfish schema?  It might make sense to have both in that case?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 65,
                    "reviewer": {
                        "name": "Nirmal Patel",
                        "email": "nirmal.patel@intel.com",
                        "username": "patelnix"
                    },
                    "message": "All of these properties are coming from refish. And these properties are not coming from sensors in lower layer. Also thermal and media errors are being sent as events(which is separate implementation). so if there is any media/thermal error present on device, they will be logged.\nAlso all the errors are sent with priorities and severity."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> All of these properties are coming from refish. And these properties are not coming from sensors in lower layer.\n\nThere's no such thing as a \"sensor\" in a lower layer.  A \"sensor\" is just a way to abstract things that produce a finite value in the number realm, which is what these values are.\n\n\n> Also thermal and media errors are being sent as events(which is separate implementation). so if there is any media/thermal error present on device, they will be logged.\n\nThat's part of the thing.  If these were sensors, the \"thermal\" events would just get rolled in as threshold events on said sensor, which would be much more usable to the rest of the system.  as is, we're separating the value, threshold, and logging into their own completely separate implementations, which feels more complex.\n\n> Also all the errors are sent with priorities and severity.\n\nI'm not following what this means."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 67,
            "sizeDeletions": 0
        }
    ]
}