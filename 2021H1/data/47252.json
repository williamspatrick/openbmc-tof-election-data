{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Icc851d1fcb7399c763a9000770cbd195d9f572de",
    "number": 47252,
    "subject": "PLDM-stack: Adding sensor monitoring section",
    "owner": {
        "name": "Gilbert Chen",
        "email": "gilbert.chen@arm.com",
        "username": "gilbert225"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/47252",
    "commitMessage": "PLDM-stack: Adding sensor monitoring section\n\nThe new added sections are for the design of enabling pldmd to monitor sensor\nin PLDM terminus and expose to D-Bus interface. The proposal currently covers\nhow to monitor numeric sensor and how to renew the sensor status by polling or\nasync method.\n\nSigned-off-by: Gilbert Chen <gilbert.chen@arm.com>\nChange-Id: Icc851d1fcb7399c763a9000770cbd195d9f572de\n",
    "createdOn": 1632762805,
    "lastUpdated": 1638888460,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1632762805,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1632762966,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1632997458,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(9 comments)\n\nI am unable to see a reason for why this shouldn't be implemented in pldmd. I've posted concerns around doing this in separate apps here as well as in https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/46346. My suggestion would be implement this in openbmc/pldm, wherein PLDM Requester work is happening already (Type 5 commits are on Gerrit). We have plans on implementing Type 2 next, but I think your code can be easily migrated to openbmc/pldm."
        },
        {
            "timestamp": 1633075928,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 2:\n\n(7 comments)"
        },
        {
            "timestamp": 1633333633,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(4 comments)\n\nAgree with Deepak here..."
        },
        {
            "timestamp": 1633946889,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1634009249,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1634054488,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1634054809,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1634547936,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1634547960,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 3: Code-Review-1"
        },
        {
            "timestamp": 1634549869,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1634656802,
            "reviewer": {
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1634715224,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1634779308,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1634806155,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1634886508,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1634918257,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1635145382,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 4:\n\n(6 comments)"
        },
        {
            "timestamp": 1635145579,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1635148634,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1635152417,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1635418875,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1635846678,
            "reviewer": {
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1635866988,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1635904281,
            "reviewer": {
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1635924986,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1635945933,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1636650910,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 6:\n\n(5 comments)\n\nThis is looking good. Few comments. Also, can you merge to main design doc?"
        },
        {
            "timestamp": 1636873869,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1636873936,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 7:\n\n> Patch Set 6:\n> \n> (5 comments)\n> \n> This is looking good. Few comments. Also, can you merge to main design doc?\n\nDone by patch set 7"
        },
        {
            "timestamp": 1636875666,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1636876961,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1636950778,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 8:\n\n(7 comments)"
        },
        {
            "timestamp": 1636972119,
            "reviewer": {
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1637234442,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1637234971,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 9:\n\n(6 comments)"
        },
        {
            "timestamp": 1637572180,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 9: Code-Review+1\n\nLooks mostly fine to me. Happy to review corresponding code patches."
        },
        {
            "timestamp": 1637904873,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1637905057,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1638182261,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1638232005,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1638250210,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1638250259,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1638252504,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1638275844,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1638275930,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1638332205,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1638514828,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 12: Code-Review+1"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7101d1a309c972cba1fdc76b49236d244ae4be71",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/1",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1632762805,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 115,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "602a36a749b7d899ad385def1707e6029b8b2a26",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/2",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1632762966,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "It would be beneficial to also mention version numbers of the spec, since you're quoting specific section numbers below."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Didn't follow this. Could you please elaborate?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "\"indirectly\" means that BMC needs to access the sensor through PLDM\nIndirectly:\nBMC <-PLDM/MCTP over I2C->  Satellite Manager Controller <- I2C -> Temp sensor\n\nDirectly:\nBMC <- I2C -> Temp Sensor"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Reading sensors over PLDM is also a direct way (from PMCI perspective) :)"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Why?\n\nOn the other hand, I see issues with splitting this up into multiple part-PLDM services that also have to co-exist with pldmd. There are dependencies (via PDRs) between the FRU and M&C spec.\n\nThe existing pldmd is not designed to just be a responder. Requester patchsets are being worked on by Tom Joseph. I think you should work with him to support Type 2 requester. Tom has patches up for Type 5 requester."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, the mapping of \"FRU record set identifier\" and associated entity is described by PDR.\nThe service in charge of collect FRU data from PLDM device needs to send not only Type4(FRU data) but also Type2(M&C) to get FRU record set PDR first."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Do you mean PLDM sends GetRoutingTable entries to MCTP service? Can you elaborate please?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This is being implemented in pldmd already. Requester support is being added for Type 5, which also relies on Type 0 discovery. Some patches are on Gerrit already."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Reference which properties? Can you elaborate please?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "The properties are FRU info of PLDM device.\ne.g.\n#busctl instrospect xyz.openbmc_project.PldmDevice /xyz/openbmc_project/PldmDevice/SatMC_0\nxyz.openbmc_project.PldmDevice      interface -         -            -\n.EID                                property  y         18           emits-change\n.NAME                               property  s         \"SatMC\"      emits-change\n.PART_NUMBER                        property  s         \"123456\"     emits-change\n.SERIAL_NUMBER                      property  s         \"SN12345\"    emits-change\n\nSo entity-manager's config file can use probe() function to match entity and expose inventory data and sensor to D-Bus Objects\n#cat /usr/share/entity-manager/configuration/SatMC.json\n\"Name\": \"$NAME$EID\",\n\"Type\": \"Board\",\n\"xyz.openbmc_project.Inventory.Decorator.Asset\": {\n        \"ProductName\":  \"$NAME\",\n        \"PartNumber\":   \"$PART_NUMBER\",\n        \"SerialNumber\": \"$SERIAL_NUMBER\"\n    }\n\n#busctl tree xyz.opebmc_project.EntityManager\n\u2514\u2500/xyz\n  \u2514\u2500/xyz/openbmc_project\n    \u251c\u2500/xyz/openbmc_project/EntityManager\n    \u2514\u2500/xyz/openbmc_project/inventory\n      \u2514\u2500/xyz/openbmc_project/inventory/system\n        \u2514\u2500/xyz/openbmc_project/inventory/system/board\n          \u2514\u2500/xyz/openbmc_project/inventory/system/board/SatMC18\n            \u2514\u2500/xyz/openbmc_project/inventory/system/board/SatMC18/Core_Temp"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "There is already PLDM FRU interface defined here:\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Source/PLDM/FRU.interface.yaml\n\nIt would be better to re-use the same interface instead of inventing a new one."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This has already caused confusion in the past. Fru-device should have been in a separate repo. In any case, I don't see an explanation of why PLDM should be under entity-manager."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Got it and it is no problem to make the pldm-device service in pldm repo if final design is adding an individual service instead one pldmd."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 64,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Why can't this be done in pldmd?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 64,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "The idea is want to take the advantage of entity-manager to probe config files for entity at runtime.\n1.pldm-device registers the new found entities to dbus.\n2.entity-manager probes entities with corresponding json file to register sensor config interface to dbus.\n3.pldm-sensor instantiates sensor based on the sensor config interface on dbus."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I didn't follow this at all. Sensor.Value is an interface that can be implemented by any service, not just a service sitting under dbus-sensors repo. This is not a drawback."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, agree with you. The function of pldm-sensor can be implemented by any service even pldmd.\n\nThe reason to make pldm-sensor in dbus-sensors repo is that I can use the APIs of src/utils.cpp in dbus-sensors repo. This class provides a lot of handy APIs for registering sensor interface to dbus."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Gilbert - I believe there is sufficient justification in the comments to implement PLDM sensors in the existing PLDM service. If you agree, do you plan to update this doc, and then move your code to openbmc/pldm?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Hi Deepak - Yes, I am working on reworking the design spec and then move the code to openbmc/pldm. The function of PLDM FRU will be changed to implement the interface defined in openbmc/phosphor-dbus-interface as sumanthb's feedback."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Done. Please help review the new updated patchset 3"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 105,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This is specifically for the case where there are no PDRs, right? With PDRs, all the metadata about sensors is in the PDR. For the non-PDR case, pldmd can still consume config files from EM, if need be."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 105,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, the is for the case of \"PLDM for access only\".\n\nI think it would be good to implement the pldm-device or pldm-sensor service in pldmd because it is easy to use well implemented PLDM requester infrastructure in requester/* instead of libpldm API to have features like instancId request/free, retry and timeout."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 105,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack, I feel implementing these in pldmd seems more elegant. Also, this will give a chance to exchange contextual information between the PLDM modules (for example - stopping pldm sensor monitoring of a device when we start pldm firmware update of the device)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 115,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "277be8b88033f3b42336d252afcdb307d1ec6178",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/3",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1634054488,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 13,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Does this document also talk about showing these sensors in Redfish/bmcweb ?\n\nAlso, this document talks about only Numeric Sensors ? what about State Sensors ?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, the document is for exposing PLDM sensor to D-bus xyz.openbmc_project.Sensor.Value interface with object path in /xyz/openbmc_project/sensors/<sensor_type>/<sensor_name> so that PLDM sensors can be mapped/displayed to Redfish/bmcweb.\n\nThe PLDM state sensor might be exposing to D-bus interfaces defined in https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/State but current available interfaces could not be matched to all possible PLDM state sensor so creating new D-bus interfaces is needed. I think it would be better having another design proposal to cover this area."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 18,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "space. there are spaces everywhere in the document, please fix all of them"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Will fix in new commit"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Perhaps this design document can be integrated with the existing PLDM stack design document"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Please respond to this. I also agree with this."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Can I get review approval here first and then integrate this design doc to docs/pldm-stack.md?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 55,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this is a confusing statement.\n\nEntity Association PDR always has a container entity and one or more contained entities, and the structure does not have a terminus_handle/tid field. The Fru information would be present in the frurecord Table of the remote PLDM terminus, and the FRU Recordset identifiers would be coming from the fru recordSet PDR's of the remote terminus - what is the role of the Entity association PDR's here ?\n\nwhat is $instance here ? is it the pldm entity instance number of the entity ?\n\nMultiple PLDM entities from the same pldm terminus can have the same entity instance number. if that is the case, the dbus paths will not be unique."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 55,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "> Entity Association PDR always has a container entity and one or more contained entities, and the structure does not have a terminus_handle/tid field. The Fru information would be present in the frurecord Table of the remote PLDM terminus, and the FRU Recordset identifiers would be coming from the fru recordSet PDR's of the remote terminus - what is the role of the Entity association PDR's here ?\n\nThe proposal assumes tid is assigned by pldmd so pldmd knows the mapping of TID/EID. When pldmd fetches PDRs by GetPDR command from a PLDM terminus, pldmd also knows which EID returns the PDRs and what value of terminus handle is in each PDRs. So pldmd should be able to maintain a mapping table for terminus_handle/eid/tid.\n\nWhen pldmd parses the Entity association PDRs for a PLDM terminus, it can create dbus objects for all entities defined in PDRs in a hierarchical dbus paths(/xyz/openbmc_project/Inventory/Source/PLDM/<TID>/<INSTANCE#>/<INSTANCE#>/...) and then implements Entity.interface and FRU.interface to these dbus objects.\n\n> Multiple PLDM entities from the same pldm terminus can have the same entity instance number. if that is the case, the dbus paths will not be unique.\n\nMy idea is that the instance# should be unique under the same container ID. The dbus path of child entity cascades its instance# after its parent's dbus path string.\n\nExample:\nA PLDM terminus assigned TID to 1. Its Entity Association PDR describes the containerID=123 under contrainerID=SYSTEM and there are two entities belong to containerID=123. So the dbus path for these three entities are created like below.\n\n/xyz/openbmc_project/Inventory/Source/PLDM/1/\n/xyz/openbmc_project/Inventory/Source/PLDM/1/1\n/xyz/openbmc_project/Inventory/Source/PLDM/1/2"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Did you mean FRU interface?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "This interface is provided a mapping table to look up relationship in between entity instance number and PDRs from a PLDM terminus.\n\nThe FRU interface will also be implemented and is described at line 82-87."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Numeric sensors should use xyz.openbmc_project.Sensor.Value to be consistent with rest of OpenBMC implementations. With this particular interface with object path in /xyz/openbmc_project/sensors/<sensor_type>/sensor_name, other mechanisms like Redfish/IPMI exposure of sensors, threshold crossing detection etc will be done automatically."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "The interface is intended to collect the all related sensor settings from PDRs or configruation file for static sensor. pldmd get the settings from this itnerface instead of PDRs directly. It should provide capability for debugging and flexibility to modify settings from CLI (e.g. busctl).\n\npldmd still exposes sensor status with xyz.openbmc_project.Sensor.Value with object path in /xyz/openbmc_project/sensors/<sensor_type>/sensor_name."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I wonder for the others PDRs type such as status/effecter, the pldmd will use which object path to export state value, effecter value? Will it be /xyz/openbmc_project/effecter/<effecter_type>/sensor_name?\n\nWe should also concern about expose the PLDM sensor to IPMI because the PLDM sensorID is 16 bits and IPMI sensorID is 8 bits."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The spec can be applied for others type of PDRs in PLDM model such as State Sensor PDR (type 4), Numeric Effecter PDR (type 9), Compact Numeric Sensor PDR (type 21). The dbus interface xyz.openbmc_project.Inventory.Source.PLDM.<PDRTypeName> will be applied for equivalent PDR types. This specs should not limited for only PDR numeric sensors, I think.\nThe dbus-interface xyz.openbmc_project.Inventory.Source.PLDM.<PDRTypeName> will include the data fields in each PDR types."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Agree with you, the dbus interface can be applied for other type of PDRs. we can propose to add necessary dbus interface yaml files to https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/Inventory/Source/PLDM"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, it is possible to export state/effecter value to dbus as well. It might need another review to add new dbus interface to openbmc/phosphor-dbus-interfaces repo like sensor value.interface does (https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Sensor/Value.interface.yaml)\n\nYes, it is a limitation to handle more than 256 sensors in a platform for IPMI. But it should not be a problem to mapping PLDM sensor to IPMI due to size of sensorID(8bits vs 16 bits) as long as the number of sensor is under the limitation of IPMI. It is because that the source of IPMI sensor is also from /xyz/openbmc_project/sensors/<sensor_type>/sensor_name and the PLDM sensorID is not a property of dbus value.interface."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "You could have the static PDRs maintained in the pldmd itself - i.e. once you query the PLDM FRU of the terminus, you can look for a static PDR configuration json file that matches the inventory information you read and load the sensor configuration from there.\n\nThis helps in having a scalable approach and not let the PLDM specifics (like PDRs) percolate into entity manager. For example - the devices with static PDRs can extend and support other type of static PDRs like State Sensor PDRs, Effecter PDRs etc.. This won't be easy to maintain in entity manager."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Got you point. Try to keep pldmd as self-contained as possible.\nMy initial though here is that reusing the probing feature which entity-manager provided. It could avoid rewrite similar code again like what entity-manager has implemented."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 80,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Got you point. Try to keep pldmd as self-contained as possible.\n> My initial though here is that reusing the probing feature which entity-manager provided. It could avoid rewrite similar code again like what entity-manager has implemented.\n\nRight now, There are already certain configuration files present in pldmd, that can create a sensor statically and attach it to a dbus property within BMC. refer : https://github.com/openbmc/pldm/blob/master/configurations/pdr/4.json"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "As far as I know, the current config file in pldmd is adding the property to dbus unconditional.\nI would like have a function for config file which can be added when some condition is matched. For example, the ABC_NIC_SENSOR_A.json is only added when pldmd detects the platform has ABC_NIC installed. The detection can be done by checking the FRU data. The similar function has been provided by entity-manager. So pldmd needs to develop similar function to remove the dependency on entity-manager."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 102,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Pooling is a computationally expensive operation. pldmd already supports receive async sensor events(platform event message), when a sensor on a remote PLDM terminus changes its state - it would /should send down a PLDM sensor event down to BMC - which could be enough to update the respective dbus objects.\n\nDSP0248 16.10 talks more about-  eventData format for sensorEvent."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Agree with you that polling could be a expensive operation. It is more efficient that BMC receives async event to update state sensor. But in some cases, for numeric sensor that reading changes more frequency(e.g. temperature) would be better to use polling instead async event.\n\nCould I update the wording like below to be more generic?\npldmd will update the state and reading of PLDM sensor to D-bus objects by polling or aync event depending on the type of sensor."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 118,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "734312a0af7ba2d18acf8eb1e7fe06f1d2b3d3ef",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/4",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1634886508,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 88,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Who is the consumer of these D-Bus obbjects? With PDRs, PLDM can directly create Inventory.Item objects. There is also https://github.com/openbmc/docs/blob/master/designs/pldm-stack.md#processing-pldm-fru-information-sent-down-by-the-host-firmware.\n\nCan this design focus on PLDM sensors? It could certainly talk about PLDM FRU related PDRs, but I am not sure about exposing inventory. That seems like it should be covered by the link I pasted above or should be updated there."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 88,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "I will remove the description related to FRU.\n\nThe exposing inventory should be helpful for debugging.\nAnd the properties change signal of the inventory D-bus objects can also be used to trigger pldm sensor monitor to rescan the pldm sensors. mctp service -(EID routing table update)->pldmd-(update inventory)->pldmd-(rescan sensor)->...\nBut \"update inventory\" and \"rescan sensor\" are all done by pldmd, exposing to D-Bus might be unnecessary except separating the task of \"rescan sensor\" to another service."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I don't think pldmd has to expose any of this on D-Bus - pldmd is already the producer here. It can implement Sensor.Value for the sensors."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "To expose the PDR to D-bus might be useful for debugging. Developer can dump or overwrite the PDR setting by busctl command easily. However the cost of exposing PDRs to D-Bus might be too expensive for just debugging purpose. I will remove it in next version."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 93,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Same point as above. Not sure what the purpose of this interface is and who the consumer is. Pldmd is a daemon and can host sensor D-Bus objects. It has all the information to do so with PDRs and Type 2 messages. This would also work for the case without PDRs."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 93,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Will update the design in next version"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 109,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I believe there was a concern from Sumanth about not getting PLDM specifics into EM. Need to elaborate on what config will be in EM and what will be in PLDM."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 109,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Understand the concern. The static sensor will be defined by PLDM's config file and implement a    similar function like Entity-Manager probe() function does for pldmd to be able check system config by matching a specific property of giving D-Bus interface. The static sensor defined by PLDM config file only be added when system config is matched."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "We don't need duplicate D-Bus objects for sensors. Just Sensor.Value will suffice."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "As far as I know, the object path of Sensor.Value insterface is also a parameter for bmcweb to get sensor name and type\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/sensors.hpp#L2577"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What I mean is, I don't think we need bmcweb (and other consumers) to be looking at xyz.openbmc_project.Inventory.Source.PLDM.NumericSensor. Sensor.Value should be the common numeric sensor interface."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, bmcweb doesn't need to use this xyz.openbmc_project.Inventor.Source.PLDM.NumericSensor D-Bus interface. pldmd will only need to implement Sensor.Value interface.\n\nMy original idea is that the interface can be a common source to fetch sensor parameters defined by PDR. It should be convenient for debugging or if the PLDM sensor monitoring is separated to another service. However, it will be removed in next version according to the feedback in above comment."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Can you add some more detail here?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Will add the detail and merge the design doc to docs/pldm-stack.md"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This is still not done. Please add and merge to the main doc."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/5",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1635418875,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Section 12.12 in DSP0236_1.3.0 define \"Get Routing Table Entries\".\n\"This command can be used to request an MCTP bridge or bus owner to return data corresponding to its present routing table entries.\"\n\nGetRoutingTableEntries is used to communicate between mctp devices in mctp layer but not between pldm layer and mctp layer.\n\nMoreover, the current mctp-mux daemon just transfers/receives the pldm commands to/from destination, it does not support any mechanism to response routing table to pldm layer.\n\nI think we can use configuration file in this case. Mctp service will update the routing table to a configuration file. When there is a changed in the file PLDMd will access the file to retrieve the routing table."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "The design doc expects that mctp service is the topmost bus owner and should support \"Get Routing Table Entries\" because table12 in DSP0236_1.3.1 shows this command is Ma(Mandatory for Accept) for bus owner. However, as you mentioned that the current implementation of mctp-demux-deamon does not act as MCTP responder.\n\nI think pldmd can have a wrapper interface to abstract the method of getting EID table from MCTP service. One of possible implementation can be the method you suggested. It is also provide the flexibility to adopt to other new MCTP service implementation(e.g. in-kernel MCTP)"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The current mctp-demux-deamon does act as MCTP responder, BMC can response GetRoutingTableEntries to other mctp devices and also itself. But GetRoutingTableEntries is MCTP command. It is handled by libmctp and routing table is managed in mctp layer. The problem is how libmctp response the routing table to pldmd?\n\nCurrently, mctp is trasporter for pldm message. it does not handle pldm message ( does not parse pldm message). So I think libmctp will not response for the request from libpldm."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "I found that both of the mctpd of in-kernel MCTP[1] and intel-BMC pmci[2] have implemented the D-Bus interface for MCTP endpoint enumeration(https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/MCTP). So I will update the description to use this D-Bus interface for getting EID list instead.\n\nBecause the mctp-demux-daemon doesn't implement this D-bus interface, I would like to follow your suggestion to have a configuration file for listing EIDs.\n\n[1]in-kernel MCTP(https://github.com/CodeConstruct/mctp)\n[2]intel-BMC mctpd(https://github.com/Intel-BMC/pmci/tree/master/mctpd)"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 64,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Currently, I saw that these json files are only used by pldm responder to response the PDRs to requester. I don't think these file is used to configure the terminus PDRs (Example the host)."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 64,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, the current implementation needs to be enhanced to fulfill the gap of requirement. For example, the current implementation does not support to generate \"the numeric sensor PDR\" by json file.\n\nBecause the function of \"pldm sensor monitoring\" will be implemented by pldmd as well. The PDR generated by json files can be accessed by internal function calls directly."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 64,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Yes, you are right. In that case, we will not use entity-manager to configure the static PLDM sensors."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 98,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "4b6b03b2edb13d2aac280a086ed5b84c919afd9b",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/6",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1635945933,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "We may not need this D-Bus interface - this should be handled by pldmd autonomously."
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Not following this. Can you elaborate/provide an example?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Can you say here that the Sensor.Value D-Bus interface will be implemented?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 66,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This is a bit confusing, can we drop it?"
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "line": 66,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-sensor.md",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 102,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "e3ba78c6d02dc27fa9a6cf54d4dbde0a5ddfab43",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/7",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1636873869,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "35b70c69c413f31361ff7e3b779e823d5f18e5e8",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/8",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1636875666,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Please add more details here. What's the scope of this:\n- Numeric vs State sensor?\n- Effecter?\n- Poll vs Sensor Event?\nEtc."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 335,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Some of this is already implemented - please check latest pldmd. This was added to support PLDM Type 5."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 335,
                    "reviewer": {
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I think we can use inotify watcher in \"/dev\" folder of MCTP bus owner to trigger rescan MCTP routing table. The notify will be triggered whenever there is new mctp device.\n\nIn rescan features we can utilizes MCTP D-bus interface, call mctp sysfs and mctp-routing-table.json static file. The empty table will be return for unimplemented interfaces."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 335,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "The current implementation of pldmd to get notify when MCTP routing table changed is done by register handler to signal match of interfaceAdded event.\nhttps://github.com/openbmc/pldm/blob/master/requester/mctp_endpoint_discovery.cpp#L22"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 350,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "This design does not cover state sensors and effecters, right?\n\nCan you list PDR related commands that will be used? Will the PDR APIs defined in libpldm be used? If so, or if not, please elaborate here (either way)."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 350,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 352,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "could also add 'pldm' in the path namespace"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 352,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "After discussion with Deepak, keeps the path format to match the design of sensor-architecture\nhttps://github.com/openbmc/docs/blob/master/architecture/sensor-architecture.md"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 358,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What will pldmd do on D-Bus when a PLDM sensor read command fails?"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 358,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 359,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "What do you plan to implement in pldmd? What will be the polling interval? For processing sensor related events, we may need to add further details, if that is being covered by this design.\n\nAlso, it would be good to list the sensor value read PLDM commands here, and also add a reference to the DSP0248 spec."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 359,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 366,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "Can you add some details regarding Testing in the relevant section?"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 366,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 39,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "50ad2c83b773468a444cd33cc891ab507dcc65bc",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/9",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1637234442,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-stack.md",
                    "line": 357,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Better to use the sensor names provided by sensor auxiliary names. TID#_sensorID# gives a very non-intuitive name."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 357,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "I mean names provided in Sensor auxiliary name PDR. (If we are using static PDRs, then we can add Sensor Auxiliary names PDRs too)"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 357,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 399,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Also, we would have a \"configurable\" way to pause and resume sensor polling. The usecase is - when firmware updates are ongoing, we would want maximum bandwidth of the physical medium to be given to firmware update process; for example on SMBus medium, we could have the firmware updates go through on higher priority over sensor monitoring - thus we can pause the sensor polling when firmware update is in progress and resume after it is done."
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 399,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 76,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "3d87e3fb221f86a58f0e10160d619e6bf49cf2ae",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/10",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1638232005,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 78,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "7049a7fbe1162a99cef4539fcc0263f832df48e6",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/11",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1638250210,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/pldm-stack.md",
                    "line": 374,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit: property"
                },
                {
                    "file": "designs/pldm-stack.md",
                    "line": 374,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.chen@arm.com",
                        "username": "gilbert225"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 80,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 80,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "a7cf2abe5eacb2b1809baf29ada21fd5013fc4c0",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/52/47252/12",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "createdOn": 1638275844,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.chen@arm.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/pldm-stack.md",
                    "type": "MODIFIED",
                    "insertions": 80,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 80,
            "sizeDeletions": 0
        }
    ]
}