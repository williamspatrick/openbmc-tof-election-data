{
    "project": "openbmc/phosphor-networkd",
    "branch": "master",
    "id": "Ia1ff739ff9168e672315acff2847623104bb38a3",
    "number": 41354,
    "subject": "Improve IPv4 and IPv6 nameserver address parsing",
    "owner": {
        "name": "Johnathan Mantey",
        "email": "johnathanx.mantey@intel.com",
        "username": "Howitzer105mm"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-networkd/+/41354",
    "commitMessage": "Improve IPv4 and IPv6 nameserver address parsing\n\nThe getNameServerFromResolvd function only functioned correctly for\nIPv4 addresses. It used a home-grown algorithm to perform the parsing\nof the data that it received from D-Bus.\n\nThe modification made here uses the Linux inet_ntop() function to\nparse the IPv4 and IPv6 addresses. This function is more robust in the\ntypes and kinds of IP address input it can accept.\n\nThe misbehavior of this function was first witnessed in the Redfish\nbmc/EthernetInterfaces/eth(x) URI. The NameServers and\nStaticNameServers were printing IPv6 addresses as if they were IPv4\naddresses. This change corrects the presentation of both types of\naddress in these collections.\n\nTested:\nEnabled IPv6/IPv4 DHCP and used a Redfish GET to retrieve the assigned\nnameservers.\nGET :url/redfish/v1/Managers/bmc/EthernetInterfaces/eth0\nThe NameServers entries printed in the proper IPv4 and IPv6 address\nformats instead of printing in IPv4 format.\n\nI also inverted the test on the inet_pton function call to make all\nresults execute the failure case. The NameServer collection was\nempty.\n\nChange-Id: Ia1ff739ff9168e672315acff2847623104bb38a3\nSigned-off-by: Johnathan Mantey <johnathanx.mantey@intel.com>\n",
    "createdOn": 1615929235,
    "lastUpdated": 1617119428,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1615929235,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1615929252,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615929392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13885/ : SUCCESS"
        },
        {
            "timestamp": 1615930475,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 1:\n\nAdding maintainers."
        },
        {
            "timestamp": 1615932101,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1615995132,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1615995144,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615995928,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13924/ : SUCCESS"
        },
        {
            "timestamp": 1616003140,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1616010652,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1617058855,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1617110413,
            "reviewer": {
                "name": "Jan Sowinski",
                "email": "jan.sowinski@intel.com",
                "username": "jansow"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nLooks like converting IP addresses from binary to text form is already done in code base.\nConsidering reusing this code."
        },
        {
            "timestamp": 1617119132,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nJan, I did review the code path you suggested. I'd like to keep the code as written."
        },
        {
            "timestamp": 1617119428,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Abandoned\n\nIssue is resolved in a merged commit: 983da5568c70a75d0c0c2c2d05ee8e497d6cd4f6"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "44dbc3276cf72aa8b28d32a322dd54c5dcdfbfa0",
            "parents": [
                "a5a0944ccb8d925d6d83897b1e2397e85564ea1e"
            ],
            "ref": "refs/changes/54/41354/1",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1615929235,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "ethernet_interface.cpp",
                    "line": 763,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: prefer comparing to nullptr since it returns a pointer"
                },
                {
                    "file": "ethernet_interface.cpp",
                    "line": 764,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Reference the input dst size directly with `std::size(address)` instead of INET6_ADDRSTRLEN to guarantee the size is consistent"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 7,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "24d9d040bb5bb674e65e5364811977a414e93877",
            "parents": [
                "a5a0944ccb8d925d6d83897b1e2397e85564ea1e"
            ],
            "ref": "refs/changes/54/41354/2",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1615995132,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "ethernet_interface.cpp",
                    "line": 763,
                    "reviewer": {
                        "name": "Jan Sowinski",
                        "email": "jan.sowinski@intel.com",
                        "username": "jansow"
                    },
                    "message": "Have you considered using toString(...) function from utils, possibly with addrFromBuf(...)?\nExample usage can be found at routing_table.cpp"
                },
                {
                    "file": "ethernet_interface.cpp",
                    "line": 763,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "I had not considered that. I continued using the mode already established by the prior author. D-Bus is already providing an array of bytes in the correct form. Is there an advantage to be gained by pointing those bytes at addrFromBuf as a string_view, then having it copy those bytes into a in_addr{6}, recasting them to InAddrAny, and then passing them to toString to be handed to inet_ntop? I'd rather just provide the bytes to inet_ntop directly."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 7,
            "sizeDeletions": 4
        }
    ]
}