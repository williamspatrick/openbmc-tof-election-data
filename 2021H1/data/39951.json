{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "topic": "sst",
    "id": "I19d8b461fac25682f1883fe769d840f18f4141a8",
    "number": 39951,
    "subject": "Handle Processor.AppliedOperatingConfig PATCH",
    "owner": {
        "name": "Jonathan Doman",
        "email": "jonathan.doman@intel.com",
        "username": "jonathan-doman"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/39951",
    "commitMessage": "Handle Processor.AppliedOperatingConfig PATCH\n\nAllow client to PATCH the URI pointing to the active OperatingConfig for\na given processor, in order to dynamically change the processor's\nconfiguration. The OperatingConfig related properties are only available\nif a supporting backend daemon is running - currently we have the Intel\ncpuinfoapp in the smbios-mdr repo.\n\nThis change does basic validation on input data, then sets the D-Bus\nproperty and translates any return errors into Redfish error messages.\n\nTested:\n- PATCH non-existent Processor -> ResourceNotFound\n- PATCH with string/int -> PropertyValueTypeError\n- PATCH with object w/o @odata.id -> PropertyMissing+Unknown\n- PATCH with config from different Processor -> PropertyValueIncorrect\n- PATCH with non-existent config -> PropertyValueIncorrect\n- PATCH with valid config -> OK, see new config on next GET\n\n- Hack cpuinfoapp backend service to return all possible error codes and\n  verify that correct Redfish error is returned.\n\nChange-Id: I19d8b461fac25682f1883fe769d840f18f4141a8\nSigned-off-by: Jonathan Doman <jonathan.doman@intel.com>\n",
    "createdOn": 1611371815,
    "lastUpdated": 1621033531,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1611371815,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1611371827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611371916,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/11335/ : FAILURE"
        },
        {
            "timestamp": 1611372127,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1611373228,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Topic set to sst"
        },
        {
            "timestamp": 1612575318,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1612575334,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612575420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12005/ : FAILURE"
        },
        {
            "timestamp": 1613779780,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1613779792,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613779840,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1613779857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613779860,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12726/ : ABORTED"
        },
        {
            "timestamp": 1613779911,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1613780164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12727/ : FAILURE"
        },
        {
            "timestamp": 1613781511,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1613781527,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613781587,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(9 comments)"
        },
        {
            "timestamp": 1613782442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12728/ : SUCCESS"
        },
        {
            "timestamp": 1613787266,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 5:\n\n(8 comments)"
        },
        {
            "timestamp": 1613843536,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(12 comments)\n\nI forgot to hit send on the second batch of messages yesterday.  Some of them have already been solved.  Feel free to ignore if it's already been addressed."
        },
        {
            "timestamp": 1614108025,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1614108040,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1614108041,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614108068,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12899/ : FAILURE"
        },
        {
            "timestamp": 1614109271,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 6:\n\n(7 comments)"
        },
        {
            "timestamp": 1614216357,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1614216374,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614216402,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13018/ : FAILURE"
        },
        {
            "timestamp": 1614217102,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased."
        },
        {
            "timestamp": 1614217119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614217446,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13020/ : FAILURE"
        },
        {
            "timestamp": 1614218246,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 9: Patch Set 8 was rebased."
        },
        {
            "timestamp": 1614218259,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614218956,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 9:\n\n(5 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1614219185,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13024/ : SUCCESS"
        },
        {
            "timestamp": 1614219571,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1614219591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614220519,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13026/ : SUCCESS"
        },
        {
            "timestamp": 1614622090,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 10:\n\n(3 comments)"
        },
        {
            "timestamp": 1616193521,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 11: Patch Set 10 was rebased."
        },
        {
            "timestamp": 1616193534,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616194200,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14070/ : SUCCESS"
        },
        {
            "timestamp": 1616264347,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1616382290,
            "reviewer": {
                "name": "Kuiying Wang",
                "email": "wangkuiying.wky@alibaba-inc.com",
                "username": "kuiyingw"
            },
            "message": "Patch Set 11:\n\n(3 comments)"
        },
        {
            "timestamp": 1616463306,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1616463323,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616463446,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1616463748,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14190/ : SUCCESS"
        },
        {
            "timestamp": 1617765144,
            "reviewer": {
                "name": "Kuiying Wang",
                "email": "wangkuiying.wky@alibaba-inc.com",
                "username": "kuiyingw"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1618008289,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 12:\n\nHi Ed, backend change has been merged. Please take another look here when you can."
        },
        {
            "timestamp": 1618008509,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1618008525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618008718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/15209/ : FAILURE"
        },
        {
            "timestamp": 1618009012,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1618009693,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1618009711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618010454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15210/ : SUCCESS"
        },
        {
            "timestamp": 1618010502,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 14:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1618352031,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 14:\n\nAny feedback is appreciated, y'all! There are some open questions about how perfect we want to be with the error messages, but I think it's ready to go."
        },
        {
            "timestamp": 1618421376,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 14:\n\n(7 comments)\n\n> Patch Set 14:\n> \n> Any feedback is appreciated, y'all! There are some open questions about how perfect we want to be with the error messages, but I think it's ready to go.\n\nThere's still lots of discussions going on about associations vs dbus paths for hierarchy like this.  Those will likely need to resolve before this merges.\n\nI've left comments without reading the old ones (I figured that was more valuable to you).  Apologizes if I've duplicated anything."
        },
        {
            "timestamp": 1618430470,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 14:\n\n(10 comments)"
        },
        {
            "timestamp": 1618443412,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1618443431,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618444111,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15447/ : SUCCESS"
        },
        {
            "timestamp": 1618444717,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1618444731,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618445149,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1618445422,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15451/ : SUCCESS"
        },
        {
            "timestamp": 1618506045,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(7 comments)"
        },
        {
            "timestamp": 1618870545,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1618870565,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618871118,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 17:\n\n(4 comments)"
        },
        {
            "timestamp": 1618871231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15759/ : SUCCESS"
        },
        {
            "timestamp": 1618871629,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1619194076,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 17:\n\nI've posted WIP patches to switch to D-Bus associations between CPU objects and OperatingConfig objects:\nbackend - https://gerrit.openbmc-project.xyz/c/openbmc/smbios-mdr/+/42439\nbmcweb - https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/42440\n\nCan we go ahead with getting this commit reviewed using the current path hierarchy assumptions just to get the functionality working?"
        },
        {
            "timestamp": 1620353554,
            "reviewer": {
                "name": "Terry Duncan",
                "email": "terry.s.duncan@intel.com",
                "username": "tsdunc"
            },
            "message": "Patch Set 17: Code-Review+1\n\nEd, I have gone through your comments and looks like all was resolved except the \"associations versus dbus path hierarchy\". Is this a sticking point?"
        },
        {
            "timestamp": 1620407027,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(3 comments)\n\n> Patch Set 17: Code-Review+1\n> \n> Ed, I have gone through your comments and looks like all was resolved except the \"associations versus dbus path hierarchy\". Is this a sticking point?\n\nI'm not sure that's a sticking point;  I just haven't gotten back around to this because nobody else has reviewed it, so it seemed like a lower priority.  I added a question and one response;  I'll get back to reviewing this patch soon (hopefully today or Monday)"
        },
        {
            "timestamp": 1620434002,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1620670588,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 17:\n\n(5 comments)\n\nI have a few questions and observations."
        },
        {
            "timestamp": 1620753290,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 17:\n\n(5 comments)"
        },
        {
            "timestamp": 1620771807,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1620771823,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620772128,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1620772416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17051/ : SUCCESS"
        },
        {
            "timestamp": 1620775920,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1620776013,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1620835449,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 18: Code-Review+1\n\n(1 comment)\n\nI have no other changes to request."
        },
        {
            "timestamp": 1621011333,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(2 comments)\n\nI don't really want to hold this patch up any longer;  What's there is correct enough, and we can iterate once we figure out the dbus path stuff.\n\nTwo super minor things to fix, then I suspect this can be merged.\n\nIf you don't get to the below in the near future, I can get the changes made the next time I do a batch of merges, as they're very minor."
        },
        {
            "timestamp": 1621015706,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1621015729,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621015758,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/17360/ : FAILURE"
        },
        {
            "timestamp": 1621016188,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1621016199,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1621016219,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621016647,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17362/ : SUCCESS"
        },
        {
            "timestamp": 1621016944,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1621017195,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1621017999,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1621018182,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1621028480,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1621028495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621028610,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1621028996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17379/ : SUCCESS"
        },
        {
            "timestamp": 1621033528,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21: Code-Review+2"
        },
        {
            "timestamp": 1621033531,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 3cde86f14b7835775d7c37e993fb84a3cd01ef9d by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "c42bbee92c8ce4cfa9c785624e11022fecf288c9",
            "parents": [
                "a90daf182891521fcc7c3e99ba266e6a55d4b4dd"
            ],
            "ref": "refs/changes/51/39951/1",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1611371815,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More information is needed here.  Why is this useful?  How is it generally used by a user?  What backend daemons are used when this is used?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should be 404, resource not found."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What implementation and platform did you test against for your backend?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "It's a future Intel platform - hopefully the details provided in PS9 are sufficient."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Cool, let me know when the backend for this is pushed.  Because this code can't really be executed, this review has been somewhat low on my priority list.  Once we get all the changes in review to make this feature work, this will be much higher on the priority list, although as-is, this patchset seems like it's pretty close to merge-worthy."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "closing stale comment"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For what it's worth, I don't think we really look at the resolved tag for this kind of thing, so no need to go through closing all the old patchset ones, but if it help you keep track, feel free to use it."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 780,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "CI fails because it doesn't have systemd 246 yet, but it's in yocto/openbmc already."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 780,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "took different approach which doesn't need the function"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 780,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The approach you used is fine.  https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/40588 is that patch to fix it\n\nand\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/35522 is adjusting how we use the escaping functions as soon as the build-scripts patch lands.\n\nNeither of these will likely be your problem depending on the order in which patches get merged and rebased, but just FYI in case something weird happens."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 780,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "closing stale comment"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 128,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 128,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "386d203cb89ca27fb4f3123c995926433463cdb5",
            "parents": [
                "74849bef22033fc8ff0011e1c48721ff973bd2a2"
            ],
            "ref": "refs/changes/51/39951/2",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1612575318,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 125,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "d19718cb4fcccec43370675bd24973799d36ffca",
            "parents": [
                "74849bef22033fc8ff0011e1c48721ff973bd2a2"
            ],
            "ref": "refs/changes/51/39951/3",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1613779780,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 122,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 122,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "9afce95ee3552ac0f41ec6c4be784cf30ccf70f6",
            "parents": [
                "28aa8de5d3ad14db3aecfb10f5462d5bd4637717"
            ],
            "ref": "refs/changes/51/39951/4",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1613779840,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please move this code to the next scope up so that all the json->properties code is in one spot.\n\nAlso, how sure are you that this is correct?  Setting a field based on a dict of @odata.id seems odd for a redfish API, but I can't quite put my finger on why."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "OK to the first point.\n\nTo your second point, it is perhaps weird, especially since a malformed request here will generate an error message about \"@odata.id\" instead of \"AppliedConfig\" - so not as useful. If we expect the PATCH body to match the property format returned by GET then this is correct. I did not see anything in the Redfish or odata specs suggesting the PATCH format should be different."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> OK to the first point.\n> \n> To your second point, it is perhaps weird, especially since a malformed request here will generate an error message about \"@odata.id\" instead of \"AppliedConfig\" - so not as useful.\n\nNot quite.  Accepting a parameter of @odata.id is not normally how this kind of thing would work, but I need to go do my research;  It's been a long time since we've built one of these APIs, so you very well could be right.\n\n> If we expect the PATCH body to match the property format returned by GET then this is correct.\n\nWe expect whatever Redfish specifies, but because this is a sub-resource, and also a link, I'm not actually sure what it's supposed to look like.  If this were a formal collection this would be a PUT or POST.   I'll do some research and get back to you;  At the same time, if you find anything in the redfish spec clarifying this, please post the section number.\n\n> I did not see anything in the Redfish or odata specs suggesting the PATCH format should be different.\n\nThe issue here is that this is a sub resource, and a link, so in some regards this is a PUT, as it's completely replacing the object, not PATCH, which would normally modify an existing object."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I asked the question in the Redfish forum: https://redfishforum.com/thread/435/patch-link-sub-resource"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Responses on the thread suggest I am expecting the correct PATCH payload (i.e. client should patch the full sub-object with @odata.id).\n\nHowever, my error handling is off since readJson will append error messages about the sub-property @odata.id. (And we should prefer to always respond with an error message about \"AppliedOperatingConfig\" - see my second post in that thread.)\nWould you prefer I continue to use readJson (with imperfect error responses), or roll my own json value extraction and ensure the full error message is returned?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 831,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "closing stale comment"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 833,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "dbus paths are usually snake case."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 833,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "This is not a D-Bus path - it's validating the @odata.id value."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 833,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Duh, my bad.  Fine as is."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 833,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 850,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wouldn't we normally rely on an association here?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 850,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Perhaps, but the D-Bus service today does not use associations because we didn't have a use case where the config objects needed to be decoupled from the cpu objects."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 850,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Perhaps, but the D-Bus service today does not use associations because we didn't have a use case where the config objects needed to be decoupled from the cpu objects.\n\nIn general relying on specific object paths is a bad idea;  I'll think on this.  The use case I can think of would be when this needs to link to another resource, or when the object paths are different between two systems, which should be allowed."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 850,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "closing stale comment"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 861,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Common error #11"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 861,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I think it complies with that rule? GetSubTree returns an empty success if no objects are found, so this means D-Bus or ObjectMapper is broken."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 861,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That didn't used to be the behavior, it used to return an error if the collection was empty.  Did that change?  Regardless, I see no call to resourceNotFound in your code, so there's no way this code could possibly comply, and properly handle 404."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 861,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "You can test with this:\n   busctl call xyz.openbmc_project.ObjectMapper /xyz/openbmc_project/object_mapper xyz.openbmc_project.ObjectMapper GetSubTree sias /xyz/openbmc_project/inventory 0 1 InvalidInterface123\n\nreturns this:\n    a{sa{sas}} 0\n\nYou are right about 404 but I'll address that in a different thread"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 861,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "no more getsubtree call in this change - closing"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Technically this should be an internal error, right?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "It doesn't make sense for ObjectMapper to return an object with an empty map, sure, so it could be an internal error.\n\nBut if this ObjectMapper result were consistent/repeatable, then if the client were to GET this same Processor, they would not find the AppliedOperatingConfig property. So that's why I decided it should return a PropertyUnknown. They are trying to PATCH a property which doesn't exist in the resource."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "code is removed from this change - closing"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 877,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Undefined behavior if serviceMap is empty."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 877,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "serviceMap is checked for empty on line 867."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 877,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, I didn't even see that.  This line is fine as is, see comment on line 867."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 877,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 892,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please call async_method_call for the moment to be consistent with the rest of bmcweb.  If we start using this method for sets, I'd like to be consistent about it, not only use it in the new code.  If that's a change you're interested in see happen, I'd love the help in getting the patchsets going.\n\nAs a side note, whomever wrote this to sdbusplus added a lovely race condition for you by following the javascript style of callback (with fail and success) instead of the normal asio style of a single callback that takes an error code.  You only capture resp on the failure side, so the response (in theory) could be sent out before the success callback is called.  Doesn't matter in this case, but I suspect someone will need to correct that before we can use that helper here, or in any place where we can't take multiple references to the same object in a callback."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 892,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "OK, no problem to replace this - it will make it easier to handle an D-Bus InvalidArgument response which I can map to the Redfish propertyValueIncorrect.\n\nAs for the race condition - sure I guess my success message would be printed after the response is sent. Doesn't seem like it would cause much trouble in practice since if you had any more work to do you'd have to capture resp."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 892,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have a patchset out to fix this.  I think this helper function is good, it just needs to look like a \"normal\" asio callback, not a javascript one.  It's not an issue here (your code is correct) but I don't want to start using a construct that we'll then have to fix later on down the road when we hit one of the harder cases.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/sdbusplus/+/40749"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 892,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 902,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect this needs to be resource not found, and done much earlier as well as here."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 902,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "In order to detect a 404, I'd have to do an extra GetSubTree on all 6 interfaces that can create a Redfish Processor. It seemed like unnecessary work just to get the return code correct, but I'll look into it."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 902,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not following why 6 lookups would be required.  If we hit this, it means that we couldn't find a place to write the value, and it's effectively 404."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 902,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "When client GETs the Processor, we do the lookup on several different interfaces in getProcessorData(). Only if none of the interfaces are found do we return 404. Hence the same logic should apply to the PATCH. This is missing in my patchset, but I will add the same lookup in doPatch() to determine up front if 404 should be returned.\n\nBut then in this function if xyz.openbmc_project.Control.Processor.CurrentOperatingConfig is not present we should return propertyUnknown, because it's required for AppliedOperatingConfiug to be present."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 902,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Refactored with much more robust 404 handling."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1173,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Don't use the req.url directly.  Use params[0], which has already parsed out the relevant information for you."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1173,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I want the entire URL here (not the param fragment) because I use it to validate that the PATCHed URI is a child of the request URI. Is that not acceptable?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1173,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Validate it against a fixed string with your path + the param.\n\nAt some point in the future, req.url becomes a private member variable, as using it makes it really hard to void injection attacks that the framework can solve for you."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1173,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 122,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 122,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "fa1ac8cf27e04c0f1e174ea43781869e1eb19476",
            "parents": [
                "28aa8de5d3ad14db3aecfb10f5462d5bd4637717"
            ],
            "ref": "refs/changes/51/39951/5",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1613781511,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 125,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "c406cb75db2240f3857b3239e237c9535c45862c",
            "parents": [
                "28aa8de5d3ad14db3aecfb10f5462d5bd4637717"
            ],
            "ref": "refs/changes/51/39951/6",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1614108025,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 184,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 184,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "ce8fea854e72441603b90ff81d1272dea3765cbf",
            "parents": [
                "f9afe3b3cf3fb3c2b0bd24e4bd4219d5e40065e5"
            ],
            "ref": "refs/changes/51/39951/7",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1614216357,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 181,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 181,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "2f5dc682b88d34b01d0ddce2452016062f653250",
            "parents": [
                "ca1a63f7d103264bac37563fc90c79f200933cfd"
            ],
            "ref": "refs/changes/51/39951/8",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1614217102,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 181,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 181,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "613eb02446c6d66ea03b45206ec5d4527a11158b",
            "parents": [
                "772cde4a10c4ce6ec365db94607ff915a5c94e89"
            ],
            "ref": "refs/changes/51/39951/9",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1614218246,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 181,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 181,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "abc9d6a5169b5b1ee5d52b837517d2a96bf59455",
            "parents": [
                "772cde4a10c4ce6ec365db94607ff915a5c94e89"
            ],
            "ref": "refs/changes/51/39951/10",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1614219571,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "49f335c887a17131331175e91c22da40f19ff6fd",
            "parents": [
                "c951448acb5c81a69569326c080b1a50e5678cbf"
            ],
            "ref": "refs/changes/51/39951/11",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1616193521,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 990,
                    "reviewer": {
                        "name": "Kuiying Wang",
                        "email": "wangkuiying.wky@alibaba-inc.com",
                        "username": "kuiyingw"
                    },
                    "message": "This is just to handle the return message right?\nI don't think the function name is perfect."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 990,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I agree - changed to handleAppliedConfigResponse. Please reopen again if that's not clear."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1254,
                    "reviewer": {
                        "name": "Kuiying Wang",
                        "email": "wangkuiying.wky@alibaba-inc.com",
                        "username": "kuiyingw"
                    },
                    "message": "Do you wanna handle the return message?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1254,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "readJson automatically adds the error message to \"res\" if the json parsing fails, so we don't need to do anything extra."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1254,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1272,
                    "reviewer": {
                        "name": "Kuiying Wang",
                        "email": "wangkuiying.wky@alibaba-inc.com",
                        "username": "kuiyingw"
                    },
                    "message": "Do you wanna handle the return message?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1272,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "same as above"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "b68481073b5d96f13c5309ed2bb721d036a99ac5",
            "parents": [
                "8f7e9c194f36a84f4e49ad142110f4f3d0f312be"
            ],
            "ref": "refs/changes/51/39951/12",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1616463306,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "f9571b0416cb818078a03a573e553dac46080035",
            "parents": [
                "8d1b46d7f8d39db2ba048f9e9007106ca3a28c9b"
            ],
            "ref": "refs/changes/51/39951/13",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1618008509,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "db9b49abaf88417de397e6331b01713d8bc8f7b8",
            "parents": [
                "8d1b46d7f8d39db2ba048f9e9007106ca3a28c9b"
            ],
            "ref": "refs/changes/51/39951/14",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1618009693,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you give a pointer to the backend that you used?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "It is listed above: smbios-mdr repo, cpuinfoapp application"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wow, I'm blind.  Sorry about that;  Fine as is.  Note to self, 30 reviews in a day is too much."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 913,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I would've assumed one of these error codes would be not found.\n\nMost things tend to check something like:\nif (ec.value() == boost::system::errc::host_unreachable)\n\nBut we're wildly inconsistent here, so you'll likely need to check what return code your service returns."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 913,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "At this point, ObjectMapper already told us this service/object/interface exists, so my reasoning is that any other D-Bus error is a Redfish internalError. What other Redfish error would we return if the service doesn't exist even though it did just a second ago? Especially since you suggested below that the service not existing should result in an internalError?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 913,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> At this point, ObjectMapper already told us this service/object/interface exists, so my reasoning is that any other D-Bus error is a Redfish internalError.\n\n\nThe trick here is that the mapper is an OR of the interfaces, not an AND, so in theory, you could've just written to an interface that doesn't exist on this particular service.  It's unlikely, but something that's happened in practice before.\n\n> What other Redfish error would we return if the service doesn't exist even though it did just a second ago?\n\nThis is less a case of the service not existing, but more a case of the service didn't have the interfaces you thought it does.  With that said, as I read this with fresh eyes, I'm not super worried about this case.\n\n> Especially since you suggested below that the service not existing should result in an internalError?\n\nI did?  If the service doesn't exist, it should be 404."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 913,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "> The trick here is that the mapper is an OR of the interfaces, not an AND, so in theory, you could've just written to an interface that doesn't exist on this particular service.\n\nThe code checks that the specific interface is returned by the mapper - so barring a bug in the mapper the interface absolutely existed at some point. I don't think there are any additional errors to handle here."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 913,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > The trick here is that the mapper is an OR of the interfaces, not an AND, so in theory, you could've just written to an interface that doesn't exist on this particular service.\n> \n> The code checks that the specific interface is returned by the mapper - so barring a bug in the mapper the interface absolutely existed at some point. I don't think there are any additional errors to handle here.\n\nOr a service that has shut down in the middle of running, which has happened in the past.\n\nWith that said, if you really don't want to change it, I'm not that worried about it."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 954,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't quite right.  Property Unknown would be for when the user provided a property we don't understand or know how to handle.  I suspect this should be 404 or internal error."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 954,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I don't think it should be 404 - as we already established at this point in the code that the Redfish object exists. My reasoning for propertyUnknown is that it's more useful than internalError - as explained in the comment, the property would not be shown if the user GETs the object. But I will change to internalError if you prefer."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 954,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I don't think it should be 404 - as we already established at this point in the code that the Redfish object exists. My reasoning for propertyUnknown is that it's more useful than internalError\n\nDisagree there.  PropertyUnknown implies that there is a correct property that the user could've set, which in this case there isn't.  OpenBMC has failed internally to meet its own dbus interface and there's nothing a user can do to correct it, which is the definition of internal error.  You're right, this should not be 404 if I'm reading the code right.\n\n> - as explained in the comment, the property would not be shown if the user GETs the object. But I will change to internalError if you prefer.\n\nPlease do."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 954,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 970,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please see and participate in the discussions on this topic of associations versus dbus path hierarchy.  It's not clear this is a good design pattern to use in general, and if it's something you need, you should weigh in."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 970,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Where is the discussion? I don't see anything on the mailing list?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 970,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I would like to get this merged asap - any chance I can be grandfathered in with the current d-bus structure before waiting for any discussion to be resolved?\n\nIf no, what if I also post patchsets on top of this that switch to an association-style d-bus structure? I don't think associations make this feature better, but I'll do whatever it takes."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 970,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It happened on discord as well as a design doc that got written."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 978,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI, this method is going away in lieu of sdbusplus::message::object_path::operator/\n\nThere's also discussion on this going on in the forums.  You might want to weigh in there."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 978,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> FYI, this method is going away in lieu of sdbusplus::message::object_path::operator/\n> \n> There's also discussion on this going on in the forums.  You might want to weigh in there.\n\nPS, I realize that this wasn't the \"old way\" at the time the patchet was written.  I'm not super worried about it, but just be aware if the regex removal patch lands before this one."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 978,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Switched to using object_path::operator/ - not a problem"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1252,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is generally not how you would check for 404, as it requires two blocking transactions.  You would normally check the return codes to the patch call."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1252,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "The question of whether the resource exists is totally separate from whether the PATCH is valid - that's why I added getProcessorObject. And it doesn't add any transactions - we would have to do an ObjectMapper lookup to find the backend to handle the PATCH anyway - this just does it upfront in a \"complete\" way to determine whether the resource really exists at all."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1252,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The question of whether the resource exists is totally separate from whether the PATCH is valid - that's why I added getProcessorObject. And it doesn't add any transactions - we would have to do an ObjectMapper lookup to find the backend to handle the PATCH anyway - this just does it upfront in a \"complete\" way to determine whether the resource really exists at all.\n\nThat's a fair point.  I guess I usually see this pattern used with direct access to daemons, but you're right in this case.  Fine as is."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1252,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please do this parsing at the higher scope.  This allows passing a much smaller payload into the lambda."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1266,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done, but for context I did it that way so it would be easier to add more PATCHable properties in the future."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Understood, but one transition that'll have to happen at some point is reducing the scope lifetime of the req object itself to the first callback handler, so we can support more connections and things like http2 in parallel.  The fewer things that follow this pattern, the fewer things that will need fixed, although I realize that it requires passing values through the lambda, which can be onerous."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 179,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 179,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "58d076acf0c3b6bab3ada0a65a8b58766d22ca17",
            "parents": [
                "8d1b46d7f8d39db2ba048f9e9007106ca3a28c9b"
            ],
            "ref": "refs/changes/51/39951/15",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1618443412,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 172,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 172,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "3e1a81ce2581402f358190ec08e34b08634fe753",
            "parents": [
                "8d1b46d7f8d39db2ba048f9e9007106ca3a28c9b"
            ],
            "ref": "refs/changes/51/39951/16",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1618444717,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 173,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "83bdb256ede55b804391dd8a59167ee7248d907f",
            "parents": [
                "b295bf951f391380e60234d0fe6df7ad4f5b00c9"
            ],
            "ref": "refs/changes/51/39951/17",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1618870545,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What backend are you using for this test?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "cpuinfoapp is an application in the smbios-mdr repo, as noted above in the commit msg"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sorry, didn't realize that backend was in smbios-mdr these days.\n\nPS, this kind of testing is above and beyond, which I appreciate."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 955,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Can this portion be hard-coded?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 955,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "It is hardcoded everywhere in bmcweb so I assume yes."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 955,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For the moment, yes.  Once we support multi-node setups (which is coming like a freight train) this will need fixed, but that's not your problem in this patchset."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 972,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "This must be what you intend. It looks backward to me.\nThis really needs to be \ncpuPath appended with \"/redfish/v1/...../OperatingConfigs\"?\nEnhance the description of why this is desired?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 972,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "i'll try to clarify the comments here"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 972,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "See if it's more clear now.\nconfigBaseName will look like \"config0\"\ncpuObjectPath will look like \"/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0\""
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 972,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "I think I see where I was confused about the functionality vs the intent of the code.\n1. I think I conflated the expectedPrefix size with appliedConfigUri\n2. Misunderstood substr thinking it was getting 0,size(), instead of size(), npos. Sometimes it's good to have to be required to supply all the parameters to a function.\n3. Mixing dirname and basename around. I haven't used the two enough to have their functionality memorized."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1237,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Does this need to assign an error return message?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1237,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "json_util::readJson automatically adds an error message if it doesn't find any matching properties."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1241,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Nit: Consider eliminating the nested \"if\"?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1241,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "sure"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1241,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1246,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Does this need to assign an explicit error message?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1246,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "No, readJson will automatically add it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "efb6cc922b03e74365e9518c776e8c59f53ab31c",
            "parents": [
                "1b1be67fb8d50293d452316f51227363750a3d00"
            ],
            "ref": "refs/changes/51/39951/18",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1620771807,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 957,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "technically this should be AppliedOperatingConfig/@odata.id because we're one level deep in the json structure, and this is supposed to be a json pointer."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 957,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Thank you! I knew this looked wrong but didn't know \"json pointer\" is what I needed. Also updated the other propertyValueIncorrect above."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Slight organizational change, please do something like\n\n\nif (appliedConfigJson){\n   if (readJson)...\n\n\n   getProcessorObject....\n\n}\n\n\n\nThis helps the code be clean when the next parameter gets added that can be patched."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "If/when there are multiple parameters, I think there should still only be a single call to getProcessorObject to avoid repeating that lookup work. Your suggested logic would not allow that. Maybe we'll hold off on changing this until we see what the next patchable parameter actually entails?"
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> If/when there are multiple parameters, I think there should still only be a single call to getProcessorObject to avoid repeating that lookup work.\n\nThis would presume that all the processor interfaces are hosted by a single object, which for intel they probably are, but for other processors we won't have that gaurantee.  With that said, the current code is wildly inconsistent in that regard.\n\n> Your suggested logic would not allow that. Maybe we'll hold off on changing this until we see what the next patchable parameter actually entails?\n\nI think the logic would still allow for it, it would just require a two step process, parsing the parameters to data structures, THEN calling the getProcessorObject interface if any of the parameters we need are set, with that said, getProcessorObject wouldn't work as is, because it requires all interfaces to be accounted for, and doesn't have a concept of \"here's the parameters you need\" so it would have to be changed in that scenario anyway.\n\nAt the very least even if that never happens, making this look like every other patch handler helps in comprehension by maintainers."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > If/when there are multiple parameters, I think there should still only be a single call to getProcessorObject to avoid repeating that lookup work.\n> \n> This would presume that all the processor interfaces are hosted by a single object, which for intel they probably are, but for other processors we won't have that gaurantee.  With that said, the current code is wildly inconsistent in that regard.\n\nJust to clarify, by \"current code\" I mean the current bmcweb code for other handlers on master, not anything in relation to this patchset.\n\n> \n> > Your suggested logic would not allow that. Maybe we'll hold off on changing this until we see what the next patchable parameter actually entails?\n> \n> I think the logic would still allow for it, it would just require a two step process, parsing the parameters to data structures, THEN calling the getProcessorObject interface if any of the parameters we need are set, with that said, getProcessorObject wouldn't work as is, because it requires all interfaces to be accounted for, and doesn't have a concept of \"here's the parameters you need\" so it would have to be changed in that scenario anyway.\n> \n> At the very least even if that never happens, making this look like every other patch handler helps in comprehension by maintainers."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "So I had used EthernetInterface::doPatch() as an example and that logic flow is what I intended for getProcessorObject: pass all the parameters as std::optionals into the single callback and then call per-parameter handlers as necessary.\n\nBut yeah, I did not account for the possibility of there being multiple object paths in play for a single processor since the single-path assumption was in place when I arrived."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yeah.... ethernet interface (and hypervisor interface because it was copy-pasted from ethernet) is one of my poster children for what not to do in general, but it works in that context because there's only one implementation of the phosphor network interfaces that everyone shares, so it can wrongly make assumptions like that and not cause bugs."
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "line": 1239,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Haha, of course I would find that code and use it then. I updated this code and retested."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 167,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "b230f6d1477e7e8fd2a8b3a83042334c45cfccd3",
            "parents": [
                "1b1be67fb8d50293d452316f51227363750a3d00"
            ],
            "ref": "refs/changes/51/39951/19",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1621015706,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 167,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "b7e5ced945edec3f614588119ed6f369756e0d2c",
            "parents": [
                "1b1be67fb8d50293d452316f51227363750a3d00"
            ],
            "ref": "refs/changes/51/39951/20",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1621016188,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 167,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "5047e51baff443dcb1a75b7a1762f78289a9719f",
            "parents": [
                "1b1be67fb8d50293d452316f51227363750a3d00"
            ],
            "ref": "refs/changes/51/39951/21",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1621028480,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "3cde86f14b7835775d7c37e993fb84a3cd01ef9d",
            "parents": [
                "80be2cdb217fd11e60c403a019134ee970ae6453"
            ],
            "ref": "refs/changes/51/39951/22",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1621033531,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/processor.hpp",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        }
    ]
}