{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "Id0fcb704ac20083fae1760ec7d6e6cb559442526",
    "number": 39843,
    "subject": "FruDevice: Verify offset overlap",
    "owner": {
        "name": "Vijay Khemka",
        "email": "vijaykhemkalinux@gmail.com",
        "username": "vijaykhemka"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/39843",
    "commitMessage": "FruDevice: Verify offset overlap\n\nChecking each field area offset if they are overlapping with\nother field area offset.\n\nSigned-off-by: Vijay Khemka <vijaykhemkalinux@gmail.com>\nChange-Id: Id0fcb704ac20083fae1760ec7d6e6cb559442526\n",
    "createdOn": 1611171380,
    "lastUpdated": 1612546949,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1611171380,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1611171394,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611171654,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11164/ : SUCCESS"
        },
        {
            "timestamp": 1611172875,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1611185124,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1611186622,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1611253014,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nLooking for 1 comment added, then this looks good to go."
        },
        {
            "timestamp": 1611267890,
            "reviewer": {
                "name": "Peter Lundgren",
                "email": "peterlundgren@google.com",
                "username": "peterlundgren"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1611275722,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1611276584,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1611276596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611276859,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11283/ : SUCCESS"
        },
        {
            "timestamp": 1611279711,
            "reviewer": {
                "name": "Peter Lundgren",
                "email": "peterlundgren@google.com",
                "username": "peterlundgren"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1611343673,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1611345394,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1611345410,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611345804,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11324/ : SUCCESS"
        },
        {
            "timestamp": 1611352848,
            "reviewer": {
                "name": "Peter Lundgren",
                "email": "peterlundgren@google.com",
                "username": "peterlundgren"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1611360757,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 3:\n\nThanks Peter"
        },
        {
            "timestamp": 1611610290,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1611619915,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1611625080,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1611683171,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1611684950,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1611684962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611685276,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11421/ : SUCCESS"
        },
        {
            "timestamp": 1611765747,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1611768653,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1611771926,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1611771940,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611772215,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11467/ : SUCCESS"
        },
        {
            "timestamp": 1612462383,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 5:\n\nA friendly reminder."
        },
        {
            "timestamp": 1612463056,
            "reviewer": {
                "name": "Patrick Venture",
                "email": "venture@google.com",
                "username": "pstrinkle"
            },
            "message": "Patch Set 5:\n\nIf you drop this utility validation method into FruUtils - you can easily add a unit-test to validate the behavior."
        },
        {
            "timestamp": 1612465121,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> If you drop this utility validation method into FruUtils - you can easily add a unit-test to validate the behavior.\n\nPatrick, I am planning to add unit test for every function of FRU later. If you still feel that FruUtils is the right place then I will drop there."
        },
        {
            "timestamp": 1612465206,
            "reviewer": {
                "name": "Patrick Venture",
                "email": "venture@google.com",
                "username": "pstrinkle"
            },
            "message": "Patch Set 5: Code-Review+1\n\nLooks good, please move into FruUtils in a follow-up patchset with unit-tests per comment."
        },
        {
            "timestamp": 1612468227,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5: Code-Review+1\n> \n> Looks good, please move into FruUtils in a follow-up patchset with unit-tests per comment.\n\nSure Patrick, I will do. Thanks"
        },
        {
            "timestamp": 1612546837,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1612546949,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 02618f0ddf46d99bb053b403567ca86bb6a9fa99 by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "eb4d46f53a24375b04f7a26a5c659064954b1610",
            "parents": [
                "ab29641a703dd456728f3a0f05187ffc032c8ea6"
            ],
            "ref": "refs/changes/43/39843/1",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1611171380,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/FruDevice.cpp",
                    "line": 798,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "check your ranges."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 798,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Didn't understand this, are you asking to verify if vector size is within range. As this will fall within first 8 bytes which is a header and assuming it will have header at least. But I can check if vector size is less than 8 bytes."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 811,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Check your ranges."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 812,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't an offset of 0 allowed?"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 812,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "At offset 0, fru header starts. zero value means this area not available."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 812,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, ok.  Can you add a comment to that effect in the line above?"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 812,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "This also incidentally makes overlap with the common header impossible."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 817,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can't be the same is the same check as overlapping.  A correct overlapping check would also check for \"is same\""
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 817,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I will fix wording"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 818,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This conditional doesn't look like it checks for overlap properly."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 818,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "start -- start offset of this area space\nend -- This value is actually offset after last byte.if you see calculation it is start + len\nSo I am checking for either same offset or in between star and (end -1) for failure."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 818,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "after discussing with vijay offline, this check looks correct, as we're testing for overlap on all sections, therefore we don't need to check the full range, only the start here."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 841,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "We're not calling verifyOffset() on the Internal Use Area or MultiRecord Area.\n\nI suppose the Internal Use Area is a bit tricky because it doesn't have a length field. The MultiRecord Area, on the other hand, needs to walk the linked list to get the full length."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 841,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "yes but we are checking them against all field areas. so this should be good."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 841,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "verifyOffset() checks if the start of currentArea is within any of the others. This algorithm works, but only if if verifyOffset() is called for every area. Counter example: Product Info Area from bytes  80-120, MultiRecord Area from 100-200."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 841,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Peter, this is other way around. if others are falling in current area space. If you see I am checking for all area offsets in the given region including internal area and multi record area. So as per your example verify offset will look every area offset within 80-120 and at last when it hits multi record offset 100, it will be caught."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 841,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "We caught up offline. Vijay's right; I had it backwards. I still thought there was a missing case e.g. Product Info Area from 80-120 and MultiRecord Area from 60-100. But section 17 of the spec implies that the areas do actually have a required order. So this problem can't happen.\n\nSolution: enforce that all the areas are in the order defined in section 17. Vijay will implement this in another patch."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 866,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: please don't use block comments for single line comments."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 866,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "I don't understand the use of *fruBytesIter as the length."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "fruBytesIter points to the length field, if you see following code, The calculation of length. And I am not using * multiples as both offsets and areas are being compared in it's original index before 8 byte multiplication."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Peter Lundgren",
                        "email": "peterlundgren@google.com",
                        "username": "peterlundgren"
                    },
                    "message": "I see now. Document this in the comment for verifyOffset()."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 867,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 869,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should print more information.  Which offsets overlapped with which?  Which section was it found in?"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 869,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Sure, I will update this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "c49c6ed995ffaf51351507c073bd1bfbc3aceb20",
            "parents": [
                "ab29641a703dd456728f3a0f05187ffc032c8ea6"
            ],
            "ref": "refs/changes/43/39843/2",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1611276584,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "d5691a8ee36399f4591fbde873048473c1d4c53e",
            "parents": [
                "ab29641a703dd456728f3a0f05187ffc032c8ea6"
            ],
            "ref": "refs/changes/43/39843/3",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1611345394,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/FruDevice.cpp",
                    "line": 805,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't an appropriate range check.  Check against the thing you're looking up (ie currentArea), not a constant that may or may not be within the range."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 805,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "All the areas comes under 8 bytes header and I am not accessing anything beyond header. I can check agaianst getHeaderAreaFieldOffset(fruArea.size - 1). But I think it is simple and safe to check against header size and all the areas a re defined inside header"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 805,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I can call this function in a way that it seg faults.  A range check needs to prevent the following code from seg faulting and indexing outside the range.\n\nveifyOffset(std::vector<uint8_t>(), static_cast<fruAreas>(256), .....);"
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 805,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I get it here, I will fix this"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 60,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 60,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "f26056360b4d3bd0dbd9fa9e8b522fcaa462d6f4",
            "parents": [
                "ab29641a703dd456728f3a0f05187ffc032c8ea6"
            ],
            "ref": "refs/changes/43/39843/4",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1611684950,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/FruDevice.cpp",
                    "line": 818,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This range is still unchecked.  Considering we're calling into another method, and not using currentArea directly, we need to check before indexing into fruBytes with that index.  In theory getHeaderAreaFieldOffset could return 99999 and we'd seg fault here."
                },
                {
                    "file": "src/FruDevice.cpp",
                    "line": 818,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "It is an inline function which just add 1 to point to index"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 67,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "efedad8fca739a0ebeda656262d5500ba42c909d",
            "parents": [
                "ab29641a703dd456728f3a0f05187ffc032c8ea6"
            ],
            "ref": "refs/changes/43/39843/5",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1611771926,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 84,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "02618f0ddf46d99bb053b403567ca86bb6a9fa99",
            "parents": [
                "0836ce053c2ce94fb1d56eed37ad78514de7934e"
            ],
            "ref": "refs/changes/43/39843/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1612546949,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 84,
            "sizeDeletions": 0
        }
    ]
}