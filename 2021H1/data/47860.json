{
    "project": "openbmc/phosphor-fan-presence",
    "branch": "master",
    "id": "Id799986ff69455b7c7054070ed2ab3b2e2500a6c",
    "number": 47860,
    "subject": "control: Support target_path option in configuration file",
    "owner": {
        "name": "Chanh Nguyen",
        "email": "chanh@os.amperecomputing.com",
        "username": "chnguyen-ampere"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-fan-presence/+/47860",
    "commitMessage": "control: Support target_path option in configuration file\n\nThe target path contain the interface xyz.openbmc_project.control.Fan* can be\ndifference between phosphor-hwmon and dbus-sensor.\n\nIn phosphor-hwmon, it is \"/xyz/openbmc_project/sensors/fan_tach/\".\nIn dbus-sensor, it is \"/xyz/openbmc_project/control/fanpwm/\"\n\nThis commit supports setting this option in the configuration file.\nBy default, it is \"/xyz/openbmc_project/sensors/fan_tach/\"\n\nSigned-off-by: Chanh Nguyen <chanh@os.amperecomputing.com>\nChange-Id: Id799986ff69455b7c7054070ed2ab3b2e2500a6c\n",
    "createdOn": 1634284605,
    "lastUpdated": 1635537925,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1634284605,
            "reviewer": {
                "name": "Chanh Nguyen",
                "email": "chanh@os.amperecomputing.com",
                "username": "chnguyen-ampere"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634284616,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634284716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28334/ : SUCCESS"
        },
        {
            "timestamp": 1634583397,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 1:\n\n(5 comments)\n\nFYI, the source supporting the YAML based config will be deprecated in favor of JSON based configurations in the future."
        },
        {
            "timestamp": 1635137581,
            "reviewer": {
                "name": "Chanh Nguyen",
                "email": "chanh@os.amperecomputing.com",
                "username": "chnguyen-ampere"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1635431625,
            "reviewer": {
                "name": "Chanh Nguyen",
                "email": "chanh@os.amperecomputing.com",
                "username": "chnguyen-ampere"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1635537925,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a354917a0c780f5713aa642ebd39682e1bdcfa1f",
            "parents": [
                "4b51592fd93e8ce3e7f266bb15583f06a2f0c64a"
            ],
            "ref": "refs/changes/60/47860/1",
            "uploader": {
                "name": "Chanh Nguyen",
                "email": "chanh@os.amperecomputing.com",
                "username": "chnguyen-ampere"
            },
            "createdOn": 1634284605,
            "author": {
                "name": "Chanh Nguyen",
                "email": "chanh@os.amperecomputing.com",
                "username": "chnguyen-ampere"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "odd wrapping"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Chanh Nguyen",
                        "email": "chanh@os.amperecomputing.com",
                        "username": "chnguyen-ampere"
                    },
                    "message": "Yes, I will fix it! thank you"
                },
                {
                    "file": "control/example/fans.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Your commit msg describes `target_path` to be similar to the default sensors path without the sensor name here."
                },
                {
                    "file": "control/example/fans.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "Chanh Nguyen",
                        "email": "chanh@os.amperecomputing.com",
                        "username": "chnguyen-ampere"
                    },
                    "message": "Yes Matthew,\n\nWhy I define the \"target_path\" is targetpath (/xyz/openbmc_project/control/fanpwm/) + targetname (PWM1) . It's a full path.\n\nAs you know, If we use the entity-manager replace the hwmon then the PWM target path will generated to new path (/xyz/openbmc_project/control/fanpwm/), NOT it /xyz/openbmc_project/sensors/fan_tach/.\n\nAnd the targetname (may be Pwm_1, Pwm_2, .... ) will be difference with the sensor_name at /xyz/openbmc_project/sensors/fan_tach/\n\nSo, I don't want to define the targetname, So I defined the target_path is a full path (/xyz/openbmc_project/control/fanpwm/PWM1) in case we don't use default and need define the target_path"
                },
                {
                    "file": "control/fan.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "If you default the path without the sensor name, then this can be simplified to:\n```\npath = std::get<targetControlPathPos>(def) + s;\n```"
                },
                {
                    "file": "control/fan.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Chanh Nguyen",
                        "email": "chanh@os.amperecomputing.com",
                        "username": "chnguyen-ampere"
                    },
                    "message": "the targetname (may be Pwm_1, Pwm_2, .... ) at /xyz/openbmc_project/control/fanpwm/ will be difference with the sensor_name at /xyz/openbmc_project/sensors/fan_tach/\n\nSo I would like to define the target_path as full path, it includes the targetname"
                },
                {
                    "file": "control/fan.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Are you saying you have the following dbus object paths as an example?\n```\n/xyz/openbmc_project/control/fanpwm/PWM_1\n/xyz/openbmc_project/sensors/fan_tach/PWM_1\n```\nwhere /xyz/openbmc_project/control/fanpwm/PWM_1 has the target interface on it and /xyz/openbmc_project/sensors/fan_tach/PWM_1 has the value interface?\n\nPlease provide an example of your dbus object paths and what interfaces(target and value) are on each path. Thanks"
                },
                {
                    "file": "control/gen-fan-zone-defs.py",
                    "line": 702,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Why not default this to the sensors path here similar to what the `target_interface` does above?"
                },
                {
                    "file": "control/gen-fan-zone-defs.py",
                    "line": 702,
                    "reviewer": {
                        "name": "Chanh Nguyen",
                        "email": "chanh@os.amperecomputing.com",
                        "username": "chnguyen-ampere"
                    },
                    "message": "Ok Matthew, it will be clear after we choose the target_path format."
                },
                {
                    "file": "control/json/fan.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "This should be the target_path + sensor.get<std::string>() where the path is given to the sensor. Even on a dbus-sensors implementation, there's a sensor name that's provided which an be appended to this target_path."
                },
                {
                    "file": "control/json/fan.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Chanh Nguyen",
                        "email": "chanh@os.amperecomputing.com",
                        "username": "chnguyen-ampere"
                    },
                    "message": "We need to discuss the target_path. It should be a full path or target_path + target_name ?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "control/example/fans.yaml",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "control/fan.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -1
                },
                {
                    "file": "control/fan.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "control/gen-fan-zone-defs.py",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "control/json/fan.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -1
                },
                {
                    "file": "control/templates/fan_zone_defs.mako.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "control/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 5
        }
    ]
}