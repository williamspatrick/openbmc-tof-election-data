{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "I8b52cecdd815ec56efc6af97ad53325cb5d54c06",
    "number": 42063,
    "subject": "Confirm presence of NIC devices described in channel_config",
    "owner": {
        "name": "Johnathan Mantey",
        "email": "johnathanx.mantey@intel.com",
        "username": "Howitzer105mm"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/42063",
    "commitMessage": "Confirm presence of NIC devices described in channel_config\n\nThe channel_config.json file describes the IPMI channel arrangement\nassigned to the BMC. There is an implied expectation that this\nconfiguration file is a 1:1 description of a set of channels assigned\nto the BMC and the baseboard containing the BMC. There are vendors who\nmay prefer to create a smaller subset of firmware images, and apply\nthem to mulitple different final assemblies. One example of this is\nthe use of two final assemblies that differ only in the number of\nnetwork PHY devices populated on the board.\n\nThis commit compares the channel_config entries for the LAN channels\nagainst the LAN devices reported by getifaddrs. If a LAN channel is\ndescribed in the channel_config file, but is missing from the\ngetifaddrs device list, the channel is marked as invalid, effectively\nremoving the channel from IPMI. This permits run time identification\nof the LAN devices without adding unique vendor specific\nidentification tests.\n\nTested:\nUsed a channel_config file that defined two NIC devices, one on\nchannel 1, and the other on channel 3. The configuration file marked\nboth of these entries \"isValid = true\".\nThis change was then run on a BMC with only a single NIC attached. The\ngetifaddrs function returned only the \"lo\" and the \"eth0\" devices. The\n\"eth0\" device matched the channel_config entry for channelId == 3, and\na channel name == \"eth0\".\nUsing \"ipmitool raw 6 0x42 3\" returns channel information for eth0.\nUsing \"ipmitool raw 6 0x42 1\" returns a 0xcc response code.\nPrior to this change this command returned a success response code, and\ndata for an unknown NIC device.\n\nUsed these same commands on a baseboard which populated both NIC eth0,\nand eth1.\nThe ipmitool commands return a success response code, and modify their\nrespective NIC channels.\n\nChange-Id: I8b52cecdd815ec56efc6af97ad53325cb5d54c06\nSigned-off-by: Johnathan Mantey <johnathanx.mantey@intel.com>\n",
    "createdOn": 1617917456,
    "lastUpdated": 1621447043,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1617917456,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1617917479,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617917835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15153/ : SUCCESS"
        },
        {
            "timestamp": 1617917856,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1619646582,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1619648410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1619711406,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1619723678,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1619723693,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619723710,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\nAddressed Jason's comments."
        },
        {
            "timestamp": 1619723849,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16421/ : SUCCESS"
        },
        {
            "timestamp": 1619732499,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)\n\nNot here to block the patch in any way, just pointing out that this kind of thing has come up in other contexts, and while we could easily duplicate the data and make everything work (which seems to be the current path being taken) it seems a little wasteful."
        },
        {
            "timestamp": 1620675764,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1620849212,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1620854732,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1620855047,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> (2 comments)\n> \n> Not here to block the patch in any way, just pointing out that this kind of thing has come up in other contexts, and while we could easily duplicate the data and make everything work (which seems to be the current path being taken) it seems a little wasteful.\n\nI agree that maybe ipmid is not the best place for this, but right now, I don't know what is.\n\nI think it would be neat to see entity manager change out the ipmi channel config based on the booted board and on first boot disable the netipmid processes that correspond to the non-existent devices, but that capability is not there. It may not even be the best place for it. I don't know.\n\nIn the meantime, I am fine with taking in what might ultimately be a sub-optimal solution until we have a better understanding of the situation to come up with a solution that fits better. If we waited for the perfect solution for every problem, we would never make any progress."
        },
        {
            "timestamp": 1621447020,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2: Code-Review+2\n\nFrom Tom Joseph offline: \"Sure, makes sense. If things better incrementally we should go for it.\""
        },
        {
            "timestamp": 1621447043,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Change has been successfully rebased and submitted as 0a2abc803ffb4e01d10d4c9fb78475c3012df496 by Vernon Mauery"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "09afa851767bb8e2daee965f13315fba16230b6a",
            "parents": [
                "de54f486d633c5bc7a6d17b77ee46d8a8fdf57cd"
            ],
            "ref": "refs/changes/63/42063/1",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1617917456,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wouldn't the normal answer to this be to put the information in an entity-manager exposes record and key off that?\n\nI only comment that, because this is coming up in another review for adding ipmb-capable sensors.  It sounded like Jayashree was already getting started on defining that interface, maybe there's some synergy to be had between those two patches, where ipmid could read directly from entity-manager?\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38905"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "In prior commits I've been directed to place changes into the \"appropriate\" manager/handler. Ex: The BMCWeb sit0 handling was deemed inappropriate in BMCWeb, and I was directed to place it in phosphor-network. \nAs this is an IPMI only issue, the guidance I've received in the past indicates the solution should be wholly within the IPMI code."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "But it's not an IPMI only issue, as it effects sensors (see aforementioned patch), and things that can't be the same per-system.  I think the distinction here is that \"IPMI-capable\" can be a description of an upstream device, because that's a property of that \"thing\", but normally shouldn't be a description of an openbmc IPMI specific northbound data structure, because we have to support more than just IPMI.\n\nThis is a weird case where it's kind of both;  We need to know the IPMB channels to know where sensors and FRUs are, AND we need them to be available to the northbound interfaces as a kind of passthrough.  That seems like a reasonable use in that case in terms of design.\n\nThe other option is we duplicate the data both places, which I guess is fine?  But means that IPMB capable add in cards wont really work right unless explicitly compiled into the ipmi channel config, which seems like a pain."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't this change how a failing device is reported?  I would assume a device that's failed to enumerate/instantiate would return a different error code than one that just was never present in the config."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "A device that was never in the IPMI channel config file won't have the ability to handle IPMI commands. The network interface could be fully functional due to kernel initialization and IPMI won't be able to interact with that network device.\n\nIf the device fails to enumerate what corrective action is IPMI going to apply? What corrective action is entity-manager going to apply? The kernel has failed to enumerate and create the device. The only user level correction of this I can imagine is to replace the network device in the event it is a user replaceable item, and then reboot the BMC. The only other corrective action I can think of in this case is to be applied by the OEM vendor."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> A device that was never in the IPMI channel config file won't have the ability to handle IPMI commands. The network interface could be fully functional due to kernel initialization and IPMI won't be able to interact with that network device.\n> \n> If the device fails to enumerate what corrective action is IPMI going to apply?\n\nReturn the \"something is wrong\" error code to the control plane, who has more power to take action.\n\n> What corrective action is entity-manager going to apply?\n\nNothing, entity-manager just makes the config available to IPMI and IPMB sensors at the same time without duplicating information.\n\n> The kernel has failed to enumerate and create the device. The only user level correction of this I can imagine is to replace the network device in the event it is a user replaceable item, and then reboot the BMC.\n\nOr reboot the BMC/server?  Schedule it for repairs so the FRU can be replaced?  There's a lot a control plane can do to try to get it working again if it can tell the difference between \"broken\" and \"not supported\".\n\n> The only other corrective action I can think of in this case is to be applied by the OEM vendor.\n\nBut the OEM vendor can't do anything if the correct return codes aren't sent, right?\n\nWith that said, presumably the control plan could also keep the per-system channel data, but in practice, that's not very common, and does rely somewhat on the BMC to give appropriate codes."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "typo: success"
                },
                {
                    "file": "user_channel/channel_mgmt.cpp",
                    "line": 880,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "typo: double space"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "user_channel/channel_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "d489c8d3e042caf6629a57ee827e2acc18a51c22",
            "parents": [
                "916d4232a432b9f9ee5ddd3d0bbce05c1f3909f6"
            ],
            "ref": "refs/changes/63/42063/2",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1619723678,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "user_channel/channel_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "0a2abc803ffb4e01d10d4c9fb78475c3012df496",
            "parents": [
                "2f0ad74daf323dd6db919b8aa7cf685e88d33a37"
            ],
            "ref": "refs/changes/63/42063/3",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1621447043,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "user_channel/channel_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 2
        }
    ]
}