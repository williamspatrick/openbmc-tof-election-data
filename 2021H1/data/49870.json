{
    "project": "openbmc/phosphor-health-monitor",
    "branch": "master",
    "id": "I1fbf120d5ea4af7e470fa4d9b7d77c6a14a15b96",
    "number": 49870,
    "subject": "Set unset threshold values to NaN",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-health-monitor/+/49870",
    "commitMessage": "Set unset threshold values to NaN\n\nCurrently unset thresholds are set to 0. But correct value for unset\nthresholds is NaN.\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: I1fbf120d5ea4af7e470fa4d9b7d77c6a14a15b96\n",
    "createdOn": 1640090004,
    "lastUpdated": 1640189724,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1640090004,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640090021,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640090097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32314/ : SUCCESS"
        },
        {
            "timestamp": 1640104799,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1640163012,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1640163027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640163101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32372/ : SUCCESS"
        },
        {
            "timestamp": 1640179062,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1640182190,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1640182200,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640182268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32380/ : SUCCESS"
        },
        {
            "timestamp": 1640182628,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3:\n\n(3 comments)\n\nNow code sets correct values for the `CriticalAlarmHigh`/`WarningAlarmHigh` dbus properties even if the thresholds are unset.\nI had to switch if/else clauses, so `isfinite` is checked before any value comparisons."
        },
        {
            "timestamp": 1640183999,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1640187243,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1640187256,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640187324,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32387/ : SUCCESS"
        },
        {
            "timestamp": 1640187389,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 4:\n\nI've started to get lost in all of this if/else checks. What do you thing if we restructure code like this?"
        },
        {
            "timestamp": 1640189720,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review+2\n\nTerrific!"
        },
        {
            "timestamp": 1640189724,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as a6cd704bda72e39e1b94652a9eb0733da8498791 by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "68b968c4693a3d828592038aa5b2e798a118e390",
            "parents": [
                "f5151879326e36880ddf2c46fe8c539ce721b0d6"
            ],
            "ref": "refs/changes/70/49870/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1640090004,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "healthMonitor.hpp",
                    "line": 71,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I agree with this change in principle.  I think there needs to be some change to the comparisons in the cpp file though to check for isnan or isfinite.\n\n    healthMonitor.cpp:    if (sensorConfig.criticalHigh && (value > sensorConfig.criticalHigh))"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "healthMonitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 3,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "ab253e2abf7bd1958c93faf609eca62ad81e9f43",
            "parents": [
                "f5151879326e36880ddf2c46fe8c539ce721b0d6"
            ],
            "ref": "refs/changes/70/49870/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1640163012,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "healthMonitor.cpp",
                    "line": 312,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think this should be dropped?"
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 312,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Agree, this is probably connected to the \"not set = has value of 0\" assumption"
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 326,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not sure this is necessary here?  If the high isn't finite we should have never set criticalAlarmHigh to begin with so the second part is likely to be false.  The premise with your change is that any non-finite criticalHigh means that the threshold isn't set, so anytime it somehow is set we should clear it, right?"
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 326,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "My idea was that it is easier to check `std::isfinite` than access dbus properties. I didn't think about the cases when the value is set outside of the app itself"
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 336,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think we want this part, do we?  The \"not set\" meant \"has value of 0\" previously... it is possible for a sensor to have a high threshold of 0.  Many Intel PECI sensors use a differential value rather than an absolute value for instance.\n\nMaybe we should just get rid of this short-circuiting because we end up with slightly different behavior between criticalHigh and warningHigh."
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 336,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I guess that is why I initially thought that we shouldn't do anything until we have a valid threshold set"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "healthMonitor.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "healthMonitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 10,
            "sizeDeletions": 6
        },
        {
            "number": 3,
            "revision": "a2a8278c8c5767f160354c52bbeab8014ca67738",
            "parents": [
                "f5151879326e36880ddf2c46fe8c539ce721b0d6"
            ],
            "ref": "refs/changes/70/49870/3",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1640182190,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "healthMonitor.cpp",
                    "line": 337,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There is still an issue here.  Now we're going to flood the log with DEASSERT messages if warningHigh is unset.\n\nif (WarningInterface::warningAlarmHigh() && (!std::isfinite(sensorConfig.warningHigh) || (value <= sensorConfig.warningHigh)))\n\nFeel free to swap the parts of the && around if you want to check the config first, but we should only enter the branch if warningAlarmHigh is set."
                },
                {
                    "file": "healthMonitor.cpp",
                    "line": 345,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We will still need to be careful about this comparison for !isfinite if you make a change above as I proposed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "healthMonitor.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -16
                },
                {
                    "file": "healthMonitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 18
        },
        {
            "number": 4,
            "revision": "b9bb51e704def58b72daed61d2652dcf436e6d36",
            "parents": [
                "f5151879326e36880ddf2c46fe8c539ce721b0d6"
            ],
            "ref": "refs/changes/70/49870/4",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1640187243,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "healthMonitor.cpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -25
                },
                {
                    "file": "healthMonitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 27
        },
        {
            "number": 5,
            "revision": "a6cd704bda72e39e1b94652a9eb0733da8498791",
            "parents": [
                "9d29b378d369166399cb1817f7591711f2060170"
            ],
            "ref": "refs/changes/70/49870/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1640189724,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "healthMonitor.cpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -25
                },
                {
                    "file": "healthMonitor.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 27
        }
    ]
}