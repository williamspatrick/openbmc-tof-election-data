{
    "project": "openbmc/telemetry",
    "branch": "master",
    "topic": "telemetry",
    "id": "I29cf13693a48d15cb16d2ad6707f483f67f4879b",
    "number": 46943,
    "subject": "Added support for Enabled property",
    "owner": {
        "name": "Lukasz Kazmierczak",
        "email": "lukasz.kazmierczak@intel.com",
        "username": "kazmierczak-lukasz"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/telemetry/+/46943",
    "commitMessage": "Added support for Enabled property\n\nEnabled property is added so that user can select via dbus interface if\nReadings are updated and signal on Readings update is emitted, moreover\nMetric calculation on received sensor data is active only when Enabled\nis set to true\n\nTested:\n- New unit tests were created, ran all new and previous UTs, all passed\n- Tested under QEMU by adding reports for single and multiple sensors,\n  changing Enabled property and emitting signal of value change for\n  sensors added into the report, checking if Readings is accordingly\n  updated or not updated\n- Verified persistency, if Enabled property is successfully stored and\n  restored after Telemetry service restart and also checked if after the\n  restart dependencies of Enabled (Readings, Metric calculation) are\n  properly initiated\n\nSigned-off-by: Lukasz Kazmierczak <lukasz.kazmierczak@intel.com>\nChange-Id: I29cf13693a48d15cb16d2ad6707f483f67f4879b\n",
    "createdOn": 1631805121,
    "lastUpdated": 1634642583,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1631805121,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1631805132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631805624,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/26451/ : SUCCESS"
        },
        {
            "timestamp": 1632302675,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1633952694,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633952714,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633953116,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28049/ : SUCCESS"
        },
        {
            "timestamp": 1633953522,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1634118212,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1634216422,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1634571491,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1634571502,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634571935,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28451/ : SUCCESS"
        },
        {
            "timestamp": 1634572538,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1634631237,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1634642248,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 3: Code-Review+2"
        },
        {
            "timestamp": 1634642272,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Topic telemetry%remove-private removed"
        },
        {
            "timestamp": 1634642276,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Topic set to telemetry"
        },
        {
            "timestamp": 1634642583,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Change has been successfully merged by Szymon Dompke"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1cfe1d6ac98b2297a26bc62767a57cb1081266ee",
            "parents": [
                "93064d8fcef2c6fde1f61c0cedacb46b21eab039"
            ],
            "ref": "refs/changes/43/46943/1",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1631805121,
            "author": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/metric.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It could be renamed to registerForSensorEvents, and it should be called conditionally when report is enabled."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "I have kept the naming here but the functionality is improved based on you suggestions."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Instead we can add unregisterFromUpdates method to sensor."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/metric.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Instead we should ensure that getReading is not called when report is dissabled."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/metric.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "If unregister/register method approach is done, we can get rid of this flag."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -6
                },
                {
                    "file": "src/metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -9
                },
                {
                    "file": "src/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/report.cpp",
                    "type": "MODIFIED",
                    "insertions": 48,
                    "deletions": -22
                },
                {
                    "file": "src/report.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/report_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -7
                },
                {
                    "file": "src/report_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "tests/src/fakes/clock_fake.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/metric_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/report_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -10
                },
                {
                    "file": "tests/src/params/metric_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/src/params/report_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -2
                },
                {
                    "file": "tests/src/test_report.cpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -4
                },
                {
                    "file": "tests/src/test_report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 196,
            "sizeDeletions": 67
        },
        {
            "number": 2,
            "revision": "329b193376dae0ae336ec3367f2033cacae7fdb8",
            "parents": [
                "2001301a0f2ce71797cf171305a1d0eb0d288fe6"
            ],
            "ref": "refs/changes/43/46943/2",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1633952694,
            "author": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/metric.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "I know that you have just removed 'enabled' field from this class, but I think that it could have some usage here. This way you could check the field without calling looping over each sensor and calling unregister and register."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "There can be two possible approaches.\n\nFirst, we can make sure that metric::initialize is not called on already initialized metric. Report is aware of enabled status and can call proper method. We will unit test it and won't allow it to happen in code.\n\nSecond, make initialize and deinitialize private. Change sensor::registerForUpdates to prevent adding already registered listener. \n\nFirst approach will keep whole logic enabled feature in report class we will avoid any unnecessary operations.\nSecond approach will be bulletproof but each registerForUpdates will have additional overhead."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "As discussed - first approach from Krzysztofs suggestions in use."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Same as above, if you kept 'enabled', you could just check if enabled != state, without unnecessary calls."
                },
                {
                    "file": "src/metric.cpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Another approach prevails, this function is entirely removed."
                },
                {
                    "file": "src/report.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "What if enabled is set to false when creating report? It seem possible when we are creating report from configuration file."
                },
                {
                    "file": "src/report.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/report.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "nit: if (!enabled) {\n  return;\n}\n\nit will reduce code indentation and improve formatting"
                },
                {
                    "file": "src/report.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/report.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "this could be const"
                },
                {
                    "file": "src/report.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/report_manager.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "nit: enabledDefault?"
                },
                {
                    "file": "src/report_manager.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/report_manager.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "this could be const"
                },
                {
                    "file": "src/report_manager.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "nit: I would prefer removing const from other parameters which doesn't need that instead of adding const to parameter passed by copy.\n\nIt's rare to see that function parameters are const."
                },
                {
                    "file": "src/report_manager.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "As discussed, we will keep 'const' basic types passed by value."
                },
                {
                    "file": "tests/src/test_sensor.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Why? DbusEnvironment::sleepFor is executing events while sleeping, with this if you wont execute any events already in queue. It also looks like dead code, one sleep you are using uses 100ms as parameter"
                },
                {
                    "file": "tests/src/test_sensor.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Approach is changed, this helper function occurred not to be needed here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -6
                },
                {
                    "file": "src/interfaces/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -1
                },
                {
                    "file": "src/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/report.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -22
                },
                {
                    "file": "src/report.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/report_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -7
                },
                {
                    "file": "src/report_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/sensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tests/src/fakes/clock_fake.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/metric_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/report_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -10
                },
                {
                    "file": "tests/src/mocks/sensor_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tests/src/params/report_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -2
                },
                {
                    "file": "tests/src/test_report.cpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -4
                },
                {
                    "file": "tests/src/test_report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_sensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 219,
            "sizeDeletions": 59
        },
        {
            "number": 3,
            "revision": "7e098e93ef0974739459d296f99ddfab54722c23",
            "parents": [
                "2001301a0f2ce71797cf171305a1d0eb0d288fe6"
            ],
            "ref": "refs/changes/43/46943/3",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1634571491,
            "author": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -6
                },
                {
                    "file": "src/interfaces/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "src/metric.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/report.cpp",
                    "type": "MODIFIED",
                    "insertions": 61,
                    "deletions": -20
                },
                {
                    "file": "src/report.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/report_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/report_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -7
                },
                {
                    "file": "src/report_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -8
                },
                {
                    "file": "src/sensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tests/src/fakes/clock_fake.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/metric_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/report_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -10
                },
                {
                    "file": "tests/src/mocks/sensor_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tests/src/params/report_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_metric.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -2
                },
                {
                    "file": "tests/src/test_report.cpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": -7
                },
                {
                    "file": "tests/src/test_report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_sensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 235,
            "sizeDeletions": 66
        }
    ]
}