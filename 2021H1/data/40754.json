{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "id": "I4fa38b2e4f6aa1dc537d8f7ce923e48e54d8ab7b",
    "number": 40754,
    "subject": "message: Add call method",
    "owner": {
        "name": "William A. Kennington III",
        "email": "wak@google.com",
        "username": "wak-google"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/sdbusplus/+/40754",
    "commitMessage": "message: Add call method\n\nThe message already knows what bus it belongs to from its construction.\n\nChange-Id: I4fa38b2e4f6aa1dc537d8f7ce923e48e54d8ab7b\nSigned-off-by: William A. Kennington III <wak@google.com>\n",
    "createdOn": 1613786346,
    "lastUpdated": 1618948842,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1613786346,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1613786360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613787167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12731/ : SUCCESS"
        },
        {
            "timestamp": 1613836793,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1618517802,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1618517805,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1618517819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618518785,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1618518881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15531/ : SUCCESS"
        },
        {
            "timestamp": 1618607422,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1618948839,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1618948842,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as c9978e3bfceb8a6ba301e9a51f0cedba0de6bbf0 by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a9fd2abadfaaa9258e4ca665e4a60bebf2e8be9b",
            "parents": [
                "32ffb03dc854ba61747849246805ea7597e97130"
            ],
            "ref": "refs/changes/54/40754/1",
            "uploader": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "createdOn": 1613786346,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 377,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've been meaning to look into this in many other place where we're doing this `std::optional<SdBusDuration>`...\n\nWhat is the point of using a std::optional wrapper here?  `timeout = 0` already means don't timeout, so why not just make this 'auto call(SdBusDuration timeout = 0)'?"
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 377,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "The point was to create a type safe abstraction to differentiate the meaning of no provided timeout from a valid timeout value. sd-bus obviously just uses an int under the hood, and 0 made sense as a sentinel for `default` given that 0 isn't really a useful value.\n\n\nI don't feel too strongly about keeping it this way, as sd-bus uses 0 and it might be clear to most readers that timing out immediately wouldn't make sense."
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I originally put these functions on the bus to limit how much the message needed to break through the abstraction and get to the bus object itself (bus uses message and message uses bus).  Unfortunately, there were a few cases where it wasn't possible, like the 'method_return' function.  If you look back at commit '4c3427c2~1' before all the interface abstraction was put in, you'll see the only case where we had to access the bus object was in the 'method_return' function.\n\nIf we're going to add this 'call' here, you could make an argument that every method in bus that operates on a message should / could be moved into message itself.  Doing that requires this extra kind of lookup though.\n\nIs there some use case where the syntax of calling on the message object improves things significantly for the developer?  Is it worth the expense of the extra lookup?  If so, is there any reason to not move all the similar methods over here as well?"
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I have instances where messages are decoupled from the bus they were created on and it would be nicer to not have to associate the two things when the message already implicitly knows the associated bus. It turns out we don't even have to do the lookup at all and the internal code for doing the lookup should be faster than even passing in a bus pointer."
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "fwiw, systemd recently added 'sd_bus_message_send' as well, which effectively does the same thing.  I wonder if we should call this function 'send' to match then?  When systemd 248 is old enough we could switch this to use the sd_bus_message_send directly."
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "sd_bus_message_send() is not the same thing as any of the call functions and replaces sd_bus_send() invocations."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "c00dce43eaa7ed3cb0330bc089a4f91fa9a83c11",
            "parents": [
                "d8543d09dcfa2c7e82f0bb80010107e71dcbb01a"
            ],
            "ref": "refs/changes/54/40754/2",
            "uploader": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "createdOn": 1618517802,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "c9978e3bfceb8a6ba301e9a51f0cedba0de6bbf0",
            "parents": [
                "8a03773486cebe49583d0424722582155a4b9978"
            ],
            "ref": "refs/changes/54/40754/3",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1618948842,
            "author": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/message.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 0
        }
    ]
}