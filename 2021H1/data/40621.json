{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I118df674162677d66e7d211b089430fce384086b",
    "number": 40621,
    "subject": "Improve initialization of I2C sensors",
    "owner": {
        "name": "Johnathan Mantey",
        "email": "johnathanx.mantey@intel.com",
        "username": "Howitzer105mm"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/40621",
    "commitMessage": "Improve initialization of I2C sensors\n\nAfter an AC cycle validation has witnessed some systems sensors are\nmissing. As Entity Manager begins the process of scanning for\nsesnsors, and creating the hardware monitoring nodes, there are\noccassionally some failures to correctly create the node. This\nmanifests itself by the 'dd' kernel driver emitting an -EBUSY error\nmessage. Unfortunately the 'dd' driver also eats the error code, and\ncontinues. This is by design.\n\nThis commit modifies how the nodes are initialized. The steps taken:\n1. Determine if the node is already present\n2. Create the node if it is not\n3. Set a timer, to give the kernel time to create the node\n4. For those sensors that create a \"hwmon\" subdir, search for that\ndirectory after the timer elapses.\n5. If the subdir is not present, delete the device, and try again by\ninitiating another timer.\n6. Continue until the subdir exists, or a retry count expires.\n\nTested:\nRan AC cycles via a script.\nAfter each cycle, wait for the SUT to DC on, and arrive at the EFI\nShell> prompt.\nIssue \"ipmitool sensor list\", capturing the results\nSearch the list for all of the sensors that have been reported as\nmissing after AC cycles.\n\nChange-Id: I118df674162677d66e7d211b089430fce384086b\nSigned-off-by: Johnathan Mantey <johnathanx.mantey@intel.com>\n",
    "createdOn": 1613426644,
    "lastUpdated": 1617300937,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1613426644,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1613426656,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613426921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12468/ : SUCCESS"
        },
        {
            "timestamp": 1613427026,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Removed reviewer Wiktor Golgowski."
        },
        {
            "timestamp": 1613427216,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 1:\n\nMoving this code change upstream."
        },
        {
            "timestamp": 1613514462,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1614119273,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(15 comments)\n\nLots of minor things to fix, then this should be good to go.  Sorry for the slow review time."
        },
        {
            "timestamp": 1614288978,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1614288988,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614289211,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\n(15 comments)\n\nEd,\nHere's my new commit based on your review comments.\nI have also rebased this to collect the newest devices.\nThanks for your suggestions on commit one."
        },
        {
            "timestamp": 1614289317,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13068/ : SUCCESS"
        },
        {
            "timestamp": 1615475194,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(4 comments)\n\nSorry, I wrote these comments same day, but aparently forgot to hit send."
        },
        {
            "timestamp": 1616017750,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1616017762,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616017819,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nI seem to have lost some of my work.\nIgnore the latest commit."
        },
        {
            "timestamp": 1616018065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13945/ : SUCCESS"
        },
        {
            "timestamp": 1616094788,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1616094808,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616095112,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14002/ : SUCCESS"
        },
        {
            "timestamp": 1616442817,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1617050711,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\nAndrei,\nThanks for the comments. I believe the code submitted is correct.\nI also reviewed docs on several internet pages.\nYour example appears to be inaccurate due to using \"0x58\" instead of $((0x58)). \nOne translates to a string, not an integer. The second translates to an integer."
        },
        {
            "timestamp": 1617294586,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\nLooks good to me. Just one minor question"
        },
        {
            "timestamp": 1617299213,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1617299229,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617299359,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 5:\n\nThe EEPROM_ prefix was due to a change made 5 weeks ago. My changes pre-dated it, and I did not notice the new prefix. I have updated my commit to match the version approved 5 weeks ago."
        },
        {
            "timestamp": 1617299425,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14739/ : SUCCESS"
        },
        {
            "timestamp": 1617300114,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 5: Code-Review+1\n\n> Patch Set 5:\n> \n> The EEPROM_ prefix was due to a change made 5 weeks ago. My changes pre-dated it, and I did not notice the new prefix. I have updated my commit to match the version approved 5 weeks ago."
        },
        {
            "timestamp": 1617300934,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1617300937,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ba9331ef4fccc60ce726fdb0cb7a7f185f029398",
            "parents": [
                "2a9670820094a9a1847770597b713bf6fb3c08ba"
            ],
            "ref": "refs/changes/21/40621/1",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1613426644,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/Overlay.cpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't extern this.  Include the appropriate header or pass it through the layers."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 166,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please invert this check to save horizontal space."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 166,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't neccesary to check.  Just use the constructor of directory_iterator that takes and returns an error code."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Would recursive_directory_iterator make more sense here?  A lot of the things in these directories are symlinks, and recursive_directory_iterator can be set to follow them automatically rather than having two levels of loops."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "We really don't need to recurse the entire tree."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Right, but you can stop the recursion at anytime with disable_recursion_pending.\n\nhttps://en.cppreference.com/w/cpp/filesystem/recursive_directory_iterator/disable_recursion_pending\n\nI know james has been burned on that \"some things are a symlink in hwmon, some aren't, and it isn't consistent\" thing several times.  I'd really like to avoid it in this case if we can.\n\nWith that said, if you really don't want to do it, I'm not super worried about it."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 182,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "undefined behavior.  You're capturing an rvalue by reference here.  filename() returns a value type, so you can't load it into a reference type and expect it to still be around after the intermediate has been destroyed."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 182,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you improve these checks please?  presumably 01_fooooobar_A2 shouldn't be an ok thing for this to match with.  Or I'm not following what this is for."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "The filesystem pieces of interest look like this (a bus number \"hypen\" the bus address):\n4-0050\n4-0021\netc...\n\nI know your bias against regex for simple pattern matches like this.\nThere will be items like \"i2c-15\", \"subsystem\", \"of_node\".... \nIf such an unexpected subdir name were to exist, it would still have to have a \"hwmon\" entry to be of interest. Even if it does not, the retries expire, and the directory becomes uninteresting."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So the line would be\n\nif (directoryName == busStr + \"-\" + \"addresshex)\n\nThat means we have a direct match, and don't have any possibility of 4-1050 getting mistaken for the same address of 4-0050.\n\nas written bus 41 would match the same thing as bus 4.\n\nI realize this is a little pedantic, but we keep hitting this exact issue with zero padding, so I'd like to be a little more defensive about it, and avoiding starts_with and ends_with where we can."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Thanks for the improvement."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not quite following why retries are different than the base case here.  Can you elaborate a little?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Added a comment inline to assist future me."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: extra parens.\n\nNon-nit.  Use the error code overload of this."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "I assume the goal is to avoid a throw?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The goal is to avoid throwing errors you haven't caught somewhere (ie crashing) when things aren't exactly how they should be.  It's also about not mixing exceptions with boolean error return types for a given function."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 196,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You don't need an else after a return"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 196,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "unless I'm missing something, I don't see anything taking ownership of these.  I suspect they can just be passed by value?\n\nAlso, as written, both of these would need to be checked for nullptr."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "These are checked for null in the deviceIsCreated function.\nI attempted to pass these by value. The code got gnarly quickly.\nLeaving these as unmanaged pointers caused them to go out of scope in the boost::asio::steady_timer code. \nThe initial caller to this function has to initialize things besides i2c devices, which means bus and address may not have a value at all. Rather than choose an arbitrary bus/address number in the event they were not populated, it made more sense to me to leave the pointer == nullptr."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> These are checked for null in the deviceIsCreated function.\n> I attempted to pass these by value. The code got gnarly quickly.\n> Leaving these as unmanaged pointers caused them to go out of scope in the boost::asio::steady_timer code. \n\nAHHHHH, that's where the values are shared.  Ug... That's a hard one.  Fine as is.\n\n> The initial caller to this function has to initialize things besides i2c devices, which means bus and address may not have a value at all. Rather than choose an arbitrary bus/address number in the event they were not populated, it made more sense to me to leave the pointer == nullptr.\n\nYeah, this is why I suggested std::optional, but yeah, this is just a hard one.  Its fine as is if you don't want to mess with it."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is never called with anything but the default.  Please remove the param until it's needed."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This causes the timer to implicitly own itself.  I suspect you need a higher level class that can own the timer, and own the retry count, so we're not instantiating a new timer every loop.\n\nWhat do you think?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "My opinion.... it follows the paradigm in EntityManager.cpp lines 161, and 222, maybe others. I don't see how this example behaves differently. Is there some nuance I'm missing?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you add a comment about how this number was chosen?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "It was a WAG.\nI chose it for being less than 1000mS, and greater than 100mS."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "handle your errors please.  When and if this timer is canceled it will return an error."
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above, these aren't used as anything except by value.  Shared_ptr seems like overkill.\n\nstd::optional<uint64_t> in this scope, then check for existence before you call your new function?"
                },
                {
                    "file": "src/Overlay.cpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "This level doesn't know if these values are to be used or not. As I mentioned above, passing by value caused extensive, and confusing code changes. Leaving these as unmanaged pointers caused them to be out of scope when they needed to be used in the steady_timer. Making them shared guarantees a value survives the steady_timer. Leaving the pointers as nullptr guarantees they are out of range of a uint64_t. I didn't want to guess what value to give them in the event the JSON file did not provide a value."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/devices.hpp",
                    "type": "MODIFIED",
                    "insertions": 85,
                    "deletions": -68
                },
                {
                    "file": "src/Overlay.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 233,
            "sizeDeletions": 112
        },
        {
            "number": 2,
            "revision": "e03aaa35302b4af8823a235a1c28c3e3d969e710",
            "parents": [
                "296667f0076888f3cdf898a3f2cdf66da260853e"
            ],
            "ref": "refs/changes/21/40621/2",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1614288978,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/devices.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -72
                },
                {
                    "file": "src/Overlay.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 237,
            "sizeDeletions": 116
        },
        {
            "number": 3,
            "revision": "2d8a7f3d6517e1df3a50f2c77674505dbf2952e4",
            "parents": [
                "e789bf12a49a8993c7d9b7a161494b58dab2dcf0"
            ],
            "ref": "refs/changes/21/40621/3",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1616017750,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/devices.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -74
                },
                {
                    "file": "src/Overlay.cpp",
                    "type": "MODIFIED",
                    "insertions": 144,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 233,
            "sizeDeletions": 118
        },
        {
            "number": 4,
            "revision": "73f288b2236b20481de41a72e2bdcf4f9f73778d",
            "parents": [
                "e789bf12a49a8993c7d9b7a161494b58dab2dcf0"
            ],
            "ref": "refs/changes/21/40621/4",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1616094788,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/devices.hpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Why is this removed?"
                },
                {
                    "file": "include/devices.hpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Are you sure this really works? Delete command should be just address without driver name, isn't?\nLike\n> echo \"0x58\" > /sys/bus/i2c/devices/i2c-7/delete_device\ninstead of \n> echo \"0x58 pmbus\" > /sys/bus/i2c/devices/i2c-7/delete_device\nOtherwise kernel returns \" write error: Invalid argument\""
                },
                {
                    "file": "include/devices.hpp",
                    "line": 50,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "The code works as written.\n\nI tested removing a tmp75 device at address 0x48 using:\necho 72 >/sys/bus/i2c/devices/i2c-4/delete-device\nI received:\n[ 1522.093323] i2c i2c-4: delete_device: Deleting device eeprom at 0x48\nand the device is removed from the sysfs filesystem."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "include/devices.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -74
                },
                {
                    "file": "src/Overlay.cpp",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 258,
            "sizeDeletions": 118
        },
        {
            "number": 5,
            "revision": "9b86787adea3f8f29fac2acbb9fa0f48fbcf244a",
            "parents": [
                "779871240461808a9a52e48343d23551fc125ff9"
            ],
            "ref": "refs/changes/21/40621/5",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1617299213,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "include/devices.hpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -72
                },
                {
                    "file": "src/Overlay.cpp",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": -44
                }
            ],
            "sizeInsertions": 256,
            "sizeDeletions": 116
        }
    ]
}