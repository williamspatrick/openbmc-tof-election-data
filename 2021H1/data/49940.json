{
    "project": "openbmc/openbmc",
    "branch": "master",
    "topic": "yadro-vegman-bringup",
    "id": "I7d03b588896492807aae692d75df1c0cf5a09193",
    "number": 49940,
    "subject": "meta-yadro: introduce yadro-snmp recipes",
    "owner": {
        "name": "Andrei Kartashev",
        "email": "a.kartashev@yadro.com",
        "username": "alatarum"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/49940",
    "commitMessage": "meta-yadro: introduce yadro-snmp recipes\n\nThe obmc-yadro-snmp and obmc-yadro-snmpmgr provides additional SNMP\nfunctionality, used by YADRO platforms.\n\nSigned-off-by: Andrei Kartashev <a.kartashev@yadro.com>\nChange-Id: I7d03b588896492807aae692d75df1c0cf5a09193\n",
    "createdOn": 1640192172,
    "lastUpdated": 1641298030,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1640192172,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640192642,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1640193725,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1640198943,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/8378/"
        },
        {
            "timestamp": 1640200952,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/8378/ : SUCCESS"
        },
        {
            "timestamp": 1640202246,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1640327164,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640679827,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Topic set to yadro-vegman-bringup"
        },
        {
            "timestamp": 1641219315,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641298030,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "033416baebb83887f5281a8651b2ebf61ceba356",
            "parents": [
                "bb91a931157e54e54a19b578ac3e1097d781b4c1"
            ],
            "ref": "refs/changes/40/49940/1",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1640192172,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meta-yadro/recipes-yadro/network/obmc-yadro-snmp_git.bb",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "To repeat, please don't point upstream recipes at company specific openbmc repositories, as it limits our ability to reuse code, accept patches to said repos, and enforce the COC."
                },
                {
                    "file": "meta-yadro/recipes-yadro/network/obmc-yadro-snmp_git.bb",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Just wondering, what do you mean about \"enforce the COC\"? \nAnd why do you even care about accepting patches to our repos? Unless any other vendors want to use this recipes, no one except us interested in adding any patches to the repo. It's in our responsibility to keep our machines working.\n\nOnce again, unless community is interested in this functionality, what's the reason to spend OpenBMC projects resources on hosting and maintaining the code?"
                },
                {
                    "file": "meta-yadro/recipes-yadro/network/obmc-yadro-snmp_git.bb",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think this stems back to the \"we don't have an 'experimental'\" designation discussion we had 2-3 months ago at the TSC.  The meta-layer guidelines clearly say that we should only be pointing to \"well-maintained open source code\" but:\n\n1. We had recipes that already existed that were not doing this.\n2. We haven't defined what \"well-maintained open source code\" is.\n\nI don't think this recipe is in the spirit of what we meant by \"well-maintained open source code\".  This behavior is exactly what we wanted to discourage.  We DON'T want an easy path for teams to go off on their own and implement their own things and maybe eventually \"contribute\" back a giant blob of pre-written/non-reviewed/ill-conforming code.  We want teams developing in the open and collaborating to get broad consensus and support of the features being important.\n\nRecipes pointing to repositories \"we don't control\" makes it very difficult for us to get fixes in when needed.  We don't have any stable API promises and so usually changing an API requires making a bunch of code changes across repositories (as you clearly see by your current NMI work).  Repositories like this are difficult for developers to know about and make fixes for.  Therefore, it slows the project down if these recipes are part of any sort of CI system and is not something I think we should take on.\n\nI realize that this system is not currently part of CI and therefore you're taking on all the burden of dealing with underlying changes yourself.  I would be entirely opposed to this system (or any system using similar styled repos) being added to CI.  I'm not particularly happy about these kind of recipes, but I am slightly accepting of it from a pragmatic perspective.  I think we need a more clear indication that \"this machine is considered experimental and none of the patterns used it in should be used as a reference for any other machine\" if we're going to accept additional recipes like this."
                },
                {
                    "file": "meta-yadro/recipes-yadro/network/obmc-yadro-snmp_git.bb",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I see your point and I see two ways to solve this conflict:\n1) We modify \"meta-layer guidelines\" to be more permissive. E.g. we can introduce \"system support level\", where systems with \"Gold\" status included in CI, fully functional from upstream only and have to follow all restrictions on recipes and patches, and other systems can follow some weaker rules, but can't be added to CI and not supported by community.\n2) We introduce some clear policy somewhere under `docs/development/` on now to propose new repositories and guarantee that vendors can put any required code to OpenBMC's infrastructure, once it conform some achievable documented guidelines. From what I see today, for last one and half years only few repo requests was sent to mailing list and only half of them was accepted.\n\nBut even if we decide to accept this code to OpenBMC repo, it can't be upstreamed as is: it have to be refactored to get rid of vendor-specific things. And I not sure we have enough resources to do this work now.\n\nThird way for us is to keep all platform-specific code in downstream for, as it is done today. This works for us, but would it be better for community?\nHow many \"reference\" systems, which are production ready from only upstream repo, are on OpenBMC today? There are several platforms in openbmc that are likely not working without downstream code (sometimes I see some signs of Intel-BMC code, but not the recipes/configs that required to make it work) and I can imagine that main reason of this is that the vendors wasn't able to build fully functional system from upstream only.\n\nBTW, there is a problem here that newcomers don't know which platforms are \"live\" and which they shouldn't use as reference."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meta-yadro/recipes-yadro/cli/obmc-yadro-snmpmgr_git.bb",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "meta-yadro/recipes-yadro/network/obmc-yadro-snmp_git.bb",
                    "type": "ADDED",
                    "insertions": 58,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 73,
            "sizeDeletions": 0
        }
    ]
}