{
    "project": "openbmc/webui-vue",
    "branch": "master",
    "id": "I3d711775c144c0c971e625323e5fac1db9b08e53",
    "number": 45199,
    "subject": "[RFC] CI: do not allow missing and unused translation keys",
    "owner": {
        "name": "Paul Fertser",
        "email": "fercerpav@gmail.com",
        "username": "paulfertser"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/webui-vue/+/45199",
    "commitMessage": "[RFC] CI: do not allow missing and unused translation keys\n\nThis should help ensuring the translation strings are always present.\n\nvue-i18n-extract.js \"-dd\" option is used to extract all the \"dynamic\"\n(using variable expansion) keys separately and then some sed hackery is\nemployed to skip them in the unused list. This means all the dynamic\nkeys should be verified manually.\n\nSigned-off-by: Paul Fertser <fercerpav@gmail.com>\nChange-Id: I3d711775c144c0c971e625323e5fac1db9b08e53\n",
    "createdOn": 1627055192,
    "lastUpdated": 1630349621,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1627055192,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1627055208,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627055316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/22699/ : SUCCESS"
        },
        {
            "timestamp": 1627055490,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 1:\n\nI have no idea how this should be properly integrated but I hope this might still be useful for inspiration.\nHandling unused keys this way is more problematic because of dynamic keys, something smarter would need to be implemented, e.g. collect all the dynamic keys (extract.js supports that) and get rid of the \"unused\" that match them, and only take into account what's left."
        },
        {
            "timestamp": 1627057786,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1627057803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627057904,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/22703/ : SUCCESS"
        },
        {
            "timestamp": 1627057978,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\nNow with some handling for the unused keys too. sed looks scary, I know, and it's kinda silly to use shell+sed+grep when JS is available but I just do not know JS so can't offer a nicer solution, sorry."
        },
        {
            "timestamp": 1627058366,
            "reviewer": {
                "name": "Derick Montague",
                "email": "derick.montague@ibm.com",
                "username": "derick-montague"
            },
            "message": "Patch Set 2:\n\nThere are some concerns about reporting due to dynamic keys. We are staring to have a conversation about that for this reason. Is there a plan to stop the build if there is an error?"
        },
        {
            "timestamp": 1627058494,
            "reviewer": {
                "name": "Derick Montague",
                "email": "derick.montague@ibm.com",
                "username": "derick-montague"
            },
            "message": "Patch Set 2:\n\nI also noticed this...\n\n./run-ci: line 19: jq: command not found\n./run-ci: line 19: [: =: unary operator expected"
        },
        {
            "timestamp": 1627058741,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> There are some concerns about reporting due to dynamic keys. We are staring to have a conversation about that for this reason. Is there a plan to stop the build if there is an error?\n\nThe second patch set version should be handling dynamic keys reasonably (basically, it skips unused key if it can possibly match one of the dynamic keys). I thought something like what I propose here would be nice to have integrated in the pre-commit hook, so that the developer would see problematic items right during \"git commit\"."
        },
        {
            "timestamp": 1627059180,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> I also noticed this...\n> \n> ./run-ci: line 19: jq: command not found\n> ./run-ci: line 19: [: =: unary operator expected\n\nWell, since I'm providing my idea in \"shell\" I have to use a rather common (these days) shell utility \"jq\" to parse JSON file generated by the extractor."
        },
        {
            "timestamp": 1627061208,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n> I thought something like what I propose here would be nice to have integrated in the pre-commit hook, so that the developer would see problematic items right during \"git commit\".\n\nSo what I really had in mind is something added to `tests/unit/` to be run automatically by `yorkie` `pre-commit` git hook. But since I have no idea about JS I express my thoughts in POSIX shell and you can see if it works at all and whether the results are useful. Reimplementing in JS should be trivial if desired."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "82c3b4c95d80bbcd6d69ed8bb18d4e087ff92521",
            "parents": [
                "30731f1e320fab026580471a2b8e164390c6507b"
            ],
            "ref": "refs/changes/99/45199/1",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1627055192,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "run-ci",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 9,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "8a9e220b60153a8852198c706c5b2cf0a0f26d7c",
            "parents": [
                "30731f1e320fab026580471a2b8e164390c6507b"
            ],
            "ref": "refs/changes/99/45199/2",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1627057786,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "run-ci",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 0
        }
    ]
}