{
    "project": "openbmc/phosphor-power",
    "branch": "master",
    "id": "I55c3e071b4b60e103f1de5778ede58b032ea29da",
    "number": 49196,
    "subject": "regulators: Enhance additional error data capture",
    "owner": {
        "name": "Shawn McCarney",
        "email": "shawnmm@us.ibm.com",
        "username": "smccarney"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-power/+/49196",
    "commitMessage": "regulators: Enhance additional error data capture\n\nEnhance the additional error data capture support to allow the same\nregister to be captured multiple times.\n\nThe additional error data is stored as key/value pairs.  The key format\nis normally:\n\n  <deviceID>_register_<register>\n\nFor example, \"vdd1_register_0x7A\".\n\nIf the same register is captured multiple times, a counter is appended\nto make the key unique.  For example, \"vdd1_register_0x7A_2\".\n\nOne use case for capturing the same register multiple times is when a\nvoltage regulator produces multiple rails.  It may be necessary to do\nthe following:\n* Set the PMBus PAGE to 0\n* Capture a register for the first rail\n* Set the PMBus PAGE to 1\n* Capture the same register again for the second rail\n\nSigned-off-by: Shawn McCarney <shawnmm@us.ibm.com>\nChange-Id: I55c3e071b4b60e103f1de5778ede58b032ea29da\n",
    "createdOn": 1638335991,
    "lastUpdated": 1638386214,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1638335991,
            "reviewer": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1638336006,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1638336567,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30958/ : SUCCESS"
        },
        {
            "timestamp": 1638377143,
            "reviewer": {
                "name": "Jim Wright",
                "email": "jlwright@us.ibm.com",
                "username": "wrightjl1"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1638383697,
            "reviewer": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638384290,
            "reviewer": {
                "name": "Jim Wright",
                "email": "jlwright@us.ibm.com",
                "username": "wrightjl1"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638385268,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1638386210,
            "reviewer": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "message": "Patch Set 1: Code-Review+2"
        },
        {
            "timestamp": 1638386214,
            "reviewer": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "message": "Change has been successfully merged by Shawn McCarney"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b3ba516f3f418b9b1a98d4bd27210799383262b2",
            "parents": [
                "7ee4d7e41d301c99cef377028264124fe35b7baa"
            ],
            "ref": "refs/changes/96/49196/1",
            "uploader": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "createdOn": 1638335991,
            "author": {
                "name": "Shawn McCarney",
                "email": "shawnmm@us.ibm.com",
                "username": "smccarney"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Jim Wright",
                        "email": "jlwright@us.ibm.com",
                        "username": "wrightjl1"
                    },
                    "message": "Do you want to capture what page you are on in this case?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Shawn McCarney",
                        "email": "shawnmm@us.ibm.com",
                        "username": "smccarney"
                    },
                    "message": "That is a good idea and something I considered.  I was just not sure how to handle it in a generic way.\n\nNot all devices in the JSON file are PMBus, and some PMBus devices don't support PAGE, so we can't auto-read PAGE and include that in the data.\n\nIn the JSON they could manually capture the PAGE register like any other register.  However, the data is currently sorted alphabetically in the error log by key name vs. sorted by capture timestamp.  So the PAGE register values would be separate from the other register values and not very useful.\n\nIf we need this in the future I'll try to think of a better way."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Jim Wright",
                        "email": "jlwright@us.ibm.com",
                        "username": "wrightjl1"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "phosphor-regulators/src/actions/i2c_capture_bytes_action.cpp",
                    "type": "MODIFIED",
                    "insertions": 48,
                    "deletions": -18
                },
                {
                    "file": "phosphor-regulators/src/actions/i2c_capture_bytes_action.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "phosphor-regulators/test/actions/i2c_capture_bytes_action_tests.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 114,
            "sizeDeletions": 18
        }
    ]
}