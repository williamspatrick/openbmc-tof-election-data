{
    "project": "openbmc/phosphor-buttons",
    "branch": "master",
    "id": "Ia791a2b6f52d09dd87da0e50a709fc72ac9d1bd7",
    "number": 49714,
    "subject": "Add abstract factory to create button iface objects",
    "owner": {
        "name": "Naveen Moses ",
        "email": "naveen.mosess@hcl.com",
        "username": "naveenmosess"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-buttons/+/49714",
    "commitMessage": "Add abstract factory to create button iface objects\n\nA abstract factory class is implemented  to return\nthe instance of button interface class based on the\nbutton iface formfactor name provided as\nparameter to the abstract factory createInstance\n method.\n\nSigned-off-by: Naveen Moses <naveen.mosess@hcl.com>\nChange-Id: Ia791a2b6f52d09dd87da0e50a709fc72ac9d1bd7\n",
    "createdOn": 1639549790,
    "lastUpdated": 1641399846,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1639549790,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1639549816,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639549846,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32080/ : SUCCESS"
        },
        {
            "timestamp": 1639606765,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1640042736,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(25 comments)"
        },
        {
            "timestamp": 1641393219,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1641393230,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641393230,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1641393257,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/34932/ : SUCCESS"
        },
        {
            "timestamp": 1641396216,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Patch Set 2:\n\n(22 comments)"
        },
        {
            "timestamp": 1641396767,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1641399846,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(12 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "eb8ab45cc0d13af57c4c03027bcdfa6d1ebb54b1",
            "parents": [
                "dd5495cf40d5911fb9ad04acc6689ae8af054524"
            ],
            "ref": "refs/changes/14/49714/1",
            "uploader": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "createdOn": 1639549790,
            "author": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "inc/button_factory.hpp",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is 'unordered_map' sufficient here?"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 6,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you make a typedef for this?  This is pretty hard to read."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This should be a private member of buttonFactory."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Classes are typically ButtonFactory (UpperCamelCase) in this codebase, right?"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 38,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is the object path really tied to the class (statically) like this?  I'm very surprised.  How do we handle multiple instances of a similar button?  We don't have any?\n\nI guess I'm fine if everything is compile-time deduced if it really can be done that way."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 38,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "I have explained about this in the comment #70"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Just 'return'."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This std::move is meaningless.  You are returning by value.  The temporary cast to an r-value reference isn't helpful.  The compiler should be using RVO anyhow and by doing the cast you could actually be harming this optimization."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You realize how silly this logic is, right?"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really don't like the nullptr opportunity here.  Can we just throw an exception?  Maybe just use:\n\n`buttonIfaceRegister.at(name)(bus, event, buttonCfg)` and let the 'at' exception bubble up?"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This doesn't seem to be resolved."
                },
                {
                    "file": "inc/button_interface.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Class names should all start with a capital letter (https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#types)"
                },
                {
                    "file": "inc/button_interface.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "can be a const function"
                },
                {
                    "file": "inc/button_interface.hpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can this just be 'config'?"
                },
                {
                    "file": "inc/button_interface.hpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Is it normal to device a struct from a class?  I don't think I've noticed it before.  I wonder if this could just be changed to a class to make it consistent."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There is no harm in inheriting a struct from a class or vis-versa.  They are identical except the default permissions."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "To avoid confusion I have replaced button struct definitions with class."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "A struct is public by default. ;)"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "all button iface definitions are changed as class definition."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "why did you take this out of the initialization list?"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think this is necessary."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm slightly surprised you've added 'virtual' onto this class.  Is there any reason for that?  I don't see any obvious reason you've made all these classes additionally virtual.\n\nDo you maybe want this class to be 'final'?  That would have been less unusual to me."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "just for code clarity i have added. removed them now."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this templated?  I must be missing something.\n\nDo you want these to be constexpr functions?\n\nI would probably recommend 'string_view' in this case."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "The idea behind this is for some button interfaces which is discussed in the\nfollowing design ( host selector switch ,serial console mux)\nhttps://gerrit.openbmc-project.xyz/c/openbmc/docs/+/45544\nthough form factor type is similar, There may be some oem specific code logic needed for the above mentioned button iface types.\nfor this purpose the virtual methods init() and eventHandle() are added in the button iface base class. \nEach button Iface class can have multiple derived classes with oem specific init() and handleEvent() implementations in case it is needed. This template method is added  to enable static polymorphism to the derived classes so that the formFactorName in the derived classes will be available at compile time.which will be used to create the button iface instance using factory class."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "constexpr function?  Does this need to be char*?  Should this be string_view?"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How about 'handleEvent'?"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Shouldn't this be 'override'?"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm quite surprised to see this function in each subclass of ButtonIface.  Why doesn't ButtonIface generate the callback for the sd event itself?  They're all the same... they all should call the virtual doEventHandling function, right?"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "don't need"
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We have no need to check the read results here?"
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I know the old code was doing this but I'm fairly surprised we are throwing from inside an sd-event handler.  Hopefully main doesn't catch this and simply crashes."
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "exception throw is removed and only the userdata ptr is checked if not empty before calling handleEvent."
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You said \"exception throw is removed\" but I clearly see this one and one on lines 63 and 72."
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 91,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this really necessary?  In what cases would we have not sent 'this' into the sd_event registration?"
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 91,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is pointless.  You already checked for nullptr on line 91."
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "So... we just silently drop nullptrs (ie. bad configs)?  This is not good."
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "answered this comment in the below comment."
                },
                {
                    "file": "src/main.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "As mentioned elsewhere, I would just turn this into a throw-on-bad-config and make this:\n\nbuttonInterfaces.emplace_back(ButtonFactory::createInstance(...));"
                },
                {
                    "file": "src/main.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Thanks for the suggestion Patrick.\nThe createInstance method returns if there is a matching button iface definition found in the buttonIface registry.\nwe might get null pointer if the form factor name provided in the json config is wrong or invalid for the specific button type. In this case is it ideal to skip creating that specific button instance and keep instances for other valid configs rather than stopping the application.\ncould you share your opinion on this?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd rather we get a hard failure for a bad config.  It is much easier to identify a bug when the systemd.service is in a fail state than if the application silently creates an ERROR journal entry.  Nobody looks at those, so a bug that is introduced might go undetected for a long time."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "inc/button_factory.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "inc/button_interface.hpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "inc/id_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -92
                },
                {
                    "file": "inc/power_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -111
                },
                {
                    "file": "inc/reset_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -88
                },
                {
                    "file": "src/id_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -21
                },
                {
                    "file": "src/power_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/reset_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 489,
            "sizeDeletions": 312
        },
        {
            "number": 2,
            "revision": "3644124e3f14fabae1fe6bfa2f7f12ca1cabae73",
            "parents": [
                "dd5495cf40d5911fb9ad04acc6689ae8af054524"
            ],
            "ref": "refs/changes/14/49714/2",
            "uploader": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "createdOn": 1641393219,
            "author": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "#70"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Seems like there are still a lot of unresolved comments as well.  Here are some additional suggestions."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "minor: prefer C++11 using syntax over typedef.\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rt-using\n\nusing buttonIfCreatorMethod = ..."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not really necessary since you're not doing anything in the constructor anyhow.  If you really want an explicit empty constructor then \"= default;\" is probably a better approach."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is where the confusion on these 'getFormFactorName' functions is coming from...\n\nThese should be simply T::getFormFactorName() and the definition should drop the template.  There is no case where you are calling something like 'T::getFormFactorName<S>()' so the extra template argument is clutter."
                },
                {
                    "file": "inc/button_factory.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm surprised this even compiled.  We have an implicit 'else' branch that doesn't return anything?\n\nEarlier I suggested getting rid of the 'find' and simply using 'at' so that the missing name problem becomes an exception."
                },
                {
                    "file": "inc/button_interface.hpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Matt suggested making this:\n\n  virtual std::string getFormFactorType() const\n\nIs there a need for this to be virtual?  I don't see any obvious uses of it as an overload."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't know if this is what you want or intended, but by changing IdButton to a class (from a struct) you've made private the sdbusplus::object inheritance."
                },
                {
                    "file": "inc/id_button.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is the part I'm thinking can be removed...  See line 44 of ButtonFactory."
                },
                {
                    "file": "src/id_button.cpp",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This looks like a pretty common pattern (add a file descriptor into the sd_event).  Can you put this into ButtonInterface?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "inc/button_factory.hpp",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "inc/button_interface.hpp",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "inc/id_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -95
                },
                {
                    "file": "inc/power_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -119
                },
                {
                    "file": "inc/reset_button.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -93
                },
                {
                    "file": "src/id_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -1
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -21
                },
                {
                    "file": "src/power_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": 0
                },
                {
                    "file": "src/reset_button.cpp",
                    "type": "MODIFIED",
                    "insertions": 72,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 447,
            "sizeDeletions": 329
        }
    ]
}