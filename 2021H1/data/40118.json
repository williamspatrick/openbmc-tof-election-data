{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Id2748e2388c3e846c536d715153654baa05844dd",
    "number": 40118,
    "subject": "Revamp Redfish Event Log Unique ID Generation",
    "owner": {
        "name": "P Dheeraj Srujan Kumar",
        "email": "p.dheeraj.srujan.kumar@intel.com",
        "username": "dheerajpdsk"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40118",
    "commitMessage": "Revamp Redfish Event Log Unique ID Generation\n\nThe unique ID for Redfish log events is generated using\nthe Timestamp of the log until seconds. This commit\nallows the use of microseconds as well to create unique\nRedfish Log ID, thereby improving the uniqueness of each\nLog event ID\n\nTested:\n- GET of /redfish/v1/Systems/system/LogServices/EventLog/Entries\n  produced unique LogEvent Id's\n- Redfish validator passed\n- Event Subscription passed\n\nSigned-off-by: P Dheeraj Srujan Kumar <p.dheeraj.srujan.kumar@intel.com>\nChange-Id: Id2748e2388c3e846c536d715153654baa05844dd\n",
    "createdOn": 1611896773,
    "lastUpdated": 1623945761,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1611896773,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1611896786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611897222,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/11576/ : FAILURE"
        },
        {
            "timestamp": 1611897937,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1611897951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611898962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11577/ : SUCCESS"
        },
        {
            "timestamp": 1611987272,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615182717,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615233605,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615238632,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615239070,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615525951,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2: Code-Review-1\n\nHas comments that need addressed. \nI don't see why this is really needed."
        },
        {
            "timestamp": 1615549422,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615576452,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1623945761,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Abandoned\n\nFeel free to reopen if this is still being worked."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "27f073758eeea9ca159757a4399582e2331633f1",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/18/40118/1",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1611896773,
            "author": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -24
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -42
                }
            ],
            "sizeInsertions": 35,
            "sizeDeletions": 66
        },
        {
            "number": 2,
            "revision": "f41dc7dd25a58957c7223b36e952cb7e1ae94512",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/18/40118/2",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1611897937,
            "author": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not following the point of this.  the old entries were unique already, with an associated index, which you've now dropped.  Considering that's an impactful change, you should really point that out here.  Could you please (in your commit message) go through the details of why this is better, especially considering that unique ids are intended to be opaque, and not meaningful.  In theory, if the logs ever contained two entries on the same microsecond, this patchset would be less unique."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "First sorry for late pitch in here.\nPrevious Format (<id>_<idx>) Works fine in normal operations. But major issues comes with skip & top query parameters. If we have 3 logs on same time(in seconds), They will be assigned with <id>, <id>_1 & <id>_2 with current design. When user tried to add skip query parameter(Split after <id> or <id>_1 ), Then due to our dynamic ID calculation, previous <id>_2 logs assigned with <id>.\n\nWe are currently calculating id using time stamp till seconds. This patch makes it more unique by adding milliseconds to it so that always there will be unique(Per specification) id for log entries.  Yes, There is still corner case of two log entries on same milliseconds, but IMO, that is almost impossible with current processors."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> First sorry for late pitch in here.\n> Previous Format (<id>_<idx>) Works fine in normal operations. But major issues comes with skip & top query parameters. If we have 3 logs on same time(in seconds), They will be assigned with <id>, <id>_1 & <id>_2 with current design. When user tried to add skip query parameter(Split after <id> or <id>_1 ), Then due to our dynamic ID calculation, previous <id>_2 logs assigned with <id>.\n\n?  I'm not quite following.  So lets say a 3 logs happened at time 5.\n\nThe first ID is 5, the second id is 5_2\n\nIf I call $skip=5, I would get logs 5_2 and 5_3.\nIf I call $skip=5_2, I would get only log 5_3.\n\nIn terms of API, that doesn't sounds like an issue.  If the current code doesn't work like that, maybe it should?\n\nI'm really worried about multiple logs happening in the same microsecond/millisecond/whatever granularity we pick.  While unlikely in the \"normal\" case, if any daemons are relying on coarsetime, it could happen.\n\n> \n> We are currently calculating id using time stamp till seconds. This patch makes it more unique by adding milliseconds to it so that always there will be unique(Per specification) id for log entries.  Yes, There is still corner case of two log entries on same milliseconds, but IMO, that is almost impossible with current processors.\n\nI'd really like to hear this from the person that submitted the patch.  If what you said is what they were thinking, then the commit message is totally incorrect, which makes sense, because this patchset is no more or less unique than what was there before.  I'd really like the submitter to understand why this patch exists.  If fixing $top and $skip is the priority, I would expect that called out in the tested.\n\nLets get a commit message with this detail, the old reasoning removed (if it's no longer valid) typed up and pushed, and go from there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> I'm not quite following.  So lets say a 3 logs happened at time 5.\n\n> The first ID is 5, the second id is 5_2\n\n> If I call $skip=5, I would get logs 5_2 and 5_3.\n> If I call $skip=5_2, I would get only log 5_3.\n\nThis $skip logic seems wrong. \n\nFrom DSP0266:\n\n$skip=<integer> \tApplies to resource collections. Returns a subset of the members in a resource collection, or an empty set of members if the $skip value is greater than or equal to the member count. This paging query parameter defines the number of members in the resource collection to skip.\n\nExample:\n\nhttps://resourcecollection?$skip=5"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep...... that got implemented that totally wrong, that's the core of the problem here, not the ID itself.\n\nBased on the above, I suspect this patch doesn't solve the problem either."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "Apologies for my delayed response...\nYes, this patch is intended to address the skip functionality issue. \nEarlier, unique ID's were generated using Timestamp until seconds, so, when we have say three events, there is a high probability of them being within the same second. so the ID's would be X, X_1 and X_2. Suppose X was 20th record, which makes X_1 21st record and X_2 22nd record. So, when we call Skip until 21 i.e. $skip=21, X_1 would now be displayed as X, and X_2 would become X_1... Which would not comply with DMTF specification, as it requires that every ID of event log to be unique. So in order to avoid the above scenario, Timestamp until microseconds is considered. \nConsidering the filesystem overheads/bottlenecks that might be involved in logging a record, the probability of records falling into the same microsecond window would be very less compared to records falling under the same Second. If there were records at 5.000001   5.000012   5.000022   5.000030   5.000100 , with this patch we would have different ID's for each due to varying microseconds, but if we consider seconds, all the 5 records fall under the 5 second mark. So, the reason of this commit is to extend the the Timestamp consideration until microseconds to improve the uniqueness though corner cases still would exist."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See Gunnars comment from the spec.  $skip needs to be based on zero based indexes, not ids.  I will fully admit, when I got jason to implement this initially, I had my understanding of skip incorrect, and led him down the wrong path, we should just fix it to be correct.\n\nTo do the thing you're trying to do, you likely want to use the $filter command set, using ID > X as the function.\n\nI realize this is a lot of work, but it's inline with the spec.  Please review the patch trying to add $only as a param, as you'll likely need a lot of that same background work to make $filter functional in bmcweb."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -24
                },
                {
                    "file": "redfish-core/lib/log_services.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -42
                }
            ],
            "sizeInsertions": 35,
            "sizeDeletions": 66
        }
    ]
}