{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I6cee3de963c489e690d2ad0bb09ba78dca39e4f9",
    "number": 40892,
    "subject": "Redfish Session : Fix clientIp getting mapped to clientId",
    "owner": {
        "name": "Sunitha Harish",
        "email": "sunithaharish04@gmail.com",
        "username": "sunharis"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40892",
    "commitMessage": "Redfish Session : Fix clientIp getting mapped to clientId\n\nWhen the session is created using /login, the ClientOriginIPAddress\nis mapped to the clientId parameter which displayed the clientIP\ninstead of the of clientId.\nThe similar problem is observed with auth methods other than sessions\ncreated using the SessionService resource\n\nThis commit swaps the clientId and clientIp parameters passed to\ngenerateUserSession API, so that the optional clientId is\npassed as the last parameter\n\nTested by :\n  1. Create session using Redfish command\n     POST https://${bmc}/login -d '{\"username\": <>,\"password\": <>}'\n     POST https://${bmc}/redfish/v1/SessionService/Sessions\n        -d '{\"username\": <>,\"password\": <>}'\n  2. Open the GUI session to check the clientId is not displaying the\n  ClientOriginIPAddress\n\nSigned-off-by: Sunitha Harish <sunithaharish04@gmail.com>\nChange-Id: I6cee3de963c489e690d2ad0bb09ba78dca39e4f9\n",
    "createdOn": 1614162595,
    "lastUpdated": 1615476640,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1614162595,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1614162615,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614164425,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12962/ : SUCCESS"
        },
        {
            "timestamp": 1614193508,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1614226039,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1614226057,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1614710458,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1614763497,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1614801419,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1614830423,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1614832788,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1614832814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614832862,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1614833746,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13294/ : SUCCESS"
        },
        {
            "timestamp": 1614872558,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1614929910,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1615153582,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1615189582,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1615189598,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615190158,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1615190530,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13461/ : SUCCESS"
        },
        {
            "timestamp": 1615216242,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(4 comments)\n\nSorry I didn't catch the common error thing earlier.  This was technically an issue in the preceding patch too, but considering we're already moving that code around, we might as well fix it at the same time.\n\nThe suggestion on line 213 would've prevented code like this from compiling entirely, but that's a problem for another patchset."
        },
        {
            "timestamp": 1615279297,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1615371769,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1615476580,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1615476638,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+2\n\nI still would like to see type safety in this stuff, but as-is, it's still better than what was there.  Merging shortly."
        },
        {
            "timestamp": 1615476640,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as d32392249b1538e0b0a76f20bf602e683f636fb6 by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "57eeb63b8f8ab2109ad7bb275c80e35d3e204a40",
            "parents": [
                "feaf15005555a3099c7f22a7e3d16c99ccb40e72"
            ],
            "ref": "refs/changes/92/40892/1",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614162595,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "This just isn't the GUI, it is anyone using /login with ClientID enabled. Also I think other Auth methods had this problem as well \n\nhttps://github.com/search?q=org%3Aopenbmc+generateUserSession&type=code"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Can you further explain the /login ? i.e. This isn't specific to the GUI but to anyone with ClientID enabled"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 3,
            "sizeDeletions": 3
        },
        {
            "number": 2,
            "revision": "8746c0a2e15f4e34488a2075f86e4567f4f98181",
            "parents": [
                "feaf15005555a3099c7f22a7e3d16c99ccb40e72"
            ],
            "ref": "refs/changes/92/40892/2",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614226039,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ahh, we have other callers of generate user session function which was creating the problem..\n\nhttps://github.com/openbmc/bmcweb/blob/c0ea7ae1c502fa2c67b0a58aee05b75581dafa7a/include/login_routes.hpp#L141"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These really shouldn't be default params.  If they're required data, they need to be required.  If certain implementations don't have a way to fill in clientId, it should leave it empty, but still present in calling code.\n\n\nclientIP definitely shouldn't be defaulted, as we would expect all callers here to be able to determine the source IP."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I will make the clientIp as required parameter. But clientId can be defaulted. Its not needed for all the implementations to pass a empty argument. Instead, the implementations which need the clientId can pass the parameter."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"But clientId can be defaulted\"\n\nPlease don't.  I'd much rather we have something like\n\nstd::string unsupportedClientId = \"\"\ngenerateUserSession(... unsupportedClientId)\n\nTo make it really obvious that we didn't push clientId everywhere, and so we don't hit this situation again with default params."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ya wherever the generateUserSession is called, i will need to do this. But there are two other default arguments in this method. isConfigureSelfOnly and persistence. How about them ?\n\nI saw one of your commits https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/37576 - to make the clientId wrapped with the IBM compiler flag. That may not be needed if these changes are made"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Ya wherever the generateUserSession is called, i will need to do this. But there are two other default arguments in this method. isConfigureSelfOnly and persistence. How about them ?\n\nI don't think any of them should have default arguments, but that's not a problem with what you changed, so I wouldn't expect you to have to fix that in this patchset.\n\n> \n> I saw one of your commits https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/37576 - to make the clientId wrapped with the IBM compiler flag. That may not be needed if these changes are made\n\nThat still is needed, along with other patchsets to fix the schema files for non-ibm systems, or we enable this feature for everyone, but considering we're allowing an unverified, unchecked, user-driven string into clientId, that seems like an issue at the moment that would prevent more security conscious systems from adopting it."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 216,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 3,
            "sizeDeletions": 3
        },
        {
            "number": 3,
            "revision": "876ff11a4a05a6e3176b366ff75fb9163fd0d785",
            "parents": [
                "15124765dad8076bdfae224b5463e0aa3c26b6a7"
            ],
            "ref": "refs/changes/92/40892/3",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614832788,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -5
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 13,
            "sizeDeletions": 14
        },
        {
            "number": 4,
            "revision": "2956d8a36463d853fe593a56b89f7bbc66837d74",
            "parents": [
                "15124765dad8076bdfae224b5463e0aa3c26b6a7"
            ],
            "ref": "refs/changes/92/40892/4",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1615189582,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_connection.hpp",
                    "line": 245,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "common error #5"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 245,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Below are the boost definitions which are available for the to_string()\n\nstd::string address::to_string() const\n{\n  if (type_ == ipv6)\n    return ipv6_address_.to_string();\n  return ipv4_address_.to_string();\n}\n\n#if !defined(BOOST_ASIO_NO_DEPRECATED)\nstd::string address::to_string(boost::system::error_code& ec) const\n{\n  if (type_ == ipv6)\n    return ipv6_address_.to_string(ec);\n  return ipv4_address_.to_string(ec);\n}\n#endif // !defined(BOOST_ASIO_NO_DEPRECATED)\n\nI am not able to use the overload\nhttps://github.com/openbmc/bmcweb/blob/master/meson.build#L242"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 245,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, Since the no-throw overload is not available, should i be using the try-catch block for this case ?"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 245,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No need for try catch here.  They deprecated it because none of the common implementations could throw.\n\nThis is fine as is.  Sorry, the doc I was reading was apparently on an old version of boost."
                },
                {
                    "file": "include/login_routes.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Common error #5"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm realizing now, we also could've used a more type safe equivalent for IP address rather than a string, but that's probably for another patchset."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "common error #5"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -6
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 18,
            "sizeDeletions": 15
        },
        {
            "number": 5,
            "revision": "d32392249b1538e0b0a76f20bf602e683f636fb6",
            "parents": [
                "efb8062c306474942bc94f15d748b2eb0b58fbb6"
            ],
            "ref": "refs/changes/92/40892/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1615476640,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -6
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 18,
            "sizeDeletions": 15
        }
    ]
}