{
    "project": "openbmc/meta-phosphor",
    "branch": "master",
    "id": "Ie4c1056e0511c424736008c03061d41f868f2ddc",
    "number": 39737,
    "subject": "Replace deprecated Linux-PAM modules",
    "owner": {
        "name": "Joseph Reynolds",
        "email": "joseph-reynolds@charter.net",
        "username": "joseph-reynolds"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/meta-phosphor/+/39737",
    "commitMessage": "Replace deprecated Linux-PAM modules\n\nThis replaces deprecated Linux-PAM modules with supported modues:\n - pam_passwdqc replaces pam_cracklib.\n - pam_faillock replaces pam_tally2.\n\npam_passwdqc was selected over pam_pwquality because it is smaller and\nfaster.\n\nNote pam_faillock is necessarily configured into the pam module stack\ndifferently than pam_tally2.\n\nThis has a deliberate behavior change compared to previous.  If a user\nauthenticates correctly but cannot gain access because their acount is\nlocked, this tells the user their account is locked.  The previous\nbehavior was silent, and the user did not know if their password was\ncorrect or not.  NOTE: This new behavior only discloses information to\nauthenticated users.\n\nThis creates the priv-noaccess group needed by phosphor-user-manager.\n\nCompatibility note / operational change.  If you used the \"pam_tally2\n-u USER -r\" command to unlock a user after repeated authentication\nfailures, change to use: faillock --user USER --reset\n\nCompatibility note / migration issue.  If your BMC cannot authenticate\nusers after installing this change, the cause might be an overlayfs file\nblocking the new /etc/pam.d/common-auth file.  To find out, use\n`grep deny= /etc/pam.d/common-auth` on your BMC.  If it shows \"tally2\"\nthen you are affected; it should show \"faillock\".  The recovery is to\ndelete the overlay file or to factory reset the BMC.\n\nThis is work in progress.\n\nAre the \"change password\" prompts the same?\n\nDoes the user get more chances to enter an acceptable new password?\n\nThis requires recipe changes to compile:\n - faillock is available in libpam_1.5.1.bb.\n - passwdqc_1.3.1.bb is in the latest yocto.\n\nThis has not been tested.\n\nTests for password changing:\nChange the password via:\n- the passwd command\n- the PATCH Refish AccountService {Password: NEW}\n- SSH (accessible only when the password is expired)\n- IPMI user set password (accessible only when the password is not expired)\nPerform the above for both unexpired and expired passwords.\nHint: passwd --expire\n\nPerform the above with an unacceptable password.\n\nTest various unacceptable passwords:\n- too short\n- too simple\n- too similar to the username\n\nTests for lockout:\nLDAP\nNo LDAP\nNon-existent user\nMultiple consecutive fails\nMultiple non-consecutive fail: fail fail success fail fail success ...\nSSH, POST Redfish AccountService, POST /login, IPMI\nCreate new user\n\nWhen the account is locked, try with both correct and incorrect password.\nEnsure account is unlocked after X seconds.\nEnsure the faillock command works.\n\nSigned-off-by: Joseph Reynolds <joseph-reynolds@charter.net>\nChange-Id: Ie4c1056e0511c424736008c03061d41f868f2ddc\n",
    "createdOn": 1610666567,
    "lastUpdated": 1611716328,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1610666567,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1610666604,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610666612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-meta/2495/"
        },
        {
            "timestamp": 1610666847,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1: Code-Review-1\n\nThis is a work in progress alternative to https://gerrit.openbmc-project.xyz/c/openbmc/meta-phosphor/+/39683\nPlease read the commit message: this requires recipe changes that I expect will be in the latest yocto image that we are going to."
        },
        {
            "timestamp": 1610670421,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-meta/2495/ : FAILURE"
        },
        {
            "timestamp": 1610714910,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1610744476,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(6 comments)\n\nAdded more details and questions for reviewers"
        },
        {
            "timestamp": 1611067225,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\nWhy is the `priv-noaccess` group not created?  The other privilege groups (which correspond to Redfish roles) are created here: https://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-phosphor/users/phosphor-user-manager_git.bb\n**Should priv-noaccess be created here too?**  Is priv-noaccess handled specially?  Or is this group created somewhere else?\nNote that code in phosphor-user-manager (https://github.com/openbmc/phosphor-user-manager/blob/master/user_mgr.hpp) and fails if this group is not present."
        },
        {
            "timestamp": 1611068723,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1611080329,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nWill specify OpenBMC-specific default pam_faillock.so parameter values in the next patchset."
        },
        {
            "timestamp": 1611160797,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1611160810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611162898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-meta/2544/"
        },
        {
            "timestamp": 1611171449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-meta/2544/ : FAILURE"
        },
        {
            "timestamp": 1611175267,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\nThis patchset goes together with related phosphor-user-manager changes:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-user-manager/+/39853"
        },
        {
            "timestamp": 1611241688,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nLet's consider if a service to migrate Linux-PAM configuration files is needed."
        },
        {
            "timestamp": 1611615428,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\n(3 comments)\n\nSome test results.  I'll push a corrected patchset."
        },
        {
            "timestamp": 1611715626,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\nAll of the project's git subtree changes are making my head spin (more than usual).  I tried to push this directly into openbmc/openbmc (meta-phosphor subdirectory) but gerrit wouldn't let me do that.\nSo then somehow the new patchset for this went into a new gerrit review:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/meta-phosphor/+/40032"
        },
        {
            "timestamp": 1611716328,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Abandoned\n\nAccidentally moved to https://gerrit.openbmc-project.xyz/c/openbmc/meta-phosphor/+/40032"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "e7552a47440a81a2b2705d02d70e7b76362f92fa",
            "parents": [
                "cf9a8ecdc994f24e7e5d52869fea528424028b8b"
            ],
            "ref": "refs/changes/37/39737/1",
            "uploader": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "createdOn": 1610666567,
            "author": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "TODO: Add a migration guide with items like:\nIf you use: pam_tally2 --user=testuser [--reset]\nUse this instead: faillock --user=testuser [--reset]"
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-auth",
                    "line": 16,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Looks like this file was previously formatted using tabs.  Can you make consistent?"
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-auth",
                    "line": 16,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Yep.  I'll detabify the whole file.  Because tabs: ick!"
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-auth",
                    "line": 21,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Oops. To remain compatible with the previous behavior we need to set explicit default values for the pam_faillock.so module:\nThe default value for the \"deny\" parameter is 3.  We need to set this parameter to 0 (zero) which disables locking.\nThe default value for the unlock_time parameter is 600 (10 minutes).  We need to set this parameter to 0 (\"never\") which never unlocks."
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "line": 19,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I did not find a replacement parameter for reject_username.  I've added this as a test case."
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "line": 19,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I used max=1024 to change the default max=40 which seems too small.  I believe 1024 is a reasonable default and all OpenBMC components can handle it.  Notwithstanding the Linux-PAM ipmicheck module below which limits IPMI users to 20 characters(bytes)."
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "line": 19,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I used min=8,8,8,8,8 as the project default for compatibility with the project's previous cracklib configuration.  Should this be bumped up to min=15,15,15,15,15 to keep up with evolving(increasing) security standards?\nNIST requires 8 per https://pages.nist.gov/800-63-3/sp800-63b.html#sec5"
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "line": 19,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Note phosphor-user-manager minPasswordLength works with this parameter and is implemented as uint8_t so it has a limit of 255.  That is, you can set the minimum between 0..255."
                },
                {
                    "file": "recipes-extended/pam/libpam_%.bbappend",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm surprised we don't need pam-passwdqc in this list too, since we use to have cracklib."
                },
                {
                    "file": "recipes-extended/pam/libpam_%.bbappend",
                    "line": 11,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "The Linux-PAM project incorporates the faillock module (https://github.com/linux-pam/linux-pam/tree/master/modules) so I can pull it in like the others.  The Linux-PAM module passwdqc is a separate project with a newish bitbake recipe, so I pull it in separately (line 9).\nI think this is the right way to do it ... advice appreciated."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-account",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-auth",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -5
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "recipes-extended/pam/libpam_%.bbappend",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 12,
            "sizeDeletions": 9
        },
        {
            "number": 2,
            "revision": "837f0dd55b94917c84b264d29d8017d218fd49b3",
            "parents": [
                "cf9a8ecdc994f24e7e5d52869fea528424028b8b"
            ],
            "ref": "refs/changes/37/39737/2",
            "uploader": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "createdOn": 1611160797,
            "author": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Note account locking only takes effect when the /redfish/v1/AccountService  AccountLockoutThreshold property is nonzero.  For example, to test, use:\ncurl -X PATCH https://${bmc}/redfish/v1/AccountService -d '{\"AccountLockoutThreshold\": 3, \"AccountLockoutDuration\": 60}'"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 37,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Is this acceptable?  Specifically, the scenario is:\n1. A BMC is running with a previous image that uses the deprecated tally2/cracklib modules.\n2. The BMC admin changes one of the PAM parameters, for example, the minimum password length.  This writes into the PAM config file, which creates or updates an overlayfs file.\n3, The BMC gets firmware update with this fix which removes the tally2/cracklib shared libraries and changes the PAM config files.\nHowever, the PAM config file overlayfs files hide the changes to the PAM config file, so the login/authentication process uses the old modules; this causes authentication to fail.\n\nThe resolution proposed in this commit is to simply delete the overlay files.  The Admin-supported way to do that is to perform a factory reset at the same time as the code update.\n\nAn alternative (easier to consume) resolution is to create a new BMC systemd service to migrate the PAM config files on first boot after this fix is installed, to run before any authentication to the BMC is allowed.  It would changes tally2 references to faillib and reswizzle the parameters, etc.\n\nIs a PAM config file migration service needed?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 75,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Here are some partial test results:\n\nThe password `CI4ever!` is rejected because it is based on a dictionary word.  The password `0penBmc` is too short.  The password `0penBmc1` is accepted.\n\nThe password prompts as shown by the `passwd` command are different.\n\nThis patchset failed to create the /var/run/faillock directory on the BMC.  How is that directory supposed to be created?  I created the directory as root with 755.\n\nAccount locking did not work (even after AccountLockoutThreshold was set to a nonzero value).\nThe only command that writes into the tallydir is: faillock --user testuser --reset\nTo fix this, the faillock authfail module must appear before the deny module.\nThe remainder of the testing was performed with this corrected configuration.\n\nWith the corrected configuration, locking and timeouts appeared to work correctly.\nOne behavior difference from pam_tally2 is: after the lockout threshold is reached, pam_tally2 restarts the timeout for every new authentication attempt, whereas pam_faillock does not and instead times from the failed auth that triggered the lockout.\n\nFrom the Redfish APIs, changing the AccountService AccountLockoutThreshold and AccountLockoutDuration properties made the expected changes into the /etc/pam.d/common-auth config file.\nChanging MinPasswordLength fails with PropertyNotWritable\n\nThe GET /redfish/v1/AccountService/Accounts/testuser shows {\"Locked\": true} as appropriate.  However, as before with the pam_tally2 command, a false positive continues to be shown after the lockout timeout.  See https://github.com/linux-pam/linux-pam/issues/327"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 78,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Faillock reports failures for affected users, and the reset option works."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-account",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-auth",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -5
                },
                {
                    "file": "recipes-extended/pam/libpam/pam.d/common-password",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "recipes-extended/pam/libpam_%.bbappend",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "recipes-phosphor/users/phosphor-user-manager_git.bb",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 14,
            "sizeDeletions": 11
        }
    ]
}