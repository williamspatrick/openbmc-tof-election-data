{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I3cd93364094694ed74101fd01bb31f78e1e2edd6",
    "number": 38532,
    "subject": "Add size property of EEPROM.",
    "owner": {
        "name": "Helen Huang",
        "email": "he.huang@linux.intel.com",
        "username": "huangheintel"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/38532",
    "commitMessage": "Add size property of EEPROM.\n\nAdd the size property to ensure that we won't write out of the range and\nreturn the correct complete code.\n\nChange-Id: I3cd93364094694ed74101fd01bb31f78e1e2edd6\nSigned-off-by: Helen Huang <he.huang@linux.intel.com>\n",
    "createdOn": 1606179250,
    "lastUpdated": 1619655897,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1606179250,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1606179262,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606179527,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/8408/ : FAILURE"
        },
        {
            "timestamp": 1606193365,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1606193382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606193655,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/8425/ : SUCCESS"
        },
        {
            "timestamp": 1606201850,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1606201866,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606202067,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1606202081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606202085,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/8436/ : ABORTED"
        },
        {
            "timestamp": 1606202718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/8438/ : SUCCESS"
        },
        {
            "timestamp": 1606233458,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\nAs a design concept, it looks reasonable, just needs code to go behind it, as well as updates to all the other schemas."
        },
        {
            "timestamp": 1606291714,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1606311104,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4:\n\n(4 comments)\n\nHi Helen.  Thanks for factoring out the EEPROM attributes into their own schema!\n\nFor next time, once thing you can do to help out your reviewers is split something like this into two patches:\n\n1 - refactor existing EEPROM schema\n2 - make changes (add the size property) to the refactored schema\n\nIt also helps get (parts of) your code through review faster - I'm pretty sure #1 would be merged very quickly...\n\n-brad"
        },
        {
            "timestamp": 1606323504,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)\n\nOverall, entity-manager has already started going down the path of providing specific EEPROM types for the various sizes available.  For example, the 24C02 represents a 2kB FRU eeprom.  This is probably a place where we need to make an architectural decision about how to represent this and stick with it;  Unfortunately, the kernel drivers this uses needs an exact model, so I suspect the backend of this patch will likely drive the representation here to avoid having a lookup table of size->device type."
        },
        {
            "timestamp": 1606365009,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1607392794,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1607451089,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1607958106,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1609308938,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1609308971,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609309235,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/10367/ : FAILURE"
        },
        {
            "timestamp": 1609310673,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1609310686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609310943,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/10368/ : FAILURE"
        },
        {
            "timestamp": 1609311374,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1609311385,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609311649,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10369/ : SUCCESS"
        },
        {
            "timestamp": 1609352397,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n> Patch Set 4:\n> \n> (3 comments)\n> \n> Overall, entity-manager has already started going down the path of providing specific EEPROM types for the various sizes available.  For example, the 24C02 represents a 2kB FRU eeprom.  This is probably a place where we need to make an architectural decision about how to represent this and stick with it;  Unfortunately, the kernel drivers this uses needs an exact model, so I suspect the backend of this patch will likely drive the representation here to avoid having a lookup table of size->device type.\n\nHelen,\nIt would help a lot if you could reply to this comment. As-is, I don't think this can be merged.  I appreciate you rebasing it, but I suspect we need to go down a different path."
        },
        {
            "timestamp": 1609924042,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Patch Set 7:\n\n> Patch Set 4:\n> \n> (3 comments)\n> \n> Overall, entity-manager has already started going down the path of providing specific EEPROM types for the various sizes available.  For example, the 24C02 represents a 2kB FRU eeprom.  This is probably a place where we need to make an architectural decision about how to represent this and stick with it;  Unfortunately, the kernel drivers this uses needs an exact model, so I suspect the backend of this patch will likely drive the representation here to avoid having a lookup table of size->device type.\n\nHi Ed,\nThanks for you comments. Here is the reason why the patch is proposed:\nWriting fru IPMI command needs the exact error code when write out of range. And I don't find an appropriate way for the IPMI command to get the EEPROM size in the existing code. \n\nIn entity-manager/src/FruDevice.cpp, it scan the I2c device that have Fru information, at this point we don't have the information of EEPROM type, so we could not use the type<->size mapping table.\n\nThanks\nHelen"
        },
        {
            "timestamp": 1609936652,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Patch Set 7:\n\n> Patch Set 7:\n> \n> > Patch Set 4:\n> > \n> > (3 comments)\n> > \n> > Overall, entity-manager has already started going down the path of providing specific EEPROM types for the various sizes available.  For example, the 24C02 represents a 2kB FRU eeprom.  This is probably a place where we need to make an architectural decision about how to represent this and stick with it;  Unfortunately, the kernel drivers this uses needs an exact model, so I suspect the backend of this patch will likely drive the representation here to avoid having a lookup table of size->device type.\n> \n> Hi Ed,\n> Thanks for you comments. \n> Writing fru IPMI command needs the exact error code when write out of range. And I don't find an appropriate way for the IPMI command to get the EEPROM size in the existing code. \n> \n> The EEPROM 'size' could be globally seen in the entity manger by adding the size property to the specific device json\uff08SOLUM_PSSF162202_PSU.json in this patch\uff09, so the upper level service such as IPMI command handler could get the size only by the device bus/addr, no need to maintain any table of mapping size<->device type. \n> \n> Thanks\n> Helen"
        },
        {
            "timestamp": 1610043047,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n> Patch Set 7:\n> \n> > Patch Set 4:\n> > \n> > (3 comments)\n> > \n> > Overall, entity-manager has already started going down the path of providing specific EEPROM types for the various sizes available.  For example, the 24C02 represents a 2kB FRU eeprom.  This is probably a place where we need to make an architectural decision about how to represent this and stick with it;  Unfortunately, the kernel drivers this uses needs an exact model, so I suspect the backend of this patch will likely drive the representation here to avoid having a lookup table of size->device type.\n> \n> Hi Ed,\n> Thanks for you comments. Here is the reason why the patch is proposed:\n> Writing fru IPMI command needs the exact error code when write out of range. And I don't find an appropriate way for the IPMI command to get the EEPROM size in the existing code. \n\nI understand the use case.\n\n> \n> In entity-manager/src/FruDevice.cpp, it scan the I2c device that have Fru information, at this point we don't have the information of EEPROM type, so we could not use the type<->size mapping table.\n\nBut at that point, you don't have the configuration size parameter either.  Both are available after the configuration is instantiated.\n\n> \n> Thanks\n> Helen"
        },
        {
            "timestamp": 1619655897,
            "reviewer": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "message": "Abandoned"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "de54d9344f4cddef3bc5b69adf8f0325aebcf966",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/1",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1606179250,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "44374e2b73165c6cbf01b37c00aa5083600f5b2d",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/2",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1606193365,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/legacy.json",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 7,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "05329d26fed658fe1ead9452c60ba7970c5f2b16",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/3",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1606201850,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/EEPROM.json",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "3181dfe2d4fbe1d32453749c54712edd90d5aff7",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/4",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1606202067,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "if we just instantiated the eeprom driver I don't think this would be necessary.  It sort of feels like we are re-inventing things that the kernel already handles for us..."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Helen Huang",
                        "email": "he.huang@linux.intel.com",
                        "username": "huangheintel"
                    },
                    "message": "We need the size in the upper level such as IPMI command handler, to differentiate the error between writing failed and writing out of the range, and return the correct complete code.\nCurrent design could only ensure the writing will be fail when it's beyond the range, but could not tell the exact error code."
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs to be added to all the \"Type\" == \"EEPROM\" exposes records, not just the one entity you care about."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "It would be nice to have a title and description for this schema - something like like: https://github.com/openbmc/entity-manager/blob/master/schemas/IBM.json#L5"
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Please, add a description here to document in which unit do size should be specified (bits/bytes)."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 19,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "if you make this an enum with a single enum of type \"EEPROM\" this won't accidentally match something like Type: EPROM..."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "IMHO it should be optional, since we don't always know for sure for external components."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "+1 to making this optional."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you comment about a case where you wouldn't know the size?  Presumably the fru eeprom has a known size based on its physical part.  if I remember right, FruDevice just defaults to a size of 255 prior to this patch, so IMO this shouldn't be optional.  If you're unsure, it can be set to the smallest mod 2 size that would fit the fru that's already in the card.  Existing files can be set to 255 for backward compatibility.\n\nhttps://github.com/openbmc/entity-manager/blob/ef3cdc9a84f5dc806d2b10ad785f248f001244c3/src/FruDevice.cpp#L62\n\nIt's also easy enough to write a quick script to write bytes 1-infinity, and check where the writes stop getting acked to determine the size of an eeprom that you can't look at physically.\n\nFunctionally it's needed such that IPMI (and probably Redfish) can provide the difference between \"write failed\" and \"You tried to write beyond what the eeprom supported\" (I forget the exact error codes)."
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "> Can you comment about a case where you wouldn't know the size?\n\nIn my case I know the size.  I was thinking of eeproms that actually get a driver bound to them via device tree.  The size is required there, so having it again here seemed redundant.  But now that I think about it maybe this EEPROM exposes-type is only applicable to applications like fru-device that access eeproms with i2c-dev?"
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is linking to the eeprom type in the kernel I believe.\n\nWith that said, we already have a precedence of extending the types to include the specific variants of eeprom that could be bigger (see 24C02, and  24C64 respectively) we should be pulling the size out of those, unless there's a use case for declaring an eeprom size that's smaller than what's physically on the board?\n\nSo, we could roll that mechanism back and go with the \"size\" parameter instead, like this patch proposes, but I really like the concept of having the specific part number in there.  It makes building a config file from a schematic much easier, and the eeprom is just a catch for \"I don't know the exact model of eeprom\""
                },
                {
                    "file": "schemas/EEPROM.json",
                    "line": 25,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": ">  unless there's a use case for declaring an eeprom size that's smaller than what's physically on the board?\n\nI don't have any need to do this right now.  \n\nTBH I'm not really understanding the larger discussion here please don't wait for me."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/EEPROM.json",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 36,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "be7c59b40ff5b4b592a7c34165d9dd75df143783",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/5",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1609308938,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/EEPROM.json",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "ee3ea4e39b5cefef5d1ca8d185f0a360bbe03d89",
            "parents": [
                "e1ecc1adc93021db7521042dde2866b1901a8648"
            ],
            "ref": "refs/changes/32/38532/6",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1609310673,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/EEPROM.json",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "ca42db0b578fd48d837b650b160198d3ed12a27f",
            "parents": [
                "c7c5de795cf672797ae35965e95642dd1fc39363"
            ],
            "ref": "refs/changes/32/38532/7",
            "uploader": {
                "name": "Helen Huang",
                "email": "he.huang@linux.intel.com",
                "username": "huangheintel"
            },
            "createdOn": 1609311374,
            "author": {
                "name": "Helen Huang",
                "email": "he.huang@intel.com",
                "username": ""
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "configurations/SOLUM_PSSF162202_PSU.json",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "schemas/EEPROM.json",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "schemas/global.json",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 0
        }
    ]
}