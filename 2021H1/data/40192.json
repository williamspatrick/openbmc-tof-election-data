{
    "project": "openbmc/phosphor-networkd",
    "branch": "master",
    "id": "Ib2c73fe07a6a3f1c7a5f0e8f231dfef21badb3af",
    "number": 40192,
    "subject": "Improved IPv6 netmask parsing",
    "owner": {
        "name": "Johnathan Mantey",
        "email": "johnathanx.mantey@intel.com",
        "username": "Howitzer105mm"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-networkd/+/40192",
    "commitMessage": "Improved IPv6 netmask parsing\n\nThe subnet mask parsing in toV6CIDR only worked for very well behaved\nsubnet strings. This became apparent after the BMC received a DHCP\nassigned IPv6 address with an Address Prefix equal to /128. Any\nnetmask values trailing the final \":\" character were ignored. In\naddition it assumed all subnet entries would be submitted in shorthand\nform.\n\nThe changes here handle mask values supplied following the final \":\"\ncharacter. It also does more sanity checking on the incoming subnet\nstring.\n\nTested:\nSupplied the function with the following test patterns, and confirmed\nthe function returns accurate address prefix values.\n   ffff:ffff::\n   ffff:ffff:ffff::\n   ffff:ffff:fc00::\n   ffff:0:0:0:0:0:0:0\n   ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n   ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffc\n   ffff:0fff::\n   ffff:fgff::\n   ffff:0:0:6:0:0:0:0\n   ::\n   :\n   abcd:efgh:ijkl:mnop:pqrs:tuvw:xyz:abcd\n   ffff:0:0:0:0:0:0\n\nChange-Id: Ib2c73fe07a6a3f1c7a5f0e8f231dfef21badb3af\nSigned-off-by: Johnathan Mantey <johnathanx.mantey@intel.com>\n",
    "createdOn": 1612216229,
    "lastUpdated": 1617222365,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1612216229,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1612216241,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612216350,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11740/ : SUCCESS"
        },
        {
            "timestamp": 1612216585,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 1:\n\nThis commit corrects a problem that arose when the AcceptIPv6RA variable was set to true. This enabled DHCPv6 address and routing assignment. The address assigned by the DHCP server had a /128 address prefix. The existing toV6CIDR function entered an infinite loop attempting to create an address prefix. This change permits the address prefix to be calculated with a higher degree of accuracy, and permits IPv6 operation to the BMC."
        },
        {
            "timestamp": 1612561025,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1612561135,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\nManually decoding ipv6 addresses is fraught with error, so this is a good move, using inet_pton() to do the parsing and address validation, and then using the output of that to reduce scope to the subset of valid addresses that also make valid netmasks."
        },
        {
            "timestamp": 1612618559,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1612797565,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1612962823,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 1:\n\nJonathan, Can you please add/change the unit test cases?"
        },
        {
            "timestamp": 1612990627,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 1:\n\nI have updated the code.\nFor some reason I've lost ssh permissions to push my changes."
        },
        {
            "timestamp": 1613070082,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1613070093,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613070142,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\nUpdated the IPv6 test suite."
        },
        {
            "timestamp": 1613070211,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12316/ : SUCCESS"
        },
        {
            "timestamp": 1614639961,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1614773281,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1614773305,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\nLet's wait for william's to take a look."
        },
        {
            "timestamp": 1614789615,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615550480,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1615825841,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nI don't believe the suggested change is functionally identical to the code submitted for review."
        },
        {
            "timestamp": 1616010600,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1617203833,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 2:\n\nWilliam,\nDo you have any further issues with submitting this change?\nThe code block you suggested does not guarantee all the leading bits are '1'. I'd like to keep my code block as it guarantees a complete set of leading '1's and a complete set of trailing '0's."
        },
        {
            "timestamp": 1617210829,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> William,\n> Do you have any further issues with submitting this change?\n> The code block you suggested does not guarantee all the leading bits are '1'. I'd like to keep my code block as it guarantees a complete set of leading '1's and a complete set of trailing '0's.\n\nJohnathan,\n\nWhat is the period of time to wait for a response?  1 or 2 days?\n\n-- \nBruce"
        },
        {
            "timestamp": 1617219842,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2: Code-Review+2\n\n(2 comments)"
        },
        {
            "timestamp": 1617222365,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Change has been successfully rebased and submitted as 359623e2af84d63b4d37e15a14427f42781146ac by Johnathan Mantey"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "cc1a3ca9a90d5383a7a5370a35f4a13f8137c44b",
            "parents": [
                "86f659e671ffae08b52de7a19728297661b7271a"
            ],
            "ref": "refs/changes/92/40192/1",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1612216229,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "util.cpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -43
                }
            ],
            "sizeInsertions": 24,
            "sizeDeletions": 43
        },
        {
            "number": 2,
            "revision": "acfac1bcd1d4e8cdd4c0a8e20b3e8d284f59eceb",
            "parents": [
                "1b5ec9c5367947d19bdf6efd08251eeb55dd90f4"
            ],
            "ref": "refs/changes/92/40192/2",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1613070082,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "util.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Wouldn't this be simpler as\n```\nfor (uint8_t i = std::size(subnet.s6_addr32); i > 0; --i)\n{\n   if (subnet.s6_addr32[i-1] != 0)\n   {\n       return (std::size(subnet.s6_addr32) - i) * 32 + __builtin_ctz(be32toh(subnet.s6_addr32[i-1]));\n   }\n}\n```"
                },
                {
                    "file": "util.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "It's less code. It is also is incomplete. It implicitly assumes all bits in the array at a lower numeric index to that being tested are all assigned '1'. This is not necessarily true.\nThe code as written makes certain that all bits in the subnet mask supplied have left aligned '1' bits, and have no '1' bits trailing the first '0' bit found.\nAll bits of the subnet mask have to be analyzed, not just the least significant byte(s)."
                },
                {
                    "file": "util.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Sure, but that validation is easy enough to fix. I'll just send it out as a separate change since it also collapses both of the cidr functions.\n\nI'd argue it's not that important to actually verify if the input is a real netmask, as we don't return an error but an arbitrary cidr value currently. Having an arbitrarily defined output would be fine, especially when you consider we only parse the values from the kernel."
                },
                {
                    "file": "util.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "leadingZeros??"
                },
                {
                    "file": "util.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "builtin_ctz counts trailing zeroes. The subnet needs to be leading '1's and trailing '0's"
                },
                {
                    "file": "util.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "test/test_util.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -1
                },
                {
                    "file": "util.cpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -43
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 44
        },
        {
            "number": 3,
            "revision": "359623e2af84d63b4d37e15a14427f42781146ac",
            "parents": [
                "983da5568c70a75d0c0c2c2d05ee8e497d6cd4f6"
            ],
            "ref": "refs/changes/92/40192/3",
            "uploader": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "createdOn": 1617222365,
            "author": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "test/test_util.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -1
                },
                {
                    "file": "util.cpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -43
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 44
        }
    ]
}