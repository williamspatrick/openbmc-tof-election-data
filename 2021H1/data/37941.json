{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "If2e5ca8ad033189542c3789b686fb9383f4449a8",
    "number": 37941,
    "subject": "LEDS: Update the document with details on handling Faults",
    "owner": {
        "name": "Vishwanatha Subbanna",
        "email": "vishwa@linux.vnet.ibm.com",
        "username": "vishwabmc"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/37941",
    "commitMessage": "LEDS: Update the document with details on handling Faults\n\nThis commit puts technical information on how the resource fault\noperation is handled when requested via REDFISH.\n\nChange-Id: If2e5ca8ad033189542c3789b686fb9383f4449a8\nSigned-off-by: Vishwanatha Subbanna <vishwa@linux.vnet.ibm.com>\n",
    "createdOn": 1604477996,
    "lastUpdated": 1617293510,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1604477996,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1605034179,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1605071716,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1605072054,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1605108447,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1605112147,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1605120731,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1605158998,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607377675,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1607501724,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607588670,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607958159,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1607959633,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1607959846,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1607961647,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1608045366,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1608048103,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1608052095,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1608052997,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1608111803,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1608116926,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1610433441,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1610447784,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 4:\n\nPatrick : I don't want to have this patch-set chained to the previous one as I put here. Do you mind if I abandon this and then push a new commit that is not chained to the prior commit here ?"
        },
        {
            "timestamp": 1610457073,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> Patrick : I don't want to have this patch-set chained to the previous one as I put here. \n\nOk.\n\n> Do you mind if I abandon this and then push a new commit that is not chained to the prior commit here ?\n\nYes, I do mind.  Please don't abandon commits that have already been reviewed and you intend to get merged.  It wastes reviewers time.\n\nUse git rebase or a new branch to get this one out of the commit chain."
        },
        {
            "timestamp": 1610463116,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > Patrick : I don't want to have this patch-set chained to the previous one as I put here. \n> \n> Ok.\n> \n> > Do you mind if I abandon this and then push a new commit that is not chained to the prior commit here ?\n> \n> Yes, I do mind.  Please don't abandon commits that have already been reviewed and you intend to get merged.  It wastes reviewers time.\n> \n> Use git rebase or a new branch to get this one out of the commit chain.\n\nRight.. I value reviewer's time and that's why I asked for your opinion. If I create a new branch and submit, that would still not break this link right ?"
        },
        {
            "timestamp": 1610465246,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n> If I create a new branch and submit, that would still not break this link right ?\n\nYou need to push to Gerrit where you have 'master' + this commit.  Gerrit takes into account whatever dependencies you've uploaded in the push.  If you have no other commits, there will be no other dependency."
        },
        {
            "timestamp": 1617293510,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Abandoned\n\nDone with https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/41408"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7a98949b72e54ea307788f4bbca3ea0c6a6fc7ea",
            "parents": [
                "4ad7c0b486685722695e6a26b1cbb7b765e39009"
            ],
            "ref": "refs/changes/41/37941/1",
            "uploader": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "createdOn": 1604477996,
            "author": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "why fru? why not inventory_identify ?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "inventory is generic term and fru is specific"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "why not make this more generic?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "because it is not generic.. A generic item won't have a LED :)"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Why couldn't a generic inventory item have an LED identify? \nSure our design all inventory items with an LED we call a FRU but do others?\nI would think this design should be as generic as possible"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Inventory is so generic .. and you can see Intel has fru-device and not inventory-device.\n\nFRU is not an IBM terminology\n\nhttps://en.wikipedia.org/wiki/Field-replaceable_unit"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Still think we should try to void using the term FRU. I don't see where calling this inventory hurts anything."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Think we need to toss the coin :) .. Anyone else having a preference here ?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "I feel Inventory is just an OpenBMC terminology that we are used to. In general: https://en.wikipedia.org/wiki/Inventory\n\nFor FRU : https://en.wikipedia.org/wiki/Field-replaceable_unit\n\nI don't see why FRU is not a better choice. Inventory does not have LED. FRU is what has LEDs."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I also prefer to avoid FRU in most cases.  FRU is a restriction which is not beneficial.  An example:\n\n- Someone may choose to put an LED on a board next to a PCIeSlot.\n- The LED is wired up to the Identify function to blink.\n- A PCIeSlot is not a FRU but can perform this Identify function and be connected to Redfish similarly as defined here."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "looks like only I am pushing for FRU :) \n\n> Someone may choose to put an LED on a board next to a PCIeSlot.\nThat's exactly what IBM has"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "again why fru?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "answered above"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "spelling"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "646bf1219a00dba8b30c3cdcbc64e3e144f97050",
            "parents": [
                "42e35639db819e992c94698bd73f2f25ff8c13e1"
            ],
            "ref": "refs/changes/41/37941/2",
            "uploader": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "createdOn": 1605072054,
            "author": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Prefer non-yoda phrasing:\n\nStarting with Redfish v2020.3,"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "I searched but not sure I understand what a \"Yoda\" phrasing means. Wikipedia sent me to Yoda Conditions. \n\nBut I know you asked me to put \"with\" there"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> But I know you asked me to put \"with\" there\n\nI also suggested a word reordering so that Redfish was part of the first phrase.  This is the Yoda aspect."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Sure."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Who owns the OperationalStatus object?  Is it another process?  Are we settled with LED manager automatically updating this Functional property?  Can we get a domain expert from that code to sign off on this approach?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "OperationalStatus interface is implemented by many. For example: Fan/Power Monitor , Inventory Manager. bmcweb already has the hooks in place today to key off of OperationalStatus and set the Health property.\n\nYes.. we have discussed this in great detail with Brad 'et al and also suggestions from Ed to use Operational Status and we agree this is the path forward."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "1- Get who implements the OperationalStatus interface on the Inventory D-Bus path\n2- Set the property with the service gotten by #1"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Yes.. we have discussed this in great detail with Brad 'et al and also suggestions from Ed to use Operational Status and we agree this is the path forward.\n\nOther than here, is that discussion documented anywhere?\n\nI don't have any concern with Redfish using OperationalStatus as the way to display some Redfish information.  What I am concerned with is a design where one process sets OperationalStatus to \"not operational\" and a different process sets it to \"operational\". \n\nIf, for example, Fan owns an object with an OperationalStatus and sets it to \"not operational\" when there is a failure, why would we allow LED to know when to turn it back off?  That doesn't make any sense to me.  Shouldn't Fan know when the fan becomes operational again and both disable OperationalStatus and maybe de-assert the LED?\n\nWe could even go down a path where certain \"functional\" LED groups are triggered automatically from the original OperationalStatus rather than forcing the Fan code to know to signal the LED group, right?"
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": ">> If, for example, Fan owns an object with an OperationalStatus and sets it to \"not operational\" when there is a failure, why would we allow LED to know when to turn it back off?  That doesn't make any sense to me.  Shouldn't Fan know when the fan becomes operational again and both disable OperationalStatus and maybe de-assert the LED?\n\n--------------\n\nHere is how the flow is :\n\n- Fan Code detects the fan is bad and logs an error calling out the FAN\n- Errorlog code parses the callout section and gets the Inventory D-Bus object for what has been called out ( In this case: Fan )\n- Errorlog daemon then gets the \"fault_led\" association from Inventory D-Bus object\n- Errorlog makes a call to LED manager to turn [ON] Led for that group.\n- LED manager then sets OperationalStatus to [false] and also turns [ON] LED.\n\n-------------\n\nIf Fan determines the Fan is good, then they have a need to turn off the LED also and thus make a call to LED manager anyway. It would not make sense to have the fan marked \"Operational\" yet having the Amber LED [ON]. \n\n--------------\n\nWe have another usecase, where we need to turn off all the Indicator LEDs as part of Power_On. When we do that, we will turn off all indicator LEDs and also mark part as functional. If the part is then deemed NonFunctional, then we get into the path that I mentioned before\n\n---------------------\n\nWe have another usecase, where PHYP will detect some issue with PCIE slot for example. When they do it, they will just say turn on the LED for PCIeSlot. As part of that, we need to turn ON LED and also set OperationalStatus.  Similarly, if they are fine, then they ask to turn the LED off and by that, we also set OperationalStatus to true.\n\n-------\n\nNet: We won't have OperationalStatus as Good _plus_ also have Amber LED on."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Nobody else sees how complicated this design is?\n\n----\n\nOn error:\n* Fan Code creates log.\n* Log code triggers LED code.\n* LED code triggers Fan code to set OperationalStatus\n\nWhen error is resolved:\n* Fan code deasserts LED\n* LED code triggers Fan code to clear OperationalStatus\n\n----\n\nWhy would we do this to ourselves?  If the Fan code knows about the OperationalStatus, why isn't it setting it itself?\n\nWhat happens to systems without these fault LEDs?  Now I can't get Redfish status on my hardware unless I create definitions for fake LEDs so the plumbing between Fan and LED works?  This makes no sense.\n\n----\n\n> We have another usecase, where we need to turn off all the Indicator LEDs as part of Power_On. When we do that, we will turn off all indicator LEDs and also mark part as functional.\n\nThis is fairly unique to your system design, I suspect.  But, again, why doesn't the Fan(*) code know that we've started a new power on and to retry all hardware?  I don't see anything in this proposed use-case that requires LEDs to be involved directly.\n\n* Fan, or CPU, or whatever entity you have OperationalStatus on in this context.\n\n----\n\n> We have another usecase, where PHYP will detect some issue with PCIE slot for example. When they do it, they will just say turn on the LED for PCIeSlot. As part of that, we need to turn ON LED and also set OperationalStatus. \n\nThis really sounds like a legacy API which was previously poorly designed and now you're trying to shoehorn in.  If your hypervisor detects an error on a PCIe slot, why wouldn't they tell you they detected an error on the PCIe slot rather than a round-about way of telling you that by asking you to turn on an LED?  Can't you just assume certain requests \"turn on LED x\" really mean \"PCIe slot Y is now in a bad state\"?\n\nWho holds the OperationalStatus for these PCIe slots?  Again, my opinion is that should be the primary receiver of the request and control the OperationalStatus directly.  LED assertions are a secondary response to OperationalStatus changes."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": ">> What happens to systems without these fault LEDs?  Now I can't get Redfish status on my hardware unless I create definitions for fake LEDs so the plumbing between Fan and LED works?  This makes no sense.\n\nThat is not correct. Redfish is merely going by OperationalStatus as opposed to \"how that gets set\". If an implementation choses to set the \"OperationalStatus\" explicitly without LED,  that is still fine.. Redfish will just go by OperationalStatus and not by LED state.\n\n-----------\n\n>> This is fairly unique to your system design, I suspect.  But, again, why doesn't the Fan(*) code know that we've started a new power on and to retry all hardware?  I don't see anything in this proposed use-case that requires LEDs to be involved directly.\n\nSure.. May be it's an IBM need. But a usecase that IBM need to support. However, it does not break any other implementations that don't want to tie LED to OperationalStatus.\n\n------------------------------\n\n>> This really sounds like a legacy API which was previously poorly designed and now you're trying to shoehorn in.  If your hypervisor detects an error on a PCIe slot, why wouldn't they tell you they detected an error on the PCIe slot rather than a round-about way of telling you that by asking you to turn on an LED?  \n\nWell, we have debated this really well within IBM. However, what we have is what we all agreed to pursue. One of the reasoning is that , all the change about using Redfish etc are all internal to BMC. That should not cause an upper layer to do differently __because__ the underlying BMC implementation changed to using OpenBMC. Upper layers like Power Hypervisor , AIX, I5OS don't really care."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": ">> What happens to systems without these fault LEDs?  Now I can't get Redfish status on my hardware unless I create definitions for fake LEDs so the plumbing between Fan and LED works?  This makes no sense.\n\n> That is not correct. Redfish is merely going by OperationalStatus as opposed to \"how that gets set\". If an implementation choses to set the \"OperationalStatus\" explicitly without LED,  that is still fine.. Redfish will just go by OperationalStatus and not by LED state.\n\nYou've said the way the OperationalStatus gets updated is via the LED design.  What am I missing?  If we continue down this path, there will be no implementation where OperationalStatus is set correctly without your LED application, right?\n\n----\n\n>> This is fairly unique to your system design, I suspect.  But, again, why doesn't the Fan(*) code know that we've started a new power on and to retry all hardware?  I don't see anything in this proposed use-case that requires LEDs to be involved directly.\n\n> Sure.. May be it's an IBM need. But a usecase that IBM need to support. However, it does not break any other implementations that don't want to tie LED to OperationalStatus.\n\nI'm not sure what you're getting at here.  You can also implement this use case via the method I proposed without this cumbersome cyclic dependency between LED and \"the owner of the OperationalStatus\".\n\n----\n\n>> This really sounds like a legacy API which was previously poorly designed and now you're trying to shoehorn in.  If your hypervisor detects an error on a PCIe slot, why wouldn't they tell you they detected an error on the PCIe slot rather than a round-about way of telling you that by asking you to turn on an LED?  \n\n> Well, we have debated this really well within IBM. However, what we have is what we all agreed to pursue. One of the reasoning is that , all the change about using Redfish etc are all internal to BMC. That should not cause an upper layer to do differently __because__ the underlying BMC implementation changed to using OpenBMC. Upper layers like Power Hypervisor , AIX, I5OS don't really care.\n\nI think you missed what I was trying to say.  Changing your interface to your hypervisor is your business and not what I was suggesting.\n\nIf \"Hypervisor requests to light LED\" really means \"Hypervisor detected issue with PCIe slot\", which is what your original use case suggested, then there is no reason *on the BMC* to have this have anything to do with LEDs.  Set the OperationalStatus directly and the LEDs become a side-effect."
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "I would like to split this into 2 pats. \n\nPart_1 : LocationIndicatorActive :: I will carve out that section from this and put a new commit it is different usecase\n\nPart_2 : OperationalStatus :: I will maintain this commit so we have the comments saved and we can continue the discussion."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "63080e478537e6a258f76bf2d86ab073de6f0752",
            "parents": [
                "5f13216139e0d28d2386050b9456c1eaedb8c551"
            ],
            "ref": "refs/changes/41/37941/3",
            "uploader": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "createdOn": 1608116926,
            "author": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "a22843096fbd082257aa46fbeb04d3d5e1699d5d",
            "parents": [
                "2817c263c5e808d4bc02562325dbfbfb994bc3c6"
            ],
            "ref": "refs/changes/41/37941/4",
            "uploader": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "createdOn": 1610433441,
            "author": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "architecture/LED-architecture.md",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 0
        }
    ]
}