{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ic9c686b8da7bb6c03b9c113a6493f0e071b5bc77",
    "number": 47122,
    "subject": "Split up authenticate",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47122",
    "commitMessage": "Split up authenticate\n\nThis commit attempts to split up the authenticate method to make it\neasier to audit, and to simplify some duplicated URL parsing code.\n\nFirst, some history:\nauthenticate used to be token authentication middleware, then it got\npromoted into http connection, because of security concerns (we needed\nto effectively rate limit unauthenticated users).  Then we got rid of\nmiddlewares entirely, then we rearranged the ownership of request such\nthat it owns all its data and inits later in the cycle.  This has caused\na mess, so lets try to clean it up and make the connection class\nsimpler.\n\nThis commit specifically breaks up authenticate into two parts, the\nfirst, which is the same as the old authenticate, is responsible for\nactually authenticating the user, and no longer carries the\nauthorization credentials and allowlist with it.  The allowlist, as well\nas actually returning 401 is now moved into handle, where it makes more\nsense, as the request is complete, and we can immediately invoke the\naction, instead of having to set the isCompleted flag and wait until\nlater.\n\nBecause of this again, now the only calls to completeRequest are called\nfrom handle(), which means we can remove the extra \"if (req.completed)\"\ncheck we formerly had to do for authenticate, continuing to make\nauthenticate less of a special case.\n\nThe only possible negative to this patch, is now any allowlisted\nendpoints still have to call through the authenticate code, whereas\npreviously they could take a fast path.  This code runs all requests\nagainst authenticate, regardless of their allowlist status.  In theory,\nthis makes this slower, in practice, It seems to be an unmeasurable\nimpact.\n\nTested:\ncurl --insecure \"https://192.168.7.2/redfish/v1\"\nReturns the redfish v1 resource\n\ncurl --insecure \"https://192.168.7.2/redfish/v1/Systems\"\nReturns 401 unauthorized\n\ncurl --insecure --user root:0penBmc \"https://192.168.7.2/redfish/v1/Systems\"\nreturns the SystemsCollection\n\nSigned-off-by: Ed Tanous <edtanous@google.com>\nChange-Id: Ic9c686b8da7bb6c03b9c113a6493f0e071b5bc77\n",
    "createdOn": 1632363117,
    "lastUpdated": 1633735024,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1632363117,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1632363134,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Topic set to wip"
        },
        {
            "timestamp": 1632363142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632363218,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/26791/ : FAILURE"
        },
        {
            "timestamp": 1632416250,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\nFYI, This code series is totally untested, but something that came to me about a better way to do @jebrs patch.  Once the boost-uri update lands I'll get this tested.  Feel free to ignore until then."
        },
        {
            "timestamp": 1633460261,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633460274,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633460753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27505/ : SUCCESS"
        },
        {
            "timestamp": 1633462623,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Topic wip removed"
        },
        {
            "timestamp": 1633462640,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\nThis has been tested against master and seems to work.  I'm removing the WIP tag."
        },
        {
            "timestamp": 1633467612,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 2:\n\n(3 comments)\n\nWhy don't we move the allowlist check right before the auth call?"
        },
        {
            "timestamp": 1633487188,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1633489139,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 2:\n\n(3 comments)\n\nBe careful the in connection class, it is dangerous in there."
        },
        {
            "timestamp": 1633499849,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)\n\n> Patch Set 2:\n> \n> (3 comments)\n> \n> Be careful the in connection class, it is dangerous in there.\n\nYes, it's a dark and scary place, full of strange assumptions, and undefined, and yet to be defined behavior, ownership issues, and other things.  Believe it or not, it used to be way worse. \n\nhttps://i.ytimg.com/vi/fFMWvF3mbzE/hqdefault.jpg"
        },
        {
            "timestamp": 1633538486,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nI believe it used to be worse. I flipped through the history on git."
        },
        {
            "timestamp": 1633539735,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1633615131,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nChanges look good to me"
        },
        {
            "timestamp": 1633619039,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1633619049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633619061,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1633619715,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27724/ : SUCCESS"
        },
        {
            "timestamp": 1633689602,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1633715787,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nSeems reasonable to me. I would like to see John (jebr) sign off."
        },
        {
            "timestamp": 1633723745,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 3: Code-Review+1\n\nLooks good to me"
        },
        {
            "timestamp": 1633724571,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Published edit on patch set 3."
        },
        {
            "timestamp": 1633724587,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633724595,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633725018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27958/ : SUCCESS"
        },
        {
            "timestamp": 1633729095,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4: Code-Review+1\n\nSeems reasonable to me and has a couple +1s"
        },
        {
            "timestamp": 1633729393,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 4: Code-Review+1\n\nThanks for removing the newline"
        },
        {
            "timestamp": 1633735019,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1633735024,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 1d3c14aa49a6c814a0e106540d82aeb4d1473d25 by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "4facbd6dcc32c326415b1f6079dd425587337067",
            "parents": [
                "a0b3bd58250bbd215fcbe405629571f7528c8af1"
            ],
            "ref": "refs/changes/22/47122/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1632363117,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 16,
            "sizeDeletions": 13
        },
        {
            "number": 2,
            "revision": "e8acac3a5f50c39197a63bf766591ee2891df35c",
            "parents": [
                "d32c4fa936f9a88fc1dd124201ed11a6a90a18c5"
            ],
            "ref": "refs/changes/22/47122/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633460261,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "It would appear that we would not know if a request is allowlisted until we get to handle. \nIt is sort of late to know that, especially because we just finished reading the request. \n\nI worry about bmc's with low memory getting very very (unauthenticated) long request and crashing."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> It would appear that we would not know if a request is allowlisted until we get to handle. \n> It is sort of late to know that, especially because we just finished reading the request. \n\nThat seems like the time you would need to know whether or not it's allowed without authentication is when you actually check the authentication.  Is there a reason you would want to know it sooner?\n\n> \n> I worry about bmc's with low memory getting very very (unauthenticated) long request and crashing.\n\nThat's not how that works, and it's covered.  All the URIs on the allow list are \"known\" to have small request payloads.  In fact, the only one that supports POST with a body at all is login, and we know that data structure is less than 4k, so we know the body limits can never \"hurt\" us unless someone is intentionally attacking us, and in that case, the parser fails out and we drop the connection as soon as someone tries to send more data than that.  So the worst thing you can do without a password is to open and close a bunch of connections."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": ">  Is there a reason you would want to know it sooner?\nYes, We can spend fewer cycles on request we will not answer. \n\nI suppose cleanliness, and the possibility of getting a more descriptive error is worth it."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's the thing, we're going to answer it either way, we just answer it with 401 or 200 dependent on this branch, which has to be here (ie, we can't answer before we've read in the full request).\n\nif we completely dropped the request on an allowlist failure, I'd agree with you, we should close it sooner, but as-is, we need a branch here."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Sounds good, thanks for walking me through the thought process behind the response."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "NP.  The more people that understand this stuff, the less of it I have to write.  The next http connection bug is going to you \ud83d\ude0a"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 588,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Why can't we conditionally authenticate based on the allowlist here? \n\nThat would feel cleaner to me."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 588,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In theory we could, but in terms of abstraction, allowlist is an authorization check, this is an authentication check (ignore the fact that the namespace is called authorization), so they should be separate, if only to make it look like we understand security principals.\n\nIf we parsed the allowlist here, which we could, we'd have to store the result somewhere in the connections class to be used later on when we decide if we want to return 401, which has the potential to have issues on keepalive, or issues getting reset.  It's much simpler to just put the check after the request is complete."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 588,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "I don't really care if people think we understand security.\n\nStoring the result is also trouble, I have been convinced."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 588,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I don't really care if people think we understand security.\n> \n> Storing the result is also trouble, I have been convinced.\n\n\ud83d\udc4d"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 727,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "reset is will call the destructor, but not the constructor? \nI guess that is fine because we always emplace at handle 318, before using req?"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 727,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "keep in mind, reset() is being called on the std::optional::reset(), not crow::Request::reset(), which essentially \"empties out\" the optional, so yes, that calls the destructor on Request, but doesn't call the constructor, because we haven't constructed a new object, req is just \"empty\".\n\nIn theory we should be checking the std::optional for filledness at every step before we dereference it (I added one new check in a different patch), but fixing that all through the connection class is another patchset."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 727,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Sounds good."
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 727,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, can you please add a comment at this line to make it clear to a reader that this will call the std::optional::reset() and ultimately req gets destructed ? This is because people may tend to search for a crow::Request::reset()"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 727,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 14
        },
        {
            "number": 3,
            "revision": "a4f1d508d6f6eed0a288c2df145cb119299c12c8",
            "parents": [
                "d32c4fa936f9a88fc1dd124201ed11a6a90a18c5"
            ],
            "ref": "refs/changes/22/47122/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633619039,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_connection.hpp",
                    "line": 672,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "empty space change"
                },
                {
                    "file": "http/http_connection.hpp",
                    "line": 672,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "fixed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -3
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 18,
            "sizeDeletions": 13
        },
        {
            "number": 4,
            "revision": "82c00cde12735244663748a7bd71143db6d2baa7",
            "parents": [
                "d32c4fa936f9a88fc1dd124201ed11a6a90a18c5"
            ],
            "ref": "refs/changes/22/47122/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633724571,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -3
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 13
        },
        {
            "number": 5,
            "revision": "1d3c14aa49a6c814a0e106540d82aeb4d1473d25",
            "parents": [
                "259df359c457c9972feb24170d41dfdcbb5eef0a"
            ],
            "ref": "refs/changes/22/47122/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1633735024,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -3
                },
                {
                    "file": "include/authorization.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 13
        }
    ]
}