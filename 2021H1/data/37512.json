{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I02255d7374379749234cbc97e3974330deab95fd",
    "number": 37512,
    "subject": "entity-manager: Add support to read/write ipmb based host fru",
    "owner": {
        "name": "Kumar Thangavel",
        "email": "thangavel.k@hcl.com",
        "username": "HCL-BMC"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/37512",
    "commitMessage": "entity-manager: Add support to read/write ipmb based host fru\n\nAdded implementation to handle read/write the host fru details\nthrough ipmb communication.\n\nTESTED : Built Facebook YosemiteV2 images and loaded on the target hardware.\nVerified all the host's fru read and write.\n\nSigned-off-by: Kumar Thangavel <thangavel.k@hcl.com>\nChange-Id: I02255d7374379749234cbc97e3974330deab95fd\n",
    "createdOn": 1603016583,
    "lastUpdated": 1609427571,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1603016583,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1603016596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1603016660,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/6531/ : FAILURE"
        },
        {
            "timestamp": 1603025145,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 2: New patch set was added with same tree, parent, and commit message as Patch Set 1."
        },
        {
            "timestamp": 1603025154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1603025156,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1603025214,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/6532/ : FAILURE"
        },
        {
            "timestamp": 1603025437,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1603025451,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1603025481,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/6533/ : FAILURE"
        },
        {
            "timestamp": 1603025838,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1603025851,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1603026117,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/6534/ : SUCCESS"
        },
        {
            "timestamp": 1603173469,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\nI have not reviewed this fully, but it looks like you've copied the code for decoding of fru data from FruDevice, and used it here as well.  Please make it such that the code itself is not duplicated between the two implementations."
        },
        {
            "timestamp": 1603226493,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> I have not reviewed this fully, but it looks like you've copied the\n > code for decoding of fru data from FruDevice, and used it here as\n > well.  Please make it such that the code itself is not duplicated\n > between the two implementations.\n\nI agree with Ed, you can split code as common and device interface specific."
        },
        {
            "timestamp": 1603816981,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n(1 comment)\n\n> Patch Set 4:\n> \n> I have not reviewed this fully, but it looks like you've copied the code for decoding of fru data from FruDevice, and used it here as well.  Please make it such that the code itself is not duplicated between the two implementations.\n\nAck."
        },
        {
            "timestamp": 1603891604,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1603891743,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4:\n\nEd Tanous wrote:\n\n> Please make it such that the code itself is not duplicated\n> between the two implementations.\n\nCool.  How do you think this should be done?  Merging repos?  A new repo?  A submodule?"
        },
        {
            "timestamp": 1603902536,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> Ed Tanous wrote:\n> \n> > Please make it such that the code itself is not duplicated\n> > between the two implementations.\n> \n> Cool.  How do you think this should be done?  Merging repos?  A new repo?  A submodule?\n\nThe code came from this repo, so I don't think any merging/new/submoduled repos is required. Simply moving the method into a scope where it can be called from two places should be sufficient."
        },
        {
            "timestamp": 1603983480,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1603988771,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1604062500,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1604071889,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1604072399,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1604073515,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1604353444,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(45 comments)\n\nI stopped reviewing at this point.  I think there is a lot of cleanup that could be done to this commit to make it more readable and maintainable."
        },
        {
            "timestamp": 1604353842,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> (45 comments)\n> \n> I stopped reviewing at this point.  I think there is a lot of cleanup that could be done to this commit to make it more readable and maintainable.\n\nKeep in mind, most of this is copied and pasted from the existing FruDevice.  With that said, i agree with a number of your comments, and could certainly be improved in the existing code."
        },
        {
            "timestamp": 1604364837,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > (45 comments)\n> > \n> > I stopped reviewing at this point.  I think there is a lot of cleanup that could be done to this commit to make it more readable and maintainable.\n> \n> Keep in mind, most of this is copied and pasted from the existing FruDevice.  With that said, i agree with a number of your comments, and could certainly be improved in the existing code.\n\nWhy is code copy/paste duplicated within the same repository?  That seems like a non-starter."
        },
        {
            "timestamp": 1604368892,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > (45 comments)\n> > > \n> > > I stopped reviewing at this point.  I think there is a lot of cleanup that could be done to this commit to make it more readable and maintainable.\n> > \n> > Keep in mind, most of this is copied and pasted from the existing FruDevice.  With that said, i agree with a number of your comments, and could certainly be improved in the existing code.\n> \n> Why is code copy/paste duplicated within the same repository?  That seems like a non-starter.\n\nYep.  Hence my first comment 2 weeks ago;  It's waiting on Kumar to fix and resubmit."
        },
        {
            "timestamp": 1604379228,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 4:\n> > > \n> > > > Patch Set 4:\n> > > > \n> > > > (45 comments)\n> > > > \n> > > > I stopped reviewing at this point.  I think there is a lot of cleanup that could be done to this commit to make it more readable and maintainable.\n> > > \n> > > Keep in mind, most of this is copied and pasted from the existing FruDevice.  With that said, i agree with a number of your comments, and could certainly be improved in the existing code.\n> > \n> > Why is code copy/paste duplicated within the same repository?  That seems like a non-starter.\n> \n> Yep.  Hence my first comment 2 weeks ago;  It's waiting on Kumar to fix and resubmit.\n\nPatrick/Ed, \n\n      I am working on creating common file to avoid the duplicate functions. I am facing some issues and working on it. My Initial intention was to not update existing Frudevice.cpp. I will fix all the comments and resubmit the code. \n\nThanks for your comments and Suggestions."
        },
        {
            "timestamp": 1604410074,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n> I am working on creating common file to avoid the duplicate functions.\n\nThanks Kumar.\n\n> My Initial intention was to not update existing Frudevice.cpp. \n\nIn general, don't be fearful to change code.  If you break something, it will get fixed.  Ideally there would be test cases for anything you might have broken anyhow and maybe by breaking things it'll encourage test cases to be written.  I'd rather have a few well-written and well-utilized lines of code than a giant code base that is impossible to work in.\n\nAs a maintainer on other repositories, I'd almost always prioritize my time to review a commit that removes lines of code or refactors code to be more maintainable than a new feature."
        },
        {
            "timestamp": 1604412673,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > I am working on creating common file to avoid the duplicate functions.\n> \n> Thanks Kumar.\n> \n> > My Initial intention was to not update existing Frudevice.cpp. \n> \n> In general, don't be fearful to change code.  If you break something, it will get fixed.  Ideally there would be test cases for anything you might have broken anyhow and maybe by breaking things it'll encourage test cases to be written.  I'd rather have a few well-written and well-utilized lines of code than a giant code base that is impossible to work in.\n> \nSure. Thanks Patrick.\n\n> As a maintainer on other repositories, I'd almost always prioritize my time to review a commit that removes lines of code or refactors code to be more maintainable than a new feature.\n\nOk. Thanks for your suggestions."
        },
        {
            "timestamp": 1605279159,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > Patch Set 4:\n> > \n> > > I am working on creating common file to avoid the duplicate functions.\n> > \n> > Thanks Kumar.\n> > \n> > > My Initial intention was to not update existing Frudevice.cpp. \n> > \n> > In general, don't be fearful to change code.  If you break something, it will get fixed.  Ideally there would be test cases for anything you might have broken anyhow and maybe by breaking things it'll encourage test cases to be written.  I'd rather have a few well-written and well-utilized lines of code than a giant code base that is impossible to work in.\n> > \n> Sure. Thanks Patrick.\n> \n> > As a maintainer on other repositories, I'd almost always prioritize my time to review a commit that removes lines of code or refactors code to be more maintainable than a new feature.\n> \n> Ok. Thanks for your suggestions.\n\nI am working on this. Code modification almost done. Testing is in progress."
        },
        {
            "timestamp": 1605632125,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1607962982,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1607962996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607963278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/9758/ : SUCCESS"
        },
        {
            "timestamp": 1607963626,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1607963641,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607963721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9759/ : FAILURE"
        },
        {
            "timestamp": 1608021487,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1608021500,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608021539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9786/ : FAILURE"
        },
        {
            "timestamp": 1608022286,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1608022310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608022382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/9788/ : FAILURE"
        },
        {
            "timestamp": 1609427571,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Abandoned"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "24b05dbffb877b2b33359469f5b6117c0c10643c",
            "parents": [
                "def29274907ef77187b02ae19d55bb9888413892"
            ],
            "ref": "refs/changes/12/37512/1",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1603016583,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 1047,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1080,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "78575d0862706a1156164ea9e22870baa70e775f",
            "parents": [
                "def29274907ef77187b02ae19d55bb9888413892"
            ],
            "ref": "refs/changes/12/37512/2",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1603025145,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 1047,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1080,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "b2c27dffac62e25d2ca9e4e0f7d1847281c90d90",
            "parents": [
                "def29274907ef77187b02ae19d55bb9888413892"
            ],
            "ref": "refs/changes/12/37512/3",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1603025437,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 1050,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1083,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "26f77e59c2868cdc10da58cf3137305b624c8e25",
            "parents": [
                "def29274907ef77187b02ae19d55bb9888413892"
            ],
            "ref": "refs/changes/12/37512/4",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1603025838,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meson_options.txt",
                    "line": 11,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "You should also set default value to this option."
                },
                {
                    "file": "meson_options.txt",
                    "line": 11,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Ack"
                },
                {
                    "file": "meson_options.txt",
                    "line": 11,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "Actually I think the more common pattern is to make this a feature and leave the default as auto.  I wasn't aware of that pattern when I added the fru-device option."
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "line": 10,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "Why not default.target or multi-user?"
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "line": 10,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "I followed as per Fru Device service. Fru device service grouped as basic.target. So used the same for Ipmb fru device service. We can use multi-user target also as it is runlevel2. \n\nCould you please suggest the suitable target units for this."
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Both EM and FruDevice are basic.target today, although they probably should be multi-user target.  With that said, that's probably a discussion for another patchset if we wanted to make them all multi-user.target.  I can add it to my todo list."
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "line": 10,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Thanks Ed."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There are a whole lot of tag strings in this file.  Should we make a set of 'constexpr char*' or 'constexpr string_view' for all the IPMI field tags?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please don't use std::regex for something so trivial.  It is extremely inefficient both in speed and code-size."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there strong value in using 'flat_map' throughout this code instead of 'std::unordered_map'?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Maintainers ok having a global variable on this?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why can't these be std::array?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 164,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Generally you shouldn't need to pass iterators by reference and there is no need to put 'const' on the end iterator.  const parameters do not end up becoming part of the ABI anyhow and the iterator is already a const_iterator."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 167,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please initialize variables."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Does iter need to be checked for nullptr?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nullptr?  There are no pointers here?  Which pointer do you think should be checked?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Ed, isn't line 187 uint8_t c = *(iter++); doing a dereference of iter?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The STL might choose to implement an iterator as a pointer, but you shouldn't treat it as one in code.  It might be a class-acting-as-an-pointer.  'operator*' and 'operator->' can be implemented on any class just like it would be for std::unique_ptr."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why not throw an exception rather than make up your own return code types?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you use 'auto' on these instead of 'uint8_t'?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is the static_cast necessary?  If it is I'd prefer 'decltype(c)' so you're certain these all match the same type.  As it is you've had to write uint8_t 5 times in row here and I have to look around at various bits of code to determine if there is any unexpected casting going on.  This puts more work on future maintainers, in my opinion."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I would tend to 'return' right from here.  It makes it clear that you're done with this token.\n\nIf you turn all 'cases' into an early return then the last return on 234 can actually be an error case.  This ensures you don't accidentally have a future case that isn't handled (since you have a missing 'default:') or if it is it becomes an error rather than a silent 'ok'."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I personally prefer you just return a boost::...::flat_map instead of having a filled-by-reference parameter and a secondary bool return code that might just be ignored.  It makes the code harder to call and more error prone because you're not actually requiring anyone to catch the return from 'formatFru'."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is special about '8'?  Add a constexpr?  Add some documentation?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 244,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "auto."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 245,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Another constexpr tag rather than some random string buried in the code, please."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 246,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is the cast necessary?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Huh?  An uninitialized pointer to const vector of constant C-strings?  Can you find some C++ type to express whatever you're trying to achieve.\n\nI see later on these become a reference to constant vectors you've defined above.  You might want a typedef or decltype to simplify this.\n\nAlso, please initialize all variables."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "auto?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why?  This is not obvious.  It looks like it is because you already consumed the data on 246... so move the iterator there."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 261,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why don't we need to look at those?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "auto"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 322,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest:\n\nauto [status, value] = decodeFruData(...)"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why doesn't this path require an std::cerr?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 341,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I have no understanding what this is doing.  If the string has no null characters isn't it deleting the entire contents of the string?\n\nIt might be more efficient to do:\n\nvalue.resize(std::distance(std::begin(value), std::find_if(...)))"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 343,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d Nice use of std::move."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why 'const uint8_t&'?  Just pass by value.\n\nI'd suggest an 'auto' or 'decltype' for the return type also rather than spelling it out."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why not just 'return device->second'?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 373,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are these uint32_t when elsewhere you're treating them as / casting them to uint8_t?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 377,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is an example of where these seems awkward to call 'formatFru'.\n\nThe code below reads much clearer to me:\n\nauto formattedFrus = formatFru(device);\nif (formattedFrus.empty())\n{\n   ...\n}"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Initialize your variables throughout, please."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 398,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use std::replace_if instead of a regex."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 403,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this UPPER_SNAKE_CASE if it is a global variable?\n\nWhen, if ever, does this variable reset?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 406,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please pull this constant out of code."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 408,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not obvious why 'bus 0' is special here.  I don't think it is special, so why add the extra logic."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "ssize_t?  std::numeric_limits::min?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 416,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "auto?  auto&?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest short-circuit 'address == busIface.first.second' before 'isMuxBus' because 'isMuxBus' requires examining sysfs (syscalls vs local data)."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 424,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is way too much casting and comparing and random feel getting without a single comment.  I'm not even going to try to figure out what it is doing."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 446,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "std::max(highest, value)"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 458,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This comment tells me nothing about why you're doing a '++highest'.  What about cases where found==true and highest!=0?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 469,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "replace_if can be used here."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 475,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "And replace_if here too."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 481,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why do we have to add a random null terminator?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 518,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "This function is a void, would it be better if it returned a success or failure/error value back to the caller so the caller would know the results?"
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 546,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a syncronous call being done in an async context.  Please use an async call."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 1025,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Where is this interface defined?  Please make changes to phosphor-dbus-interfaces."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 1038,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "No return value for int main(), it should be returning an int type value."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 1038,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Bruce, this is a lambda within main()  It doesn't need to return an int."
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "line": 1038,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Then should line 1049 return 0; be returning Zero?  Does the return even need to exist?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 1050,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1083,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "7e295231c41846455e1a2794eec9279f881d56e4",
            "parents": [
                "c76af0fb1defcc9cc3d000c1ca7592d0f01df2a1"
            ],
            "ref": "refs/changes/12/37512/5",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1607962982,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 1050,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1083,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "04d9c1704f85778060d31a1f43eb59c5ab44eb5c",
            "parents": [
                "def29274907ef77187b02ae19d55bb9888413892"
            ],
            "ref": "refs/changes/12/37512/6",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1607963626,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/Common.hpp",
                    "type": "ADDED",
                    "insertions": 118,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/Common.cpp",
                    "type": "ADDED",
                    "insertions": 433,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -434
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 827,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1414,
            "sizeDeletions": 434
        },
        {
            "number": 7,
            "revision": "e4f6e9931bd438e12b26a05dd6298a1a7303fd3f",
            "parents": [
                "c76af0fb1defcc9cc3d000c1ca7592d0f01df2a1"
            ],
            "ref": "refs/changes/12/37512/7",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1608021487,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/Common.hpp",
                    "type": "ADDED",
                    "insertions": 125,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/Common.cpp",
                    "type": "ADDED",
                    "insertions": 459,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -452
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 827,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1447,
            "sizeDeletions": 452
        },
        {
            "number": 8,
            "revision": "a5e4cb2e397c0a2dc72b049a60e2b4d464103f39",
            "parents": [
                "c76af0fb1defcc9cc3d000c1ca7592d0f01df2a1"
            ],
            "ref": "refs/changes/12/37512/8",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1608022286,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/Common.hpp",
                    "type": "ADDED",
                    "insertions": 125,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.Ipmb.FruDevice.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/Common.cpp",
                    "type": "ADDED",
                    "insertions": 458,
                    "deletions": 0
                },
                {
                    "file": "src/FruDevice.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -452
                },
                {
                    "file": "src/IpmbFruDevice.cpp",
                    "type": "ADDED",
                    "insertions": 827,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1446,
            "sizeDeletions": 452
        }
    ]
}