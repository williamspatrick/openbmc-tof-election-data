{
    "project": "openbmc/phosphor-networkd",
    "branch": "master",
    "id": "I45fbfae17ec8453925e882f91d6051e52d615c7e",
    "number": 41462,
    "subject": "Fix for updating MAC address from RedFish",
    "owner": {
        "name": "Jayaprakash Mutyala",
        "email": "mutyalax.jayaprakash@intel.com",
        "username": "jayaprakashmutyala"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-networkd/+/41462",
    "commitMessage": "Fix for updating MAC address from RedFish\n\nIssue: When IP address source for an interface is DHCP and its MAC\naddress is patched using RedFish, response code is not reaching the\nRedFish request initiator (client).\n\nRootCause: After bmcweb patches the MAC address, immediately IP address\nof that interface also changes to new value (because of DHCP).\nDue to this, success response from bmcweb is not reaching the client as\nexpected.\n\nFix: Do MAC-ADDR patching after validating the request and responding\n\"200 OK\" to RedFish client. i.e Start a timer which will modify the\nMAC-ADDR at the end of its expiry.\n\nTested:\nUpdate the MAC address from RedFish.\nPATCH: https://<bmc_ip>/redfish/v1/Managers/bmc/EthernetInterfaces/eth0\nBody:\n  {\"MACAddress\": \"xx:xx:xx:xx:xx:xx\"}\n\nResponse code: {\"200 OK\"} received.\n\nSigned-off-by: Jayaprakash Mutyala <mutyalax.jayaprakash@intel.com>\nSigned-off-by: Sunita Kumari <sunitax.kumari@intel.com>\nChange-Id: I45fbfae17ec8453925e882f91d6051e52d615c7e\n",
    "createdOn": 1616389531,
    "lastUpdated": 1623385402,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1616389531,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1616389567,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616390941,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14109/ : SUCCESS"
        },
        {
            "timestamp": 1616391118,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1616391132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616391289,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14112/ : SUCCESS"
        },
        {
            "timestamp": 1616394486,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1616401842,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1616402318,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1616436288,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(2 comments)\n\nLogic looks ok"
        },
        {
            "timestamp": 1617034003,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1617125100,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1617125112,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617125199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14584/ : SUCCESS"
        },
        {
            "timestamp": 1617125322,
            "reviewer": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1617549193,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1618003902,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 4:\n\nWhy is a Redfish issue being solved in the phosphor-network layer?\nThis is the kind of transaction that shouldn't return a 200 OK response.\nIt is something that is a fire and forget action because you're taking your legs out from under yourself.\nOther Redfish actions use boost::beast::http::accepted as the return value for such actions (i.e. 202).\nIt also seems that if you have a race condition here you could use an async_timer to defer the IP address change long enough for your 202 or a 204 response to be propagated before the IP interface disappears."
        },
        {
            "timestamp": 1623068410,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1623068427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623068461,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18860/ : FAILURE"
        },
        {
            "timestamp": 1623068809,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1623068821,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623068857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18861/ : FAILURE"
        },
        {
            "timestamp": 1623069526,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1623069541,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623069851,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18872/ : FAILURE"
        },
        {
            "timestamp": 1623070408,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Patch Set 7:\n\n> Patch Set 4:\n> \n> Why is a Redfish issue being solved in the phosphor-network layer?\n> This is the kind of transaction that shouldn't return a 200 OK response.\n> It is something that is a fire and forget action because you're taking your legs out from under yourself.\n> Other Redfish actions use boost::beast::http::accepted as the return value for such actions (i.e. 202).\n> It also seems that if you have a race condition here you could use an async_timer to defer the IP address change long enough for your 202 or a 204 response to be propagated before the IP interface disappears.\n\nSame issue  is seen in IPMI and Redfish both the cases and this workaround in phosphor-network will fix both the issues."
        },
        {
            "timestamp": 1623075952,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1623121248,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Patch Set 7:\n\nActual issue is network goes down before sending response, in other word bmc send response after updating macaddress/ip address but it does not reach to client due to ip change. \nIn DHCP case , IPMI/REDFISH  does not receive response immediately like STATIC."
        },
        {
            "timestamp": 1623121897,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1623122571,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1623132338,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 7:\n\n> Patch Set 7:\n> \n> > Patch Set 4:\n> > \n> > Why is a Redfish issue being solved in the phosphor-network layer?\n> > This is the kind of transaction that shouldn't return a 200 OK response.\n> > It is something that is a fire and forget action because you're taking your legs out from under yourself.\n> > Other Redfish actions use boost::beast::http::accepted as the return value for such actions (i.e. 202).\n> > It also seems that if you have a race condition here you could use an async_timer to defer the IP address change long enough for your 202 or a 204 response to be propagated before the IP interface disappears.\n> \n> Same issue  is seen in IPMI and Redfish both the cases and this workaround in phosphor-network will fix both the issues.\n\nYou should fix this in those applications. We have applications that depend on setting network settings actually taking effect immediately. Either we need a new interface to phosphor-networkd to allow for optionally deferring network changes, or we need to fix the redfish / IPMI clients. We should just fix those clients because it's perfectly possible in event loop driven systems without needing to maintain interface complexity.\n\nYou can do this trivially in ipmid by performing the SetMac, SetAddress, etc using `post_done` deferred callbacks. It would be ideal if the next IPMI transaction had consistent values with those that were set in the previous call. You could achieve this that way."
        },
        {
            "timestamp": 1623385402,
            "reviewer": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "message": "Patch Set 7:\n\n> Patch Set 4:\n> \n> Why is a Redfish issue being solved in the phosphor-network layer?\n> This is the kind of transaction that shouldn't return a 200 OK response.\n> It is something that is a fire and forget action because you're taking your legs out from under yourself.\n> Other Redfish actions use boost::beast::http::accepted as the return value for such actions (i.e. 202).\n> It also seems that if you have a race condition here you could use an async_timer to defer the IP address change long enough for your 202 or a 204 response to be propagated before the IP interface disappears.\n\n+--------------------------+-------------------------------+-------------------------------------+\n|                                 Patch IP Addr                 Patch  MAC addr   \n---------------------------+-------------------------------+-------------------------------------+\n|                                                                 \n|ip src :STATIC                  no issues,                       no issues,gets response back \n|\n+--------------------------+-------------------------------+-------------------------------------+\n|\n|ip src : DHCP                      NA                       IP addr get changed and \n|                                                            response not reaches to client(link goes down)                          \n|\n+--------------------------+-------------------------------+------------------------------------+\n\nAll changes in the table are staged, whereas this MAC addr patching causes link goes up/down and with DHCP IP addr changed.\n\ncode staged refrence link:\n\nhttps://github.com/openbmc/phosphor-networkd/blob/3bf1c74e11cef14b7658a0653e5a1571a9ef7620/src/network_manager.cpp#L203\n\nhttps://github.com/openbmc/phosphor-networkd/blob/3bf1c74e11cef14b7658a0653e5a1571a9ef7620/src/ethernet_interface.cpp#L1106"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b0c3a15748a8c57a3f18a3a5e51d2fc2f217860c",
            "parents": [
                "1b5ec9c5367947d19bdf6efd08251eeb55dd90f4"
            ],
            "ref": "refs/changes/62/41462/1",
            "uploader": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "createdOn": 1616389531,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -13
                },
                {
                    "file": "ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 14
        },
        {
            "number": 2,
            "revision": "20ac7483075ba7f62e2a2a5bca2db89bbbc8388c",
            "parents": [
                "39d058572e7c95807a9d210b72da2bdd38a6d555"
            ],
            "ref": "refs/changes/62/41462/2",
            "uploader": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "createdOn": 1616391118,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "If response is not received due to this IP address change, let it be explicit.  You can rewrite Issue as,\n\nIssue: When IP address source for an interface is DHCP and its MAC address is patched using RedFish, response code is not reaching the  RedFish request initiator (client).\n\nRootCause: After bmcweb patches the MAC address, immediately IP address of that interface also changes to new value (because of DHCP).  Due to this, success response from bmcweb is not reaching the client as expected."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Jayaprakash Mutyala",
                        "email": "mutyalax.jayaprakash@intel.com",
                        "username": "jayaprakashmutyala"
                    },
                    "message": "Updated. Thanks"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "You can rewrite Fix also:\n\n\"\nFix: Do MAC-addr patching after validating the request and responding \"200 OK\" to RedFish client. i.e.) Start a timer which will modify the MAC-addr at the end of its expiry.\n\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jayaprakash Mutyala",
                        "email": "mutyalax.jayaprakash@intel.com",
                        "username": "jayaprakashmutyala"
                    },
                    "message": "Updated. Thanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -13
                },
                {
                    "file": "ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 14
        },
        {
            "number": 3,
            "revision": "16e30356971d7e5d32f38744a3183d9fb19cb67f",
            "parents": [
                "39d058572e7c95807a9d210b72da2bdd38a6d555"
            ],
            "ref": "refs/changes/62/41462/3",
            "uploader": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "createdOn": 1616401842,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "ethernet_interface.cpp",
                    "line": 1089,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Did you check the behavior for parallel MAC address patch requests from 2 clients say every 4-seconds (i.e.) mainly within this interval time) ?"
                },
                {
                    "file": "ethernet_interface.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "10-seconds timeout may be large value. Can you try with 1-second ?"
                },
                {
                    "file": "ethernet_interface.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Jayaprakash Mutyala",
                        "email": "mutyalax.jayaprakash@intel.com",
                        "username": "jayaprakashmutyala"
                    },
                    "message": "Tested with 1 sec as well. Working as expected."
                },
                {
                    "file": "ethernet_interface.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Check whether these definitions can be added/come from Network/EthernetInterface/server.hpp (or) Network/MACAddress/server.hpp ?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -13
                },
                {
                    "file": "ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 14
        },
        {
            "number": 4,
            "revision": "f05ffac502ceab265dd980e7b644cbdffdca8765",
            "parents": [
                "39d058572e7c95807a9d210b72da2bdd38a6d555"
            ],
            "ref": "refs/changes/62/41462/4",
            "uploader": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "createdOn": 1617125100,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -13
                },
                {
                    "file": "ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 14
        },
        {
            "number": 5,
            "revision": "a0a4ee8787c1660cbd25fcb240e1b041285f1dba",
            "parents": [
                "fc3aff916522a36e39c97f41967b868eaa91f573"
            ],
            "ref": "refs/changes/62/41462/5",
            "uploader": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "createdOn": 1623068410,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "src/ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -7
                },
                {
                    "file": "src/ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 18,
            "sizeDeletions": 17
        },
        {
            "number": 6,
            "revision": "4f3098ba674353fcfec64c2b17aac2fe0e1a4ae1",
            "parents": [
                "fc3aff916522a36e39c97f41967b868eaa91f573"
            ],
            "ref": "refs/changes/62/41462/6",
            "uploader": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "createdOn": 1623068809,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "src/ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -7
                },
                {
                    "file": "src/ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 18,
            "sizeDeletions": 8
        },
        {
            "number": 7,
            "revision": "5d6d27f26388c4ab1028ccc4ee85102330ef71e5",
            "parents": [
                "fc3aff916522a36e39c97f41967b868eaa91f573"
            ],
            "ref": "refs/changes/62/41462/7",
            "uploader": {
                "email": "sunitax.kumari@linux.intel.com",
                "username": "sunitakx"
            },
            "createdOn": 1623069526,
            "author": {
                "name": "Jayaprakash Mutyala",
                "email": "mutyalax.jayaprakash@intel.com",
                "username": "jayaprakashmutyala"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Are you saying that dbus property update is not working properly. If that is the case, we should fix why the property update is not working properly?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "email": "sunitax.kumari@linux.intel.com",
                        "username": "sunitakx"
                    },
                    "message": "There is no issue with dbus call,Macaddress PATCH is working fine. \nBMC sends response to client, But it is not reach to client due to timeout."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "when bmcweb patches the MAC address, and bmcweb makes the dbus call to change the mac address, it should return the success even though  interface gets new IP address.\nDid you monitor the Dbus traffic?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "email": "sunitax.kumari@linux.intel.com",
                        "username": "sunitakx"
                    },
                    "message": "Yes, We have monitored the tcpdump on bmc, Bmc sends response but it does not reach the client because the client closes the connection due to timeout."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "src/ethernet_interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -6
                },
                {
                    "file": "src/ethernet_interface.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 7
        }
    ]
}