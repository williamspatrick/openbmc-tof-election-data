{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Ic7b36e48828adf4eb2f7714965a4a1df4eb5ac3e",
    "number": 42786,
    "subject": "psusensor: Add support for the 'PowerState' parameter",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42786",
    "commitMessage": "psusensor: Add support for the 'PowerState' parameter\n\nWhen CPU is powered off, some sensor reading values are expected\nto go below low thresholds. To prevent unnecessary sensor readings\nand redundant threshold event trigger in cases like that add support\nfor the 'PowerState' JSON configuration parameter similar to other\n'dbus-sensors' apps.\nUse 'checkThresholdsPowerDelay' function in a threshold check like\nit is done in ADCSensor app. This is necessary as PSU data can drop\nfaster than a change in a power state is noticed.\n\nTested on the AMD EthanolX CRB with ISL68137:\n\nWhen the PowerState is set to \"On\" and the platform is powered off,\nno transactions are observed on the corresponding I2C bus.\n\nWhen the PowerState is set to \"Always\" monitoring is always enabled\nand I2C transactions are always observed regardless the platform\npower state.\n\nThese commands were used to monitor transactions\non the I2C bus:\n$ echo 1 > /sys/kernel/debug/tracing/tracing_on\n$ echo 1 > /sys/kernel/debug/tracing/events/i2c/i2c_read/enable\n$ cat /sys/kernel/debug/tracing/trace_pipe\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: Ic7b36e48828adf4eb2f7714965a4a1df4eb5ac3e\n",
    "createdOn": 1619773626,
    "lastUpdated": 1630088800,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1619773626,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1619773655,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619773781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16482/ : SUCCESS"
        },
        {
            "timestamp": 1619775749,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\nHello! I've created a patch that adds missing support for the 'PowerState' JSON configuration\nparameter to the psusensor app like it is done in other 'dbus-sensors' apps."
        },
        {
            "timestamp": 1620021801,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1620132165,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1620132744,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1620132758,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620132880,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16640/ : SUCCESS"
        },
        {
            "timestamp": 1620144110,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1620147783,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1620147798,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620148464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16644/ : SUCCESS"
        },
        {
            "timestamp": 1620148596,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1620216141,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1620220221,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1620746306,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3:\n\nIs everything ok now? Can we merge this patchset?"
        },
        {
            "timestamp": 1620750914,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1620750949,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> Is everything ok now? Can we merge this patchset?\n\nLooks like theres still some things to do including fundamental things like providing an appropriate and properly formatted commit message."
        },
        {
            "timestamp": 1620756422,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 4: Commit message was updated."
        },
        {
            "timestamp": 1620756796,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1622828768,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1622828781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622829024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/18767/ : SUCCESS"
        },
        {
            "timestamp": 1622829109,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 5:\n\nRebased to resolve merge conflicts with the recent patches added to the dbus-sensors repo..."
        },
        {
            "timestamp": 1624434639,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1624449328,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1624449352,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624449724,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20507/ : SUCCESS"
        },
        {
            "timestamp": 1624449918,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 6:\n\n(2 comments)\n\nRebased on top of master with changes necessary for support 42737 (ThresholdTimer: use weak_ptr in async callback | https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42737)"
        },
        {
            "timestamp": 1624471406,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1624476995,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1624477008,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624477328,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20540/ : SUCCESS"
        },
        {
            "timestamp": 1624477416,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1624657435,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1624958782,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1624958796,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624958958,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20972/ : SUCCESS"
        },
        {
            "timestamp": 1624959058,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1624983168,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 8: Code-Review+1\n\nLGTM"
        },
        {
            "timestamp": 1625669630,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(2 comments)\n\nLooking pretty close, just needs come minor cleanups, and the copy/pasted code deduplicated then this should be good."
        },
        {
            "timestamp": 1627050847,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1627050877,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627051046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/22692/ : SUCCESS"
        },
        {
            "timestamp": 1627051337,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 9:\n\n(2 comments)\n\nRebased to fix merge conflict with a https://github.com/openbmc/dbus-sensors/commit/e41d52ffbd7e875f906bc36884cec60b42e33601 and accommodate recent changes to the ThresholdTimer (https://github.com/openbmc/dbus-sensors/commit/12c2c0ef533842d2e66f8c82c6b586f6df31d577)"
        },
        {
            "timestamp": 1627353053,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1627372381,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1627384098,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1630088798,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9: Code-Review+2\n\n(2 comments)\n\nA couple comments, but those issues were present in the code before it was moved, so I'm going to merge this.  Feel free to fix in another patchset if you're so inclined."
        },
        {
            "timestamp": 1630088800,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as c7a1ae6b02e767174f5efc0520f763a448c58c4c by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "3444fc4b0d9d96bf146ed616834f80b602466daa",
            "parents": [
                "6b6891c52e550c42507d4b413cbc4c6a09235535"
            ],
            "ref": "refs/changes/86/42786/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1619773626,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 235,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Considering the reading value might go below low thresholds as expected\nafter CPU is powered off, I think it need to use checkThresholdsPowerDelay\nfor the sensor which PowerState is not Always.\n(like https://github.com/openbmc/dbus-sensors/blob/6b6891c52e550c42507d4b413cbc4c6a09235535/src/ADCSensor.cpp#L226 in ADCSensor)\nWhat do you think?"
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 235,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Ok, I've spend a lot of time trying to understand all this Timer code in a `checkThresholdsPowerDelay` function.\nIt seems like it is coming from this commit (https://github.com/openbmc/dbus-sensors/commit/46342ec359c8e0ed543ebb352cfba8f26ce85afe) that added  2 sec delay (now it is even 5) to check thresholds after a value is acquired, to support a fact, that voltage can drop faster than pgood check.\nBut for me it is not clear what behaviour is needed for the 'PowerState' parameter. I thought that this parameter represents a question \"When should we read value?\", but not \"When do we need to check thresholds for a value?\" (because in your version of a commit it seems like you've supported this logic).\nIf we use \"When should we read value?\" logic, we should use code exactly as it currently is in ADC sensor:\nhttps://github.com/openbmc/dbus-sensors/blob/6b6891c52e550c42507d4b413cbc4c6a09235535/src/ADCSensor.cpp#L226\nThis way we will always be using `checkThresholdsPowerDelay` function to check thresholds. So if the limits for voltage sensor for example 8V-12V, we wouldn't assert on power off (0V) even if the 'PowerState' is 'always'. We would be reading 0V, but the app would not create any assertions. The difference with the 'PowerState':'On'/'POST' is a fact that with these parameters we wouldn't be reading any values at all in a wrong state, but simply set sensor value to NaN."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 235,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "In my conception, the time we need to monitor the reading value is the time we want to check if the sensor reading value is in the limit(threshold) we expected.\nI think that starting to add PowerState in psusensor means we start to take the power status into consideration, so I would like to add checkThresholdsPowerDelay in this patchset.\n\nIf the PowerState is \"Always\", the function readingStateGood will always return True.\nSo, it will always delay 5 seconds to assert low threshold after the reading value is smaller than 8V in your case."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 235,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I've already updated this patchset to include support for `checkThresholdsPowerDelay`.\n\nWhat I was trying to tell, I think we should use this code\n```\nvoid PSUSensor::checkThresholds(void)\n{\n    if (!readingStateGood())\n    {\n        return;\n    }\n\n    thresholds::checkThresholdsPowerDelay(this, thresholdTimer);\n}\n```\n\nInstead of this one (your patchset):\n```\nvoid PSUSensor::checkThresholds(void)\n{\n    if (!readingStateGood())\n    {\n        return;\n    }\n    if (this->readState == PowerState::always)\n    {\n        thresholds::checkThresholds(this);\n    }\n    else\n    {\n        thresholds::checkThresholdsPowerDelay(this, thresholdTimer);\n    }\n}\n```\n\nI'm still unsure which variant is correct as there are no docs on what we should expect from 'PowerState' parameter.\nBut at least I think that we should keep consistent behaviour between psusensor and adcsensor which already uses this 'checkThresholdsPowerDelay' functionality.\n\n```\nvoid ADCSensor::checkThresholds(void)\n{\n    if (!readingStateGood())\n    {\n        return;\n    }\n\n    thresholds::checkThresholdsPowerDelay(this, thresholdTimer);\n}\n```\n\nIf we want to change the way `checkThresholds` works I think a separate commit should be created that would make changes for psusensor and adcsensor both.\nBut again, I'm not sure if it is needed to."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": -29
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 137,
            "sizeDeletions": 77
        },
        {
            "number": 2,
            "revision": "1ecfb1d4d2c6430b527077712b9833214a0aff83",
            "parents": [
                "6b6891c52e550c42507d4b413cbc4c6a09235535"
            ],
            "ref": "refs/changes/86/42786/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1620132744,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Is there a requirement for this? Please provide details."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Added more info"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Why 0 here, not NaN like other sensors?"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Because PSUSubEvent is not inherited from Sensor.\nValue is just a class property and not a DBus value object.\nSo PSUSubEvent doesn't use generic `updateValue` function\nhttps://github.com/openbmc/dbus-sensors/blob/6b6891c52e550c42507d4b413cbc4c6a09235535/include/sensor.hpp#L392\nBut use an override:\nhttps://github.com/openbmc/dbus-sensors/blob/6b6891c52e550c42507d4b413cbc4c6a09235535/src/PSUEvent.cpp#L269\nIn this override '0' is a value for the event deassertion."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 241,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "move before use"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 241,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "other ec are ignored? I realize that is not part of this patch. I am OK as is to limit the change scope of this patch"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Yes, I prefer this patch to be concise as possible"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 3,
            "revision": "b5f1adf4b9023890f7b2724537afdf1de64374e7",
            "parents": [
                "6b6891c52e550c42507d4b413cbc4c6a09235535"
            ],
            "ref": "refs/changes/86/42786/3",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1620147783,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't wrap your commit messages by hand.  50/72 please."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Fixed.\nSorry, I'm not aware of any automatic tool for this. Can you say what you use for such task?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Info added"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 192,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This feels like it's a different commit (and needs some explanation why it's needed)\n\nI have a suspicion I know why it's here, but we need to get that written down."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 192,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "This is not a part of this commit.\nI have just moved this destructor function right after constructor so it wouldn't be between  setupRead/readingStateGood/restartRead functions."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please break this out into a generic non-member method instead of copying the code outright."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "This would affect CPUSensor/ADCSensor/IpmbSensor/Thresholds\nI don't think that it would be appropriate here in this commmit.\nOr do you want me just move this copy-paste to src/Utils.cpp?"
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you're also implementing the power delay feature?  I dont' think that was mentioned in your commit message."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Thanks, missed that. I've added this after JinFuLin suggestion, but forgot to mention it in a commit message."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 4,
            "revision": "c39368d8b3a444e9e2d5f84183991eb45291ba4d",
            "parents": [
                "6b6891c52e550c42507d4b413cbc4c6a09235535"
            ],
            "ref": "refs/changes/86/42786/4",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1620756422,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 5,
            "revision": "e69c2c9c30d6120d567bd4e109763f7205c165c2",
            "parents": [
                "1263c3dad3a723f4ebbd05e4031e4d5ff45f349c"
            ],
            "ref": "refs/changes/86/42786/5",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1622828768,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Because PR 42737 has been merged in dbus-sensors, the function ThresholdTimer was changed and this should be removed."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Because the function ThresholdTimer was changed, this should be changed to weak_from_this()."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 240,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 6,
            "revision": "a58763f216ca1b40adc6d75d56cef583c5118491",
            "parents": [
                "18fffd3d4d426ad84059a1e474665a0e31926f5f"
            ],
            "ref": "refs/changes/86/42786/6",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1624449328,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Any test done for this change?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Yes. Also this change was accomodated from the patchset \"PSUSensor: Add PowerState attribute\" (https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38796) by JinFuLin. This patch is a more complete version of that patchset.\nBy the way, you've added +1 to that 38796 patchset."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Can you verify that sensors are n/a also"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Yes, I've verified it. Also it was verified by JinFuLin in the patchset \"PSUSensor: Add PowerState attribute\" (https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38796) that is a part of this commit."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "should this be NaN?"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "You've already asked this question. Please check out https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42786/2/src/PSUEvent.cpp#215 for an answer.\nThis patchset has been far too long in a review process..."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Sorry that I repeated myself. A comment (like \"lower/deassert the event\") here would be helpful for people like me read the code in the future. Maybe since it does not inherit the sensor, it should use a different more descriptive function. But that is beyond the scope of this patch."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 215,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This can be in utilities to avoid have to be duplicated in multiple places."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I agree, but right now it is the only place where it is needed besides the Sensor class.\nIf we want to move all the `readingStateGood` code under utilities, we need to drop it from the Sensor class, which is clearly is needed to be done in a separate commit.\nAlso again this was discussed earlier https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42786/3/src/PSUEvent.cpp#220"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 236,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "nit: this function name is a bit confusing to me (with setupRead). To me it is setup next read or schedule try again. Sorry I don't have a good suggestion at this moment."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "move before to where it is used"
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "nit: switch the order"
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 7,
            "revision": "d21c804398b5a79a72edf4cc93b0acdc20ca2eca",
            "parents": [
                "1263c3dad3a723f4ebbd05e4031e4d5ff45f349c"
            ],
            "ref": "refs/changes/86/42786/7",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1624476995,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 69,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 79
        },
        {
            "number": 8,
            "revision": "0070f75007e0b30362490f13c8071ee5e28e06f0",
            "parents": [
                "1263c3dad3a723f4ebbd05e4031e4d5ff45f349c"
            ],
            "ref": "refs/changes/86/42786/8",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1624958782,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 196,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please invert this check and remove the else on line 213, instead opting to return early if this branch is hit."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 196,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done. Here and in `PSUSensor::setupRead(void)` as well"
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please opt to break this out into a free function that is not part of the sensor class."
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 70,
                    "deletions": -40
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -31
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 146,
            "sizeDeletions": 79
        },
        {
            "number": 9,
            "revision": "3567b3a20adcb668ab940196284c5f01972f48f2",
            "parents": [
                "913d4d00c0b31e968fee506298b78bb012ff6a3d"
            ],
            "ref": "refs/changes/86/42786/9",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1627050847,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 167,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Technically this is wrong.  This is \"we got aborted\" which can happen if we're shutting down.  We really shouldn't print in this case."
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should return in all cases if our timer fails, not just on aborted."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Not something you have to change, but this would be more readable to me if it were\n\n if (powerState == PowerState::biosPost && !(isPowerOn() && hasBiosPost()))\n {\n   return false;\n }\n\nHaving said that, do we have to test `isPowerOn()` here? Is `hasBiosPost()` not enough? Or is it not reset if power is removed?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "It is hard for me to say anything about `hasBiosPost()` because my system (AMD x86) doesn't really implement it.\nAt this time this code is just a copy of a Sensor class method:\nhttps://github.com/openbmc/dbus-sensors/blob/master/include/sensor.hpp#L346\n\nIn a subsequent commit we should drop Sensor class method and replace it with this function. So I think we should stick with the same code for now, and make all the necessary modification later. This would make the next patch easier to read.\n\nAnyway, this code was added in a commit https://github.com/openbmc/dbus-sensors/commit/961bf09a2c89585601175e74ec3cb2590b911aa8\n\nI think in some cases `isPowerOn()` can change its state before `hasBiosPost()` changes, and that is what this code was trying to cover."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -3
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 38,
                    "deletions": -25
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -18
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -6
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 55
        },
        {
            "number": 10,
            "revision": "c7a1ae6b02e767174f5efc0520f763a448c58c4c",
            "parents": [
                "d653b75cd14493150b3823acb8eeeff1218c6284"
            ],
            "ref": "refs/changes/86/42786/10",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1630088800,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/PSUEvent.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -2
                },
                {
                    "file": "include/PSUSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -3
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/PSUEvent.cpp",
                    "type": "MODIFIED",
                    "insertions": 38,
                    "deletions": -25
                },
                {
                    "file": "src/PSUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -18
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -6
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 55
        }
    ]
}