{
    "project": "openbmc/pldm",
    "branch": "master",
    "id": "If9b0ac9c1dac3147ed6f95a3e027d155fe2a38c6",
    "number": 44027,
    "subject": "Add entity instance as an input parameter to pldm_pdr_tree_add()",
    "owner": {
        "name": "George Liu",
        "email": "liuxiwei@inspur.com",
        "username": "lxwinspur"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/pldm/+/44027",
    "commitMessage": "Add entity instance as an input parameter to pldm_pdr_tree_add()\n\n- The intent behind this commit is to allow other projects that are\n  consuming the libpldm(like openpower/hostboot) to create the\n  entities with custom entity instance numbers while creating\n  the entity association PDR's.\n\n- If the entity instance number value is 0xFFFF or its parent is\n  NULL, then use the existing logic.\n\n- If the entity instance number value is not 0xFFFF and the parent is\n  not NULL, should be verify whether the entity exists, if it exists,\n  return the entity, otherwise add the entity to the tree.\n\nTested: Built pldm successfully and Unit Test passes.\n\nSigned-off-by: George Liu <liuxiwei@inspur.com>\nChange-Id: If9b0ac9c1dac3147ed6f95a3e027d155fe2a38c6\n",
    "createdOn": 1623469628,
    "lastUpdated": 1624605957,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1623469628,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1623469655,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623469665,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2130/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623469913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2130/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/19557/ : FAILURE"
        },
        {
            "timestamp": 1623472174,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1623472190,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623472199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2131/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623472851,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2131/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19558/ : SUCCESS"
        },
        {
            "timestamp": 1623476383,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1623476653,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1623478571,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1623479260,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1623479275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623479285,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2132/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623479471,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 4: Commit message was updated."
        },
        {
            "timestamp": 1623479522,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 5: Commit message was updated."
        },
        {
            "timestamp": 1623479939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2132/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19560/ : SUCCESS"
        },
        {
            "timestamp": 1623646051,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1623646266,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\nhost poweron test - passed"
        },
        {
            "timestamp": 1623646725,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1623651829,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1623781230,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 5: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1623787125,
            "reviewer": {
                "username": "mderkse1"
            },
            "message": "Patch Set 5: Code-Review-1\n\nShouldn't 0 be an allowable entity_instance_id?  Could we use a constant instead like 0xFFFF?\n\nFrom:\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.0.1.pdf\n\nHowever, it is typical that Entity Instance Number values are allocated sequentially starting from 0 or 1 for a given Entity Type under the Container ID."
        },
        {
            "timestamp": 1623806610,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5: Code-Review-1\n> \n> Shouldn't 0 be an allowable entity_instance_id?  Could we use a constant instead like 0xFFFF?\n> \n> From:\n> https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.0.1.pdf\n> \n> However, it is typical that Entity Instance Number values are allocated sequentially starting from 0 or 1 for a given Entity Type under the Container ID.\n\nThe Entity Instance Number start from 1 by default\nhttps://github.com/openbmc/pldm/blob/master/libpldm/pdr.c#L390"
        },
        {
            "timestamp": 1623811583,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5:\n> \n> (1 comment)\n> \n> > Patch Set 5: Code-Review-1\n> > \n> > Shouldn't 0 be an allowable entity_instance_id?  Could we use a constant instead like 0xFFFF?\n> > \n> > From:\n> > https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.0.1.pdf\n> > \n> > However, it is typical that Entity Instance Number values are allocated sequentially starting from 0 or 1 for a given Entity Type under the Container ID.\n> \n> The Entity Instance Number start from 1 by default\n> https://github.com/openbmc/pldm/blob/master/libpldm/pdr.c#L390\n\nThey start from 1 by default, but an implementation shouldn't prevent the entity ID 0 from being used, as this API does. Hostboot in particular needs to be able to use the entity ID 0."
        },
        {
            "timestamp": 1623812597,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5:\n> \n> (1 comment)\n> \n> > Patch Set 5:\n> > \n> > (1 comment)\n> > \n> > > Patch Set 5: Code-Review-1\n> > > \n> > > Shouldn't 0 be an allowable entity_instance_id?  Could we use a constant instead like 0xFFFF?\n> > > \n> > > From:\n> > > https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.0.1.pdf\n> > > \n> > > However, it is typical that Entity Instance Number values are allocated sequentially starting from 0 or 1 for a given Entity Type under the Container ID.\n> > \n> > The Entity Instance Number start from 1 by default\n> > https://github.com/openbmc/pldm/blob/master/libpldm/pdr.c#L390\n> \n> They start from 1 by default, but an implementation shouldn't prevent the entity ID 0 from being used, as this API does. Hostboot in particular needs to be able to use the entity ID 0.\n\nI know what your mean.\nwe need to confirm with @Sampa. Refer: https://github.com/ibm-openbmc/dev/issues/3202\n@Sampa, what do you think?"
        },
        {
            "timestamp": 1623823797,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1623823824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623823834,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2161/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623823913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2161/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/19830/ : FAILURE"
        },
        {
            "timestamp": 1623824252,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 6: Ok-To-Test+1"
        },
        {
            "timestamp": 1623824259,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2162/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623824460,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2162/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/19831/ : FAILURE"
        },
        {
            "timestamp": 1623825855,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1623825885,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623825892,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2163/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623826088,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2163/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/19832/ : FAILURE"
        },
        {
            "timestamp": 1623826764,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1623826795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623826804,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2164/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623827465,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2164/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19833/ : SUCCESS"
        },
        {
            "timestamp": 1623831461,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623831756,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623832347,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623832449,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 8:\n\ni see George and Manoj has fixed the issue. Looking good to me. will request HB to test"
        },
        {
            "timestamp": 1623834445,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623840169,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 8:\n\nadd on to my previous comment:\n\nchange the \"pldm_entity_association_tree_add\"  api to have an extra field as \"last_unique_parent\" which takes the last unique parent. that means in the case of:\ndcm0/cpu0/core0\ndcm1/cpu0/core0\nit will take the dcm0 or dcm1 pldm_entity as last_unique_parent. and then as per my previous comment search for core0 in the subtree of dcm0 or dcm1. if not found then can add core0\n\nand for bmc the \"last_unique_parent\" can be null. if it is null then we go ahead and add the node under parent directly instead of searching"
        },
        {
            "timestamp": 1623840411,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> add on to my previous comment:\n> \n> change the \"pldm_entity_association_tree_add\"  api to have an extra field as \"last_unique_parent\" which takes the last unique parent. that means in the case of:\n> dcm0/cpu0/core0\n> dcm1/cpu0/core0\n> it will take the dcm0 or dcm1 pldm_entity as last_unique_parent. and then as per my previous comment search for core0 in the subtree of dcm0 or dcm1. if not found then can add core0\n> \n> and for bmc the \"last_unique_parent\" can be null. if it is null then we go ahead and add the node under parent directly instead of searching\n\nSo, If we use this way, we do not need to check `contained ID`, Correct?"
        },
        {
            "timestamp": 1623842464,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623843347,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> > Patch Set 8:\n> > \n> > add on to my previous comment:\n> > \n> > change the \"pldm_entity_association_tree_add\"  api to have an extra field as \"last_unique_parent\" which takes the last unique parent. that means in the case of:\n> > dcm0/cpu0/core0\n> > dcm1/cpu0/core0\n> > it will take the dcm0 or dcm1 pldm_entity as last_unique_parent. and then as per my previous comment search for core0 in the subtree of dcm0 or dcm1. if not found then can add core0\n> > \n> > and for bmc the \"last_unique_parent\" can be null. if it is null then we go ahead and add the node under parent directly instead of searching\n> \n> So, If we use this way, we do not need to check `contained ID`, Correct?\n\nno. container id checking is not needed. HB does not send us correct container id. that is added by bmc after normalization"
        },
        {
            "timestamp": 1623913055,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1623913070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623913080,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2187/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623913343,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2187/ : ppc64le CI Build Failed\n\nhttps://jenkins.openbmc.org/job/ci-repository/19969/ : FAILURE"
        },
        {
            "timestamp": 1623913833,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1623913845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623913854,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2188/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623914511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/19972/ : FAILURE\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2188/ : ppc64le CI Build Successful"
        },
        {
            "timestamp": 1623914871,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1623914885,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623914894,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2189/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623915553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2189/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19975/ : SUCCESS"
        },
        {
            "timestamp": 1623915732,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 12: New patch set was added with same tree, parent, and commit message as Patch Set 11."
        },
        {
            "timestamp": 1623915743,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1623915746,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623915754,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2191/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623916529,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2191/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19977/ : SUCCESS"
        },
        {
            "timestamp": 1623923502,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1623923525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623923661,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2197/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1623924320,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2197/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/19995/ : SUCCESS"
        },
        {
            "timestamp": 1623927126,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 13: Code-Review+1\n\nCode looks good to me, and power on test passed. Now the hostboot team should be using the last_unique_parent as an argument."
        },
        {
            "timestamp": 1623959360,
            "reviewer": {
                "username": "mderkse1"
            },
            "message": "Patch Set 13:\n\nI'm not following the need or usage for last_unique_parent. \n\nWhy do you care about anything other than the immediate parent?\nAll you should need to do is make sure that the triple (parent,type,id) is unique.\nShouldn't care about grandparent or anything\n\nSearch the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it."
        },
        {
            "timestamp": 1623983482,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> I'm not following the need or usage for last_unique_parent. \n> \n> Why do you care about anything other than the immediate parent?\n> All you should need to do is make sure that the triple (parent,type,id) is unique.\n> Shouldn't care about grandparent or anything\n> \n> Search the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it.\n\nSince the `contained id` of host and bmc are different, we cannot guarantee that they are consistent. Therefore, the use of last_unique_parent is to solve the problem of inconsistent `contained id`. In this way, we do not need to check the `contained id`"
        },
        {
            "timestamp": 1623983513,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> I'm not following the need or usage for last_unique_parent. \n> \n> Why do you care about anything other than the immediate parent?\n> All you should need to do is make sure that the triple (parent,type,id) is unique.\n> Shouldn't care about grandparent or anything\n> \n> Search the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it.\n\nMatt, \n\nWe cannot check for container ID, as hostboot container ID's are normalized before adding them to the BMC tree, so instead we want to check the last unique parent for an entity to differentiate its unique ness. when hostboot wants to add dcm1/proc1/core1 & dcm2/proc1/core1 -> In this case its not the immediate parent(ignore the container id) that is different , its the grand parent that is different. So we expect the hostboot to set the last_unique_parent to dcm1 when adding dcm1/proc1/core1 and dcm2 when adding dcm2/proc1/core1.\n\nWe are okay with the solution as it is future proof, if you are okay, we are planning to goahead for merging it soon.\n\n@sampa please add your inputs, if i messed anything."
        },
        {
            "timestamp": 1623994340,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> I'm not following the need or usage for last_unique_parent. \n> \n> Why do you care about anything other than the immediate parent?\n> All you should need to do is make sure that the triple (parent,type,id) is unique.\n> Shouldn't care about grandparent or anything\n> \n> Search the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it.\n\nwe need it because the same parent entity might be present under a different subtree. eg the following scenario:\n1. procmodule0/proc0/core0\n2. procmodule1/proc0/core0\n\nyou have #1 and you want to add #2. in that case with existing code we will find proc0 as parent and core0 under that so we will discard your request. with the proposed change you will send us pldm_entity procmodule1.so we will search for proc0 in procmodule1 subtree only and will be able to create the core0 under that\n\nalso we can con check container id as the container id from HB is not retained and bmc assigns a new container id to the entities while merging"
        },
        {
            "timestamp": 1623995471,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 13: Code-Review+1"
        },
        {
            "timestamp": 1624035251,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13:\n> > \n> > I'm not following the need or usage for last_unique_parent. \n> > \n> > Why do you care about anything other than the immediate parent?\n> > All you should need to do is make sure that the triple (parent,type,id) is unique.\n> > Shouldn't care about grandparent or anything\n> > \n> > Search the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it.\n> \n> we need it because the same parent entity might be present under a different subtree. eg the following scenario:\n> 1. procmodule0/proc0/core0\n> 2. procmodule1/proc0/core0\n> \n> you have #1 and you want to add #2. in that case with existing code we will find proc0 as parent and core0 under that so we will discard your request. with the proposed change you will send us pldm_entity procmodule1.so we will search for proc0 in procmodule1 subtree only and will be able to create the core0 under that\n> \n> also we can con check container id as the container id from HB is not retained and bmc assigns a new container id to the entities while merging\n\nI think the confusion here is coming from the assumption that HB has other subtrees in its tree when it is creating entity associations. In reality, Hostboot starts with a completely empty tree and adds the entities one at a time. The BMC's tree is completely separate (it exists in a completely separate PDR from the Hostboot entity tree), until the BMC starts normalizing which is a later step and doesn't concern Hostboot at all.\n\nThe one and only uniqueness requirement for the entity tree is that the triple (type, instance, container) is unique. To prevent duplicates, if we know the container ID, then all we need to do is check that container for an existing child that already has the (instance ID, container ID) that we are trying to add. That will ensure the uniqueness of the triple (type, instance, container).\n\nSo I think we can get rid of this last_unique_parent parameter, and simply check the immediate parent (which we already give as an argument) for children that have the same type/entity ID to ensure uniqueness. (In reality Hostboot will not add duplicates to its own tree, so the check is redundant, but this API isn't specific to Hostboot so I understand if we want to check for duplicates anyway.)\n\nI think it would also be helpful if the API returned a pointer to the existing entity, rather than returning NULL when it detects a duplicate. That way, for normalization, the BMC can just start with its own entity tree, and add the Hostboot entities one at a time to the BMC tree, and this API will take care of merging them as long as the caller uses the return value as the parent for the new children.\n\nHopefully that makes any sense, if we would like to have a phone call to get this all sorted out then we can do that too. Thanks!"
        },
        {
            "timestamp": 1624252647,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13:\n> > \n> > > Patch Set 13:\n> > > \n> > > I'm not following the need or usage for last_unique_parent. \n> > > \n> > > Why do you care about anything other than the immediate parent?\n> > > All you should need to do is make sure that the triple (parent,type,id) is unique.\n> > > Shouldn't care about grandparent or anything\n> > > \n> > > Search the parent for any immediate children that have a matching (type,id); if you find one, then don't add a new entity because it's a duplicate, otherwise, add it.\n> > \n> > we need it because the same parent entity might be present under a different subtree. eg the following scenario:\n> > 1. procmodule0/proc0/core0\n> > 2. procmodule1/proc0/core0\n> > \n> > you have #1 and you want to add #2. in that case with existing code we will find proc0 as parent and core0 under that so we will discard your request. with the proposed change you will send us pldm_entity procmodule1.so we will search for proc0 in procmodule1 subtree only and will be able to create the core0 under that\n> > \n> > also we can con check container id as the container id from HB is not retained and bmc assigns a new container id to the entities while merging\n> \n> I think the confusion here is coming from the assumption that HB has other subtrees in its tree when it is creating entity associations. In reality, Hostboot starts with a completely empty tree and adds the entities one at a time. The BMC's tree is completely separate (it exists in a completely separate PDR from the Hostboot entity tree), until the BMC starts normalizing which is a later step and doesn't concern Hostboot at all.\n> \n> The one and only uniqueness requirement for the entity tree is that the triple (type, instance, container) is unique. To prevent duplicates, if we know the container ID, then all we need to do is check that container for an existing child that already has the (instance ID, container ID) that we are trying to add. That will ensure the uniqueness of the triple (type, instance, container).\n> \n> So I think we can get rid of this last_unique_parent parameter, and simply check the immediate parent (which we already give as an argument) for children that have the same type/entity ID to ensure uniqueness. (In reality Hostboot will not add duplicates to its own tree, so the check is redundant, but this API isn't specific to Hostboot so I understand if we want to check for duplicates anyway.)\n> \n> I think it would also be helpful if the API returned a pointer to the existing entity, rather than returning NULL when it detects a duplicate. That way, for normalization, the BMC can just start with its own entity tree, and add the Hostboot entities one at a time to the BMC tree, and this API will take care of merging them as long as the caller uses the return value as the parent for the new children.\n> \n> Hopefully that makes any sense, if we would like to have a phone call to get this all sorted out then we can do that too. Thanks!\n\n--------------------------------------------------------------------------------\nso i understand the point as if HB wants to add a \"core0\" under a particular proc, we do search if \"core0\" is present only under that proc. if it is there then discard the request else create the node.\nwe can not check the container id BTW for reason said earlier\n\n@george\nin that case we do not need last_unique_parent and also do not search the pldm_entity in the whole tree. search only under that immediate parent\n-----------------------------------------------------------------------------------------"
        },
        {
            "timestamp": 1624254590,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1624254608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624254617,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2227/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1624256873,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2227/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/20174/ : SUCCESS"
        },
        {
            "timestamp": 1624261273,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1624261297,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624261306,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2230/ (1/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1624261994,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2230/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/20189/ : SUCCESS"
        },
        {
            "timestamp": 1624287966,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 15: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1624288206,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 15:\n\n> so i understand the point as if HB wants to add a \"core0\" under a particular proc, we do search if \"core0\" is present only under that proc. if it is there then discard the request else create the node.\n\nYes, that's right\n\n> we can not check the container id BTW for reason said earlier\n\nWe can't rely on the container IDs being the same across time, but within one libpldm function call they will not change. \n\n> @george\n> in that case we do not need last_unique_parent and also do not search the pldm_entity in the whole tree. search only under that immediate parent\n\nThe commit as it is right now searches all children, we will need to search the immediate children of the immediate parent to avoid bugs."
        },
        {
            "timestamp": 1624340310,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 15:\n\n(2 comments)"
        },
        {
            "timestamp": 1624355401,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1624355418,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624355427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2234/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1624356786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2234/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/20343/ : SUCCESS"
        },
        {
            "timestamp": 1624374985,
            "reviewer": {
                "email": "zach@ibm.com",
                "username": "ibmzach"
            },
            "message": "Patch Set 16: Code-Review+1"
        },
        {
            "timestamp": 1624420773,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 16: Code-Review+1\n\nLGTM"
        },
        {
            "timestamp": 1624423300,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 16: Code-Review+1"
        },
        {
            "timestamp": 1624532784,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 16: Code-Review+2"
        },
        {
            "timestamp": 1624599490,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1624599512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624599523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2277/ (2/2)\n\nppc64le CI Build Started"
        },
        {
            "timestamp": 1624600361,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-repository-ppc64le/2277/ : ppc64le CI Build Successful\n\nhttps://jenkins.openbmc.org/job/ci-repository/20688/ : SUCCESS"
        },
        {
            "timestamp": 1624605889,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 17: Code-Review+2"
        },
        {
            "timestamp": 1624605957,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Change has been successfully merged by George Liu"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2ad2d301d1878b7bc540c31bff8c187efd121084",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/1",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623469628,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 177,
            "sizeDeletions": 58
        },
        {
            "number": 2,
            "revision": "b9dba3066e7c50ab015371ad2925d3c6d94606ce",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/2",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623472174,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "to pldm_pdr_tree_add() function, not libpldm right ?\n\nAlso mention here on what entity instance 0 means, and what entity instance non 0 means ?\n\nThis change was needed to allow other projects that are consuming the libpldm(like openpower/hostboot) to create the entities with custom entity instance numbers while creating the entity association PDR's"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "> to pldm_pdr_tree_add() function, not libpldm right ?\n\nCorrect, Done\n\n> Also mention here on what entity instance 0 means, and what entity instance non 0 means ?\n\nYes, I will update commit message"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 390,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "why are you checking if the entity is present in the tree if the enity instance number !=0 ?"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 390,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Sampa mentioned in the task:\n> create two same entities with arbitrary instance number like 32 and 67. and then create next instance without passing the entity instance number. the code should create the entity with instance 68. ideally this situation should not happen because one should follow either of the path when populating the entity tree, always provide the instance number or do not provide the instance number. it will be user's responsibility if they mix up both. say for above example an entity instance 68 got created and then user calls pldm_entity_association_tree_add() with entity instance number 68 as input, that should not get added and return some kind of failure\n\nBecause when we call this method and input 0 as a parameter, it may create an entity (type=1, num=1), and then if we call this method again and input 1 as a parameter, this entity already exists in the tree, so we can not add it and return NULL, Correct?"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 390,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 177,
            "sizeDeletions": 58
        },
        {
            "number": 3,
            "revision": "bc77995041d2401ecebda4fed480c52a57279faa",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/3",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623479260,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 58
        },
        {
            "number": 4,
            "revision": "9b709b3a8614f75806175e24969603f2cc0cef7f",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/4",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623479471,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 58
        },
        {
            "number": 5,
            "revision": "e3321ec2f4e67e6fbbef7cbdf92e927c4627796d",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/5",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623479522,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "email": "zach@ibm.com",
                        "username": "ibmzach"
                    },
                    "message": "Correct me if I'm wrong, but this looks for an association that matches type and entity instance number, without regard for the container. This means that if we explicitly specify the entity instance number, we can't create two entities with the same type and entity ID under two different container entities. We definitely want to be able to do that."
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Yes, correct\nBut now, Since the container IDs on the HOST side and the BMC side are different, we temporarily ignore the verification of the contained ID.\nMaybe we can refactor it in the future."
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "email": "zach@ibm.com",
                        "username": "ibmzach"
                    },
                    "message": "The API is unusable by Hostboot if it doesn't permit entity IDs being reused, since we do have entities that must have the same type and entity instance ID, and differ only by container. This commit as-is prevents us from creating those entities."
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Sorry, Maybe we need to confirm with the maintainer.\n@Deepak @Tom @Sampa @Manoj\nWhat do you think?"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "name": "Sampa Misra",
                        "email": "sampmisr@in.ibm.com",
                        "username": "sampmisr"
                    },
                    "message": "@George \nactually we cannot use \"pldm_entity_association_tree_find\" here. sorry i did not look at the api earlier. this sets the container id on output. instead we should have a new api which finds a node in the tree but does not change the container id and gives a referrence of the node in the tree\ncan you use \"find_entity_ref_in_tree\" from https://gerrit.openbmc-project.xyz/c/openbmc/pldm/+/43774/10/libpldm/pdr.c#629  instead to find the parent in the tree. when you get the parent, check whether the parent has a child with the entity instance number. if it is there then can not add the new node\n\nsay we already have \"proc0/core0\" and \"proc0/core1\" and \"proc1/core0\"\nand then HB sends core1 again with parent as proc1. so we search for proc1 in the tree. after finding that we see if proc1 has any child with entity instance 1. that is not present so we can create core1 under proc1 \n\n@ibmzach\nhope that solves the problem"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 388,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "@Sampa\nYes, got it\nPlease give me some time, I will fix it \ud83d\ude0a"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 178,
            "sizeDeletions": 58
        },
        {
            "number": 6,
            "revision": "67977f54b908e177d8a64fe31f1c9d27b0e3ec3a",
            "parents": [
                "772403b9344e03934368e089717f2f4d1236ab5d"
            ],
            "ref": "refs/changes/27/44027/6",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623823797,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 208,
            "sizeDeletions": 58
        },
        {
            "number": 7,
            "revision": "62155c3da7859121f8f00ff4207ee0ed18097e9e",
            "parents": [
                "b76d74cf47ecf30b324a587f57ed3e64352f0af9"
            ],
            "ref": "refs/changes/27/44027/7",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623825855,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 215,
            "sizeDeletions": 58
        },
        {
            "number": 8,
            "revision": "c4de2dd2c6fec60aedcdb5c9bae8e0158ecf01eb",
            "parents": [
                "b76d74cf47ecf30b324a587f57ed3e64352f0af9"
            ],
            "ref": "refs/changes/27/44027/8",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623826764,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "libpldm/pdr.c",
                    "line": 379,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I think we need to change this as well to \n\npldm_entity_node *pldm_entity_association_tree_add(\n    pldm_entity_association_tree *tree, pldm_entity *entity,\n    bool autoGenInstance, uint16_t entity_instance_number, pldm_entity_node *parent,\n    uint8_t association_type)\n\nif autoGenInstance is set to true , then we should discard the given entity_instance_number\nif it is false, then we will assign the entity.entity_instance_number = entity_instance_number"
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "line": 1317,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Zach, this unit test constructs the following tree : notation: entitytype(entity instance)\n\n ___________________1(63)_________\n|        |       |       |       |\n2(37)   2(44)   2(89)   2(90)   2(90)\n|        |\n3(100)  3(100)\n\nso now with the latest changes, same entity type & instance number can be reused under different parents(different containers).\n\nWould this help ? this is what hostboot wanted right ?"
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "line": 1317,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "ignore my first message, this is the correct tree \n\n ___________________1(63)_\n|        |       |       |     \n2(37)   2(44)   2(89)   2(90)   \n|        |\n3(100)  3(100)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": -46
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 216,
            "sizeDeletions": 58
        },
        {
            "number": 9,
            "revision": "9eaa2a4b5c684953b946cb1745a82bdc0cf268ae",
            "parents": [
                "4c503fa490859bbb3a213f11e000d8fb71710fad"
            ],
            "ref": "refs/changes/27/44027/9",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623913055,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 258,
                    "deletions": -77
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 89
        },
        {
            "number": 10,
            "revision": "42f46e27365709ad52bf5a903ed7f4e7050962ca",
            "parents": [
                "4c503fa490859bbb3a213f11e000d8fb71710fad"
            ],
            "ref": "refs/changes/27/44027/10",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623913833,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 259,
                    "deletions": -77
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 89
        },
        {
            "number": 11,
            "revision": "6bc37d16b1607b165bead663ce421299e560f6fc",
            "parents": [
                "d47966d2feb1547af71b1351b93d89439b44b33d"
            ],
            "ref": "refs/changes/27/44027/11",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623914871,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 259,
                    "deletions": -77
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 89
        },
        {
            "number": 12,
            "revision": "1179490e6c243f61c7c57cc1cf0da00600b08070",
            "parents": [
                "fc35779b5481129ee986d797eef9dd68aa3e3c27"
            ],
            "ref": "refs/changes/27/44027/12",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623915732,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 259,
                    "deletions": -77
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 89
        },
        {
            "number": 13,
            "revision": "0be3e3226db8af43dd20750567644c47e03a52ad",
            "parents": [
                "fc35779b5481129ee986d797eef9dd68aa3e3c27"
            ],
            "ref": "refs/changes/27/44027/13",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1623923502,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 259,
                    "deletions": -77
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 308,
            "sizeDeletions": 89
        },
        {
            "number": 14,
            "revision": "fb29743aafdc0fe1a4b56fc4ad03e31b0978fb7b",
            "parents": [
                "ce94f3e2a389ac14c115ba5f8801bedc5b43a6a1"
            ],
            "ref": "refs/changes/27/44027/14",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1624254590,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 183,
                    "deletions": -50
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 62
        },
        {
            "number": 15,
            "revision": "961cfe799d9ceaa4badf4029f91efa300d0c79fb",
            "parents": [
                "ce94f3e2a389ac14c115ba5f8801bedc5b43a6a1"
            ],
            "ref": "refs/changes/27/44027/15",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1624261273,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "libpldm/pdr.c",
                    "line": 394,
                    "reviewer": {
                        "email": "zach@ibm.com",
                        "username": "ibmzach"
                    },
                    "message": "I think this visits ALL the children of \"parent\", but we only want to look at IMMEDIATE children of \"parent.\" If we look at all the children, then again we are flattening the tree structure and it can lead to bugs. It should be possible to make the check in line 397 to be\n\n\tif (entity->entity_type == out[i].entity_type &&\n\t    entity_instance_number == out[i].entity_instance_num &&\n\t    parent->entity.entity_container_id == out[i].entity_container_id) {"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 394,
                    "reviewer": {
                        "name": "Sampa Misra",
                        "email": "sampmisr@in.ibm.com",
                        "username": "sampmisr"
                    },
                    "message": "we can check the immediate children of parent. but the point is the container id that HB sends is not retained in bmc tree. so we can not compare the container id \ninstead of using pldm_entity_association_tree_visit(), pls write a new api which compares only the \"parent\" node to see if it has same child"
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 401,
                    "reviewer": {
                        "email": "zach@ibm.com",
                        "username": "ibmzach"
                    },
                    "message": "This may return the wrong node, because it doesn't compare the container ID (i.e. it flattens/ignores the tree structure)."
                },
                {
                    "file": "libpldm/pdr.c",
                    "line": 401,
                    "reviewer": {
                        "name": "Sampa Misra",
                        "email": "sampmisr@in.ibm.com",
                        "username": "sampmisr"
                    },
                    "message": "i think this loop will not be needed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 183,
                    "deletions": -50
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 223,
            "sizeDeletions": 62
        },
        {
            "number": 16,
            "revision": "ed49cc742de801e8b9991047a679cf0f51c56dd5",
            "parents": [
                "ad61cdadcac08fdf49dea078922272f9712cfd3e"
            ],
            "ref": "refs/changes/27/44027/16",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1624355401,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 189,
                    "deletions": -56
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 219,
            "sizeDeletions": 68
        },
        {
            "number": 17,
            "revision": "64a8f0fb34a32e362c7c78d10a027cd13f489497",
            "parents": [
                "6a6c3ab2ed0ce81d29ea3317bb9761ea2fec51c1"
            ],
            "ref": "refs/changes/27/44027/17",
            "uploader": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "createdOn": 1624599490,
            "author": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "host-bmc/host_pdr_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "libpldm/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -6
                },
                {
                    "file": "libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "libpldm/tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 189,
                    "deletions": -56
                },
                {
                    "file": "libpldmresponder/fru.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 219,
            "sizeDeletions": 68
        }
    ]
}