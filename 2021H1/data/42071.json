{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "Ib9462ed6f79a8ef8592e579521526c9f3e7c79b0",
    "number": 42071,
    "subject": "Fix for ipmid crash with SetUserPassword",
    "owner": {
        "name": "Snehalatha Venkatesh",
        "email": "snehalathax.v@intel.com",
        "username": "Snehalatha44"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/42071",
    "commitMessage": "Fix for ipmid crash with SetUserPassword\n\nIssue: SetUserPassword with a short password causes ipmid to crash\n\nFix: Adjust clear sensitive data\n\nTested:\n1. Verified using ipmitool commands\nCommand: ipmitool user set password 3 a\nResponse: IPMI command failed: Invalid data field in request\nSet User Password command failed (user 3)\nCommand: ipmitool user set password 3 asdf1234\nResponse: Set User Password command successful (user 3)\n2. IPMID did not crash wth the changes\n\nSigned-off-by: Snehalatha Venkatesh <snehalathax.v@intel.com>\nChange-Id: Ib9462ed6f79a8ef8592e579521526c9f3e7c79b0\n",
    "createdOn": 1617951417,
    "lastUpdated": 1622079941,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1617951417,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1617951429,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617951725,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/15170/ : FAILURE"
        },
        {
            "timestamp": 1617951846,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Removed reviewer Adriana Kobylak."
        },
        {
            "timestamp": 1618215697,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1618431358,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1618470857,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased."
        },
        {
            "timestamp": 1618470874,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618471004,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/15474/ : FAILURE"
        },
        {
            "timestamp": 1618471216,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1618471227,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1618471285,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1618471378,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15476/ : SUCCESS"
        },
        {
            "timestamp": 1618505649,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1618950908,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1620031440,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1620031458,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620031606,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16579/ : SUCCESS"
        },
        {
            "timestamp": 1620033274,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 4:\n\nI have fixed review comments. Please review it."
        },
        {
            "timestamp": 1620233572,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1620254222,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4: Verified-1\n\n(1 comment)"
        },
        {
            "timestamp": 1620254313,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4:\n\nI think Jonathan might be right here in that a password class might be the best solution. The ipmi-unpacking magic could be implemented for this class and the password in memory could be managed automatically throughout its entire lifecycle."
        },
        {
            "timestamp": 1620254345,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Removed Verified-1 by Vernon Mauery <vernon.mauery@linux.intel.com>\n"
        },
        {
            "timestamp": 1620254353,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4: Code-Review-1"
        },
        {
            "timestamp": 1620903111,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1620903146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620903317,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\nI have fixed review comments. Please review it."
        },
        {
            "timestamp": 1620903368,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17196/ : SUCCESS"
        },
        {
            "timestamp": 1620917013,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1620917493,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1620948683,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 5:\n\n(4 comments)\n\nCloser. Nice work with the allocator."
        },
        {
            "timestamp": 1620970187,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1621249292,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1621249309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621249360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/17426/ : FAILURE"
        },
        {
            "timestamp": 1621249656,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1621249674,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621249819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17427/ : SUCCESS"
        },
        {
            "timestamp": 1621249876,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 7:\n\nI have fixed review comments. Please review it."
        },
        {
            "timestamp": 1621319382,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1621435328,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1621435397,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1621494165,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1621494177,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621494326,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17659/ : SUCCESS"
        },
        {
            "timestamp": 1621494366,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1621553301,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1621605240,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1621605280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621605427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17812/ : SUCCESS"
        },
        {
            "timestamp": 1621605522,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1621610217,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1621831088,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1621831103,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621831331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17862/ : SUCCESS"
        },
        {
            "timestamp": 1621892930,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 10: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1622005281,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1622005465,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1622079935,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 10: Code-Review+2"
        },
        {
            "timestamp": 1622079941,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Change has been successfully rebased and submitted as 61024d7df56eb753173ded7fd2ce9cd30a5be800 by Vernon Mauery"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a0eb8d753b520c61a2aa1fad5c4093a6a7d80159",
            "parents": [
                "de54f486d633c5bc7a6d17b77ee46d8a8fdf57cd"
            ],
            "ref": "refs/changes/71/42071/1",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1617951417,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 760,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Retain the sensitive data clearing in old line number 741 itself.\nI believe, crash is due to passing address of std::string type variable, instead of character pointer to it.\n\n void OPENSSL_cleanse(void *ptr, size_t len);"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 760,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "+1. First argument needs to be passwd.data(). And I'd like to point out again, there is no guarantee this does anything useful for security, since we have no control over the std::string memory allocation logic."
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 760,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 760,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "@jonathan: One other thing is, passwd.data() returns 'const char *' and we pass it to OPENSSL_cleanse() after stripping const-ness apparently.  passwd.front() may be suggested use?\n\nWe discuss in other code-review about 'class Passwd' with destructor defining this contents reset.  For simplicity, Can we fill the contents with some fixed value like 0xbabe\" through out its length in the destructor ?\n\nI don't see a standard way to clear std::string.\nRef:\nhttps://stackoverflow.com/questions/38702943/how-to-cleanse-overwrite-with-random-bytes-stdstring-internal-buffer"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 760,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Since c++17 there is a non-const overload of data(), but sure, there are other ways to get the pointer that may be preferable.\n\nWhether the data is overwritten with zeros (as in openssl_cleanse) or another pattern - I don't think it matters much. The bigger problem is ensuring that std::string did not allocate intermediate buffers (e.g. as the string was being built up in memory) which are then deallocated before the string is destroyed. I believe we can provide a custom allocator to std::basic_string<> to control this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 2,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "2d7d6f216c38682d90929e56a9b3af5277f3f47c",
            "parents": [
                "9ab2f94794c4f4ca1856d35c87abe9fa77356fa3"
            ],
            "ref": "refs/changes/71/42071/2",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1618470857,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 2,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "5849d7e59672ccd241bc9d69deb47a7be104bd8b",
            "parents": [
                "9ab2f94794c4f4ca1856d35c87abe9fa77356fa3"
            ],
            "ref": "refs/changes/71/42071/3",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1618471216,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 1,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "bd081c56d91fd70429aeac9b8263fb0d9cf436d5",
            "parents": [
                "916d4232a432b9f9ee5ddd3d0bbce05c1f3909f6"
            ],
            "ref": "refs/changes/71/42071/4",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1620031440,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 741,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "It is possible to get to this point with a non-nul terminated string (userPassword). This is why the string conversion and all were there in the first place. The string an '\\0' padding was added to ensure that the password was properly terminated. Later the OPENSSL_Cleanse was added to make sure we didn't have a bonus copy of the password lying around on the stack.\n\nThis fix addresses the crash because of a zeroed out std::string will likely not deconstruct properly, but the non-nul terminated password will cause trouble."
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 741,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done with custom_allocator of std::basic_string"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 1,
            "sizeDeletions": 6
        },
        {
            "number": 5,
            "revision": "478efdcaad23558968d66e72f2a38e3aff179590",
            "parents": [
                "690f4d5e3e68f8fe85a8048654095c276383ebfd"
            ],
            "ref": "refs/changes/71/42071/5",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1620903111,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 740,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "SecureString passwd;\n\nThis should really be the only change you need to make in this file (other than removing the OPENSSL_cleanse below).\n\nIt is important that line 741 from the original source does not get removed; that is what prevents the non-nul terminated password from causing string errors in the pam call that comes next."
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "can we move this to header file ?"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I agree. Put this alias in the header file. But also, it is best practice to make the alias with a 'using' statement instead of a typedef for modern c++."
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "+1"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 744,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "since this is a data type we can give some other meaning full name like securestring"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 745,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "we can use a better name for the local variable instead of x\n\nwe can write it as\n\nsecurestring passwd(userPassword);"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Call it SecureAllocator (because it is an allocator, not a string)."
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 449,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Add the alias here to simplify the code later:\n\nusing SecureString = std::basic_string<char, std::char_traits<char>, custom_allocator::SecureAllocator<char>>;"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 449,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "+1"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -6
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 49,
            "sizeDeletions": 6
        },
        {
            "number": 6,
            "revision": "1bf8b7d2667c633081630851b55e95a3a282cc3c",
            "parents": [
                "690f4d5e3e68f8fe85a8048654095c276383ebfd"
            ],
            "ref": "refs/changes/71/42071/6",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1621249292,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 6
        },
        {
            "number": 7,
            "revision": "541abf0cd735fd1afdb04f87e4c877d8bd480e56",
            "parents": [
                "690f4d5e3e68f8fe85a8048654095c276383ebfd"
            ],
            "ref": "refs/changes/71/42071/7",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1621249656,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I think the custom_allocator namespace is not needed. Just put SecureAllocator and SecureString in the ipmi namespace.\n\nnamespace ipmi\n{\n...\n\ntemplate <...>\nclass SecureAllocator\n{\n...\n};\n\nusing SecureString = ...;\n\n} // namespace ipmi"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Also, securestring should be SecureString"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 6
        },
        {
            "number": 8,
            "revision": "24fa9531e2554530162c10409737a38d94afe228",
            "parents": [
                "dbafbce64c6de3cdbbf5ebd4b53e12f80db78a5a"
            ],
            "ref": "refs/changes/71/42071/8",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1621494165,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "so close.\n\nPart of the problem here is that the userPassword char* might not be nul terminated. This is why we used a string in the first place.\n\n    ipmi::SecureString passwd;\n    passwd.assign(reinterpret_cast<const char*>(userPassword), 0,\n                  maxIpmi20PasswordSize);\n\n    int retval = pamUpdatePasswd(userName.c_str(), passwd.c_str());"
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 7
        },
        {
            "number": 9,
            "revision": "deb087d4d7085672afa6fa5779bd2e4a066158c2",
            "parents": [
                "7a0e5dfcfa49f4a60e2d0ddd9f90c64d177a7f14"
            ],
            "ref": "refs/changes/71/42071/9",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1621605240,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "line": 744,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "use passwd.c_str() instead of userPassword here.\n\nuserPassword may not be nul-terminated. That is why we are using the string assign function. That construct will create a valid string up to the requested size. Then the c_str() call will provide the pointer that is safe."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -5
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 45,
            "sizeDeletions": 6
        },
        {
            "number": 10,
            "revision": "8c6c2d6014eb93153f4c9b2f83d0107ef90f5c78",
            "parents": [
                "7a0e5dfcfa49f4a60e2d0ddd9f90c64d177a7f14"
            ],
            "ref": "refs/changes/71/42071/10",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1621831088,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "nit: can these functions that don't do anything extra just be replaced with:\n\n  using std::allocator::allocator;\n\n?"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "No, it gives an error: 'template<class> class std::allocator' used without template arguments'.\nWe need to keep those constructors.\nhttps://en.cppreference.com/w/cpp/memory/allocator/allocator"
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "if required, you can check the link once"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 5
        },
        {
            "number": 11,
            "revision": "61024d7df56eb753173ded7fd2ce9cd30a5be800",
            "parents": [
                "e76a61a2f7c19ed07e2bfe98533d82bc23692fc1"
            ],
            "ref": "refs/changes/71/42071/11",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1622079941,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "user_channel/user_mgmt.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "user_channel/user_mgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 5
        }
    ]
}