{
    "project": "openbmc/phosphor-pid-control",
    "branch": "master",
    "id": "I0d689809347e9dffa9a1059577455f3224502600",
    "number": 41564,
    "subject": "Eliminate ControlLoop init delay.",
    "owner": {
        "name": "Hao Jiang",
        "email": "jianghao@google.com",
        "username": "drakedog2008"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-pid-control/+/41564",
    "commitMessage": "Eliminate ControlLoop init delay.\n\nIntroducing extra delay for the first loop is unnecessary and the\nincreasement of gap between dbus name request and object creation\nsometimes crashes phosphor-objmgr.\n\nNotice this patch only recovers the gap to the previous status as\nbefore 40786 instead of completely eliminating the gap.\n\nTested: internal project with IPMI sensors.\nSigned-off-by: Hao Jiang <jianghao@google.com>\nChange-Id: I0d689809347e9dffa9a1059577455f3224502600\n",
    "createdOn": 1616620546,
    "lastUpdated": 1617218083,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1616620546,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1616620559,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616621016,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14352/ : SUCCESS"
        },
        {
            "timestamp": 1616639476,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1: Ok-To-Test+1 Code-Review+1\n\nLGTM - The delay is really small, but enough to be nonzero. Please add some more info, though, and also, rebase to the latest master.\n\nWhat services depend on this? Shouldn't those other services retry a few times, instead of trying only once and then giving up? Ideally there wouldn't be any timing-related race conditions at all like this."
        },
        {
            "timestamp": 1616639903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14364/ : SUCCESS"
        },
        {
            "timestamp": 1616704679,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1: Code-Review+1\n\nCould we get this in soon?"
        },
        {
            "timestamp": 1616714698,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1616715296,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1616715550,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1616716249,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1616716734,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1616718265,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1617045438,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 1:\n\nThere's some design controversy in the companion patch: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563\n\nI recommend resolving that controversy before merging 41564. The underlying race condition won't be 100% solved merely by adjusting the initial delay here, and it probably needs a deeper solution."
        },
        {
            "timestamp": 1617046403,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> There's some design controversy in the companion patch: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563\n> \n> I recommend resolving that controversy before merging 41564. The underlying race condition won't be 100% solved merely by adjusting the initial delay here, and it probably needs a deeper solution.\n\nUnless I'm understanding incorrectly, this commit is trying to resolve the controversy present in 41563, by instead making phosphor-pid-control consistent.\n\nI suspect the long term answer is we should move PPC to using the ObjectManager interfaces, similar to how the other asio clients do it.  To my understanding, that gets rid of most of the runtime race conditions in this area, and it's why we don't see this problem on other clients."
        },
        {
            "timestamp": 1617059786,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1617059800,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617060254,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 2:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > There's some design controversy in the companion patch: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563\n> > \n> > I recommend resolving that controversy before merging 41564. The underlying race condition won't be 100% solved merely by adjusting the initial delay here, and it probably needs a deeper solution.\n> \n> Unless I'm understanding incorrectly, this commit is trying to resolve the controversy present in 41563, by instead making phosphor-pid-control consistent.\n> \n> I suspect the long term answer is we should move PPC to using the ObjectManager interfaces, similar to how the other asio clients do it.  To my understanding, that gets rid of most of the runtime race conditions in this area, and it's why we don't see this problem on other clients.\n\nphosphor-objmgr pushed back the fix on their end. This patch makes the gap consist with as before 40786. \n\nBut this is a mitigation not a cure. As Ed said, we need to correct the way of registering ObjectMapper Interface in another patch."
        },
        {
            "timestamp": 1617060270,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14510/ : SUCCESS"
        },
        {
            "timestamp": 1617060330,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\n> Patch Set 2:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > > There's some design controversy in the companion patch: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563\n> > > \n> > > I recommend resolving that controversy before merging 41564. The underlying race condition won't be 100% solved merely by adjusting the initial delay here, and it probably needs a deeper solution.\n> > \n> > Unless I'm understanding incorrectly, this commit is trying to resolve the controversy present in 41563, by instead making phosphor-pid-control consistent.\n> > \n> > I suspect the long term answer is we should move PPC to using the ObjectManager interfaces, similar to how the other asio clients do it.  To my understanding, that gets rid of most of the runtime race conditions in this area, and it's why we don't see this problem on other clients.\n> \n> phosphor-objmgr pushed back the fix on their end. This patch makes the gap consist with as before 40786. \n> \n> But this is a mitigation not a cure. As Ed said, we need to correct the way of registering ObjectMapper Interface in another patch."
        },
        {
            "timestamp": 1617065491,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1617065622,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1617065662,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1617144378,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 3:\n\nGentle ping on this review as it's a blocking issue for a project."
        },
        {
            "timestamp": 1617216994,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3: Code-Review+2\n\nThis is good. I like the immediate try with no delay, then trying repeatedly again in the background after a delay with a lambda."
        },
        {
            "timestamp": 1617217135,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 4: Patch Set 3 was rebased"
        },
        {
            "timestamp": 1617217149,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617217167,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\nForgot to ask: I'm assuming this has been tested? I see no \"Tested\" in the commit message. Also, please rebase to latest master."
        },
        {
            "timestamp": 1617217502,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 5: Commit message was updated."
        },
        {
            "timestamp": 1617217594,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14663/ : SUCCESS"
        },
        {
            "timestamp": 1617218083,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Change has been successfully merged by Hao Jiang"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8fbd58c7b277f4898e6e30a066cb7c42aaa86ad6",
            "parents": [
                "b6a0b89e4419aeef4a2cdfde1a9119ae6b9be25f"
            ],
            "ref": "refs/changes/64/41564/1",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1616620546,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More details needed here.  Why is 10 millisecond too much?  Why is 1 usecond enough?  Why not 0 (no delay) why not 5 milliseconds?\n\nWhat breaks when this is set today?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Actually 0 delay is desired. but I cannot find document of the exact behavior of delay = 0. Does the timer put the callback in the execution queue or expired queue? Or the behavior is undefined. \n\nSo I just put a small enough value here just in case. \n\nIf delay=0 is clear, I am glad to use that. \n\nBreak refer to: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If 0 is what we really want, we should rearrange the code such that we don't start the timer at all before initializing the loops, and only run the timer if it fails.\n\nAssuming this is an issue, 1usec makes it just a lot less likely, you need something that's completely interlocked."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> If 0 is what we really want, we should rearrange the code such that we don't start the timer at all before initializing the loops, and only run the timer if it fails.\n\nOk. Sounds reasonable. Originally I didn't expect such delay will create any trouble trading for neat code. \n\n> Assuming this is an issue, 1usec makes it just a lot less likely, you need something that's completely interlocked.\n\nThat is why I also proposed this fix (https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563). The ObjectMapper shouldn't be so sensitive to implementation of other modules/processes."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > If 0 is what we really want, we should rearrange the code such that we don't start the timer at all before initializing the loops, and only run the timer if it fails.\n> \n> Ok. Sounds reasonable. Originally I didn't expect such delay will create any trouble trading for neat code. \n\nsimple diff is different than neat code.  If we don't need the initial delay, the code can be much neater, even if the diff looks worse.\n\n> \n> > Assuming this is an issue, 1usec makes it just a lot less likely, you need something that's completely interlocked.\n> \n> That is why I also proposed this fix (https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563). The ObjectMapper shouldn't be so sensitive to implementation of other modules/processes.\n\nDisagree.  The ObjectMapper should obey the dbus interfaces, and shouldn't try to go outside of the well defined dbus behavior, rather than try to cover up subtle bugs."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> simple diff is different than neat code.  If we don't need the initial delay, the code can be much neater, even if the diff looks worse.\n\nYou are absolutely right. \n\n> Disagree.  The ObjectMapper should obey the dbus interfaces, and shouldn't try to go outside of the well defined dbus behavior, rather than try to cover up subtle bugs.\n\nBut it is rather a design problem of synchronization/data-racing than misusing of dbus. dbus doesn't know when or why you want a method call on a not-yet-created object. The correctness is based on the assumption that process execution is faster than dbus inter-process communication, which is 99.9% correct. And the retry is not just a bug-make-up, it serves similar to a spin-lock for synchronization. \n\nBTW, maybe we should move the chat to the other patch?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I completely remove the init delay."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 1,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "019e5c09b521ff119582d30c8b8b410983178c15",
            "parents": [
                "b6a0b89e4419aeef4a2cdfde1a9119ae6b9be25f"
            ],
            "ref": "refs/changes/64/41564/2",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1617059786,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "minor nit: completely eliminating"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -16
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 16
        },
        {
            "number": 3,
            "revision": "b2f7dd89b108f02ec2ffb1db3786665f964566be",
            "parents": [
                "b6a0b89e4419aeef4a2cdfde1a9119ae6b9be25f"
            ],
            "ref": "refs/changes/64/41564/3",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1617065622,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -16
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 16
        },
        {
            "number": 4,
            "revision": "05d5659fa5d764274e61945a685033fbe2a85889",
            "parents": [
                "17971efddc5e44b5a7926d9b3c71def03b739a75"
            ],
            "ref": "refs/changes/64/41564/4",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1617217135,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -16
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 16
        },
        {
            "number": 5,
            "revision": "d11a732a802cc281f4c1583275871fbc5f5ecced",
            "parents": [
                "17971efddc5e44b5a7926d9b3c71def03b739a75"
            ],
            "ref": "refs/changes/64/41564/5",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1617217502,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -16
                }
            ],
            "sizeInsertions": 17,
            "sizeDeletions": 16
        }
    ]
}