{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ib9033e1bcfae3a76456c22234c58193c09959cb3",
    "number": 36914,
    "subject": "EntityManager: Architecture overview",
    "owner": {
        "name": "Andrei Kartashev",
        "email": "a.kartashev@yadro.com",
        "username": "alatarum"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/36914",
    "commitMessage": "EntityManager: Architecture overview\n\nThis document intended to describe system architecture as we would like it to be,\nbut not actual implementation state. Main goal is to define system architecture\nand EM role in there that would be clear and common for everyone interested in\nusing EM. When we accept this implementation proposal, we should keep in mind\nthis design when refactoring code and/or developing new features.\n\nSigned-off-by: Andrei Kartashev <a.kartashev@yadro.com>\nChange-Id: Ib9033e1bcfae3a76456c22234c58193c09959cb3\n",
    "createdOn": 1601402394,
    "lastUpdated": 1617373113,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1601402394,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1601402497,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1601411198,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1601412167,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 2:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1601412167,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1601414963,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(29 comments)\n\nSee comment on commit message;  This feels like a mailing list discussion.  A lot of the information here is duplicated between Redfish, IPMI, and EM readme documentation.  If we want to track the diffs from what exists in docs today, and update the existing docs where we thing they're insufficient that would be a lot better.\n\nI've left my comments because they took a while to type :)  I'm happy to reply again if you want to move this to the mailing list."
        },
        {
            "timestamp": 1601493552,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1601493561,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 3:\n\n(24 comments)"
        },
        {
            "timestamp": 1616518448,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(15 comments)"
        },
        {
            "timestamp": 1617373113,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "fc20f99bed1adee7d82443e1f7dfe94d8ddae1e2",
            "parents": [
                "919a7b6816a5f16aa72d298e81e0756d95d5031e"
            ],
            "ref": "refs/changes/14/36914/1",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1601402394,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 260,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "81c131dde24c36c57235aae3599d6f5aa08df650",
            "parents": [
                "919a7b6816a5f16aa72d298e81e0756d95d5031e"
            ],
            "ref": "refs/changes/14/36914/2",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1601402497,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I originally went through and commented through this before I realized.... this needs to be a mailing list discussion.  We can't have questions in a design/architecture doc, nor can we have it describe things that don't exist yet.  Wrong documentation is worse than no documentation in this case.\n\nCan we move this to the mailing list?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "> We can't have questions in a design/architecture doc\n\nSure, not in submitted version, but during WIP - why not if this is really open questions?\n\n> nor can we have it describe things that don't exist yet\n\nI think we can, if we all agree that this should be done and it explicitly marked as ToDo.\n\n> Can we move this to the mailing list?\n\nI think, we can have particular threads there. But final document (or documents if discussion will be more productive )) should be somewhere here."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Entity manager already has a requirements section in the readme.  Can we deduplicate that with this."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "That document you talking about describes EM as separate software, but actually it doesn't work isolated.\nI want to have global inventory subsystem picture and description for EM as part of the system.\nProbably filename/location was chosen wrongly, we can adjust this."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> That document you talking about describes EM as separate software, but actually it doesn't work isolated.\n> I want to have global inventory subsystem picture and description for EM as part of the system.\n> Probably filename/location was chosen wrongly, we can adjust this.\n\nThere's already significant documentation to that effect in the EM repo.  I'd much rather we update that than create yet another document that people need to find."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Probably this document just should be more generic to represent inventory subsystem regardless it is EM-based, PIM-based or even mixed."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like redfish documentation, not entity manager documentation.  With that said, I think more correct language is already in the EM readme."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What you mean \"correct language\"?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The above isn't very precise, and lists things that we don't currently support."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Right, it is not what we currently support and how it currently work. Idea was to try to find best way where we should move. Not sure is it still actual, maybe I just should decline this."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't an intent.  New hardware _types_ will always require new code.  EM tries to reduce the effort to describe a specific arrangement of hardware that is already supported."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Idea was mostly about representation part. Saying we want to add support for inventorization of pizza pieces for our \"Pizza Box\". We have to implement new detection/communication code which can tell us that we have two pieces of Margatita. But then we want to show this information for user and this we can do almost automatically in bmcweb if EM exposes right interfaces.\nProblem here mostly about we do need to implement different Redfish schemes, which likely can't be automated, but anyway, I would it be only because of Redfish scheme encoding, not because the same information for different device types is represented in different ways..."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Idea was mostly about representation part. Saying we want to add support for inventorization of pizza pieces for our \"Pizza Box\". We have to implement new detection/communication code which can tell us that we have two pieces of Margatita. But then we want to show this information for user and this we can do almost automatically in bmcweb if EM exposes right interfaces.\n\nWith respect, that's in no way how that works, because dbus doesn't map to redfish 1:1.  To extend your example, Redfish has no PizzaBoxCollection type, so there's no way to map that properly;  If we wrote generic code to do that, it wouldn't pass the validator.  Also, interfaces tend to be different between the various redfish collections so code will always be required to do the mapping from specific dbus inventory item to Redfish.\n\n> Problem here mostly about we do need to implement different Redfish schemes, which likely can't be automated, but anyway, I would it be only because of Redfish scheme encoding, not because the same information for different device types is represented in different ways...\n\nReading the above paragraph.... I get the feeling you understand the problem, but the original doc doesn't seem to mesh with that."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I see what you mean. Actually, I now have much more knowledge about Redfish then when I first wrote this."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Neither of those are required, although they are common."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Agree, actually I didn't say \"required\". \nHowever, I would like to make \"xyz.openbmc_project.Inventory.Item\" with both \"PrettyName\" and \"Present\" to be mandatory."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Agree, actually I didn't say \"required\". \n> However, I would like to make \"xyz.openbmc_project.Inventory.Item\" with both \"PrettyName\" and \"Present\" to be mandatory.\n\nFeel free to push a review to phosphor-dbus-interfaces, but I suspect it's not going to be approved."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Well, I bring it for discussion here )"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an implementation detail and not the only case where Entity-manager saves this.  I would phrase this as \"Entity manager will make every attempt to keep the inventory interfaces correct, although detection may be deferred in some cases.\""
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is great documentation for Redfish.  I'd much rather something like \"Redfish is has a schema that tends to be a large user of Inventory interfaces\".\n\nTo say an EM interface MUST be in Redfish, or a Redfish interface MUST be in EM is an oversimplification.\n\nI would also avoid making statements about the webui.  phosphor-webui uses a few non-Redfish resources, webui-vue uses fewer."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is kind of nonsensical.  The SDR defines a given set of inventory that points to FRU commands."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FruDevice definitely generates a \"virtual\" fru as you call it."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I'd say FruDevice acts as proxy, reading real FRU data in runtime and cache it for future use. While on Power platform we assemble FRUs for hardware components which physically doesn't even have FRU memory."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "to repeat..... FruDevice definitely has a virtual fru, at ID 0."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not sure I understand this question."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Well, here is example on how ipmitool fru list looks on our Power-based platform:\n\n> FRU Device Description : Builtin FRU Device (ID 0)\n Board Mfg Date        : Mon Jan  1 03:00:00 1996\n Board Mfg             : YADRO\n Board Product         : Management board\n Board Serial          : 002B0DH1000\n Board Part Number     : MANOP8\nFRU Device Description : cpu0 (ID 1)\n Board Mfg Date        : Mon Jan  1 03:00:00 1996\n Board Mfg             : IBM\n Board Product         : PROCESSOR MODULE\n Board Serial          : YA1933264756\n Board Part Number     : 00UL866\n[...]\nFRU Device Description : system (ID 5)\n Chassis Type          : Unspecified\n Chassis Part Number   : VESNIN\n Chassis Serial        : 1809000001\n Board Mfg Date        : Fri Sep 21 03:00:00 2018\n Board Mfg             : YADRO\n Board Product         : Motherboard\n Board Serial          : Y001B0DH1000\n Board Part Number     : MBDOP8740001\nFRU Device Description : membuf1 (ID 6)\n Board Mfg Date        : Mon Sep  9 03:00:00 2019\n Board Mfg             : YADRO\n Board Product         : Memory Riser\n Board Serial          : Y00AC037K2000\n Board Part Number     : MEMDDR740001\n[...]\nFRU Device Description : dimm8 (ID 22)\n Product Manufacturer  : Samsung Electronics\n Product Name          : DDR4-2400 32GiB 64-bit ECC RDIMM\n Product Part Number   : M393A4K40BB1-CRC    \n Product Serial        : 3617984e\n[...]\nFRU Device Description : dimm127 (ID 149)\n Device not present (Requested sensor, data, or record not found)\n[...]\nFRU Device Description : fan0 (ID 152)\n Product Manufacturer  : SanyoDenki\n Product Name          : fan0\n Product Part Number   : 9HV0812PG001\n[...]\nFRU Device Description : opfw (ID 254)\n Product Name          : OpenPOWER Firmware\n Product Version       : open-power-vesnin-v3.0-x16_rc1-g57e5a1b\n\nMore then 150 entries in total. Same for x86 system looks, let's say, more compact."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think I kind of understand your response, but I still don't understand the statement in the docs.  If you're interested in supporting more things in EM, feel free to add support for them through patchsets.\n\nWith that said, DIMMs have SPD formatted i2c eeproms, not IPMI FRU formatted i2c eeproms, so EM would need some code to convert an SPD to a FRU format;  It should be noted, this information on x86 would normally come from MDR, which isn't always available in SDR.\n\nAs I said, feel free to propose adding this, I wouldn't' be against it."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's no requirement that types have common interfaces nor share handling code.  Code will use the handling code that best fits its design."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should read \"no code changes for a new platform\""
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I noticed this, yes. But I would like we have such requirement for future development."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Feel free to propose something through a patchset that makes the existing code more common, but this review isn't really the place to do that."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree.  I have no desire to test and maintain two different implementations.  bmcweb/Redfish was built against entity manager.  The existing contract is between the implementations and webserver/ipmi.  The reasons EM doesn't use phopshor-dbus-interfaces is a much longer discussion (that reminds me I need to send an email out so we can start that discussion)."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What \"two different implementations\" you talking about? \nI can see your inputs against using phopshor-dbus-interfaces generated code, but not against to be compatible with this interfaces. We all working on big system with lot of components interacting each other. Let's keep contracts in phopshor-dbus-interfaces. If we somewhere feel the interface doesn't suit our needs we should explicitly change it, but not silently break like was done in EM."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> What \"two different implementations\" you talking about? \n> I can see your inputs against using phopshor-dbus-interfaces generated code, but not against to be compatible with this interfaces. We all working on big system with lot of components interacting each other. Let's keep contracts in phopshor-dbus-interfaces. If we somewhere feel the interface doesn't suit our needs we should explicitly change it, but not silently break like was done in EM.\n\nMy thoughts on this are better captured in the email to the list.  I have no problem with keeping interfaces in phosphor-dbus-interfaces, but the implementation has significant limitations."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is not a requirement, but an implementation detail, and is a little abstract for my taste.  Requirements are user facing."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Agree, this is not important, can remove\n> Requirements are user facing.\n\nIt was about \"export to XML/JSON/etc\" function for end user to download inventory report."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you want to implement this, feel free, but most people today just download the redfish tree to get their complete inventory."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I struggle with this heading, because entity manager has an implementation already."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No.  It doesn't.  It relies on dbus interfaces and publishes config data to dbus."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "With respect, one central inventory daemon is only \"more logical\" in the simplest of cases, and is one of the reasons phosphor-inventory-manager doesn't meet a lot of use cases.  In the cases where inventory information is \"expensive\" to acquire, or requires a backend, such as is the case in PLDM/MCTP, entity-manager should not be in charge of that code, and inventory should be owned by the component actually communicating with the information store."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does \"Central element\" mean in this context?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree that EM should be the only inventory interface.  It is the software configuration interface.  Ideally reactors would publish their own inventory interfaces, but that got complicated, so today we have a hybrid."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Good, then I misunderstood idea from EM readme.\nShould we then say that \"All hardware-related configuration should be handled by EM\" instead?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that statement is a bit extreme for me as well, even though in the 99% case it probably meets what I would expect.  Any time we say \"all\" I worry that it will get misread."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd love if this \"passthrough\" interface were removed at some point, and only contained an association back to the interfaces that influenced the probe."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 53,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Added this as ToDo item and moved to EM section."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I would like to see this happen in the future.  We prioritize the config file writer over the backend writer intentionally."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Added as ToDo to EM section."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not in all cases.  Overarching statements like this should be avoided."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What other ways are? Let's standardize this."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The code is probably the best place to look."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree with putting \"must\" on anything like this, or trying to add a new definition of \"inventory entity\".  Entities will have the interfaces that are required to implement the features they need and support.  In some cases that includes inventory Item, but not always."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What are the cons against to add this interfaces to all inventory items?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a discussion that would be better had as a separate change to phosphor-dbus-interfaces.\n\nToday, those interfaces are defined as optional."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is more an implementation detail.  Given that we have _some_ systems that need dynamic configurability, that should be preferred to avoid duplication of code between the static and dynamic cases."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I don't mind to have here implementation details if they help to understand how does the system work and why."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "But we already have this documented elsewhere, I'd much rather we rely on that."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be the first item, as it is the most important.  The readme phrases this in the context of how long it takes to add a piece of hardware  to the supported list."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Configuration files should describe the software resources needed for this entity.  It is not limited to hardware.  Hypervisor implementations or host scanning implementations might desire to implement sensors, and have a detection mechanism from the host, in which case, they would be a first class entity just as if they had been plugged in."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "well, this makes the scope much wider... Is there any limitations on what kind of software resources should use EM for configuration and what - no?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "configuration files should contain the minimum amount of information required to describe how they differ from other entities.  Intelligent defaults should always be preferred."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "is it new item or replacement for this one about \"sweeping architecture changes\"? You comment this line, but I don't see how they intersect"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"requiring minimum changes\" isn't a design goal.  If wide sweeping changes are required, they will be done.  Config files are not an ABI, and if you don't want your configurations to break, upstream them."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The current EM implementation takes this as an acceptable risk."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "EM configurations describe the differences between platforms/hardware/software.  It doesn't \"just\" define hardware configuration."
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "How about \"future implementation\"? Is there any plans?"
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not following the question."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 260,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "0034b96a63b8abd7c137e5e2058e3ef68a235adc",
            "parents": [
                "919a7b6816a5f16aa72d298e81e0756d95d5031e"
            ],
            "ref": "refs/changes/14/36914/3",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1601493552,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "architecture/entity-manager-architecture.md",
                    "type": "ADDED",
                    "insertions": 276,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 276,
            "sizeDeletions": 0
        }
    ]
}