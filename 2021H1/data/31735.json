{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I44c3918b39baa2eb5fddda9d635f99aa280a422a",
    "number": 31735,
    "subject": "EventService: https client support",
    "owner": {
        "name": "AppaRao Puli",
        "email": "apparao.puli@linux.intel.com",
        "username": "apuli1"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31735",
    "commitMessage": "EventService: https client support\n\nAdd https client support for push style eventing. Using this BMC can\npush the event logs/telemetry data to event listener over secure http\nchannel.\n\nTested:\n - Created subscription with https destination url. Using\n   SubmitTestEvent action set the event and can see event on event\n   listener.\n - Validator passed.\n\nChange-Id: I44c3918b39baa2eb5fddda9d635f99aa280a422a\nSigned-off-by: AppaRao Puli <apparao.puli@linux.intel.com>\n",
    "createdOn": 1588086619,
    "lastUpdated": 1629183726,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1588086619,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1588086643,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588086656,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1588086658,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48412/"
        },
        {
            "timestamp": 1588086688,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48412/ : FAILURE"
        },
        {
            "timestamp": 1590405638,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1590405654,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1590405666,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590405682,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50035/"
        },
        {
            "timestamp": 1590406507,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50035/ : FAILURE"
        },
        {
            "timestamp": 1590702863,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased."
        },
        {
            "timestamp": 1590702889,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590702901,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50484/"
        },
        {
            "timestamp": 1590703430,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50484/ : SUCCESS"
        },
        {
            "timestamp": 1591029533,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1591099233,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1591099247,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1591099259,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591099274,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50671/"
        },
        {
            "timestamp": 1591099584,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50671/ : SUCCESS"
        },
        {
            "timestamp": 1591176886,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1592197202,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1592197227,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1592197251,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/51839/"
        },
        {
            "timestamp": 1592197688,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/51839/ : SUCCESS"
        },
        {
            "timestamp": 1592209452,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\nWhat do you think about other suggestions?"
        },
        {
            "timestamp": 1592210345,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1592553356,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1592846959,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1592938928,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1592939161,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1592964402,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\nrest lgtm"
        },
        {
            "timestamp": 1592995858,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1593005449,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1593107034,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1593143220,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1593202508,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1593202523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593202532,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/64/"
        },
        {
            "timestamp": 1593202550,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1593203196,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64/ : SUCCESS"
        },
        {
            "timestamp": 1593227075,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1593406669,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1593406682,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593406688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/114/"
        },
        {
            "timestamp": 1593406996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/114/ : SUCCESS"
        },
        {
            "timestamp": 1593639793,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1593664654,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1593757201,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8: Patch Set 7 was rebased"
        },
        {
            "timestamp": 1593757213,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593757220,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/450/"
        },
        {
            "timestamp": 1593757944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/450/ : SUCCESS"
        },
        {
            "timestamp": 1594052346,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1594056629,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1594078714,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(26 comments)"
        },
        {
            "timestamp": 1594079369,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1594140964,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8:\n\n> (26 comments)\n\nThank you Ed for your comments. At the moment, i was with other priority work and will address your comments in a week's time."
        },
        {
            "timestamp": 1596483089,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8:\n\n(10 comments)"
        },
        {
            "timestamp": 1596511436,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(6 comments)"
        },
        {
            "timestamp": 1596572241,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1596572251,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8:\n\n(17 comments)"
        },
        {
            "timestamp": 1596572254,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1596572260,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/2402/"
        },
        {
            "timestamp": 1596572577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/2402/ : SUCCESS"
        },
        {
            "timestamp": 1596638665,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1596645386,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(20 comments)"
        },
        {
            "timestamp": 1596645639,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1596645869,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1596739751,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1596739764,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1596739774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/2580/"
        },
        {
            "timestamp": 1596740088,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/2580/ : SUCCESS"
        },
        {
            "timestamp": 1596844611,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(6 comments)\n\nThis still looks half done.  Please add a note when you're ready to have it reviewed again."
        },
        {
            "timestamp": 1600675787,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 10:\n\n(6 comments)"
        },
        {
            "timestamp": 1600681154,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1600681168,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600681483,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4965/ : SUCCESS"
        },
        {
            "timestamp": 1600704288,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1600745264,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1600750379,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(3 comments)"
        },
        {
            "timestamp": 1600757076,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 10:\n\n(4 comments)"
        },
        {
            "timestamp": 1600772058,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1600787960,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(3 comments)"
        },
        {
            "timestamp": 1600862291,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1600862306,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600862311,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5053/"
        },
        {
            "timestamp": 1600862395,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 12:\n\n(5 comments)"
        },
        {
            "timestamp": 1600862610,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5053/ : SUCCESS"
        },
        {
            "timestamp": 1600911363,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(8 comments)"
        },
        {
            "timestamp": 1600911522,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1600912152,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(10 comments)"
        },
        {
            "timestamp": 1600943475,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1600943490,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600943500,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5126/"
        },
        {
            "timestamp": 1600943609,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 13:\n\n(17 comments)"
        },
        {
            "timestamp": 1600943861,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5126/ : SUCCESS"
        },
        {
            "timestamp": 1600961358,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1600962703,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1600962966,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Topic set to wip"
        },
        {
            "timestamp": 1600962989,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\nI've tagged this WIP for the moment.  Can you please remove the tag once it's ready for review again?"
        },
        {
            "timestamp": 1600980312,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 13:\n\n(3 comments)\n\nI am not a domain expert. There are a few items that left me confused."
        },
        {
            "timestamp": 1600981502,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(3 comments)"
        },
        {
            "timestamp": 1601042085,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 10:\n\n(10 comments)\n\nThanks Sunitha for taking this forward. I see some issue with latest changes and i think we can go with patchset10 in such case with addressing specific comments from Ed along."
        },
        {
            "timestamp": 1601042141,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Topic wip removed"
        },
        {
            "timestamp": 1601045488,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1601064354,
            "reviewer": {
                "name": "Johnathan Mantey",
                "email": "johnathanx.mantey@intel.com",
                "username": "Howitzer105mm"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1601143639,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1601378185,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1601378200,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1601378206,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5351/"
        },
        {
            "timestamp": 1601378505,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5351/ : SUCCESS"
        },
        {
            "timestamp": 1601378543,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 14:\n\n(10 comments)\n\nEd & Apparao, I tried the async_resolve. But still the bmcweb crashes with that same error. \n\nI have pushed the code which i used for async_resolve as a commented block. Please check and suggest if any changes you see in that code which can resolve this runtime error."
        },
        {
            "timestamp": 1601456381,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 14:\n\n(5 comments)"
        },
        {
            "timestamp": 1601473448,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 14:\n\n> Patch Set 14:\n> \n> (5 comments)"
        },
        {
            "timestamp": 1601476636,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 10:\n\n(2 comments)\n\nRatan, I will evaluate the changes which you mentioned for the connStateCheck. This seems to be similar to the state-handler which Ed was suggesting."
        },
        {
            "timestamp": 1601520291,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 14:\n\n(1 comment)\n\n> Patch Set 10:\n> \n> (2 comments)\n> \n> Ratan, I will evaluate the changes which you mentioned for the connStateCheck. This seems to be similar to the state-handler which Ed was suggesting.\n\nI haven't followed the whole list of comments, As you mentioned the state-handler, we have it in the form of connection state check function but that is to be enhanced.\nCurrently, state check is being done randomly here and there."
        },
        {
            "timestamp": 1601523976,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 14:\n\n> Patch Set 14:\n> \n> (10 comments)\n> \n> Ed & Apparao, I tried the async_resolve. But still the bmcweb crashes with that same error. \n> \n> I have pushed the code which i used for async_resolve as a commented block. Please check and suggest if any changes you see in that code which can resolve this runtime error.\n\nTo be clear, what does it do.  Seg fault?  Return an error code?"
        },
        {
            "timestamp": 1601524118,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 14:\n\n> Patch Set 14:\n> \n> > Patch Set 14:\n> > \n> > (10 comments)\n> > \n> > Ed & Apparao, I tried the async_resolve. But still the bmcweb crashes with that same error. \n> > \n> > I have pushed the code which i used for async_resolve as a commented block. Please check and suggest if any changes you see in that code which can resolve this runtime error.\n> \n> To be clear, what does it do.  Seg fault?  Return an error code?\n\nIf it's seg faulting, what line does it seg fault on?   In boost?\n\nIf it's returning an error code, did the code get passed from the kernel?  Was it created from within boost?"
        },
        {
            "timestamp": 1601887526,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 14:\n\n> > Patch Set 14:\n > >\n > > > Patch Set 14:\n > > >\n > > > (10 comments)\n > > >\n > > > Ed & Apparao, I tried the async_resolve. But still the bmcweb\n > crashes with that same error.\n > > >\n > > > I have pushed the code which i used for async_resolve as a\n > commented block. Please check and suggest if any changes you see in\n > that code which can resolve this runtime error.\n > >\n > > To be clear, what does it do.  Seg fault?  Return an error code?\n > \n > If it's seg faulting, what line does it seg fault on?   In boost?\n > \n > If it's returning an error code, did the code get passed from the\n > kernel?  Was it created from within boost?\n\nIts not an error code getting returned. It does not execute the async_resolve. I get the below exception at the boost when it tries doing resolve.\n\n terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n   what():  thread: Operation not supported"
        },
        {
            "timestamp": 1601891792,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 14:\n\n> > > Patch Set 14:\n > > >\n > > > > Patch Set 14:\n > > > >\n > > > > (10 comments)\n > > > >\n > > > > Ed & Apparao, I tried the async_resolve. But still the bmcweb\n > > crashes with that same error.\n > > > >\n > > > > I have pushed the code which i used for async_resolve as a\n > > commented block. Please check and suggest if any changes you see\n > in\n > > that code which can resolve this runtime error.\n > > >\n > > > To be clear, what does it do.  Seg fault?  Return an error\n > code?\n > >\n > > If it's seg faulting, what line does it seg fault on?   In boost?\n > >\n > > If it's returning an error code, did the code get passed from the\n > > kernel?  Was it created from within boost?\n > \n > Its not an error code getting returned. It does not execute the\n > async_resolve. I get the below exception at the boost when it tries\n > doing resolve.\n > \n > terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n > what():  thread: Operation not supported\n\nHi Ed, In my development environment i am not able to get the backtrace for this core. \n\nCore was generated by `/usr/bin/bmcweb'.\nProgram terminated with signal SIGABRT, Aborted.\n#0  0x4c2b2350 in ?? ()\n(gdb) bt\n#0  0x4c2b2350 in ?? ()\n\nCan you please help checking this core ?"
        },
        {
            "timestamp": 1601908274,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 14:\n\n> Patch Set 14:\n> \n> > > > Patch Set 14:\n>  > > >\n>  > > > > Patch Set 14:\n>  > > > >\n>  > > > > (10 comments)\n>  > > > >\n>  > > > > Ed & Apparao, I tried the async_resolve. But still the bmcweb\n>  > > crashes with that same error.\n>  > > > >\n>  > > > > I have pushed the code which i used for async_resolve as a\n>  > > commented block. Please check and suggest if any changes you see\n>  > in\n>  > > that code which can resolve this runtime error.\n>  > > >\n>  > > > To be clear, what does it do.  Seg fault?  Return an error\n>  > code?\n>  > >\n>  > > If it's seg faulting, what line does it seg fault on?   In boost?\n>  > >\n>  > > If it's returning an error code, did the code get passed from the\n>  > > kernel?  Was it created from within boost?\n>  > \n>  > Its not an error code getting returned. It does not execute the\n>  > async_resolve. I get the below exception at the boost when it tries\n>  > doing resolve.\n>  > \n>  > terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n>  > what():  thread: Operation not supported\n> \n> Hi Ed, In my development environment i am not able to get the backtrace for this core. \n> \n> Core was generated by `/usr/bin/bmcweb'.\n> Program terminated with signal SIGABRT, Aborted.\n> #0  0x4c2b2350 in ?? ()\n> (gdb) bt\n> #0  0x4c2b2350 in ?? ()\n> \n> Can you please help checking this core ?\n\nThat core isn't terribly useful.  Can you generate a version with symbols loaded?\n\nThe biggest thing we need to know is where the exception is being thrown from.  You could also figure this out by stepping through with a debugger (gdb) to find where the exception is thrown from."
        },
        {
            "timestamp": 1601983262,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1601983277,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1601983283,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5805/"
        },
        {
            "timestamp": 1601983628,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5805/ : SUCCESS"
        },
        {
            "timestamp": 1602005011,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 15:\n\n(11 comments)"
        },
        {
            "timestamp": 1602064970,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1602159435,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1602160632,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 15:\n\n(9 comments)"
        },
        {
            "timestamp": 1602168977,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 15:\n\n(5 comments)"
        },
        {
            "timestamp": 1602268014,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1602268028,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1602268034,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/6077/"
        },
        {
            "timestamp": 1602268068,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(1 comment)\n\nI rebased this ontop of mainline as best I could.  There might be merge issues, and clang-tidy will almost certainly find things wrong."
        },
        {
            "timestamp": 1602268075,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/6077/ : FAILURE"
        },
        {
            "timestamp": 1602483577,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1602483589,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1602483595,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/6116/"
        },
        {
            "timestamp": 1602484094,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 17:\n\n(3 comments)"
        },
        {
            "timestamp": 1602484651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/6116/ : SUCCESS"
        },
        {
            "timestamp": 1602501209,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1602516219,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1604582793,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1604582806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1604583079,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 18:\n\nHi Ed, I tried the protocol_type overload for the async_resolve , but no luck on that as well."
        },
        {
            "timestamp": 1604583893,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/7400/ : SUCCESS"
        },
        {
            "timestamp": 1604958620,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> Hi Ed, I tried the protocol_type overload for the async_resolve , but no luck on that as well.\n\nUnderstood.  You might consider starting with the beast async example here:\nhttps://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n\nthen slowly move toward the code you're using, and see at what point it breaks."
        },
        {
            "timestamp": 1606747431,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 18:\n\n> > Patch Set 18:\n > >\n > > Hi Ed, I tried the protocol_type overload for the async_resolve ,\n > but no luck on that as well.\n > \n > Understood.  You might consider starting with the beast async\n > example here:\n > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > \n > then slowly move toward the code you're using, and see at what\n > point it breaks.\n\nI copied this async client file as http/http_async_client.hpp.\nMade changes in the subscriber to create this client object when a subscription is made.\nMoved some basic functionalities from the existing https client to this new client to get the compilation through.\nI found this is crashing with at the async_resolve\n\n@Apparao - can you help here to check if the async_resolve works?"
        },
        {
            "timestamp": 1606751602,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> > > Patch Set 18:\n>  > >\n>  > > Hi Ed, I tried the protocol_type overload for the async_resolve ,\n>  > but no luck on that as well.\n>  > \n>  > Understood.  You might consider starting with the beast async\n>  > example here:\n>  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n>  > \n>  > then slowly move toward the code you're using, and see at what\n>  > point it breaks.\n> \n> I copied this async client file as http/http_async_client.hpp.\n> Made changes in the subscriber to create this client object when a subscription is made.\n> Moved some basic functionalities from the existing https client to this new client to get the compilation through.\n> I found this is crashing with at the async_resolve\n> \n> @Apparao - can you help here to check if the async_resolve works?\n\nDoes http_client_async.cpp work on its own when built for the bmc with no changes, and outside of bmcweb?"
        },
        {
            "timestamp": 1606808445,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 18:\n\n> > Patch Set 18:\n > >\n > > > > Patch Set 18:\n > >  > >\n > >  > > Hi Ed, I tried the protocol_type overload for the\n > async_resolve ,\n > >  > but no luck on that as well.\n > >  >\n > >  > Understood.  You might consider starting with the beast async\n > >  > example here:\n > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > >  >\n > >  > then slowly move toward the code you're using, and see at what\n > >  > point it breaks.\n > >\n > > I copied this async client file as http/http_async_client.hpp.\n > > Made changes in the subscriber to create this client object when\n > a subscription is made.\n > > Moved some basic functionalities from the existing https client\n > to this new client to get the compilation through.\n > > I found this is crashing with at the async_resolve\n > >\n > > @Apparao - can you help here to check if the async_resolve works?\n > \n > Does http_client_async.cpp work on its own when built for the bmc\n > with no changes, and outside of bmcweb?\n\nFirstly i am sorry for late pitch in here. I see modifications made here to improve and address the comments. Thank you so much.\n\nNo http\n\n > > Patch Set 18:\n > >\n > > > > Patch Set 18:\n > >  > >\n > >  > > Hi Ed, I tried the protocol_type overload for the\n > async_resolve ,\n > >  > but no luck on that as well.\n > >  >\n > >  > Understood.  You might consider starting with the beast async\n > >  > example here:\n > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > >  >\n > >  > then slowly move toward the code you're using, and see at what\n > >  > point it breaks.\n > >\n > > I copied this async client file as http/http_async_client.hpp.\n > > Made changes in the subscriber to create this client object when\n > a subscription is made.\n > > Moved some basic functionalities from the existing https client\n > to this new client to get the compilation through.\n > > I found this is crashing with at the async_resolve\n > >\n > > @Apparao - can you help here to check if the async_resolve works?\n > \n > Does http_client_async.cpp work on its own when built for the bmc\n > with no changes, and outside of bmcweb?\n\nFirstly i am sorry for late pitch in here. I see modification made here to improve and address comments on this. Thank you so much for it.\n\nEd, I tried http_client_async.cpp directly as standalone (before 8 months back) and its crashes at async_resolve(). There seems to be issue with async_resolve() in beast library.\n\nWith latest changes, I see some state machine is not handled properly and causing crashes. I started looking into it and will upload new patch set with it."
        },
        {
            "timestamp": 1606810058,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 18:\n\n> > > Patch Set 18:\n > > >\n > > > > > Patch Set 18:\n > > >  > >\n > > >  > > Hi Ed, I tried the protocol_type overload for the\n > > async_resolve ,\n > > >  > but no luck on that as well.\n > > >  >\n > > >  > Understood.  You might consider starting with the beast\n > async\n > > >  > example here:\n > > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > > >  >\n > > >  > then slowly move toward the code you're using, and see at\n > what\n > > >  > point it breaks.\n > > >\n > > > I copied this async client file as http/http_async_client.hpp.\n > > > Made changes in the subscriber to create this client object\n > when\n > > a subscription is made.\n > > > Moved some basic functionalities from the existing https client\n > > to this new client to get the compilation through.\n > > > I found this is crashing with at the async_resolve\n > > >\n > > > @Apparao - can you help here to check if the async_resolve\n > works?\n > >\n > > Does http_client_async.cpp work on its own when built for the bmc\n > > with no changes, and outside of bmcweb?\n > \n > Firstly i am sorry for late pitch in here. I see modifications made\n > here to improve and address the comments. Thank you so much.\n > \n > No http\n > \n > > > Patch Set 18:\n > > >\n > > > > > Patch Set 18:\n > > >  > >\n > > >  > > Hi Ed, I tried the protocol_type overload for the\n > > async_resolve ,\n > > >  > but no luck on that as well.\n > > >  >\n > > >  > Understood.  You might consider starting with the beast\n > async\n > > >  > example here:\n > > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > > >  >\n > > >  > then slowly move toward the code you're using, and see at\n > what\n > > >  > point it breaks.\n > > >\n > > > I copied this async client file as http/http_async_client.hpp.\n > > > Made changes in the subscriber to create this client object\n > when\n > > a subscription is made.\n > > > Moved some basic functionalities from the existing https client\n > > to this new client to get the compilation through.\n > > > I found this is crashing with at the async_resolve\n > > >\n > > > @Apparao - can you help here to check if the async_resolve\n > works?\n > >\n > > Does http_client_async.cpp work on its own when built for the bmc\n > > with no changes, and outside of bmcweb?\n > \n > Firstly i am sorry for late pitch in here. I see modification made\n > here to improve and address comments on this. Thank you so much for\n > it.\nNo Problem. \n > \n > Ed, I tried http_client_async.cpp directly as standalone (before 8\n > months back) and its crashes at async_resolve(). There seems to be\n > issue with async_resolve() in beast library.\n > \n > With latest changes, I see some state machine is not handled\n > properly and causing crashes. I started looking into it and will\n > upload new patch set with it.\n\nThanks for the update Apparao."
        },
        {
            "timestamp": 1606839049,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> > > Patch Set 18:\n>  > >\n>  > > > > Patch Set 18:\n>  > >  > >\n>  > >  > > Hi Ed, I tried the protocol_type overload for the\n>  > async_resolve ,\n>  > >  > but no luck on that as well.\n>  > >  >\n>  > >  > Understood.  You might consider starting with the beast async\n>  > >  > example here:\n>  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n>  > >  >\n>  > >  > then slowly move toward the code you're using, and see at what\n>  > >  > point it breaks.\n>  > >\n>  > > I copied this async client file as http/http_async_client.hpp.\n>  > > Made changes in the subscriber to create this client object when\n>  > a subscription is made.\n>  > > Moved some basic functionalities from the existing https client\n>  > to this new client to get the compilation through.\n>  > > I found this is crashing with at the async_resolve\n>  > >\n>  > > @Apparao - can you help here to check if the async_resolve works?\n>  > \n>  > Does http_client_async.cpp work on its own when built for the bmc\n>  > with no changes, and outside of bmcweb?\n> \n> Firstly i am sorry for late pitch in here. I see modifications made here to improve and address the comments. Thank you so much.\n> \n> No http\n> \n>  > > Patch Set 18:\n>  > >\n>  > > > > Patch Set 18:\n>  > >  > >\n>  > >  > > Hi Ed, I tried the protocol_type overload for the\n>  > async_resolve ,\n>  > >  > but no luck on that as well.\n>  > >  >\n>  > >  > Understood.  You might consider starting with the beast async\n>  > >  > example here:\n>  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n>  > >  >\n>  > >  > then slowly move toward the code you're using, and see at what\n>  > >  > point it breaks.\n>  > >\n>  > > I copied this async client file as http/http_async_client.hpp.\n>  > > Made changes in the subscriber to create this client object when\n>  > a subscription is made.\n>  > > Moved some basic functionalities from the existing https client\n>  > to this new client to get the compilation through.\n>  > > I found this is crashing with at the async_resolve\n>  > >\n>  > > @Apparao - can you help here to check if the async_resolve works?\n>  > \n>  > Does http_client_async.cpp work on its own when built for the bmc\n>  > with no changes, and outside of bmcweb?\n> \n> Firstly i am sorry for late pitch in here. I see modification made here to improve and address comments on this. Thank you so much for it.\n> \n> Ed, I tried http_client_async.cpp directly as standalone (before 8 months back) and its crashes at async_resolve(). There seems to be issue with async_resolve() in beast library.\n> \n> With latest changes, I see some state machine is not handled properly and causing crashes. I started looking into it and will upload new patch set with it.\n\nI just tried this on my machine for both the SSL example and the http example\n\nwget https://raw.githubusercontent.com/boostorg/beast/develop/example/http/client/async/http_client_async.cpp\n\nsudo apt install libboost1.71-all-dev\ng++ --std=c++17 http_client_async.cpp -I /usr/include -L /usr/lib/ -lboost_system -lboost_thread -lpthread\n\n./a.out www.google.com 80 /\n\nResolves dns properly, and works as designed, loading the page.  The same goes for the SSL example.  Can you clarify what test you ran?\n\n1. Something is broken in the arm specific build.\n2. Something is broken in dns resolution on OpenBMC.\n\nNext step is to start taking the working example, and move it to the bmc as-is, and verify if it works correctly.  That will give you next steps."
        },
        {
            "timestamp": 1607013797,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 18:\n\n> > Patch Set 18:\n > >\n > > > > Patch Set 18:\n > >  > >\n > >  > > > > Patch Set 18:\n > >  > >  > >\n > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n > >  > async_resolve ,\n > >  > >  > but no luck on that as well.\n > >  > >  >\n > >  > >  > Understood.  You might consider starting with the beast\n > async\n > >  > >  > example here:\n > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > >  > >  >\n > >  > >  > then slowly move toward the code you're using, and see at\n > what\n > >  > >  > point it breaks.\n > >  > >\n > >  > > I copied this async client file as http/http_async_client.hpp.\n > >  > > Made changes in the subscriber to create this client object\n > when\n > >  > a subscription is made.\n > >  > > Moved some basic functionalities from the existing https\n > client\n > >  > to this new client to get the compilation through.\n > >  > > I found this is crashing with at the async_resolve\n > >  > >\n > >  > > @Apparao - can you help here to check if the async_resolve\n > works?\n > >  >\n > >  > Does http_client_async.cpp work on its own when built for the\n > bmc\n > >  > with no changes, and outside of bmcweb?\n > >\n > > Firstly i am sorry for late pitch in here. I see modifications\n > made here to improve and address the comments. Thank you so much.\n > >\n > > No http\n > >\n > >  > > Patch Set 18:\n > >  > >\n > >  > > > > Patch Set 18:\n > >  > >  > >\n > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n > >  > async_resolve ,\n > >  > >  > but no luck on that as well.\n > >  > >  >\n > >  > >  > Understood.  You might consider starting with the beast\n > async\n > >  > >  > example here:\n > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n > >  > >  >\n > >  > >  > then slowly move toward the code you're using, and see at\n > what\n > >  > >  > point it breaks.\n > >  > >\n > >  > > I copied this async client file as http/http_async_client.hpp.\n > >  > > Made changes in the subscriber to create this client object\n > when\n > >  > a subscription is made.\n > >  > > Moved some basic functionalities from the existing https\n > client\n > >  > to this new client to get the compilation through.\n > >  > > I found this is crashing with at the async_resolve\n > >  > >\n > >  > > @Apparao - can you help here to check if the async_resolve\n > works?\n > >  >\n > >  > Does http_client_async.cpp work on its own when built for the\n > bmc\n > >  > with no changes, and outside of bmcweb?\n > >\n > > Firstly i am sorry for late pitch in here. I see modification\n > made here to improve and address comments on this. Thank you so\n > much for it.\n > >\n > > Ed, I tried http_client_async.cpp directly as standalone (before\n > 8 months back) and its crashes at async_resolve(). There seems to\n > be issue with async_resolve() in beast library.\n > >\n > > With latest changes, I see some state machine is not handled\n > properly and causing crashes. I started looking into it and will\n > upload new patch set with it.\n > \n > I just tried this on my machine for both the SSL example and the\n > http example\n > \n > wget https://raw.githubusercontent.com/boostorg/beast/develop/example/http/client/async/http_client_async.cpp\n > \n > sudo apt install libboost1.71-all-dev\n > g++ --std=c++17 http_client_async.cpp -I /usr/include -L /usr/lib/\n > -lboost_system -lboost_thread -lpthread\n > \n > ./a.out www.google.com 80 /\n > \n > Resolves dns properly, and works as designed, loading the page. \n > The same goes for the SSL example.  Can you clarify what test you\n > ran?\n > \n > 1. Something is broken in the arm specific build.\n > 2. Something is broken in dns resolution on OpenBMC.\n > \n > Next step is to start taking the working example, and move it to\n > the bmc as-is, and verify if it works correctly.  That will give\n > you next steps.\n\nLast time (Few months back) when i built the http_client_async.cpp as is(standalone), I saw had seen the crash like below.\n./http-client-async <server> 5002 /\nterminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n  what():  thread: Operation not supported\n\n\nFurther checking i figured it out that \"-DBOOST_ASIO_DISABLE_THREADS\"  definition in cmake is causing the issue.\n\nI enabled Boost.asio's threading support and \"http_client_async.cpp\" works fine(able to resolve the dns). Its done on standalone build x86 arch.\n\n./http-client-async <server> 5002 /\nHTTP/1.0 200 OK\nServer: BaseHTTP/0.6 Python/3.5.2\nDate: Thu, 03 Dec 2020 16:31:57 GMT\n\nGET request Ack from server!\n\nSo issue is when we explicitly disable Boost.asio's threading support(I.e -DBOOST_ASIO_DISABLE_THREADS). Enabling this boost.asio has other compile issue on bmcweb(I think this is disabled purposefully for to using asio threads in bmcweb repo). \nCompile errors:\n/usr/include/boost/asio/detail/impl/posix_thread.ipp:35: undefined reference to `pthread_detach'\n/usr/include/boost/asio/detail/impl/posix_thread.ipp:59: undefined reference to `pthread_create'\n/usr/include/boost/asio/detail/impl/posix_thread.ipp:42: undefined reference to `pthread_join'\n/usr/include/boost/asio/detail/posix_signal_blocker.hpp:50: undefined reference to `pthread_sigmask'\n\n.........\n\nCan we enable boost.asio threads support in bmcweb and link associated libraries for avoid above compilation issues? Any suggestions?"
        },
        {
            "timestamp": 1607016626,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> > > Patch Set 18:\n>  > >\n>  > > > > Patch Set 18:\n>  > >  > >\n>  > >  > > > > Patch Set 18:\n>  > >  > >  > >\n>  > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n>  > >  > async_resolve ,\n>  > >  > >  > but no luck on that as well.\n>  > >  > >  >\n>  > >  > >  > Understood.  You might consider starting with the beast\n>  > async\n>  > >  > >  > example here:\n>  > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n>  > >  > >  >\n>  > >  > >  > then slowly move toward the code you're using, and see at\n>  > what\n>  > >  > >  > point it breaks.\n>  > >  > >\n>  > >  > > I copied this async client file as http/http_async_client.hpp.\n>  > >  > > Made changes in the subscriber to create this client object\n>  > when\n>  > >  > a subscription is made.\n>  > >  > > Moved some basic functionalities from the existing https\n>  > client\n>  > >  > to this new client to get the compilation through.\n>  > >  > > I found this is crashing with at the async_resolve\n>  > >  > >\n>  > >  > > @Apparao - can you help here to check if the async_resolve\n>  > works?\n>  > >  >\n>  > >  > Does http_client_async.cpp work on its own when built for the\n>  > bmc\n>  > >  > with no changes, and outside of bmcweb?\n>  > >\n>  > > Firstly i am sorry for late pitch in here. I see modifications\n>  > made here to improve and address the comments. Thank you so much.\n>  > >\n>  > > No http\n>  > >\n>  > >  > > Patch Set 18:\n>  > >  > >\n>  > >  > > > > Patch Set 18:\n>  > >  > >  > >\n>  > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n>  > >  > async_resolve ,\n>  > >  > >  > but no luck on that as well.\n>  > >  > >  >\n>  > >  > >  > Understood.  You might consider starting with the beast\n>  > async\n>  > >  > >  > example here:\n>  > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n>  > >  > >  >\n>  > >  > >  > then slowly move toward the code you're using, and see at\n>  > what\n>  > >  > >  > point it breaks.\n>  > >  > >\n>  > >  > > I copied this async client file as http/http_async_client.hpp.\n>  > >  > > Made changes in the subscriber to create this client object\n>  > when\n>  > >  > a subscription is made.\n>  > >  > > Moved some basic functionalities from the existing https\n>  > client\n>  > >  > to this new client to get the compilation through.\n>  > >  > > I found this is crashing with at the async_resolve\n>  > >  > >\n>  > >  > > @Apparao - can you help here to check if the async_resolve\n>  > works?\n>  > >  >\n>  > >  > Does http_client_async.cpp work on its own when built for the\n>  > bmc\n>  > >  > with no changes, and outside of bmcweb?\n>  > >\n>  > > Firstly i am sorry for late pitch in here. I see modification\n>  > made here to improve and address comments on this. Thank you so\n>  > much for it.\n>  > >\n>  > > Ed, I tried http_client_async.cpp directly as standalone (before\n>  > 8 months back) and its crashes at async_resolve(). There seems to\n>  > be issue with async_resolve() in beast library.\n>  > >\n>  > > With latest changes, I see some state machine is not handled\n>  > properly and causing crashes. I started looking into it and will\n>  > upload new patch set with it.\n>  > \n>  > I just tried this on my machine for both the SSL example and the\n>  > http example\n>  > \n>  > wget https://raw.githubusercontent.com/boostorg/beast/develop/example/http/client/async/http_client_async.cpp\n>  > \n>  > sudo apt install libboost1.71-all-dev\n>  > g++ --std=c++17 http_client_async.cpp -I /usr/include -L /usr/lib/\n>  > -lboost_system -lboost_thread -lpthread\n>  > \n>  > ./a.out www.google.com 80 /\n>  > \n>  > Resolves dns properly, and works as designed, loading the page. \n>  > The same goes for the SSL example.  Can you clarify what test you\n>  > ran?\n>  > \n>  > 1. Something is broken in the arm specific build.\n>  > 2. Something is broken in dns resolution on OpenBMC.\n>  > \n>  > Next step is to start taking the working example, and move it to\n>  > the bmc as-is, and verify if it works correctly.  That will give\n>  > you next steps.\n> \n> Last time (Few months back) when i built the http_client_async.cpp as is(standalone), I saw had seen the crash like below.\n> ./http-client-async <server> 5002 /\n> terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n>   what():  thread: Operation not supported\n> \n> \n> Further checking i figured it out that \"-DBOOST_ASIO_DISABLE_THREADS\"  definition in cmake is causing the issue.\n> \n> I enabled Boost.asio's threading support and \"http_client_async.cpp\" works fine(able to resolve the dns). Its done on standalone build x86 arch.\n\nOK, that's a much better data point.  async_resolves underlying implementation requires threads.  That makes much more sense why this isn't working.\n\n> \n> ./http-client-async <server> 5002 /\n> HTTP/1.0 200 OK\n> Server: BaseHTTP/0.6 Python/3.5.2\n> Date: Thu, 03 Dec 2020 16:31:57 GMT\n> \n> GET request Ack from server!\n> \n> So issue is when we explicitly disable Boost.asio's threading support(I.e -DBOOST_ASIO_DISABLE_THREADS). Enabling this boost.asio has other compile issue on bmcweb(I think this is disabled purposefully for to using asio threads in bmcweb repo). \n> Compile errors:\n> /usr/include/boost/asio/detail/impl/posix_thread.ipp:35: undefined reference to `pthread_detach'\n> /usr/include/boost/asio/detail/impl/posix_thread.ipp:59: undefined reference to `pthread_create'\n> /usr/include/boost/asio/detail/impl/posix_thread.ipp:42: undefined reference to `pthread_join'\n> /usr/include/boost/asio/detail/posix_signal_blocker.hpp:50: undefined reference to `pthread_sigmask'\n> \n> .........\n> \n> Can we enable boost.asio threads support in bmcweb and link associated libraries for avoid above compilation issues? Any suggestions?\n\nI'd much rather we not spin off another thread because of the impacts it will have to binary size.  Have you looked into why that implementation requires threads, and looked for async alternatives to dns resolution?"
        },
        {
            "timestamp": 1607017015,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> > Patch Set 18:\n> > \n> > > > Patch Set 18:\n> >  > >\n> >  > > > > Patch Set 18:\n> >  > >  > >\n> >  > >  > > > > Patch Set 18:\n> >  > >  > >  > >\n> >  > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n> >  > >  > async_resolve ,\n> >  > >  > >  > but no luck on that as well.\n> >  > >  > >  >\n> >  > >  > >  > Understood.  You might consider starting with the beast\n> >  > async\n> >  > >  > >  > example here:\n> >  > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n> >  > >  > >  >\n> >  > >  > >  > then slowly move toward the code you're using, and see at\n> >  > what\n> >  > >  > >  > point it breaks.\n> >  > >  > >\n> >  > >  > > I copied this async client file as http/http_async_client.hpp.\n> >  > >  > > Made changes in the subscriber to create this client object\n> >  > when\n> >  > >  > a subscription is made.\n> >  > >  > > Moved some basic functionalities from the existing https\n> >  > client\n> >  > >  > to this new client to get the compilation through.\n> >  > >  > > I found this is crashing with at the async_resolve\n> >  > >  > >\n> >  > >  > > @Apparao - can you help here to check if the async_resolve\n> >  > works?\n> >  > >  >\n> >  > >  > Does http_client_async.cpp work on its own when built for the\n> >  > bmc\n> >  > >  > with no changes, and outside of bmcweb?\n> >  > >\n> >  > > Firstly i am sorry for late pitch in here. I see modifications\n> >  > made here to improve and address the comments. Thank you so much.\n> >  > >\n> >  > > No http\n> >  > >\n> >  > >  > > Patch Set 18:\n> >  > >  > >\n> >  > >  > > > > Patch Set 18:\n> >  > >  > >  > >\n> >  > >  > >  > > Hi Ed, I tried the protocol_type overload for the\n> >  > >  > async_resolve ,\n> >  > >  > >  > but no luck on that as well.\n> >  > >  > >  >\n> >  > >  > >  > Understood.  You might consider starting with the beast\n> >  > async\n> >  > >  > >  > example here:\n> >  > >  > >  > https://github.com/boostorg/beast/blob/develop/example/http/client/async/http_client_async.cpp\n> >  > >  > >  >\n> >  > >  > >  > then slowly move toward the code you're using, and see at\n> >  > what\n> >  > >  > >  > point it breaks.\n> >  > >  > >\n> >  > >  > > I copied this async client file as http/http_async_client.hpp.\n> >  > >  > > Made changes in the subscriber to create this client object\n> >  > when\n> >  > >  > a subscription is made.\n> >  > >  > > Moved some basic functionalities from the existing https\n> >  > client\n> >  > >  > to this new client to get the compilation through.\n> >  > >  > > I found this is crashing with at the async_resolve\n> >  > >  > >\n> >  > >  > > @Apparao - can you help here to check if the async_resolve\n> >  > works?\n> >  > >  >\n> >  > >  > Does http_client_async.cpp work on its own when built for the\n> >  > bmc\n> >  > >  > with no changes, and outside of bmcweb?\n> >  > >\n> >  > > Firstly i am sorry for late pitch in here. I see modification\n> >  > made here to improve and address comments on this. Thank you so\n> >  > much for it.\n> >  > >\n> >  > > Ed, I tried http_client_async.cpp directly as standalone (before\n> >  > 8 months back) and its crashes at async_resolve(). There seems to\n> >  > be issue with async_resolve() in beast library.\n> >  > >\n> >  > > With latest changes, I see some state machine is not handled\n> >  > properly and causing crashes. I started looking into it and will\n> >  > upload new patch set with it.\n> >  > \n> >  > I just tried this on my machine for both the SSL example and the\n> >  > http example\n> >  > \n> >  > wget https://raw.githubusercontent.com/boostorg/beast/develop/example/http/client/async/http_client_async.cpp\n> >  > \n> >  > sudo apt install libboost1.71-all-dev\n> >  > g++ --std=c++17 http_client_async.cpp -I /usr/include -L /usr/lib/\n> >  > -lboost_system -lboost_thread -lpthread\n> >  > \n> >  > ./a.out www.google.com 80 /\n> >  > \n> >  > Resolves dns properly, and works as designed, loading the page. \n> >  > The same goes for the SSL example.  Can you clarify what test you\n> >  > ran?\n> >  > \n> >  > 1. Something is broken in the arm specific build.\n> >  > 2. Something is broken in dns resolution on OpenBMC.\n> >  > \n> >  > Next step is to start taking the working example, and move it to\n> >  > the bmc as-is, and verify if it works correctly.  That will give\n> >  > you next steps.\n> > \n> > Last time (Few months back) when i built the http_client_async.cpp as is(standalone), I saw had seen the crash like below.\n> > ./http-client-async <server> 5002 /\n> > terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n> >   what():  thread: Operation not supported\n> > \n> > \n> > Further checking i figured it out that \"-DBOOST_ASIO_DISABLE_THREADS\"  definition in cmake is causing the issue.\n> > \n> > I enabled Boost.asio's threading support and \"http_client_async.cpp\" works fine(able to resolve the dns). Its done on standalone build x86 arch.\n> \n> OK, that's a much better data point.  async_resolves underlying implementation requires threads.  That makes much more sense why this isn't working.\n> \n> > \n> > ./http-client-async <server> 5002 /\n> > HTTP/1.0 200 OK\n> > Server: BaseHTTP/0.6 Python/3.5.2\n> > Date: Thu, 03 Dec 2020 16:31:57 GMT\n> > \n> > GET request Ack from server!\n> > \n> > So issue is when we explicitly disable Boost.asio's threading support(I.e -DBOOST_ASIO_DISABLE_THREADS). Enabling this boost.asio has other compile issue on bmcweb(I think this is disabled purposefully for to using asio threads in bmcweb repo). \n> > Compile errors:\n> > /usr/include/boost/asio/detail/impl/posix_thread.ipp:35: undefined reference to `pthread_detach'\n> > /usr/include/boost/asio/detail/impl/posix_thread.ipp:59: undefined reference to `pthread_create'\n> > /usr/include/boost/asio/detail/impl/posix_thread.ipp:42: undefined reference to `pthread_join'\n> > /usr/include/boost/asio/detail/posix_signal_blocker.hpp:50: undefined reference to `pthread_sigmask'\n> > \n> > .........\n> > \n> > Can we enable boost.asio threads support in bmcweb and link associated libraries for avoid above compilation issues? Any suggestions?\n> \n> I'd much rather we not spin off another thread because of the impacts it will have to binary size.  Have you looked into why that implementation requires threads, and looked for async alternatives to dns resolution?\n\nAnother thing that might be of use.  We can either patch boost to use this\nhttps://man7.org/linux/man-pages/man3/getaddrinfo_a.3.html\n\nor we could build our own resolver type that calls that underneath.  This was based on a quick lookthrough of solutions in Google.  I'm open to other ideas here;\n\nGlad to see traction on this review finally."
        },
        {
            "timestamp": 1609757831,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 18:\n\nWe were hitting random connection errors while testing this commit with multiple subscribers. During debug, i enabled the async_resolve() by compiling the bmcweb with the pthreads. This seemed to fix the issues which we were facing in our tests.\nThe bmcweb binary size increase with pthreads is 220KB. Will this increase be a point of concern?"
        },
        {
            "timestamp": 1609786899,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> We were hitting random connection errors while testing this commit with multiple subscribers. During debug, i enabled the async_resolve() by compiling the bmcweb with the pthreads. This seemed to fix the issues which we were facing in our tests.\n\nThis is well known and is why blocking calls are disallowed in the bmcweb developing guide.  Not clear why this one got merged.\n\n> The bmcweb binary size increase with pthreads is 220KB. Will this increase be a point of concern?\n\nConsidering that's a ~30% increase in binary size to support one line off code, and most systems are already at their binary size limit, no, that's not going to be acceptable.  I linked a possible solution in my previous comment that someone is welcome to look into."
        },
        {
            "timestamp": 1609982583,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 18:\n\n> Patch Set 18:\n> \n> > Patch Set 18:\n> > \n> > We were hitting random connection errors while testing this commit with multiple subscribers. During debug, i enabled the async_resolve() by compiling the bmcweb with the pthreads. This seemed to fix the issues which we were facing in our tests.\n> \n> This is well known and is why blocking calls are disallowed in the bmcweb developing guide.  Not clear why this one got merged.\n> \n> > The bmcweb binary size increase with pthreads is 220KB. Will this increase be a point of concern?\n> \n> Considering that's a ~30% increase in binary size to support one line off code, and most systems are already at their binary size limit, no, that's not going to be acceptable.  I linked a possible solution in my previous comment that someone is welcome to look into.\n\nOn the mailing list here: https://lists.ozlabs.org/pipermail/openbmc/2021-January/024511.html"
        },
        {
            "timestamp": 1611843704,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1612168866,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1612168881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612168895,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1612169984,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11689/ : SUCCESS"
        },
        {
            "timestamp": 1612790779,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 19:\n\n@apparao - As i am continuing working on this commit, Can i get the ownership of this?"
        },
        {
            "timestamp": 1612791241,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1612791256,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612791757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12083/ : FAILURE"
        },
        {
            "timestamp": 1612801145,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 20:\n\n(9 comments)"
        },
        {
            "timestamp": 1612863746,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 20:\n\n(6 comments)"
        },
        {
            "timestamp": 1612939953,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 20:\n\n> Patch Set 19:\n> \n> @apparao - As i am continuing working on this commit, Can i get the ownership of this?\n\n@Sunitha, Thanks for taking this patch forward. Yes, Since you contributed on this patch, You can add co-signing.\n\nI also thought of spending some time this week on this patch and take it forward. But i see some issues while i started checking this new change. So  Let me find sometime this week and resolving them and upload new patch."
        },
        {
            "timestamp": 1612941094,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 20:\n\n(5 comments)"
        },
        {
            "timestamp": 1613369087,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1613448006,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1613448850,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1613505937,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1613506076,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1613648344,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 20:\n\n(5 comments)"
        },
        {
            "timestamp": 1613669962,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1613728858,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1613728877,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613728902,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12691/ : FAILURE"
        },
        {
            "timestamp": 1613728958,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1613729080,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1613729097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613730089,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12692/ : SUCCESS"
        },
        {
            "timestamp": 1613941045,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1613995029,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1613995053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613995411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12773/ : FAILURE"
        },
        {
            "timestamp": 1614182525,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 24."
        },
        {
            "timestamp": 1614182552,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614182937,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12982/ : FAILURE"
        },
        {
            "timestamp": 1614183446,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1614183462,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614184482,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12983/ : SUCCESS"
        },
        {
            "timestamp": 1614250370,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1614250395,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614251445,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13038/ : SUCCESS"
        },
        {
            "timestamp": 1614325708,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 27."
        },
        {
            "timestamp": 1614325736,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614326753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13094/ : SUCCESS"
        },
        {
            "timestamp": 1614615411,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 28."
        },
        {
            "timestamp": 1614615438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614616459,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13162/ : SUCCESS"
        },
        {
            "timestamp": 1614672347,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 29."
        },
        {
            "timestamp": 1614672392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614673413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13188/ : SUCCESS"
        },
        {
            "timestamp": 1614681547,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 30."
        },
        {
            "timestamp": 1614681577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614682606,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13202/ : SUCCESS"
        },
        {
            "timestamp": 1614683001,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 31."
        },
        {
            "timestamp": 1614683018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614684040,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13203/ : SUCCESS"
        },
        {
            "timestamp": 1614797870,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 32."
        },
        {
            "timestamp": 1614797899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614798923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13266/ : SUCCESS"
        },
        {
            "timestamp": 1614854287,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 33."
        },
        {
            "timestamp": 1614854329,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614854728,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13314/ : FAILURE"
        },
        {
            "timestamp": 1614856798,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 34."
        },
        {
            "timestamp": 1614856828,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614857862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13318/ : SUCCESS"
        },
        {
            "timestamp": 1614933230,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 35."
        },
        {
            "timestamp": 1614933257,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614933651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13398/ : FAILURE"
        },
        {
            "timestamp": 1614936818,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 36: Patch Set 35 was rebased."
        },
        {
            "timestamp": 1614936847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614937876,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13403/ : SUCCESS"
        },
        {
            "timestamp": 1615182593,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 37: Patch Set 36 was rebased."
        },
        {
            "timestamp": 1615182621,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615183659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13457/ : SUCCESS"
        },
        {
            "timestamp": 1615270181,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 37: Code-Review+1"
        },
        {
            "timestamp": 1616178162,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 38."
        },
        {
            "timestamp": 1616178178,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616178955,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14057/ : SUCCESS"
        },
        {
            "timestamp": 1619953096,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 39."
        },
        {
            "timestamp": 1619953117,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619953603,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16549/ : SUCCESS"
        },
        {
            "timestamp": 1620061664,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 39:\n\n(9 comments)"
        },
        {
            "timestamp": 1620062149,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 39:\n\n(4 comments)"
        },
        {
            "timestamp": 1624351611,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 40: Patch Set 39 was rebased"
        },
        {
            "timestamp": 1624351625,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624352096,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20333/ : SUCCESS"
        },
        {
            "timestamp": 1625267038,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 41."
        },
        {
            "timestamp": 1625267069,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625267549,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21338/ : SUCCESS"
        },
        {
            "timestamp": 1625267639,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 41:\n\n(1 comment)"
        },
        {
            "timestamp": 1627505851,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Uploaded patch set 42."
        },
        {
            "timestamp": 1627505876,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627506420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23104/ : SUCCESS"
        },
        {
            "timestamp": 1628015279,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 42:\n\n(1 comment)\n\nTo the 3 people that have been pushing patches here: Please answer the maintainers questions BEFORE pushing a new patch.  Having new patchsets without answers to questions makes it very difficult to track who is owning what, whether or not the changes are agreed to, and what the current state of the patchset is."
        },
        {
            "timestamp": 1628581779,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 43: Patch Set 42 was rebased."
        },
        {
            "timestamp": 1628581800,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628582220,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/24119/ : FAILURE"
        },
        {
            "timestamp": 1628582821,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 44: Patch Set 43 was rebased."
        },
        {
            "timestamp": 1628582852,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628583329,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/24129/ : SUCCESS"
        },
        {
            "timestamp": 1628592428,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 45."
        },
        {
            "timestamp": 1628592447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628593059,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/24135/ : SUCCESS"
        },
        {
            "timestamp": 1629149338,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 45:\n\n> Patch Set 42:\n> \n> (1 comment)\n> \n> To the 3 people that have been pushing patches here: Please answer the maintainers questions BEFORE pushing a new patch.  Having new patchsets without answers to questions makes it very difficult to track who is owning what, whether or not the changes are agreed to, and what the current state of the patchset is.\n\nAbandoning this patchset.  Feel free to reopen once the above comment is read and understood.  There have been 3 new patchsets on this since this comment was made, and zero responses from submitters."
        },
        {
            "timestamp": 1629149344,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Abandoned"
        },
        {
            "timestamp": 1629183726,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 45:\n\n> Patch Set 45:\n> \n> > Patch Set 42:\n> > \n> > (1 comment)\n> > \n> > To the 3 people that have been pushing patches here: Please answer the maintainers questions BEFORE pushing a new patch.  Having new patchsets without answers to questions makes it very difficult to track who is owning what, whether or not the changes are agreed to, and what the current state of the patchset is.\n> \n> Abandoning this patchset.  Feel free to reopen once the above comment is read and understood.  There have been 3 new patchsets on this since this comment was made, and zero responses from submitters.\n\nHi Ed, The 3 latest patchsets and many earlier patchsets from me were rebases due to the rework at the lower commits in this chain."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "0c3ccd48fbdd7bf9666b431c65cead56dc8336d7",
            "parents": [
                "4231accb41deaf34e4fc852bba1ad18ddd36689f"
            ],
            "ref": "refs/changes/35/31735/1",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1588086619,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "http/https_client.hpp",
                    "type": "ADDED",
                    "insertions": 319,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 325,
            "sizeDeletions": 5
        },
        {
            "number": 2,
            "revision": "2c535937de1b4b34015dbcfca2a976a60702450e",
            "parents": [
                "7acd2dce7f33b3d1c92b6bfe9ed928d188f376e7"
            ],
            "ref": "refs/changes/35/31735/2",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1590405638,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -84
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 85
        },
        {
            "number": 3,
            "revision": "4143c0b181e1b80aa5509f1e33e3a330000015d8",
            "parents": [
                "1d168c22cf2b0e357c940336d512a9439fdcaad6"
            ],
            "ref": "refs/changes/35/31735/3",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1590702863,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "debug print?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "good eyes :) \n\nremoved."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -84
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 85
        },
        {
            "number": 4,
            "revision": "e7547de578170911d3a5cd43d8c38d6f32791374",
            "parents": [
                "e21b821290cf56742579f4ad8c82ba4c9fc2a0cb"
            ],
            "ref": "refs/changes/35/31735/4",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1591099233,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "What would you think about little struct/class encapsulating the connection?\n\nIt could get rid of all 'if(ssl) else..' and encapsulate all the decision points in one place. It will then saparate the business logic of connection (connection states and transitions) from chosen transport.\n\n// Just a poc\nclass Stream\n{\n  Stream(isSsl)\n  {\n     if(isSsl)\n     {\n        ssl = make_shared<....\n     }\n     {\n        tcp = make_shared<...\n     }\n  }\n\n\n  void async_write(req, handler)\n  { ... }\n\n  void async_read(req, handler)\n  { ... }\n\n  void onConnect(handler(ec))\n  {\n    if(ssl)\n    {\n       // perform handshake and call handler(ec)\n    }\n    {\n       // just call handler(boost::make_error_code(ok))\n    } \n  }\n\n  boost::beast::tcp_stream& get()\n  { ... }\n\nprivate:\n   shared_ptr<SSL> ..\n   shared_ptr<TCP> ..\n}"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I wish i would have used it but they are already in encapsulated in this class and all operations like async_write, async_read,connect etc are encapsulated. Thanks for suggestion Adrian. Adding one more just for this will increase duplicate and complexity."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "I understand your point, I'm just always fan of encapsulating related code in one place, so then higher level logic won't bother about that. When I see 'if(someBool){do this}else{do that}' in multiple places in code it gives me a hint, that we're dealing with \na) strategy pattern\nb) an abstract object\nwhich hasn't been yet implemented as such:) But I won't insist if you dont see value in that."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Thanks Adrian for this suggestions. There is some level of code already encapsulated to this class. If i further does only for this purpose, It will duplicate lot of code especially aync_read, async_Write etc. So didn't went with further just to avoid if-else block here. But i can keep it as future reference and see can accomidate."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "nit: Is there a reason we need that? Couldn't async_write(getConn().. be used instead? I suspect that might be limitation (or design choice?) of the boost implementation, but I'm interested in the answer"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "The getConn() return the tcp_stream but async_write() accept ssl_stream in case of SSL. In fact started with it and where ever possible i used getConn() and simplified code and only in async_write & async_read case, I got to use ssl_stream while using secure connection."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "nit: I believe that just 'useSsl' would be more meaningful"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 184,
                    "deletions": -84
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 185,
            "sizeDeletions": 85
        },
        {
            "number": 5,
            "revision": "3ed10b3eb4fee48904357c0c2f0ea6ea0f9bbb93",
            "parents": [
                "7d06489864965c12ffab4c791da2097094bfeb64"
            ],
            "ref": "refs/changes/35/31735/5",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1592197202,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Clarification: What's the reason behind this? What we are trying to do here, after the connection is closed?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "CheckQueue function is single place where we handles all the retry or terminate actions related support. doClose will get called when there is failure in send/receive. At that time, we will close existing connection and re-open connection (inside checkQueue()) after configured timeout interval, depending on retry count and terminate actions."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Please change the function name then doClose() seems confusing as it indicates we are stopping the connection.\ncloseAndRecheckQueue() ?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Since actual business logic of retries are done in checkQueue, In all other functions also we are doing required operations(Connect, close, send, Recv etc..) and leaving control to checkQueue. So i think we are good here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "You meant to say doClose() function name conveys what is done inside the function.\n\nSay when there is failure, we call doClose() (any reader will assume that it is closing the connection), but in reality it is not, it may re-open based on the need."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yes, In this file. As said above overall this file is design in such a way that any operation should call checkQueue which has final power to take decisions. Be it send, Recv, Connect, close.\n\nI understood your point in changing name of function to doCloseAndCheck() but  may be i feel its unnecessary in this file&design context."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Disagree, File & design context must be for readability & manageability of code and not the other way around."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done, Changed function name."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 184,
                    "deletions": -84
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 185,
            "sizeDeletions": 85
        },
        {
            "number": 6,
            "revision": "c432badefb6453b6da45e4a5b9fa77a365de2eff",
            "parents": [
                "a97f920e50460e22228ea693f28ea889635a6041"
            ],
            "ref": "refs/changes/35/31735/6",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1593202508,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -85
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 86
        },
        {
            "number": 7,
            "revision": "ecc65d5a889f32e0b3ee8a69f4faa68968a54439",
            "parents": [
                "34392440aec4099c1e43e312823650b244c4dd50"
            ],
            "ref": "refs/changes/35/31735/7",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1593406669,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Suspect you meant to use flat_static_buffer here to bound your input size.  Flat buffer is allowed to grow forever."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a security issue.  You've used an unbounded body type (std::string), which means the server could send you a 10GB payload back as a response, and run the BMC out of memory."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "why would we not want to use ssl? Http is insecure?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yes, We use ssl(https) only and default value is true. There is the BUIld flag (BMCWEB_INSECURE_ENABLE_HTTP_PUSH_STYLE_EVENTING) to enable insecure PUSH style events. Default value of this is OFF."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "So shoudn't we make sure BMCWEB_INSECURE_ENABLE_HTTP_PUSH_STYLE_EVENTING is set before we allow this to be set to false? I'm not seeing that in this patch, unless it is elsewhere?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "No, We are blocking that in first place when user tries to configure the destination. Its done in event_service.hpp file while creating configuration."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not sure why this needs a BMCWEB_INSECURE:\n1. The user has opted into not using SSL by providing an http interface definition.\n2. There are a lot of subscriptions you could make that don't contain any secrets, and a user would rather not take the SSL overhead to send them, so it's not like there isn't a valid use case here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "extra parens.\n\nAlso missing nullptr check."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "extra parens.\n\nAlso, missing nullptr check"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 171,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are more things you need to set here.  content-type, user-agent and accepts headers come to mind, but you really need to go look at an http request from a browser and sort through which ones you need."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Security issue: You forgot to check if the user is setting headers that already exist.  For example, setting a host header would allow possible injection attacks.  We don't want that.\n\nAlso, you don't seem to check for validity of the headers anywhere.  For example, if I put \\n in a request, I can now escape in whatever header I want.  That's incorrect."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 229,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is wrong.  You need to verify that the sending server didn't return a 4XX error that should be retried."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 346,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is wrong.  If it's done properly, there should be no way that control flow returns to a callback handler like this without the timer being stopped.  It should be the first thing done when an async handler returns.  I think you need to debug this more, rather than simply adding the flag."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -85
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 86
        },
        {
            "number": 8,
            "revision": "70973aec42a783ccd3ff17d29a447f7bec80f67e",
            "parents": [
                "4bbf237f4217afd1a0fa8c474a921a9175732b13"
            ],
            "ref": "refs/changes/35/31735/8",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1593757201,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These should probably be std::optional.  I don't see any shared ownership in any of your usages.\n\nOnce you've done that, you can also delete the \"useSsl\" parameter, and simply use the filled state.\n\n\nSaid more concretely, this declaration should be\nstd::optional<std::boost::beast::ssl_stream<boost::beast::tcp_stream&>> sslCon;\nboost::beast::tcp:stream conn;\n\nsslCon == nullptr will tell you if ssl is enabled;\n\nTo construct it, use\nsslCon.emplace(conn);  // I might be missing a set of braces here\n\nIt also makes your getConn() method go away, as methods can simply use the conn object to access the underlying connection, although your other bugs will still need fixed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I am not quite clear how to construct the sslConn using conn( or ioc) and ssl context(ctx). Can you please point me to some examples(boost asio) which does this.\n\nThis header file and intern class is used for both http and https connection. Get them on to common API's like async_connect, expiry timers, i used getConn().\n\nI had referred below boost examples for establishing the http/https client connections.\nhttps://www.boost.org/doc/libs/develop/libs/beast/example/http/client/async/http_client_async.cpp\nhttps://www.boost.org/doc/libs/develop/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp\n\nIt would be great if you can point the examples which can act on tcp_stream & ssl_stream.\n\nMost of below comments seems to be depend on this. So will wait for some inputs."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Example from one of my patches:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/35265/2/http/http_connection.h#330\n\nAll getConn() does is go to the lowest level based on a branch.  If you simply keep the lowest level as a reference, you don't have to branch.  Your examples are fine, but they're not trying to handle both HTTP and SSL in the same class, therefore you're going to have to innovate a little.\n\n\"It would be great if you can point the examples which can act on tcp_stream & ssl_stream.\"\nI'm not sure what you mean.  If it were me, I wouldn't be using tcp_stream at all, as your timer requirements are more stringent than tcp_stream allows.  I didn't really comment that, as it doesn't hurt anything, but there's lots of code showing how to use tcp socket correctly, as it's a core asio feature.  tcp_stream is new, and a little overkill for this use case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Thanks for data pointers Ed.\nDone."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above, this goes away."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "With latest change, It is used in one single place(doConenct()). All other instances, its removed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't need inline if it's declared in a class."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "removed function."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "extra parens"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "extra parens."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 84,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You forgot to add a state for ssl handshake.  It is distinct from connecting."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 123,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "ack, Will address."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 123,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "missing pointer check."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 204,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you're mixing between using the timer in tcp_stream and using your own timer, which is probably why you had issues below tracking the \"timer is running\" state.  You should really pick one and stick to it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Its uses the tcp_stream timer through out the code right? May be i might have mis understood your question. Can you please provide some more details."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you have a property called \"timer\" in this object that's an instance of steady_timer.  you use it for retries.  That means the timer is duplicated, and I suspect the reason why you're seeing some errors in places."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Actually this timer is in tcp_stream used for tcp request timeouts Which is fine. \n\nOther timer(\"timer\" in this class) is for external async_wait. I don't see a async_wait member function on tcp_stream."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No, my suggestion was to drop tcp_stream, and JUST use the timer class for managing timeouts.  This isn't a huge deal though.  If you want to use 2 timers, go right ahead."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 267,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't work for SSL.  The socket needs to be shut down properly, with an async_shutdown (which will also need a timer for if it fails)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 267,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I tried async_shutdown by going through boost example but saw some failures(crashes - Even boot examples also crashes)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 267,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Probably time to debug your code then."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 267,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "async_shutdown works fine. may be i might have made other mistakes in past.\nDone"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not implementing keepalive will not meet your performance targets for openssl.  While opening a TCP connection is relatively cheap, SSL is expensive.  Do you have a plan to implement socket reuse?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I agree, I am planning to implement the keep alive timeout to keep connection alive for ever instead of opening on requests.\nTo some extent, same opened connection is reused for by preserving the state but that is not full fledged solution though.\n\nI will address this as separate commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"for ever\"  not how keepalive works.  Read the RFC on how keepalive works, and implement it per the specification.\n\"To some extent, same opened connection is reused for by preserving the state but that is not full fledged solution though.\"\n\nI'm not following, you don't implement keepalive at all, so the server won't let you preserve it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I will implement keepalive as separate commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Great.  Please consider it a dependency before this commit goes on master, because as written this patch is very likely to consume all the bmc CPU resources."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 272,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This error will go away once you shutdown the stream properly."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 272,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the case of most servers, this is because you're shutting the stream down hard, not shutting it down properly.  While you will still need this check, you will need to use it less often if you shut the stream down correctly."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 274,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above, same comment.  SSL connections cannot be shut down this way."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This method doesn't retry properly on a DNS resolution failure properly, which in the case of failover servers, it should"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This is user configured setting, So i feel it may not matter what the failure is, We should keep retrying the it as per Configured RetryPolicy setting."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You didn't understand what I was saying. DNS resolution failures are a type of failure that should be retried.  Today you don't retry on resolution failure.  There is no setting that says \"Don't retry on resolution failure, but retry on server failure\""
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Good catch. I see what you are saying. There is async_resolve comment in existing code and its linked. I will take it as separate commit for same."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 358,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Check your error code."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 358,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "may e not needed. Either way(error or success), we need to proceed with below logic. But for logging purpose, i can add error."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this else does nothing considering line 361 is \"return\"\n\nRemove."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Ack, Will do."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a blocking io call, which is banned in bmcweb.  Please change to async_resolve;"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 420,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Actually boost example code as it crashing when async_resolver is used. In-fact i started with that only but didn't further digged why it crashed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That probably means that you have lifetime issues in your code.  Go ahead and debug them.  If you want to change the documented policy around using blocking calls in bmcweb, that's a much bigger discussion."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 420,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I will debug the issue with async_resolve and load fix as separate commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Initialize this in the constructor to avoid double initialization."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 421,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Ack, Will do."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 421,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -85
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 86
        },
        {
            "number": 9,
            "revision": "dd02e5d9f64c42c4d8bf19d968d93a9fa3e833c4",
            "parents": [
                "5a7e877e5fd7da96022d3959fbfec84bfa3d0f7f"
            ],
            "ref": "refs/changes/35/31735/9",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1596572241,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think this declaration was better as it was."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you need more than that to properly init an ssl context.  servers may have more than just TSL 1.2, and you need to take a strong opinion on what cipher suites you will allow.  Go back to to the drawing board.  I suspect the best thing would be to start by reading this document fully:\nhttps://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because sslConn holds a reference to conn, it needs to be declared after, otherwise you might get weird destruction issues."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pretty sure you want flat_static_buffer here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you've ignored my comment about unbounded body types in the response.  please fix."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This would be a lot more better as a boost::beast::http::fields.  Alternatively, req already is has that as a base class.  You could simply set it directly on that object, and just swap out the body for each request."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is the only place this parameter is used.  Could you instead remove the parameter and simply do it in the constructor?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this check required?  It seems like it's adding another level of complexity that might have bugs.  In theory you should never be connecting from multiple threads, no?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This is used for checking operational state of connection. Since events(sendEvents) can be called asynchronously, we need to maintain the operation state of current connection and queue the Event data if its busy(Also depending on state, we take some actions like perform connect or send event or close etc...)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, this can be passed by value."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "it seems odd that this isn't configurable in redfish, but oh well."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same with this check.  It seems like it's adding a secondary state machine that you don't need."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: ec can be passed by value."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Please, remove redundant new line signs from here and on line 324. Thanks in advance"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The way this is organized, this could drop messages with no warning.  I suspect this state doesn't need to be here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 154,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "BMCWEB_LOG_DEBUG already adds this for you."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 156,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You need to set some default headers on your request.  Content type comes to mind as the first one, but I'm sure there are others."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 164,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you used a boost::beast::http::fields class for this variable, you could do a direct copy instead of writing the loop by hand.  Also, that data structure is much better optimized."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 230,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no... it doesn't mean that?  If you never get a response from the server, you should retry the existing data package, not simply remove it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 230,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "I still see the failure. Added TODO for now."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs to be done after the async shutdown, not before.  This will reduce the occurrence of your stream_truncated error."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 292,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Delete code instead of commenting out?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 298,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not sure how you ever thought youd get an ssl error on a non ssl connection.  Are you sure you meant this?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "handle your error codes, even if it's just logging.  Keep in mind, you will need to handle the operation canceled case explicitly here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "There is no option for canceling the retry timer. once retry started means, It has to expire the timeout."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Then document that, and log the error code, don't ignore it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 445,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Still a blocking resolve call, and resolve call is still not retried."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 215,
                    "deletions": -91
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 216,
            "sizeDeletions": 92
        },
        {
            "number": 10,
            "revision": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
            "parents": [
                "016761affccbd9facc58ad2ce0d8a260b74b6938"
            ],
            "ref": "refs/changes/35/31735/10",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1596739751,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Currently in this code state check is being done randomly by any function.Can we enhance the connectionstateCheck function and let it call other sub functions, and theses sub function will do the required functionality and set the connection state and call the connectionStateCheck function again.\neg:\n\n  void connStateCheck()\n    {\n        switch (state)\n        {\n            case ConnState::connectInProgress:\n\n            case ConnState::sslHandshakeInProgress:\n            case ConnState::sendInProgress:\n            case ConnState::suspended:\n            {\n                  call function which starts the timer and once the timer expires then set the connection state\n                 break;\n            }\n            case ConnState::terminated:\n                // do nothing\n                break;\n            case ConnState::initialized:\n                 doResolve(); Sets the connection state to resolved \n                 break;\n\n            case ConnState::Resolved:\n                 retryCount = 0;\n                 doConnect() :Set the connection state to eithe connected or connect failed and call this function again..\n                 break;\n\n            case ConnState::closed:\n                break\n            case ConnState::connectFailed:\n            {\n                  retryCount++;\n                  checkRetryPolicy();\n                  doConnect();\n            }\n            case ConnState::sendFailed:\n            {\n                   rettryCount++;\n                   checkRetryPolicy();\n                   doSend();\n            }\n            case ConnState::recvFailed:\n            {\n                Start timer before retrying \n                retryCount ++;\n                checkRetryPolicy()  \n                doRecv()\n            }\n            case ConnState::connected:\n            case ConnState::idle:\n            {\n                if (sslConn)\n                {\t\n\t\t\tperformHandshake();\n\t\t\t\n\t\t}\n                else\n                {\n\t\t\tretryCount = 0;\n                        sendMessage();\n                }\n                break;\n            }\n            case HandShakeCompleted:\n            {\n                doSend();\n            }\n            case ConnSate:close\n            {\n                   doClose();\n            }\n            default:\n                break;\n        }"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  Pretty sure this is wrong?  Also, you might want to put it on line 159 so the user can override it if they want."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "+1"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This partial_message check is removed with latest. But actually this error comes, even client receives the events.  So no need to re attempt send. We need to pop the request queue and cleanup the connection and processed with next queue checking.\n\nAlso did you checked the http connection by making \"BMCWEB_INSECURE_ENABLE_HTTP_PUSH_STYLE_EVENTING\" to ON? If not please do."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Yes I used that flag for building my test patch.\nI agree with you. The events are received and then the subscriber sends this partial message. So i will re-add the code to ignore the partial_message error."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "TODO needs implemented before merge."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The checkQueue method (invoked from doCloseAndCheckQueue) is checking for the retry count and that should take care of resending the request in case of failures. Why this is a TODO here?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "line number 213 will ultimately invoke the retry policies"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The return code of the server cannot be ignored."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this needed?  Shouldnt' you just reset the parser?\n\nself->parser.reset()"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "i did not find a reset method on the boost::beast::http::response_parser"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ignore my comment about reset, that was on an older version of BEAST, but the point still remains, is this needed at all?  There should be no need to reset if you're destroying the connection."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "We will not destroy the connection"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you clarify?  I don't see any ownership of httpClient in the parser."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 232,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Removed the parser in the latest patch set. Please let me know if this approach is good."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Still needed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, Please correct me if i am wrong. I think, after we send an event and receive a response, we can close the connection (as per HTTP1.1)\nThe connection can be re-opened/re-established when there is a next event to be sent. There is no need to keep this connection alive."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For non-SSL, you're right, and you're right, per HTTP1.1, we could do connection per event, but that would cause the server on the other end to get DOS attacked if too many events come at once."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "We don't need to implement the keep alive for 2 reasons\n\n1) I was unable to find in the redfish spec that connection need to be keep alive for the push style eventing. however in the case of server sent events, connection need to be keep alive.\nThis code path is for the push style eventing.\n\n2) in redfish there is a concept of events in the event schema itself which is a aggregation of events at certain moment of time..\ninstead of sending multiple events, we can append the event in the events array and then send the event only once if there are too many events come at once.\n\nWe can avoid the DOS at the server end if we start the timer and aggregating the events and send the event once timer expires."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "1. You're right, it's not in the specification.  If you want to find a way to avoid DOS attacks and overloading the BMC/other server through another mechanism, feel free, but I don't see it implemented in this patchset.\n2. That would certainly help, but I don't think solves the problem.  SSL negotiation is very...very expensive on the BMC.  We should strive to do it as few times as possible.\n\n\"We can avoid the DOS at the server end if we start the timer and aggregating the events and send the event once timer expires.\"\nI think that would be a good thing to do as well, but I don't think solves the problem.  An aggregation timer means that the BMC has to store the events in memory, which causes the same problem, just that the BMC will run out of memory, not out of CPU cycles.\n\nAlso, it delays the receipt of the event.\n\n\nI'm surprised at the pushback here.  Keepalive is a relatively easy feature to implement here, and we already have examples of how to do it.  Am I missing something?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "There is no pushback :)\nAgree with the reasoning where the SSL connection establishment can possibly take up lot of CPU cycles. We can implement the keep_alive"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> I think that would be a good thing to do as well, but I don't think solves the problem.  An aggregation timer means that the BMC has to store the events in memory, which causes the same problem, just that the BMC will run out of memory, not out of CPU cycles.\n\nI thought,keeping events in memory is anyways requirement as per the redfish spec for SSE and now it fits here also.We can implement later.\n\nEd, I was mentioning because of in spec was not clear and we have other way to solve the problem which you listed above..\n\nI agree with you that making tcp connection and doing ssl handshake is expensive operation.."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In my mind, keepalive should just be a matter of setting the correct flag on the message, and writing a connection handler that can reset at the end.  It would be much easier than queuing, although I think we should do both."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done. The ssl handshake & connection establishment is not happening now for each event"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For SSL and eventservice, this is unacceptable.  Not only can it DOS the BMC, and can DOS the server on the other end."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, do we need to worry about the DOS at the server side here ?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, How it is DOS for BMC?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The easiest way I can explain would be to tell you to try it by subscribing to all sensors, and check the CPU usage on the BMC.   It will be spinning up 100 SSL connections per second, each of them expensive to build."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Makes sense."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 344,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "What is the difference here? In both the cases we are not doing anything.\n\n1) Suspend case: Once the connection reached into this state, from Send message() the control will return.\n   Hence no use, we can delete the subscription or start a timer so that we can retry later.\n\n2) Terminated case: Once the connection reached into this state,caller will keep pushing the data in the      queue and and checkqueue will keep poping up the data.We need to delete the subscription."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 344,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "1) When the subscriber sets SuspendRetries on his subscription, that means that he does not want to receive the events - but the connection needs to be retained. So we will return from the sendData() method without doing anything.\n\n2) Yes When the retry policy is \"TerminateAfterRetries\" ; we need to delete the subscription. This is already marked as TODO here! But when i analyzed the changes needed to do this, i saw that there is no infrastructure here to get the subscription id associated with the sslConn/conn. This needs more changes - which can go as a separate commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 344,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": ">1) When the subscriber sets SuspendRetries on his subscription, that means that he does not want to receive the events - but the connection needs to be retained. So we will return from the sendData() method without doing anything.\n\nWhy keep connection then? you just need to delete the subscription that is what I asked I don't see the difference in both cases."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 382,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "This also should go in connectionState check function.."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 388,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Don't we need to do this at connectionStateCheck function?\nCase:case ConnState::idle:\n     retryCount = 0;"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 440,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Adding todos doesn't get it done."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 440,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I checked implementing the async_resolve. It crashed with below error.\n\n terminate called after throwing an instance of 'boost::wrapexcept<boost::system::system_error>'\n   what():  thread: Operation not supported\n\nThe issue looked similar to https://github.com/boostorg/beast/issues/1599\n\nThe resolution for this issue was to upgrade the boost version. So i think we can keep this TODO for now in this commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 440,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You shouldn't be using the version that throws.\n\nThat bug is unrelated.  Please continue debugging.  Operation not supported usually means that you setthe resolver Protocol incorrectly\n\nNo, we cannot keep this as a TODO.  It needs done before merge."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "These headers are populated from the subscription data. What kind of validation are expected here ?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I removed this TODO , since i think its not needed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 229,
                    "deletions": -102
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 230,
            "sizeDeletions": 103
        },
        {
            "number": 11,
            "revision": "b7a25915dc8096b198ba16ee0b8edffbed997ad8",
            "parents": [
                "1eb779d10a6ac0f77ded4067b7f2b4514f1e2bce"
            ],
            "ref": "refs/changes/35/31735/11",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1600681154,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 227,
            "sizeDeletions": 99
        },
        {
            "number": 12,
            "revision": "b4d257a61b9cf0fe812f762cd02f5b9de156e3d8",
            "parents": [
                "1eb779d10a6ac0f77ded4067b7f2b4514f1e2bce"
            ],
            "ref": "refs/changes/35/31735/12",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1600862291,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "req inherits from boost::beast::http::fields.  I suspect this parameter can be dropped entirely, and you can just set your values on req."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if we do this initialization in the constructor, we can remove the useSsl member entirely."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is not doing anything.  You've applied a timeout to the conn object, not the resolve."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "removed"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Still needs done.  I suspect that now that the resolver is on line 58, this crash has been handled."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Sure Ed. I will continue debug on this"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I really dislike these state checks in the handlers.  They make me feel like this code can be called an any time.\n\nI would expect to see 1 state handler, at the beginning where an event gets added to the queue, and that's it, other control flow should be handled by the callers."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "+1\nTo get these states removed, we may need some re-arrangements in the code in this file. Its currently driven by the checkQueue and the connStateCheck APIs. Working on this."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Did anyone set the state to sslHandshakeInProgress?  This seems like it will fail right away."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The state sslHandshakeInProgress will be set inside the method performHandshake"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think this check is uneeded."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "This may go away with the rework on the states"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems incorrect.  I would assume application/json is correct, but can you please check with the redfish spec."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 179,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See comment on previous patchset.  I suspect we don't need 2 copies of the headers here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 179,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "removed"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 180,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  Isn't 11 already an int?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 180,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "removed"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "partial_message should be treated as a failure as well in this case, it means that we never got a full reply."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're setting the response keepalive based on your request?  Shouldn't this already be set?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm reading this again, and I'm quite confused.  keep_alive needs set on the request before we do the write, not in between the write and the read.\n\nIf the server doesn't support keepalive, we need to close here, not force enable it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "line number 183 does set the keep alive to true in the request."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's what I was pointing out.  Why is this line here?  It seems to be forcing keepalive on even if the server doesn't want it?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 242,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, I made some changes in the Patch Set #13."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be close() right?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 289,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 312,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "unneccesary for functions returning void."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 312,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "removed"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 377,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Don't ignore error codes."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 377,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 471,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This can call req[key] = value;\n\nAlso, this needs some kind of security to it.  Not all strings are valid keys or headers."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 471,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "line": 389,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should we just pass the proto string in instead of converting it to a bool here?"
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "line": 389,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 233,
                    "deletions": -106
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 234,
            "sizeDeletions": 107
        },
        {
            "number": 13,
            "revision": "556a01fb9542e844d6f5251b11cb8608a88efb7a",
            "parents": [
                "1eb779d10a6ac0f77ded4067b7f2b4514f1e2bce"
            ],
            "ref": "refs/changes/35/31735/13",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1600943475,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "is it connection state? Can you describe more here, How we will get this connection state?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "This is removed in the next patchset - PS14"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 207,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Did you checked this case? When control lands here, We see stale connection. If you don't attempt to close and re-open connection here, it will fail and fallback to retry."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 207,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done.\nIt retries sending and fails. I will put doCloseAndCheckQueue here for doing the cleanup. This will again try opening the connection, which can successfully send the event to the subscriber in the retry attempt."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Is this supposed to be sslConn?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "sslConn is only the SSL layer, and there's no such thing as an SSL timeout, so you have to reach a layer deeper and set the timeout there."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "Maybe it is worth a descriptive comment guiding those who don't recognize that fact?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure if the commiter wants to add a comment, it sounds like you would appreciate it.  Also, this call is duplicated between the two branches, so it can be moved to line 248, and deduplicated with line 283."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "why isn't this still \"const\"?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It could be.  Now that it's a value, it's not a big deal either way."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This condition is wrong. When control lands here, It leads to Terminate the checkQueue loop. Only send event will restart that loop. So we will miss sending events. \n\nNo point in check ec for timer case here which is not the actual really business logic. If we want, we need to retrigger timer alone not interfering with actual business logic. So IMO, Keep original code same from patchset 10."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The coding standard says that error codes need checked.  The logic might be wrong, but at a minimum we need a log message here, and comment about why we should continue even if the timer fails.\n\nI suspect this needs a special case for operation_aborted, which might be expected in this case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 403,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This leaves the unexpected results.\n\nClose connection state is handled differently in this case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 403,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "No need to perform reconnect if wait fails. This condition is wrong."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "removed this state"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 431,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Any specific reason for changing this from patchset 10?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 431,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Passing the uriProto removes the need of the member useSsl"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 471,
                    "reviewer": {
                        "name": "Johnathan Mantey",
                        "email": "johnathanx.mantey@intel.com",
                        "username": "Howitzer105mm"
                    },
                    "message": "const_expr?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 471,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "eh, this is documented well enough for my liking, but up to the submitter.\n\nTechnically version() takes an unsigned type, so it really should be 11U, but eh, this compiles without warnings."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 474,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Formatting the request here leaves the race condition.  This setHeaders() function can called asynchronously. If this gets called when performing the sendMessage(), That leaves the unexpected results and may lead to crash.\n\nSo code which was done in patchset 10 should be fine just addressing(Change placement of content_type setting) ED comments, should be good."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 474,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect we don't want to be doing this work every time, we should be building most of the request int he constructor, then calling req.base().clear(), req.body().clear(), req.body().shrink_to_fit() to clear the headers and reset the request object."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 474,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 247,
                    "deletions": -113
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 248,
            "sizeDeletions": 114
        },
        {
            "number": 14,
            "revision": "f7e52bc082d483293deb18f8b32d1febef70dfe3",
            "parents": [
                "3e4c7797033926a0502cdd4491421c8b16684aef"
            ],
            "ref": "refs/changes/35/31735/14",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1601378185,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 266,
                    "deletions": -111
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 267,
            "sizeDeletions": 112
        },
        {
            "number": 15,
            "revision": "fdb7c40b19379d8060574e93d0557dd06cb8b813",
            "parents": [
                "3e4c7797033926a0502cdd4491421c8b16684aef"
            ],
            "ref": "refs/changes/35/31735/15",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1601983262,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Include more specific headers here.  In this case, I think you need ssl_stream."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not big enough.  I'd say lets start with 8k, and adjust as needed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is not a sufficient initialization of the SSL context.  Notably, supported cipher suites seems missing."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, Didn't all the ciphers under Tlsv1.2 is secure? \nWith this context SSL layer will only get the TLSv.1.2 cipher and I hope all are secure.\n\nECDHE-ECDSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESGCM(256) Mac=AEAD\nECDHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AESGCM(256) Mac=AEAD\nECDHE-ECDSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=CHACHA20/POLY1305(256) Mac=AEAD\nECDHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH     Au=RSA  Enc=CHACHA20/POLY1305(256) Mac=AEAD\nECDHE-ECDSA-AES256-CCM  TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESCCM(256) Mac=AEAD\nECDHE-ECDSA-AES128-GCM-SHA256 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESGCM(128) Mac=AEAD\nECDHE-RSA-AES128-GCM-SHA256 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AESGCM(128) Mac=AEAD\nECDHE-ECDSA-AES128-CCM  TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESCCM(128) Mac=AEAD\nECDHE-ECDSA-AES128-SHA256 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AES(128)  Mac=SHA256\nECDHE-RSA-AES128-SHA256 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AES(128)  Mac=SHA256\nAES256-GCM-SHA384       TLSv1.2 Kx=RSA      Au=RSA  Enc=AESGCM(256) Mac=AEAD\nAES256-CCM              TLSv1.2 Kx=RSA      Au=RSA  Enc=AESCCM(256) Mac=AEAD\nAES128-GCM-SHA256       TLSv1.2 Kx=RSA      Au=RSA  Enc=AESGCM(128) Mac=AEAD\nAES128-CCM              TLSv1.2 Kx=RSA      Au=RSA  Enc=AESCCM(128) Mac=AEAD\nAES256-SHA256           TLSv1.2 Kx=RSA      Au=RSA  Enc=AES(256)  Mac=SHA256\nAES128-SHA256           TLSv1.2 Kx=RSA      Au=RSA  Enc=AES(128)  Mac=SHA256\nDHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=DH       Au=RSA  Enc=AESGCM(256) Mac=AEAD\nDHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=DH       Au=RSA  Enc=CHACHA20/POLY1305(256) Mac=AEAD\nDHE-RSA-AES256-CCM      TLSv1.2 Kx=DH       Au=RSA  Enc=AESCCM(256) Mac=AEAD\nDHE-RSA-AES128-GCM-SHA256 TLSv1.2 Kx=DH       Au=RSA  Enc=AESGCM(128) Mac=AEAD\nDHE-RSA-AES128-CCM      TLSv1.2 Kx=DH       Au=RSA  Enc=AESCCM(128) Mac=AEAD\nDHE-RSA-AES256-SHA256   TLSv1.2 Kx=DH       Au=RSA  Enc=AES(256)  Mac=SHA256\nDHE-RSA-AES128-SHA256   TLSv1.2 Kx=DH       Au=RSA  Enc=AES(128)  Mac=SHA256\nDHE-RSA-AES256-SHA      SSLv3 Kx=DH       Au=RSA  Enc=AES(256)  Mac=SHA1\nDHE-RSA-AES128-SHA      SSLv3 Kx=DH       Au=RSA  Enc=AES(128)  Mac=SHA1\nPSK-AES256-GCM-SHA384   TLSv1.2 Kx=PSK      Au=PSK  Enc=AESGCM(256) Mac=AEAD\nPSK-CHACHA20-POLY1305   TLSv1.2 Kx=PSK      Au=PSK  Enc=CHACHA20/POLY1305(256) Mac=AEAD\nPSK-AES256-CCM          TLSv1.2 Kx=PSK      Au=PSK  Enc=AESCCM(256) Mac=AEAD\nPSK-AES128-GCM-SHA256   TLSv1.2 Kx=PSK      Au=PSK  Enc=AESGCM(128) Mac=AEAD\nPSK-AES128-CCM          TLSv1.2 Kx=PSK      Au=PSK  Enc=AESCCM(128) Mac=AEAD\nDHE-PSK-AES256-GCM-SHA384 TLSv1.2 Kx=DHEPSK   Au=PSK  Enc=AESGCM(256) Mac=AEAD\nDHE-PSK-CHACHA20-POLY1305 TLSv1.2 Kx=DHEPSK   Au=PSK  Enc=CHACHA20/POLY1305(256) Mac=AEAD\nDHE-PSK-AES256-CCM      TLSv1.2 Kx=DHEPSK   Au=PSK  Enc=AESCCM(256) Mac=AEAD\nDHE-PSK-AES128-GCM-SHA256 TLSv1.2 Kx=DHEPSK   Au=PSK  Enc=AESGCM(128) Mac=AEAD\nDHE-PSK-AES128-CCM      TLSv1.2 Kx=DHEPSK   Au=PSK  Enc=AESCCM(128) Mac=AEAD"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that enables _every_ tls 1.2 cipher, which if we're only enabling 1.2, might be ok, but we should be explicit about it so the defaults don't break us in the future.\n\nAlso, should we support TLS 1.3?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": ">that enables _every_ tls 1.2 cipher, which if we're only enabling 1.2, might be ok, but we should be explicit about it so the defaults don't break us in the future.\n\nToday the default TLSv1.2 ciphers are secure. I didn't get, how we can gurantee by having an explict here.\nWhatsoever today which is nonvulnerable may become vulenerable so we can't be future proof. \n\nTo accomaodate all the secure ciphers(tlsv1.2, tlsv1.3), tls_client can be used which will allow all the tls ciphers(Vulnerable + non vulnerable) and then we can explicitly remove tlsv1.1,tlsv1, sslv3 etc"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> >that enables _every_ tls 1.2 cipher, which if we're only enabling 1.2, might be ok, but we should be explicit about it so the defaults don't break us in the future.\n> \n> Today the default TLSv1.2 ciphers are secure. I didn't get, how we can gurantee by having an explict here.\n> Whatsoever today which is nonvulnerable may become vulenerable so we can't be future proof. \n\nI'm not asking to be future proof.  I'm asking to have an explicit list;  If all the ciphers are secure, how do we know that?  What authority to we base that on?  When ciphers are found to be insecure, what list do we change?  If you take a look at the other place where we have ciphers, we're very explicit about what ciphers we support, which makes it easier to change.  I'd like to see something similar here, or at minimum pointing to the openssl document that says what ciphers we support, so I can point to it when the next person asks.\n\n> \n> To accomaodate all the secure ciphers(tlsv1.2, tlsv1.3), tls_client can be used which will allow all the tls ciphers(Vulnerable + non vulnerable) and then we can explicitly remove tlsv1.1,tlsv1, sslv3 etc\n\nI think that works?  It's been so long since I've written anything that approximates this, that I'm not sure how it works anymore."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not part of this commit, but we should use boost::circular_buffer here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs a timer on it in case the resolution fails to happen quickly."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Have you tried using the overload of this function that takes protocol as well to pin it on TCP/IPV4?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "use the std::string_view overloads for this, not the c_str() overloads."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "working on this"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why would we be ok with a partial message error?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Do we need to add a timer here and wait for more data as the other end has sent the partial data?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ratan, Since we are discarding the response anyway, i dont think we should wait for the complete response from the destination. We are going to check the keep-alive flag from the response and will keep the connection alive to receive more data if the event destination needs to send. The async_read should be able to handle that."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ed, If there is any error; we go ahead and retry sending the event again. If its a partial_message; that means that the destination has received the req - which is nothing but the event. So there is no point in retrying sending the same event again."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "With respect, that's not how that works.  \"partial message\" means the payload was cut off, and we don't know what it is.  It could've been 4XX or 5XX, at which point, we'd have to send again.\n\nThe ID in the message is supposed to make the message idempotent, so it should be fine to send twice.  The receiver can simply ignore the second one."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Don't use this macro for unused variables.  Look at the conventions in other places."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I am not understanding what conventions you are referring to. When i searched for the ways boost ignores the unused bytes, i saw this boost::ignore_unused being used."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't a boost project.....  Go look around in bmcweb.  Generally we just remove the variable from the method prototype."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I believe redfish requires that endpoints be idempotent, so this isn't quite true.  Can you verify and add the relevant section of the spec here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I did not see any reference to this in the spec. But since we are ignoring and discarding the response data, we should not care if its partial or complete. If there is more response data coming in, bmcweb can still receive it, since we do not close the connection."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I did not see any reference to this in the spec. But since we are ignoring and discarding the response data, we should not care if its partial or complete.\n\nThis is also incorrect, which I pointed out on previous patchsets.  You can't ignore the error code, just as you can't ignore error codes when calling methods within the program.\n\n> If there is more response data coming in, bmcweb can still receive it, since we do not close the connection.\nif we got partial_message, it means the connection closed while we were sending or receiving, and the HTTP connection can be thrown away, and recreated."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If this is expected this needs to be LOG_INFO, not LOG_ERROR."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does this need to be conn.socket().shutdown?  Can this be deduplicated with the below?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done. Moved it out of if-else\n\nFor ssl it is async_shutdown and for non-ssl its conn.socket().shutdown"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "async_shutdown shuts down ssl on the stream.  conn.close() shuts down tcp on the stream.  I believe ssl requires both, although I suspect you're getting close() called automatically when you recreate the socket for the retry."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 305,
                    "deletions": -185
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 186
        },
        {
            "number": 16,
            "revision": "aa4c1d8fd8dedcd67d4f1209c7627daf27bec881",
            "parents": [
                "2deeab547e4e4defc7da9012caa6b44f932e7607"
            ],
            "ref": "refs/changes/35/31735/16",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1602268014,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 304,
                    "deletions": -177
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 178
        },
        {
            "number": 17,
            "revision": "7b6e5cc1393e71774fa3f0422c76a8198693e379",
            "parents": [
                "b0ad4de61ddd7872894b6f741156104f0a0c0ee6"
            ],
            "ref": "refs/changes/35/31735/17",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1602483577,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 307,
                    "deletions": -189
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 308,
            "sizeDeletions": 190
        },
        {
            "number": 18,
            "revision": "010b847dc95b1fa5c262098702193c711b8a7fc9",
            "parents": [
                "055806b30dd7621b5018247d6fb4ac370bbaa527"
            ],
            "ref": "refs/changes/35/31735/18",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1604582793,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "can we use system-resolved here?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Working on it"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Do we need to put a empty check here? As per boost documentation we require the check.\nhttps://www.boost.org/doc/libs/1_55_0/doc/html/boost/circular_buffe_idp21015912.html"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 213,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 305,
                    "deletions": -189
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 190
        },
        {
            "number": 19,
            "revision": "aac72090a8ee8fbdec7aca9c24bc63341ea5b8f6",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/35/31735/19",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1612168866,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 308,
                    "deletions": -189
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 309,
            "sizeDeletions": 190
        },
        {
            "number": 20,
            "revision": "edc55b1550025cec43d1d29b8b0f90b359028a81",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/35/31735/20",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1612791241,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "is it single IP or multiple?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The resolved response is a(iiay)st\nThe resolvedIp will contain the array of iiay. \nThere can be multiple ip addresses in the response. Thus there is a vector of this struct"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "You could have used resolvedIP defined in line no 40."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "I didn't get this logic, How the ipaddress at line no 103 looks like?\nCan you add some example?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The dbus response will be something like below\n\n   array [\n      struct {\n         int32 2\n         int32 2\n         array of bytes [\n            <byte1> <byte2> <byte3> <byte4>\n         ]\n      }\n   ]\n   string \"<hostname>\"\n   uint64 1\n\nI will need to parse the array of bytes and add the 'dots' to form the IP address string"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "std::from_chars??"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Thanks for resolving this asynResolve issue. \n\nCan you load this change as new patch on top of existing one. So that makes easy for review and also keep isolation if some OEM's don't want to use this dbus method for resolving. Also makes easy if boost library fixes the original issue with async_resolve()."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "@Appu - the comment is on this commit and many discussions have happened in this commit. I believe, we have to address all comments on the same commit. \nEd, please let us know if this can be another commit on top of this?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> @Appu - the comment is on this commit and many discussions have happened in this commit. I believe, we have to address all comments on the same commit. \n> Ed, please let us know if this can be another commit on top of this?\n\n\"if some OEM's don't want to use this dbus method for resolving\"\nThis should be kept as a non-openbmc option flag.  All OpenBMC systems I would expect to use resolved unless there's a good reason not to.\n\n> Ed, please let us know if this can be another commit on top of this?\n\nI'd like to see the async resolve in a separate patchset prior to adding SSL.  They are orthogonal."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done. Moved the async_resolve to new commit https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40702. I will move this commit on top of 40702\nBut what is the way to get the async_resolve done for those OEMs who do not support the resolved?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ideally.... I'd like to see patchsets for\n\n1. Async resolve\n2. Keepalive\n3. Correct retry handling (tear down the full connection and start over).\n4. SSL\n\nIn that order.  Depending on how it looks, 2 and 3 might get combined.\n\nIt looks like you've done some of that already which is great.\n\nWhat is the use case for not wanting to use resolved?  I'm not particularly inclined to support the old way unless there's a good technical reason to do it.  The only reason I can think of is if you didn't have resolved, which would mean you're not running systemd.  We already have deep systemd dependencies;  The code won't even link without it, so I'm not quite following why we'd want to add the option to not use it."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "These are the commits\n1. Async resolve - https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40702\n2. Keepalive - https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40731\n3. Correct retry handling (tear down the full connection and start over). - https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40731\n4. SSL - https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31735"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Excellent.  Thank you."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "If we have got the ssl(asio.ssl) error here, we need to restart the session from the scratch..\n=> Connect\n=> Handhake\n\nRight now it is keep retrying sending the message which is not going to help here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "It will not call sendMessage() straight away.\n\nThe state ConnState::retry triggers checkQueueAndRetry(). This performs the retries as per the retry policies set by the subscriber. \nIn checkQueueAndRetry() method:\n 1. Existing tcp connection will be closed\n 2. retryCount in incremented to validate it against the user settings\n 3. The state will be set to ConnState::resolved\n 4. This will trigger the fresh connect & handshake\n\nSo i believe, current changes do as you have suggested"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "When there send (or recv) error, retry loop will get triggers and does  gracefulshutdown previous connection -> connect -> handshake and then attempt sendMessage. So lgtm."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "No, that is not going to work at all..You need to re instantiate of the ssl stream.I explicitly said that if there is an ssl error:\n\nAfetr an ssl error even if you are creating the new tcp connection and doing a fresh handshake,It will get you an ssl error again and finally retry limit gets over so to fix this, you have to create a new SSL stream object which is not happening on this commit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Re Appu,\nIf you get a recv or send error, there's no need for a graceful shutdown, the connection is already dead, we can just completely close it.\n\n+1 to what Ratan is saying.  The entire connection needs tore down and started over including dns resolution.  We can't just restart from where we left off.  This probably means that the http client connection needs separated from the http client class, so we can construct a new one.  This would probably need to be done anyway."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 200,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Agree. Working on the same"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "There are two issues:\n\n1/ You have got two events at the same time so EventManager calls the send Message twice\n\nwhich internally calls the handle connection state twice..\n\nNow say during handling of first event you do  async_write and now you get the control back and handle connection state would be called again and this time it again tries to send the same event which would cause the same event to be sent twice.\n\nAs it always picks the message from top and you haven't popped up the message from the queue during send.\n\n\n2/ If you have sent the event successfully but haven't received the HTTP response then how you are going to handle this case."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The message was popped out of the queue once we receive the response from the subscriber. This was done to enable the retry mechanism, in case if the message was sent successfully - but response is not received.\n\nI agree with you that the BMC should not worry about receiving the response from the subscriber. It should only see if the send is successful. \n\nI think we can pop the message out of the queue when the sendMessage() is complete. If the recvMessage() returns any error, we should re-initialize the connection according to the relevant recvMessage error types. There will be no re-sending of the message for which the recvMessage() failed.\n\n@Ed, @Gunnar - Please share your views here."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 202,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "My initial patch has protect against two request comes at same time. If one of the operation is in progress(connect/send/recv), corresponding state machine is updated to inProgress and add new message to queue for getting it turn. But this latest code has some issue with state machine as Ratan pointed out. I did observed the issue and planning to fix work on it this week."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Thanks Appu, The later patch sets were pushed to address the comments around this area. \nThe issues mentioned need to be addressed - since we have seen them in our test cycles. We have the changes ready to address these issues, and i will push them here. Please have a look at them and share your comments."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I wonder if we need a structure with a set of queues per host so we can rely on keepalive and just feed information.\n\nThinking out loud a bit."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "You need to handle the specific error: If it is ssl error then you can not use the same ssl stream, you need to create a new stream..\n\nDo you need to create new state like \"init\" which does creating of new ssl stream if there is ssl error? and set the state to \"Initialized\" so that it will go and do the resolve business.."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "The state ConnState::retry does closes the existing socket and tries creating a fresh one"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Agree with Sunitha."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> The state ConnState::retry does closes the existing socket and tries creating a fresh one\n\nYou need to think for the SSL connection, Not only the TCP connection...\n\n=> If you get an ssl error after send/Recv then creating a new connection and performing handshke is not sufficient, You need to create a new ssl stream object.\n\nGuys, please test this scenario and then let me know is it working?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Reference Link:\nhttps://stackoverflow.com/questions/49122521/cant-implement-boostasiosslstreamboostasioiptcpsocket-reconnect"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Agree. Working on the same"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 244,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "It's good you added this check as it may crash the bmcweb if request queue is empty."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 244,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Ack"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "why to call the conn.close for both the cases? it is needed for the unsecure case but for secure case can we call sslConn.next_layer.close()?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Agree with Ratan. This seems to be reverted from old patch. Need to be corrected."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 339,
                    "deletions": -190
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 340,
            "sizeDeletions": 191
        },
        {
            "number": 21,
            "revision": "447e0e72955d849528b60bba39775909abbe0e43",
            "parents": [
                "ea13398572fe72ac77bba9662f2f7100ee17f7ae"
            ],
            "ref": "refs/changes/35/31735/21",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1613728858,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 195,
                    "deletions": -88
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 196,
            "sizeDeletions": 89
        },
        {
            "number": 22,
            "revision": "dd2c8f26a65c6601f7d0a961578ac1b85a113577",
            "parents": [
                "ea13398572fe72ac77bba9662f2f7100ee17f7ae"
            ],
            "ref": "refs/changes/35/31735/22",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1613729080,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 196,
                    "deletions": -88
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 197,
            "sizeDeletions": 89
        },
        {
            "number": 23,
            "revision": "6b2ddcdc2f1e18e6024464dc8682830f5ece61f7",
            "parents": [
                "74d13fe802a6c0187b2672c8bcb0e6d3683a5e7f"
            ],
            "ref": "refs/changes/35/31735/23",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1613995029,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -96
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 97
        },
        {
            "number": 24,
            "revision": "c9c3664f0566631bb13cd2702f2d04d6d60c4afb",
            "parents": [
                "f924c7f803805f111fa72ce0aca63f949c0b261a"
            ],
            "ref": "refs/changes/35/31735/24",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614182525,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 202,
                    "deletions": -106
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 203,
            "sizeDeletions": 107
        },
        {
            "number": 25,
            "revision": "dbd9d6b25422466c003085bc217fde24d6b00ccd",
            "parents": [
                "f924c7f803805f111fa72ce0aca63f949c0b261a"
            ],
            "ref": "refs/changes/35/31735/25",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614183446,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 198,
                    "deletions": -107
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 108
        },
        {
            "number": 26,
            "revision": "d4ca4bd18ca02cfbcab78bcb1c24197151f90ce8",
            "parents": [
                "fd57187d5abdd772927883ee10925d71e9034a36"
            ],
            "ref": "refs/changes/35/31735/26",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1614250370,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 201,
                    "deletions": -108
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 202,
            "sizeDeletions": 109
        },
        {
            "number": 27,
            "revision": "9e950684742cda14dd6040e3cbbb77616318aadc",
            "parents": [
                "e82c7351542cab9f8285e43f0ff12bfa4f01ad69"
            ],
            "ref": "refs/changes/35/31735/27",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614325708,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 193,
                    "deletions": -102
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 194,
            "sizeDeletions": 103
        },
        {
            "number": 28,
            "revision": "bed4035f78014cf81eed6a36b9ffe52ea2d57ae0",
            "parents": [
                "7f09aae0addfbbb686ce5657207d5bc73f779483"
            ],
            "ref": "refs/changes/35/31735/28",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614615411,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 193,
                    "deletions": -102
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 194,
            "sizeDeletions": 103
        },
        {
            "number": 29,
            "revision": "1e77f22ecb6af8277b48fec355931526318d3600",
            "parents": [
                "45887e9518170197eaa48f0fdac67701dcb07d67"
            ],
            "ref": "refs/changes/35/31735/29",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614672347,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 193,
                    "deletions": -103
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 194,
            "sizeDeletions": 104
        },
        {
            "number": 30,
            "revision": "1c9a86788957854f41366319ef3225749fb15e03",
            "parents": [
                "23b5c755243dbf073b80c8dde64ce5faf18686e0"
            ],
            "ref": "refs/changes/35/31735/30",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614681547,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -99
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 100
        },
        {
            "number": 31,
            "revision": "9d86eadd6aedcd5ab615320e9b4d863be8698beb",
            "parents": [
                "23b5c755243dbf073b80c8dde64ce5faf18686e0"
            ],
            "ref": "refs/changes/35/31735/31",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614683001,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 194,
                    "deletions": -99
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 195,
            "sizeDeletions": 100
        },
        {
            "number": 32,
            "revision": "e67db7e3de01318857c31a5b3090c99b1e00b7f7",
            "parents": [
                "b561d67732b39727db6597ef5ff81714930d72ad"
            ],
            "ref": "refs/changes/35/31735/32",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1614797870,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 33,
            "revision": "b49c80448a7ead85b1f30ca4916db521ddfa6b9b",
            "parents": [
                "2ce2a732e24d4754950b0fc93eb32a268dda6179"
            ],
            "ref": "refs/changes/35/31735/33",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614854287,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 34,
            "revision": "c0462c8d3d38746933aacf4a2d6953afdafed36c",
            "parents": [
                "ec2cc8e2ec6ef2b42ff51a6916f989d9c7ef9acf"
            ],
            "ref": "refs/changes/35/31735/34",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614856798,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 35,
            "revision": "694e2df585f999db23e5abc79b02b33506721134",
            "parents": [
                "28d528a425030beba46fc41ca088a79812bca256"
            ],
            "ref": "refs/changes/35/31735/35",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614933230,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 36,
            "revision": "ac433337811acde46d5e74517e02912ff36e3c22",
            "parents": [
                "8b7c9633bb7226893c64b27f6c4cb3027236f652"
            ],
            "ref": "refs/changes/35/31735/36",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1614936818,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 37,
            "revision": "50e548eb0a0e66bf0a0fc7174518adb7849bca46",
            "parents": [
                "303ae23d5d3762859114a363cf84e7782d6e03d5"
            ],
            "ref": "refs/changes/35/31735/37",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1615182593,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -98
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 192,
            "sizeDeletions": 99
        },
        {
            "number": 38,
            "revision": "9df0592f5fd1fda54a530eb2a0f11446dcec153c",
            "parents": [
                "eacb42392f18075d5daf8ec655c4fc8c845d4792"
            ],
            "ref": "refs/changes/35/31735/38",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1616178162,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": -85
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 179,
            "sizeDeletions": 86
        },
        {
            "number": 39,
            "revision": "5f19e5c8ebc5cb0ce331e4ef841526995b6bdb2e",
            "parents": [
                "3d6c3b3e91c04ff8f10bff49bcf2a7d7206c53df"
            ],
            "ref": "refs/changes/35/31735/39",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1619953096,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "One sentence is rarely enough detail for a commit message.\n\nAlso, please don't wrap your lines by hand.  Use 50/72"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please see the other thread.  SubmitTestEvent doesn't match the Redfish spec and needs fixed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, this sounds like a bug.  Without a common root certificate, this should've failed.\n\nPlease add bad certificate testing to your test procedures."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There is more that needs to be done than this to construct a secure SSL context.  Cipher suites is one obvious thing that was missed, but SNI hostname verification also seems to have been missed."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You also have forgotten to set ctx.set_verify_mode(ssl::verify_server);"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "handshake timeouts seem to have been forgotten here.\n\nconn.expires_after doesn't work in this context."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 180,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "not this patchset, but size_t can be passed by value."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 224,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just remove the variable like we don in other places.  bmcweb doesn't use boost::ignore_unused."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Still wrong (as was mentioned on your other patchsets)."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 269,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "????  Why are we adding a timer to close?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 308,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "My understanding is that this isn't needed.  You can just call close."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please deduplicate this with the block on 294."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "P Dheeraj Srujan Kumar",
                        "email": "p.dheeraj.srujan.kumar@intel.com",
                        "username": "dheerajpdsk"
                    },
                    "message": "I guess the block at 294 is inside callback of async_shutdown(). So, it wouldn't be possible to dedup the highlighted block."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 324,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You can make them both a method and call the method from both places."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 463,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does it make more sense to have this as an enum class?  That makes it a lot less likely for this client to be called incorrectly."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 179,
                    "deletions": -86
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 87
        },
        {
            "number": 40,
            "revision": "4df4a36d6d2cc11c51cc9d53cd441178cc97e39b",
            "parents": [
                "f74393a9bca899e353be3d0e2dc5c224539fe432"
            ],
            "ref": "refs/changes/35/31735/40",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1624351611,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 179,
                    "deletions": -86
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 87
        },
        {
            "number": 41,
            "revision": "fbac172ef17b17733931e21017db4801a38129b8",
            "parents": [
                "a64b4f9ea4318f6d9e6089a8c1a4fd49e3d89d5c"
            ],
            "ref": "refs/changes/35/31735/41",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1625267038,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 201,
                    "deletions": -109
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 202,
            "sizeDeletions": 110
        },
        {
            "number": 42,
            "revision": "beac23ad252aa63415caf6f74e164e71864ff8fd",
            "parents": [
                "862f1bbc5ca2fc35dced97847516d96767b60814"
            ],
            "ref": "refs/changes/35/31735/42",
            "uploader": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "createdOn": 1627505851,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 206,
                    "deletions": -114
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 207,
            "sizeDeletions": 115
        },
        {
            "number": 43,
            "revision": "b027be0420f9eb1cd06ab0d4ccd67985e4f0fc99",
            "parents": [
                "7fa9e89cce199320e76c6f2878a3ac26a5828404"
            ],
            "ref": "refs/changes/35/31735/43",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1628581779,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 206,
                    "deletions": -114
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 207,
            "sizeDeletions": 115
        },
        {
            "number": 44,
            "revision": "ae1a86b36883f066fc8622baf548954af607096d",
            "parents": [
                "e6f5b059bda3456487cfd619883e8d6e9efe868c"
            ],
            "ref": "refs/changes/35/31735/44",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1628582821,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 206,
                    "deletions": -114
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 207,
            "sizeDeletions": 115
        },
        {
            "number": 45,
            "revision": "3fa98db0340c2618bf10eb44d8057825dc4afc0b",
            "parents": [
                "eb1908b9cf27ecea21b0f7b199cde7e7388a4b77"
            ],
            "ref": "refs/changes/35/31735/45",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1628592428,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 206,
                    "deletions": -111
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 207,
            "sizeDeletions": 112
        }
    ]
}