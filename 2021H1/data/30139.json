{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Ida66f8ffcf00003655edcb0fb0112202797b8e1a",
    "number": 30139,
    "subject": "MCTP D-Bus interface definition.",
    "owner": {
        "name": "Mariusz Kowalski",
        "email": "mariusz.kowalski@intel.com",
        "username": "maniek205"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/30139",
    "commitMessage": "MCTP D-Bus interface definition.\n\nD-Bus interface definitions, needed for MCTP support\n\nSigned-off-by: Mariusz Kowalski <mariusz.kowalski@intel.com>\nSigned-off-by: Karol Wachowski <karol.wachowski@intel.com>\nSigned-off-by: Richard Marian Thomaiyar <richard.marian.thomaiyar@linux.intel.com>\nChange-Id: Ida66f8ffcf00003655edcb0fb0112202797b8e1a\n",
    "createdOn": 1583760130,
    "lastUpdated": 1621245643,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1583760130,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1583760153,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1583821088,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1583827147,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1583838729,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1583847068,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1583847098,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1583847110,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/45353/"
        },
        {
            "timestamp": 1583847153,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/45353/ : FAILURE"
        },
        {
            "timestamp": 1583847165,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1583848489,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Uploaded patch set 3: New patch set was added with same tree, parent, and commit message as Patch Set 2."
        },
        {
            "timestamp": 1583848514,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3:\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1583848525,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: -Verified\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/45356/"
        },
        {
            "timestamp": 1583848576,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/45356/ : FAILURE"
        },
        {
            "timestamp": 1583848760,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1583848783,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1583848795,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/45357/"
        },
        {
            "timestamp": 1583848848,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/45357/ : FAILURE"
        },
        {
            "timestamp": 1583851446,
            "reviewer": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1583851472,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1583851485,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/45360/"
        },
        {
            "timestamp": 1583851606,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/45360/ : SUCCESS"
        },
        {
            "timestamp": 1583856094,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1583859782,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1583923203,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1584919580,
            "reviewer": {
                "name": "Iwona Winiarska",
                "email": "iwona.winiarska@intel.com",
                "username": "iklm"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1584934305,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1584991855,
            "reviewer": {
                "name": "Iwona Winiarska",
                "email": "iwona.winiarska@intel.com",
                "username": "iklm"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585055970,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585119428,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 5: Code-Review-1\n\n(7 comments)\n\nI haven't studied the interface definitions, just some comments on the README for the moment. I think we might need to consider how networks are represented in a bit more depth."
        },
        {
            "timestamp": 1585130185,
            "reviewer": {
                "name": "Piotr Matuszczak",
                "email": "piotr.matuszczak@intel.com",
                "username": "pmatuszc"
            },
            "message": "Patch Set 5:\n\n(2 comments)\n\nHi, I've added some comments. Have a nice day :)"
        },
        {
            "timestamp": 1585132015,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585304113,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(8 comments)"
        },
        {
            "timestamp": 1585310785,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585316902,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585530858,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1585550843,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1585562464,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1585562487,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1585562498,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/46538/"
        },
        {
            "timestamp": 1585562673,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1585562711,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/46538/ : FAILURE"
        },
        {
            "timestamp": 1585582713,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1585582739,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1585582753,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/46565/"
        },
        {
            "timestamp": 1585582794,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/46565/ : FAILURE"
        },
        {
            "timestamp": 1585584805,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1585584829,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1585584845,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/46569/"
        },
        {
            "timestamp": 1585584860,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/46569/ : FAILURE"
        },
        {
            "timestamp": 1585586547,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1585587716,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 9: Commit message was updated."
        },
        {
            "timestamp": 1585587738,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1585587747,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1585591725,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Patch Set 10: Commit message was updated."
        },
        {
            "timestamp": 1585640635,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 11: New patch set was added with same tree, parent, and commit message as Patch Set 10."
        },
        {
            "timestamp": 1585640666,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11:\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1585640681,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11: -Verified\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/46614/"
        },
        {
            "timestamp": 1585640806,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/46614/ : SUCCESS"
        },
        {
            "timestamp": 1585815766,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1585815840,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1585817267,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1585817291,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1585817307,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/46854/"
        },
        {
            "timestamp": 1585817338,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1585817431,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/46854/ : SUCCESS"
        },
        {
            "timestamp": 1585817496,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Removed reviewer Zbigniew Kurzynski."
        },
        {
            "timestamp": 1585820353,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1585820523,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1585943071,
            "reviewer": {
                "name": "Iwona Winiarska",
                "email": "iwona.winiarska@intel.com",
                "username": "iklm"
            },
            "message": "Patch Set 12:\n\n(8 comments)"
        },
        {
            "timestamp": 1586156174,
            "reviewer": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1586156197,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1586156208,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/47081/"
        },
        {
            "timestamp": 1586156337,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/47081/ : SUCCESS"
        },
        {
            "timestamp": 1586165179,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 13: Code-Review-1\n\n-1 until we resolve Jeremy's concerns"
        },
        {
            "timestamp": 1587630989,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13: Code-Review-1\n> \n> -1 until we resolve Jeremy's concerns\n\nAre we fine with other interfaces.yaml file other than base.interface.yaml (which is what currently we differ). We can separate out the Base.interface.yaml (from this one).\nLet us know."
        },
        {
            "timestamp": 1587775057,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13: Code-Review-1\n> > \n> > -1 until we resolve Jeremy's concerns\n> \n> Are we fine with other interfaces.yaml file other than base.interface.yaml (which is what currently we differ). We can separate out the Base.interface.yaml (from this one).\n> Let us know.\n\nI think it's more fine-grained than that. The enumerations section of Base.interface.yaml are probably fine, but the contentious parts are the methods and signals. If we can shift the methods and signals out to a separate commit then I think we're on the right track."
        },
        {
            "timestamp": 1587970085,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13:\n> > \n> > > Patch Set 13: Code-Review-1\n> > > \n> > > -1 until we resolve Jeremy's concerns\n> > \n> > Are we fine with other interfaces.yaml file other than base.interface.yaml (which is what currently we differ). We can separate out the Base.interface.yaml (from this one).\n> > Let us know.\n> \n> I think it's more fine-grained than that. The enumerations section of Base.interface.yaml are probably fine, but the contentious parts are the methods and signals. If we can shift the methods and signals out to a separate commit then I think we're on the right track.\n\nyes, that's what i meant, we will remove the method & signals. Hope you have gone through rest of the stuff, and looks good."
        },
        {
            "timestamp": 1587971472,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1587971498,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1587971512,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48314/"
        },
        {
            "timestamp": 1587971778,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48314/ : SUCCESS"
        },
        {
            "timestamp": 1587975040,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14: Code-Review+1"
        },
        {
            "timestamp": 1588595202,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Code-Review-1\n\n(16 comments)"
        },
        {
            "timestamp": 1588623453,
            "reviewer": {
                "name": "Iwona Winiarska",
                "email": "iwona.winiarska@intel.com",
                "username": "iklm"
            },
            "message": "Patch Set 14:\n\n(5 comments)"
        },
        {
            "timestamp": 1588651207,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(5 comments)"
        },
        {
            "timestamp": 1588666213,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14: -Code-Review\n\n(1 comment)"
        },
        {
            "timestamp": 1588674872,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14:\n\n(2 comments)"
        },
        {
            "timestamp": 1588916573,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(3 comments)"
        },
        {
            "timestamp": 1588922394,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1588923371,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14:\n\n(2 comments)"
        },
        {
            "timestamp": 1589159157,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(3 comments)"
        },
        {
            "timestamp": 1589183999,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 14:\n\n(8 comments)"
        },
        {
            "timestamp": 1589188554,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1589244405,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1589368618,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1592850229,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1594399852,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 14: Code-Review-1"
        },
        {
            "timestamp": 1595474525,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "47b2fe8b3cc6987e370d5103301dcf0b18e23df7",
            "parents": [
                "79064a8e0c49b35cfa1c343cef31f21ebfd7298d"
            ],
            "ref": "refs/changes/39/30139/1",
            "uploader": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "createdOn": 1583760130,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "D-Bus"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 68,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Duplicated"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 68,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "this is with Fd."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 68,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Right, it's method overloading. Have you read through this bug thread?\n\nhttps://bugs.freedesktop.org/show_bug.cgi?id=22429#c5"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 68,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Recommendation from the bug is to \n\"add different names (and perhaps deprecate the overloaded ones) \".\nWhat do you think about two separate functions:\n1. SendMctpMessageRawPayload(DstId, MstTag, TagOwner, Payload)\n2. SendMctpMessageFilePayload(DstId, MstTag, TagOwner, FileDescriptor)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 68,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Agree to the above two methods."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 98,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Need another boolean property to indicate whether the payload is raw bytes OR we are passing the fd. (In case of large payloads, we pass the fd of the payload to the upperlayer instead of posting the payload on dbus)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 98,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "If we use boolean, again we are trying to overload current signal. In this case recommendation is to create second signal dedicated for large payloads."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 98,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Yes, agree to having two signals."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Pcie.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "PCIe.interface.yaml."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Pcie.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Smbus.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "File name is SMBus follows the abbrevation standard, similar to MCTP."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Smbus.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "We may have endpoint devices without UUID. We probably should have another boolean property to indicate whether UUID is present or not."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Can we use nil UUID for this purpose ?\n\nrfc4122 4.1.7\nIETF, RFC4122, A Universally Unique Identifier (UUID) URN Namespace, July 2005\n265 http://datatracker.ietf.org/doc/rfc4122/"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Yeah, that should work :)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "what if we discover another bridging device instead of a regular endpoint? Probably we don't have a usecase of this currently but can we consider having something like \"DeviceRole\" property to indicate whether its a regular endpoint or a bridging device."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Even bridging will have EID & UUID, but we may need to add another interface or something fo bridging to differentiate the same."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Since we do not have use case at the moment, would it be better to add it later ?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 12,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit:NVMeMgmtMsg"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 12,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit:SPDM"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit:PCIVendorDefined"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Mariusz Kowalski",
                        "email": "mariusz.kowalski@intel.com",
                        "username": "maniek205"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Pcie.interface.yaml",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/Smbus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 354,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "e2124e2a942847964672865999620ded73cd887e",
            "parents": [
                "79064a8e0c49b35cfa1c343cef31f21ebfd7298d"
            ],
            "ref": "refs/changes/39/30139/2",
            "uploader": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "createdOn": 1583847068,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 354,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "e15ca3dea8eb9f221e80294107382edda63f7400",
            "parents": [
                "79064a8e0c49b35cfa1c343cef31f21ebfd7298d"
            ],
            "ref": "refs/changes/39/30139/3",
            "uploader": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "createdOn": 1583848489,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 354,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "d1390ea3fde41defed46e6c5d89063358d0a7705",
            "parents": [
                "79064a8e0c49b35cfa1c343cef31f21ebfd7298d"
            ],
            "ref": "refs/changes/39/30139/4",
            "uploader": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "createdOn": 1583848760,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 354,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "1c2f628c63f1893f0836596bc398476501012f13",
            "parents": [
                "79064a8e0c49b35cfa1c343cef31f21ebfd7298d"
            ],
            "ref": "refs/changes/39/30139/5",
            "uploader": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "createdOn": 1583851446,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "design."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "This sentence is actually good as is. It is continued in the next line."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "He is pointing to the typo there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Can we separate methods with additional empty line to make this file more readable ? And the same regarding parameters and enums."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 37,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 217,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "We need to have all the MessageTypes, similar to supportedTypes right?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 217,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Or, we can re-use the Message Types interface ?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Why tack on 'Base' and not just have 'xyz.openbmc_project.MCTP'? Also do we want to version the interface? It's generally recommended by the DBus spec though this doesn't appear to have much adoption in the OpenBMC community\n\nhttps://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-names-interface"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Maintaining as Base in interface name for following reasons\n1. want to group all MCTP interfaces under MCTP folder, hence we need interface name under MCTP, else MCTP.interface.yaml must be created under xyz.openbmc_project folder itself\n2. we never make versioning, but we may end up doing so, so it's better to have Base_v2 or something in future. Hence recommend to stick with Base (telling this conveys the basic information, irrespective of BusOwner, EndPoint)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> 1. want to group all MCTP interfaces under MCTP folder, hence we need interface name under MCTP, else MCTP.interface.yaml must be created under xyz.openbmc_project folder itself\n\nBut why? Just pushing on this reasoning a little :)\n\nAnyway, my issue is that it's not clear what something called 'Base' is modelling in terms of objects and interfaces. It's like having a package called 'Common' - IMO it's an anti-pattern."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "trying to convey Basic information for any MCTP daemon (I am ok with using different name, but here it will list out common properties, which will be used by both EndPoint & BusOwner devices)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "s/PCie/PCIe/, though do we want to be more specific (e.g. s/PCIe/DSP0238/)?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "+1, it must be PCIe\n\nNot now, but future changes, we may need to look for version option. \nAs far as i know spec may need to support backward compatibility, and will extend. Hence majorly we don't anticipate any version."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> As far as i know spec may need to support backward compatibility, and will extend. Hence majorly we don't anticipate any version.\n\nIs this in response to my comment above? If so, how we represent the spec on DBus is a separate problem from the versions applied to the spec. What you're suggesting is we're going to get it right the first time :)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "We don't need to get it right as long as it is going to backward compatible. But let's say tomorrow a new version of spec, say MCTP Version 2.0, which defines totally new way instead of EID, then we need to use a new interface.\n\nWhat i meant here is, we can add property one by one. We don't need to define all the properties in a single shot (We can't change / remove, once people started using it), but we can add as per the need."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This should either be `/xyz/openbmc_project/mctp/device/<uuid>` or `/xyz/openbmc_project/mctp/endpoint/<eid>`. `/xyz/openbmc_project/mctp/device/<eid>` is confusing two well defined concepts (one device may have multiple endpoints)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Yes Andrew. Agree. But when we have multiple endpoints each device will end up with it's own supportedTypes, hence we need to differentiate based on eid.\n\nAnother option we can consider is /xyz/openbmc_project/mctp/devices/uuid/eid (which will fit better). What do you think?\ni.e. if a specific device expose 2 EID, then it will have 2 objects under that uuid, else there will be only one. In this way relating the uuid with eid is also possible"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Not all devices have UUID - UUID is not mandatory for all endpoints. \n\n/xyz/openbmc_project/mctp/endpoint/<eid> with Device_UUID as a property under endpoint interface can be one solution."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "yes, but we can generate UUID (whether it is exposed as property or in path). \n\nMain thing is we have not covered handling of Bridge devices here or devices which has multiple ports. \nSay a device which is connecting to 2 different networks, say I2c & to PCIe.\nwith UUID in path we will be able to understand that this belongs to single object, when we query the object using ObjectMapper itself."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Yes Andrew. Agree. But when we have multiple endpoints each device will end up with it's own supportedTypes, hence we need to differentiate based on eid.\n\nI don't follow. You say that like I was suggesting we shouldn't differentiate based on EID. I offered two solutions for object naming, one EID-based and one UUID-based. Each unique EID will have a corresponding unique, EID-named object implementing the SupportedTypes interface. Isn't this what you want?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "yes, we are on the same page. What i meant to say was using both will have added advantage when we find a device which has more ports (across interface)\n\nsay a device which supports both SMBus & Serial, then UUID in the path can be used to define the relation (i.e. ObjectMapper query on all the paths across instance, will be able to provide this information)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I assume this is message types?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "yes. this is message types."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Needs to be multiple."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "i think with uuid/eid object path consideration we don't need to have EID / UUID as a separate property?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "You would want EIDs as a property on the object under the UUID path and a UUID property on the object under the EID path."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "when we have it in the path name itself, why do we need a separate property? Anyway, when we have it in the path, any change / re-assignment of EID for discovered devices, will require the object to be removed & inserted, and hence we don't need separate property.\n\nNote: Always better to maintain a information in single place as much as possible (other than cache location). Basically, Eid in the object path & the property must always match, if not we won't know which is right and will cause confusion."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "It seems that this interface shall be exposed for discovered MCTP endpoint. If yes, please change it to 'endpoint' instead of 'device'."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Plan is to reuse this for both. Hence kept it as Device. but with new object path naming, we won't even need this"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "Shouldn't we expose devices found by MCTP Bus Owner even if BMC acts as MCTP endpoint? In endpoint mode there is Get Routing Table Entries command (section 12.12 of DSP0236) which can be used to request MCTP bus owner to return data from its present routing table."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Can be done using the device object even if BMC is endpoint, right ?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "It can be done using the device object.\nThe idea is to expose information about endpoints in MCTP network where BMC acts as MCTP endpoint."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we need to spend time fleshing out the idea of how to describe MCTP networks in terms of D-Bus connections/objects/interfaces. I haven't seen any mention so far."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "Maybe list of discovered MCTP endpoints shall be exposed using separate interface, which will be implemented by either MCTP bus owner or MCTP endpoint? And, please be precise, use 'MCTP endpoint' when we mean it, the device may expose multiple endpoints."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "would recommend to wait for routing table entries, till we implement it. Any D-Bus interfaces designed now, will not fit for it, till we lay out a state flow."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> would recommend to wait for routing table entries, till we implement it.\n\nWhat do you mean by \"it\" here?\n\n> Any D-Bus interfaces designed now, will not fit for it, till we lay out a state flow.\n\nI feel like we need to be thinking ahead to avoid designing ourselves into a corner?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "what i meant was the D-Bus interfaces doesn't cover the interfaces for bridge devices. Hence we need to carefully think and add it. Thought about the design and we know the way, but recommending to add the interfaces as a separate commit for Bridge devices"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "s/PCie/PCIe/"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "+1"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 221,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Device.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 359,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "26633ad34b91388a5281f23ac2d6c0f796bd34e4",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/6",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585562464,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 241,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 392,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "eb37843f792fece68dc0a997aa79089c3dc50200",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/7",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585582713,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 380,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "e770044be81fc62e22e7e93a8cfb59dde96c6a13",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/8",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585584805,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 379,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "cde109b9679f5a466249182491809234fadd5482",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/9",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585587716,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 379,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "0b2e1e4621f25e67280a95e7c96a2955177ef3b2",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/10",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585591725,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 379,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "dd67bc045f6633033956175ce3877fec6f2a3d91",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/11",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585640635,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 103,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "When BMC is connected to different networks, EID is not guaranteed to be unique. So there is a possibility that we will have multiple endpoint objects with same EID (coming from different MCTP Daemon instances). Now, if the upper layers want to talk to a certain EID, then how do they differentiate ?\n\nI think we might need Network ID as a property here.\n-If BMC works in BusOwner mode, generate Network ID\n-If BMC works in EndPoint mode, get the Network ID from the BusOwner. If BusOwner does not respond to Get Network ID control command, then probably should generate it ourselves."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 103,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Well, this can be a property of the Endpoint Interface"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 103,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "nit: queried"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Karol Wachowski",
                        "email": "karol.wachowski@intel.com",
                        "username": "karwachowski"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 379,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "bb6270023e535a7c192ec2754d928a562f1d2fda",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/12",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1585817267,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 82,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "SourceEid or should it be SrcEid like DstEid, or change DstEid to DestinationEid?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 135,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "Can we use one naming convention rather than mixing conventions?\nE.g. MCTP/Mctp, Eid/EID, PCIe/Pcie, and so on.\n\nNote, this applies to all files."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 209,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "s/the/The"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 216,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "Ditto."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 12,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "It refers to BMC BDF, rigth? I wonder if this value can be easily extracted on any BMC hardware. Can we make this property optional? Or maybe can we drop this if there is no use case?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 25,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "This description is just a fragment of 6.9.1 section of DSP0239. It seems to be not relevant here."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "s/descritpion/description"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "To be consistent, please s/End Point/Endpoint/g"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 385,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "77d7f37c6a7c92633f3837406413a9c1cced157c",
            "parents": [
                "e08baa59447073895d1798fe054dfede3f842044"
            ],
            "ref": "refs/changes/39/30139/13",
            "uploader": {
                "name": "Karol Wachowski",
                "email": "karol.wachowski@intel.com",
                "username": "karwachowski"
            },
            "createdOn": 1586156174,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 385,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "fd20c61e4b1facf47d176d2b53a28966626a9718",
            "parents": [
                "00c8527a40650650d2826d77b6e4e6d48f68f622"
            ],
            "ref": "refs/changes/39/30139/14",
            "uploader": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "createdOn": 1587971472,
            "author": {
                "name": "Mariusz Kowalski",
                "email": "mariusz.kowalski@intel.com",
                "username": "maniek205"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The description doesn't match the enum member name."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 80,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The aesthetics of the camel-case aren't great. Do we have to break up \"NC\" and \"SI\" in this way?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 80,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Nope. NCSI must be used here\n\nSMBus, USB, PCI, PCIe  (Better to follow the acronym as such, except in the method name."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 94,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This is inconsistent camel-casing."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 96,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Again here?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "So these aren't orthogonal in nature - a Bridge is also a BusOwner and is also an EndPoint. Is it perhaps intended that Endpoint < BusOwner < Bridge (i.e. Bridge is a superset of BusOwner, which is a superset of Endpoint)? Some clarification on the mental model would be helpful here."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "With having multiple instances of MCTP Daemon (one daemon per physical medium) , we can have each instance started with a \"role\" (EP/BO/Bridge) defined. This property is used to advertise the role of the binding on D-Bus. \nThis can be a read only property. Perhaps this can use a modification to accommodate your point - a daemon instance can be:\n1. Simple Endpoint\n2. Simple BusOwner with a statically allocated EID pool\n3. Endpoint + bridging supported on the particular medium\n4. BusOwner with a statically allocated EID pool + bridging supported on the particular medium"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Okay, maybe we should back up a bit.\n\nWhat would a piece of software interacting with the daemon do with this information? How would the application change it's behaviour if it knew that the daemon was acting as a simple endpoint vs a bus owner vs a bridge?\n\nWhy would the application care about static vs dynamic EID pools?\n\nSeparately, my reading of the spec is that \"static pools\" aren't really a thing. For static assignment, all devices further up the tree must be aware of the static allocations (i.e particularly the top-most bus owner, which must know that these EIDs have been allocated and can't form part of the dynamic EID pool)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Upper layer protocols will not care about this property. But the thinking behind this one was it might come in handy if bridging between two mctp daemon instances is required. Suppose if we want an mctp daemon working under just endpoint mode to not to support any bridging, it can be indicated through this property."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Suppose if we want an mctp daemon working under just endpoint mode to not to support any bridging, it can be indicated through this property.\n\nThat sounds like the wrong approach - you're trying to drive configuration from the bottom up. How would the bridge process know it needs to use this port/endpoint in the first place? So I think we should flip it: Bridging should be architected from the top down where the bridge process knows which ports/endpoints it needs to aggregate. That way there would be no need for this property.\n\nGenerally, as these are APIs, we should be conservative in what we add as we cannot be liberal in what we remove. I don't yet feel like there's a good case for this property - it feels like we don't have anything concrete that requires it and it's just a \"nice-to-have\"."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 99,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Only 2 things needs to be defined here. One is endpoint & another is busowner/ Bridge.\n\nThese are not useful for the Upper application like PLDM / SPDM. But this is used in terms of entity-manager or other configuration files to make sure, how it must be configured. Here we are just exposing the property back (Read only)"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Why not \"Pldm\" and \"Ncsi\"? \"NCSI\" is inconsistent with \"NcSi\" above. This is an interface between applications, there needs to be some feeling of consistency."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 128,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "This is one of the question, which i have asked earlier in IRC but with no response. Basically, for protocol with Acronyms in many of D-Bus properties & enums it is used as is, except method names. \n\nAgree with you, we need to maintain consistency here and want to use acronym   forms (i.e. it would be PLDM, NVMe etc for usage in properties & enums, and only for method we will call this as Pldm)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 130,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This should be \"Nvme\" right?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "line": 133,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Inconsistent camel-casing with the rest of the document."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This is applicable to all endpoints. Section 12.14 (\"Endpoint Discovery\") describes a generic command and makes no mention of the PCIe binding."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "Note that the earlier section 12.13 contains the following:\n\"The Endpoint Discovery and Prepare for Endpoint Discovery commands may only be supported on particular transport bindings (e.g. MCTP over PCIeVendor Defined Messaging). If the binding does not use this discovery approach (e.g. SMBus/I2C) the endpoint shall return an ERROR_UNSUPPORTED_CMD completion status for those commands.\""
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Okay, fair enough, however it's still the case that this concept can apply to future bindings. I think it's worth discussing the merits of maintaining this as a separate interface that some binding objects implement even though right now it's only PCIe that does so. What you're proposing here is an API so we need to explore the options to avoid application churn for future MCTP bindings."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "At this point of time, couldn't able to envision, any other physical layer, which may need this one. Let us know, and we are OK to change?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This feels like leaky abstraction. Why not break them out into separate D-Bus properties?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "This is a PCI concept and its representation usually looks like this (a single uint16):\n- Section 6.3 of DSP0238 (\"Physical address format for MCTP control messages\") or\n- Linux kernel: https://elixir.bootlin.com/linux/latest/source/include/linux/pci.h#L57"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, I'm not necessarily sold on my idea either, just thought it was worth discussion. I think it's worth calling out the reference to DSP0238 in the description as you've done in your reply."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Sure, but any advantage in getting the same as single unit. We don't find any and for tracking purpose single unit representation of B/D/F is better."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Same issue as DiscoveredFlag above."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "It refers to the section 6.9.1 of DSP0238."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Right, but that's still something that's applicable to multiple bindings in my mind - do you agree that 6.9.1 of DSP0238 is just a concrete description of the general concepts described in DSP0236?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "The value of this property is not actually a number. It is a string eg:\"/dev/i2c-2\". Better to rename it as BusPath."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What about Bridge mode? This is where I'd like some more clarity on the intent of the mode enumeration."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Bridge mode would need more discussions I believe - MCTP spec by itself does not provide any security, thus we might have to approach bridging with caution. We might consider blocking bridging between a public bus (i.e something like an add-in-card slot's SMBus) to private bus (to host/ME). Bridging mode will need interfaces of its own"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The DBus interfaces don't care for MCTP network security either, they just need to describe the topology of your network correctly. Security comes from architecting the networks correctly (if isolating certain components from each other is necessary). The system's composition of the daemons implements the network architecture and therefore provides the isolation.\n\nBut my point is that a Bridge is implicitly a Bus Owner by nature. Therefore the BusOwner interface should also apply to bridges."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Bridging comes with other responsibilities - tracking of routing tables/eid to physical address mapping, replacement of source physical addresses etc. That is why the proposal is to have separate interface for bridging. An endpoint object can be allowed to have both the interfaces (Bus owner and bridging)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Okay. I think the text should make that point so the reader has a crisp idea of what this interface should capture."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 6,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Not sure why why it is array[struct[byte, byte]]?array[bytes] seems right."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Isn't this inferred from TopMostBusOwner? If it's not, what is its purpose?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "This is to support statically allocated EID pools (Although spec says other BusOwners in the network need to get their pools from TopMostBusOwner, we can consider supporting a design where BusOwners in the network are statically allocated EID pool)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Has the static EID pool concept been discussed with PMCI?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Well agree there, static pools are not part of the spec but might be something to consider in the interim. Reason behind this one was the difficulty in deciding the topmost busowner. We will have to consider the sleep states/boot order of the connected components - if the topmost bus owner is unable to boot for some reason, then no busonwers down the tree get their pools."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't think that MCTP networks are intended to operate correctly without a top level bus owner. Has this idea been discussed by DMTF?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "OwnEidPool is not needed right? In case of TopMost bus owner, EIDPool represents the ownEidPool.\nEven in case of static EID, the EIDPool should be enough to hold or allocated with the help of bus owner."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Had another cautious look at the spec:\n\nIn section 8.17.2, we have this:\n\"Bridges can have a mix of both static and dynamic EID pools. That is, the routing table can\nhave both static and dynamic entries and can allocate from static and dynamic EID pools. Only\nthe dynamic EID pool is given to the bridge by the bus owner using the Allocate Endpoint IDs\ncommand. There is no specification for how a static EID pool gets configured or how a bridge\ndecides whether to give an endpoint an EID from a static or dynamically obtained EID pool.\nThere is also no MCTP-defined mechanism to read the static EID pool setting from the bridge.\"\n\nMay be we need have two pools - one for topmost busowner allocated one and another for statically configured pool?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> In section 8.17.2, we have this:\n\nAh, good find!\n\n> May be we need have two pools - one for topmost busowner allocated one and another for statically configured pool?\n\nwell, consider this bullet from the same section:\n\n> MCTP does not define a mechanism for keeping routing tables updated if static EIDs are used with dynamic physical addresses. That is, static EIDs are not supported for use with dynamic physical addresses.\n\nThus I don't think there's scope for a \"static pool\" as such. Instead it seems like the expectation is that the route table should be pre-populated with the necessary entries.\n\nThe final point is that all bus-owners upstream of the bus owner with the static set of EIDs need to be configured with / maintain a superset of the static routing entries."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Why is the 'Eid' property in the 'Base' interface and not in the 'Endpoint' interface. It feels like this issue violates the principle of least surprise.\n\nI suggest we move the Eid property here and just have the MCTP daemon also implement the Endpoint interface."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "According to README, endpoints in MCTP network should be \"exposed under the path `/xyz/openbmc_project/mctp/device/<eid>'\".\nIn the \"Base\" interface 'Eid' refers to the BMC EID in the given MCTP network."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> In the \"Base\" interface 'Eid' refers to the BMC EID in the given MCTP network.\n\nRight, but the BMC is just another endpoint in the network. Can we not publish the daemon's object at multiple paths?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "We want to maintain Eid in Base to represent the self EID, and advertise when there is a change (say we got new SetEID and got changed).\nFor device EID, as it is part of path, we don't require a separate property, also, when a device changes it's EID, we want to recreate the object\n(i.e. After discovery, if we the device changes it's eid, due to another bus owner force it do so etc)."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "Don't we already have a Uuid interface? Why are we re-creating it"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This will be the same for all EIDs under a given DBus connection, given part of the architecture you're proposing is to run one instance of a 'MCTP Daemon' per \"port\" (\"port\" as defined in \"9.1.2 EID options for MCTP bridges\" in DSP0236 v1.3.0).\n\nActually, that leads to a question: If you were to have a bridge in a network in that configuration (one MCTP daemon per port), how do applications interacting with MCTP deal with their segmented view of the network due to multiple daemon instances? Or are you proposing a third daemon be used to implement the bridge and applications connect to that for a complete view of the network? Or is there some discovery process that applications need to follow to find which MCTP daemons to query?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Iwona Winiarska",
                        "email": "iwona.winiarska@intel.com",
                        "username": "iklm"
                    },
                    "message": "I believe that the 'NetworkId' property should be moved to the 'Base' interface since it refers to the MCTP network on the current bus."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> I believe that the 'NetworkId' property should be moved to the 'Base' interface since it refers to the MCTP network on the current bus.\n\nI agree with you in that I don't think NetworkId belongs in the Endpoint interface.\n\nI'd still like to see some discussion of how applications should interact with these proposed interfaces in the face of the BMC implementing a bridge between two ports given the resulting segmented view of the network."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Probably we kept this, so that by querying the D-Bus object property itself we will be able to get the data.\nwhen we discussed this with wiktor, we envisioned this, i am unable to recollect this, give me a day will get back on this."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Similar issues here as noted in the Base interface wrt camel-casing and capitalisation of identifiers."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Base.interface.yaml",
                    "type": "ADDED",
                    "insertions": 133,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/BusOwner.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 287,
            "sizeDeletions": 0
        }
    ]
}