{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I76c0a01c152d0019ce0713da013c565ed420d0ad",
    "number": 49295,
    "subject": "Disallow no-access user login",
    "owner": {
        "name": "Sunitha Harish",
        "email": "sunithaharish04@gmail.com",
        "username": "sunharis"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/49295",
    "commitMessage": "Disallow no-access user login\n\nAn authenticated user with the NoAccess role can login but they cannot\nlogout.\n\nThis commit is to block the login for a user with priv-noaccess\nDetails are at https://github.com/openbmc/bmcweb/issues/227\n\nTestedby:\n 1. Create an LDAP user with priv-noaccess. Verify the login attempt fails\n    with accessDenied error\n 2. Verified the other role users can login\n\nSigned-off-by: Sunitha Harish <sunharis@in.ibm.com>\nChange-Id: I76c0a01c152d0019ce0713da013c565ed420d0ad\n",
    "createdOn": 1638537112,
    "lastUpdated": 1641550560,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1638537112,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1638537144,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1638537480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/31162/ : FAILURE"
        },
        {
            "timestamp": 1638734338,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638734479,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638764527,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638787089,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1638818276,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640583846,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640584079,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640684857,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640728383,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641312395,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1641488463,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1641495714,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1641550108,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1641550119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1641550119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1641550218,
            "reviewer": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1641550560,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35066/ : SUCCESS"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2c134f69615bef86af325b87debb86f8d5697dd6",
            "parents": [
                "6afb06d91fbf0017840eb9189dc4f8ee771cb046"
            ],
            "ref": "refs/changes/95/49295/1",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1638537112,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I think BMCWeb should check if the user trying to log in has the \"Login\" privilege."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Regardless of if we have disabled user accounts, I think BMCWeb login operations should be enhanced so they only allow the login operation to succeed if the user trying to login has the Redfish Login privilege."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 230,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Per my proposed design (see notes below), this line of code should be changed to:\nUse the user's role to retrieve the set of Privileges, then check if the \"Login\" privelege is present.   If so then proceed, otherwise error out with \"accessDenied\"."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 230,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This kind of business logic should not be in bmcweb.  If users with no-access shouldn't be allowed to log in, then they should be rejected by PAM/phosphor-user-manager."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "To be more concrete, this is the check to determine if a user is allowed to log in, using the standard pam mechanisms.\n\nhttps://github.com/openbmc/bmcweb/blob/889ff6943d62762eeaf58824b651d2edaf940d1d/include/pam_authenticate.hpp#L98\n\nIf this is succeeding for NoAccess users that means that phosphor-user-manager has failed its API guarantees, and hasn't disabled the user properly."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Yes Ed. I was also checking in the same lines after pushing the commit. I will check and see how to handle this at the user manager and will update here"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "I made these changes to get the https://github.com/openbmc/bmcweb/blob/master/http/routing.hpp#L1415 logic applied when the redfish session is getting created. This will validate the remote user's privilege while logging in. \n\nI believe the pam authentication does not cover the validation for roles, priv etc for the remote users. Am i missing something here?"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I made these changes to get the https://github.com/openbmc/bmcweb/blob/master/http/routing.hpp#L1415 logic applied when the redfish session is getting created. This will validate the remote user's privilege while logging in. \n> \n> I believe the pam authentication does not cover the validation for roles, priv etc for the remote users. Am i missing something here?\n\nYes.  Pam handles authentication, dbus handles authorization.  If a user should not have access then the user itself should be disabled, and that pam check should fail.\n\nIdeally we shouldn't be using dbus at all for role generation (we previously used only PAM) but a lot of code got stuck in as part of the LDAP work that complicated the design.\n\nIn a perfect world, if we're going to authenticate/authorize over dbus, we should ONLY be using dbus.  If we're using pam, we should ONLY be using pam.  We shouldn't do the pam/dbus hybrid we have now, that's what leads to bugs like this."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Agree. But this will be a considerable effort in re-designing things.\n\nWhat do you think should be the short-term solution for this from the security point of view? \n\nAny 3rd party No-Access user can create many and many login sessions and exhaust the bmc without logging out. Logout logic checks for the user access, and a No-Access user can not perform logout."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Agree. But this will be a considerable effort in re-designing things.\n\n> \n> What do you think should be the short-term solution for this from the security point of view? \n> \n\nMake sure that phosphor-user-manager properly disables (in linux) no-access users as it should.  bmcweb already checks to see if users are disabled, so if phosphor-user-manager isn't disabling users set to no-access, then clearly something needs fixed there.\n\n> Any 3rd party No-Access user can create many and many login sessions and exhaust the bmc without logging out. Logout logic checks for the user access, and a No-Access user can not perform logout.\n\n\nNo-access users should  ot be given a session at all."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "> bmcweb already checks to see if users are disabled\n\nCan you please point me to the bmcweb code which checks if the users are disabled at the phosphor-user-manager while creating the session?"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please see the reply on this thread that contains the text \"this is the check to determine if a user is allowed to log in\"  I've already pointed you to the code."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I see two alternate ways to solve this issue.\n\n1. Change the phosphor-user-manager to disable users who have the \"no access\" role.  In this way, Linux PAM account management checks will determine the user should not be allowed to login  because their account is disabled.  As I mentioned in https://github.com/openbmc/bmcweb/issues/227 I still don't understand the purpose for the NoAccess role. Is it okay for such users to be \"disabled\".  That doesn't feel like the right solution to me.\n\n2. Change BMCWeb to add a \"Login\" privilege check as part of its authentication process.  Specifically the proposed design is: if authentication succeeds, then BMCWeb knows the user's role and can retrieve the user's Redfish privileges, and check if the user has the \"Login\" privilege.  This solution feels right to me, and I think it is what Sunitha is proposing."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I never understood the difference in use case between \"no access\" and \"disabled\".  They seem like synonyms.  #1 would be my preference here, as it keeps business logic out of bmcweb, and ensures that all portions of the system work without having to encode specific role logic in every single user facing daemon."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I don't fully understand the use case for either a no-access account or a disabled account, and my efforts to answer that question are not yet successful.  IMHO, we should get that answer before proceeding with a fix.  Otherwise:\n1. What is the point of having a disabled account?  What is it used for?\n2. For an enabled account which has the no-access role, I believe BMCWeb should handle it in the same way as any other role.  Specifically, after a successful authentication, I believe PAM account management checks should succeed, and the user's privileges should be retrieved.  In this case the privileges will be the empty set.  The login operations should then fail.  <-- That is what I proposed in my comment above.  Specifically, the login operation(s) should ensure the user trying to login has the Redfish Login privilege."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Sunitha Harish",
                        "email": "sunithaharish04@gmail.com",
                        "username": "sunharis"
                    },
                    "message": "Did changes as per the #2 approach. The first approach can be a long term solution, and need community help in getting that design implemented."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 113,
                    "deletions": -66
                }
            ],
            "sizeInsertions": 113,
            "sizeDeletions": 66
        },
        {
            "number": 2,
            "revision": "b6059bfa7afa4e2c9c4f428528a29affc3de8163",
            "parents": [
                "e1cc482880d7b47dcf19609cedba7df80368ae3c"
            ],
            "ref": "refs/changes/95/49295/2",
            "uploader": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "createdOn": 1641550108,
            "author": {
                "name": "Sunitha Harish",
                "email": "sunithaharish04@gmail.com",
                "username": "sunharis"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 117,
                    "deletions": -66
                }
            ],
            "sizeInsertions": 117,
            "sizeDeletions": 66
        }
    ]
}