{
    "project": "openbmc/openbmc",
    "branch": "master",
    "id": "I8c45c98afb941953c1855de2f3db10deea465b2a",
    "number": 40976,
    "subject": "Implement bmcweb ptest",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/40976",
    "commitMessage": "Implement bmcweb ptest\n\nYocto implements ptest classes for recipes.  In general OpenBMC doesn't\nimplement ptest for any of its recipes.  This is the first in an attempt\nto change that, specifically, this enables ptest for the bmcweb recipe.\n\nExamples for ptest + meson recipes are pulled from here:\nhttp://layers.openembedded.org/layerindex/branch/master/recipes/?q=inherits%3Aptest+inherits%3Ameson\n\nThis commit implements the base ptest functionalityrequired to be able\nto install and run the unit tests already present in bmcweb.  The\nspecific changes are:\n1. bmcweb recipe now inherits from ptest\n2. When ptest is enabled, bmcweb now requires gtest and gmock\ndependencies.  This is done by updating DEPENDS.  We also now require\nbash at runtime, so that dependency is added, as that seems to be what\nthe upstream recipes do.\n3. The meta-layer now includes a \"run-ptest\" script.  This seems to be\nthe common convention in the upstream yocto recipes to include in the\nmeta layer so we should do the same thing here for consistency, even if\nit is a little unconventional or odd.\n\nTo enable this and try it out, insert the following into your local.conf\nDISTRO_FEATURES_append = \" ptest\"\nCORE_IMAGE_EXTRA_INSTALL += \"bmcweb-ptest\"\n\nThis will add bmcweb ptests to your build.  Keep in mind, this takes a\nlot of flash space, so qemu is likely the best target, unless you're on\na system with eMMC, or a lot of SPI flash free.  Once your system has\nbooted, you can run the tests by executing ptest_runner.\n\nhttps://wiki.yoctoproject.org/wiki/Ptest\n\nSigned-off-by: Ed Tanous <edtanous@google.com>\nChange-Id: I8c45c98afb941953c1855de2f3db10deea465b2a\n",
    "createdOn": 1614377941,
    "lastUpdated": 1616772389,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1614377941,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1614377968,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614377975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2208/"
        },
        {
            "timestamp": 1614378014,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1614378044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614378047,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2208/ : ABORTED"
        },
        {
            "timestamp": 1614378050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2209/"
        },
        {
            "timestamp": 1614378079,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1614378108,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614378111,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2209/ : ABORTED"
        },
        {
            "timestamp": 1614378115,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2210/"
        },
        {
            "timestamp": 1614379086,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2210/ : SUCCESS"
        },
        {
            "timestamp": 1614380417,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Published edit on patch set 3."
        },
        {
            "timestamp": 1614380453,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614380460,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2211/"
        },
        {
            "timestamp": 1614381432,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2211/ : SUCCESS"
        },
        {
            "timestamp": 1614430176,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1614451115,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1614715289,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1614872341,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1614882327,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1614882362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614882369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2258/"
        },
        {
            "timestamp": 1614882430,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614883318,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2258/ : SUCCESS"
        },
        {
            "timestamp": 1614885370,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 5:\n\nBuild Failed \n\nIBM Hardware CI : witherspoon hardware test failed"
        },
        {
            "timestamp": 1614888758,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 5:\n\nInteresting stuff Ed!\n\nSo big picture here. Could we potentially get rid of our unit test docker stuff with this? Assuming no compute resource constraints, we always build the full flash image, boot in a QEMU container and then can run a mix of systems test cases (basic Redfish API's, IPMI) as well as the unit test suites?\n\nFrom a development perspective, does this improve productivity?"
        },
        {
            "timestamp": 1614912561,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> Interesting stuff Ed!\n> \n> So big picture here. Could we potentially get rid of our unit test docker stuff with this? Assuming no compute resource constraints, we always build the full flash image, boot in a QEMU container and then can run a mix of systems test cases (basic Redfish API's, IPMI) as well as the unit test suites?\n> \n\nCould we?  Maybe/probably.  It's really a matter of how much effort we want to put into this, but for unit tests, I think it would definitely help with the mismatch of CI dependency versions when compared to yocto dependency versions.\n\nThe big untapped potential here for me is being able to run integration-type tests in emulation, which would mean that we could be running unit tests against a \"real\" booted system.  This means that doing things like running fuzzers against dbus APIs or running the redfish service validator in emulation could give real tangible results, and wouldn't be limited by how many systems we had physically.  Also, the fact that all unit tests for all packages are integrated would mean that when we change something deep in the system, like sdbusplus, we could \"unit\" test everything above it for correctness and security before it ever hit master.  That seems worthwhile to me.\n\nOn the tooling front, there's also meta-clang which is able to compile projects in yocto against clang with pretty minimal boilerplate, as well as run clang-tidy and clang-format.  I still need to figure out how to run clang-format in yocto, but it seems doable, and maybe worthwhile.\n\nLong term, I like the flexibility ptest gives us over what we currently do, but whether it's a complete replacement, I think it's capable, but I'll need buy in and help from others if we want to get it there and fully deprecate the old stuff.  Even if we didn't, being able to run integration tests in ptest is worth keeping.\n\n> From a development perspective, does this improve productivity?\n\nI think so.  Having a quick way to run all the integration tests for the system with a quick command is pretty helpful.  If we could do that automatically on push as well, I think that would be a huge win."
        },
        {
            "timestamp": 1614962442,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased."
        },
        {
            "timestamp": 1614962472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614962479,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2281/"
        },
        {
            "timestamp": 1614964102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2281/ : SUCCESS"
        },
        {
            "timestamp": 1614965413,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 6:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1614974470,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(3 comments)\n\nAmithash and I got us to use ptest at Facebook about a year ago so I have a little experience with it.\n\n> Patch Set 5:\n> \n> > Patch Set 5: \n> > So big picture here. Could we potentially get rid of our unit test docker stuff with this? Assuming no compute resource constraints, we always build the full flash image, boot in a QEMU container and then can run a mix of systems test cases (basic Redfish API's, IPMI) as well as the unit test suites?\n> > \n\nI don\u2019t think this will ever be able to replace all of the things we do in CI.  It can replace the \u201crun unit tests\u201d but it doesn\u2019t replace coverage, code formatting.  What ptest is great for is that it gives you confidence that your unit tests actually work on-device (ie. in ARM and not just x86-64).  We\u2019d want to integrate the ptest execution into the hardware CI flows.\n\n> Long term, I like the flexibility ptest gives us over what we currently do, but whether it's a complete replacement, I think it's capable, but I'll need buy in and help from others if we want to get it there and fully deprecate the old stuff.  Even if we didn't, being able to run integration tests in ptest is worth keeping.\n\nCan you expand on what \u2018flexibility\u2019 you see?  I\u2019m missing it.\n \n> > From a development perspective, does this improve productivity?\n> \n> I think so.  Having a quick way to run all the integration tests for the system with a quick command is pretty helpful.  If we could do that automatically on push as well, I think that would be a huge win."
        },
        {
            "timestamp": 1614978523,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> (3 comments)\n> \n> Amithash and I got us to use ptest at Facebook about a year ago so I have a little experience with it.\n> \n> > Patch Set 5:\n> > \n> > > Patch Set 5: \n> > > So big picture here. Could we potentially get rid of our unit test docker stuff with this? Assuming no compute resource constraints, we always build the full flash image, boot in a QEMU container and then can run a mix of systems test cases (basic Redfish API's, IPMI) as well as the unit test suites?\n> > > \n> \n> I don\u2019t think this will ever be able to replace all of the things we do in CI.  It can replace the \u201crun unit tests\u201d but it doesn\u2019t replace coverage, code formatting.\n\nThat was the \"maybe\" part of my answer.  meta-clang is a thing, and can build clang-native binaries that could do the code checking and formatting (that's usually how I do clang-tidy -fix on codebases with lots of dependencies).  It's probably no longer a ptest at that point, but running it within yocto with a \"meets openbmc coding standards\" bbclass doesn't seem entirely unreasonable in a future scenario, and I think would get a lot more people to run it on their machine.\n\n>  What ptest is great for is that it gives you confidence that your unit tests actually work on-device (ie. in ARM and not just x86-64).  We\u2019d want to integrate the ptest execution into the hardware CI flows.\n\n+1 on this.  arm64 BMCs are coming in the near future, so this is going to likely become more important in the coming years when we get to maintain this codebase for 32 bit and 64.\n\n> \n> > Long term, I like the flexibility ptest gives us over what we currently do, but whether it's a complete replacement, I think it's capable, but I'll need buy in and help from others if we want to get it there and fully deprecate the old stuff.  Even if we didn't, being able to run integration tests in ptest is worth keeping.\n> \n> Can you expand on what \u2018flexibility\u2019 you see?  I\u2019m missing it.\n\nBeing able to run integration-level tests, and have the same environment machine to machine.  Yes, docker gives us that too, but requires constant maintenance of build packages, versions, and distros to keep it similar to yocto.  Every couple of months we have a mismatch between the repo-ci depdenencies and the yocto dependencies in a way that matters for the build.  If we can do everything we need within yocto, that seems like a productivity win for anyone involved with CI, and maybe frees them up to work on more important stuff.\n\n>  \n> > > From a development perspective, does this improve productivity?\n> > \n> > I think so.  Having a quick way to run all the integration tests for the system with a quick command is pretty helpful.  If we could do that automatically on push as well, I think that would be a huge win."
        },
        {
            "timestamp": 1616703287,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1616703336,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616705242,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/2679/"
        },
        {
            "timestamp": 1616706167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/2679/ : SUCCESS"
        },
        {
            "timestamp": 1616772385,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 7: Code-Review+2"
        },
        {
            "timestamp": 1616772389,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Change has been successfully rebased and submitted as a443c54ffcd06ee703cca039b7c127228f8430e3 by Brad Bishop"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "078741bc88719bc9f912b0c8dafa356f9e548e50",
            "parents": [
                "424a869517f821b00bd6a57ad98dd606677a819f"
            ],
            "ref": "refs/changes/76/40976/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614377941,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "4d77c40008b8bf0f31bb7eeae00954541cfb1329",
            "parents": [
                "424a869517f821b00bd6a57ad98dd606677a819f"
            ],
            "ref": "refs/changes/76/40976/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614378014,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "fb6d3773905f6cc30f3f70ed6703220cb9a17697",
            "parents": [
                "424a869517f821b00bd6a57ad98dd606677a819f"
            ],
            "ref": "refs/changes/76/40976/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614378079,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 30,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "a06e2b4bc4fa1fe68d6a8a2d68a41369a0461248",
            "parents": [
                "424a869517f821b00bd6a57ad98dd606677a819f"
            ],
            "ref": "refs/changes/76/40976/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614380417,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "fwiw, I have this bbclass that does almost all the work you need in this commit and has the benefit of running \u2018meson test\u2019 directly.  The downside is that it ends up needing python because meson is python.\n\nhttps://github.com/facebook/openbmc/blob/helium/classes/ptest-meson.bbclass"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yeah, I mostly wanted to do what upstream yocto does to avoid having to have another patchset to submit this to open embedded, although if we're ok with hosting this in phosphor, we could use it, but I would assume that kind of thing would probably belong in yocto.  I know Brad and others don't really like checking in generic yocto stuff into the phosphor tree these days, but we'll see what he says when he checks in here.\n\nThe \"meson needs python\" bit is negligible, ptest_runner has a python dependency as well."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "> I know Brad and others don't really like checking in generic yocto stuff into the phosphor tree \n\nCorrect - if there is something wrong with ptest upstream lets fix it there?  Is that reasonable?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's nothing \"wrong\" with it, just that in theory the default meson layers could be smarter, but upstream today implements ptest the way it's done in this patch, so I've implemented the boilerplate for that here.\n\nI'm not super interested in trying to push a new way to do meson ptests into yocto, as it would likely conflict with the old way, and we'd have to carry a lot of stuff forward.... hence why this patch doesn't attempt to do that.\n\nI suspect we can use this patch as is, and if someone in the future decides that we want yocto to have a less-boilerplate way of doing this stuff, we can update once it's on mainline relatively easily."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Understand.  If we don\u2019t want to carry forward the patches I have in facebook/openbmc for meson-ptest.bbclass, I get it.  I\u2019ll work on sending an RFC to upstream OE and see if we can get it up there.  I\u2019m pretty sure I can add something to the existing meson.bbclass that doesn\u2019t break backwards compatibility with recipes doing their own hand-spun thing, but I\u2019ll discuss that upstream."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The way we run ptest in an automated way is that we side-load all the ptest packages + dependencies.  We\u2019ve set our distro to build IPKs instead of RPMs, because the ipkg tools are much much smaller, and then we just install all the IPKs at runtime."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't have the magic together to do that, but it's definitely something that's worth documenting if we know what commands it takes.  I wonder if we could have jenkins push binaries to an ipk repository somewhere that you could just install from directly on the bmc?  MIght be interesting.\n\nIn this context, I'm just loading everything into qemu to avoid the space constraints for the moment."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The first thing is we need to switch from rpm to ipk, which is a separate task.  RPM requires way too much on the device.\n\nOther than that, it is pretty straight-forward to scp all the ipks over and install them (assuming you have a tmpfs bind mount or something like that)."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "line": 3,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest $(echo test/*_test) instead.\n\n1. $(...) syntax is preferred over ``.  https://github.com/koalaman/shellcheck/wiki/SC2006\n2. `ls foo` will expand directories in an undesired way."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "line": 3,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's no directories there, and we know the exact filenames that are there in rootfs, but sure, can fix.  This was copied from upstream yocto."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "line": 3,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "> This was copied from upstream yocto.\n\nexactly why best practices are important even when they aren't :-)"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Does the script ever fail then?  Does it need to?"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I believe it doesn't need to, and ptest is looking at std::out?  This whole script is copied from another openembedded recipe (with a minor change to adjust the path in ls) and all the run-ptest scripts seem to do something similar to this in regards to error handling (maybe so ptest_runner can differentiate between a test failure and a crash?)"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this bash?  Your script is #!/bin/sh."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because that was how:\nhttp://cgit.openembedded.org/meta-openembedded/tree/meta-filesystems/recipes-support/fuse/fuse3/run-ptest\n\nDid it.\n\nIs there a sh recipe?\n\nThis all seems a little redundant, I had always assumed that you got bash by default, but maybe there's more sanity checks that you get when you do it this way?  Idk."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "you can RDEPEND on ${VIRTUAL-RUNTIME_base-utils} if you want:\n\n meta/conf/distro/include/default-providers.inc\n 28:VIRTUAL-RUNTIME_base-utils ?= \"busybox\"\n\nvs:\n\n meta-poky/conf/local.conf.sample.extended\n 384:#VIRTUAL-RUNTIME_base-utils = \"packagegroup-core-base-utils\"\n\nthe latter packagegroup includes bash"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've just removed this line for the moment.  I tried relying on ${VIRTUAL-RUNTIME_base-utils}, but then I got a duplicated RDEPENDS and busybox tried to install twice.  I suspect the upstream recipe is just incorrect.\n\nI doubt this will matter in any meaningful way, and looking through, there are other recipes that don't declare this dependency, so I think we're good."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 30,
            "sizeDeletions": 2
        },
        {
            "number": 5,
            "revision": "6e358f603f635c593d41d770ca1d8914c826edd8",
            "parents": [
                "424a869517f821b00bd6a57ad98dd606677a819f"
            ],
            "ref": "refs/changes/76/40976/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614882327,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "ab5b4ddb1da2f02c56b16b743a0f062f5961f6f4",
            "parents": [
                "7031262ebcc7a2b97d17718f1f094f8a4430196d"
            ],
            "ref": "refs/changes/76/40976/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1614962442,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 2
        },
        {
            "number": 7,
            "revision": "1e2a64e02d6ec0f9bde5688aa896921a508812dd",
            "parents": [
                "5d5a0ea7fefba98f2c3ac68a2a810f5cdac9b9c4"
            ],
            "ref": "refs/changes/76/40976/7",
            "uploader": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "createdOn": 1616703287,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 2
        },
        {
            "number": 8,
            "revision": "a443c54ffcd06ee703cca039b7c127228f8430e3",
            "parents": [
                "236e2438f18d122646d50fb50f9dab3fa767f071"
            ],
            "ref": "refs/changes/76/40976/8",
            "uploader": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "createdOn": 1616772389,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb/run-ptest",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/interfaces/bmcweb_git.bb",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 2
        }
    ]
}