{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I240bd3e7d300dfbc0a74ed71eb5a466e1d4a1db4",
    "number": 42917,
    "subject": "MCTP: Define interface for MCTP endpoint enumeration",
    "owner": {
        "name": "Tom Joseph",
        "email": "rushtotom@gmail.com",
        "username": "tomjoseph83"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/42917",
    "commitMessage": "MCTP: Define interface for MCTP endpoint enumeration\n\nThis interface will be implemented by an MCTP control message protocol\nprocess[1] that discovers MCTP communication terminuses that are\ndiscoverable by BMC. D-Bus discovery of this interface triggers higher\nlevel protocols like PLDM to complete the PLDM discovery for the MCTP\ndevices.\n\n[1] https://github.com/openbmc/docs/blob/master/designs/mctp/mctp-kernel.md\n\nSigned-off-by: Tom Joseph <rushtotom@gmail.com>\nChange-Id: I240bd3e7d300dfbc0a74ed71eb5a466e1d4a1db4\n",
    "createdOn": 1620215763,
    "lastUpdated": 1625722108,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1620215763,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1620215782,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620215835,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1620215847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620215850,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/16700/ : ABORTED"
        },
        {
            "timestamp": 1620216217,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16701/ : SUCCESS"
        },
        {
            "timestamp": 1620258820,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\nWhat's the background on this?"
        },
        {
            "timestamp": 1620303598,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> What's the background on this?\n\nIn summary, this interface will be implemented by an MCTP control daemon which does endpoint discovery and enumerates the MCTP endpoints which can be communicated by the upper layer protocols like PLDM & SPDM. Based on the supported MCTP types on the MCTP endpoint, PLDM will do the PLDM discovery flow for those endpoints that support PLDM message type."
        },
        {
            "timestamp": 1620338268,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > What's the background on this?\n> \n> In summary, this interface will be implemented by an MCTP control daemon which does endpoint discovery and enumerates the MCTP endpoints which can be communicated by the upper layer protocols like PLDM & SPDM. Based on the supported MCTP types on the MCTP endpoint, PLDM will do the PLDM discovery flow for those endpoints that support PLDM message type.\n\nRight, my feeling is it would be good to socialise this on the mailing list or Discord (mailing list preferred as it's archived)."
        },
        {
            "timestamp": 1620647910,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620648500,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620650526,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620691742,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620716789,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620723813,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1620800762,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1620800778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620801156,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17078/ : SUCCESS"
        },
        {
            "timestamp": 1620802210,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 3:\n\n@Andrew and @Deepak incorporated the review comments till now. In the description section I have tried to rationalize the need for this D-Bus interface."
        },
        {
            "timestamp": 1620813794,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1621431780,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1621431794,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621432238,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1621432953,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17610/ : SUCCESS"
        },
        {
            "timestamp": 1621433136,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1621468488,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1622452886,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1622452898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622452926,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1622453044,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1622453058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622453061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18408/ : ABORTED"
        },
        {
            "timestamp": 1622453443,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18409/ : FAILURE"
        },
        {
            "timestamp": 1622459160,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1622459183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1622459587,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/18418/ : SUCCESS"
        },
        {
            "timestamp": 1622686189,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 7:\n\n(3 comments)\n\nLooks good - just a few comments inline."
        },
        {
            "timestamp": 1622713266,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1622769783,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1623049330,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1623049467,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1623049490,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623049874,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/18844/ : FAILURE"
        },
        {
            "timestamp": 1623300758,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623308121,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623313352,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623636156,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1623648433,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1623661782,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1623727916,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1623727930,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623728303,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/19700/ : SUCCESS"
        },
        {
            "timestamp": 1623730324,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1623730340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623730713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/19702/ : SUCCESS"
        },
        {
            "timestamp": 1623793671,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(3 comments)"
        },
        {
            "timestamp": 1623819285,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 10:\n\n(3 comments)"
        },
        {
            "timestamp": 1624498662,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(3 comments)"
        },
        {
            "timestamp": 1624523170,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 10:\n\n(3 comments)"
        },
        {
            "timestamp": 1624523520,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1624523626,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1625579202,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1625579225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625579620,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21467/ : SUCCESS"
        },
        {
            "timestamp": 1625580423,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1625580434,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625580488,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1625580848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21477/ : SUCCESS"
        },
        {
            "timestamp": 1625596425,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1625596488,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1625635436,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1625659317,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12: Code-Review+2"
        },
        {
            "timestamp": 1625659321,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as e123c4615275434429ecb493a84384c5ad965ec0 by Patrick Williams"
        },
        {
            "timestamp": 1625722108,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 13: Code-Review+1\n\nProposal looks good to me. I think there are certain enhancements that can be made further down the road:\n1) Interface with method to register responder applications. This will allow other endpoints in the network to query the mctp control daemon in the BMC about the supported message types in the BMC.\n2) MCTP Endpoints to indicate association - for example: Add-In-Cards discovered in MCTP can associate themselves with \"PCIe slots\" and this would enable PLDM sensors to be associated with an inventory item."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "47158c320de27b1042eba15520185057e6f73070",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/1",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1620215763,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 66,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "cc420a8f24dae1ccb93abd6a6019833793242d2e",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/2",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1620215835,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I think some of the detail in the commit message should be described here as well - what typically implements this, and what typically uses this? Also you should mention that the implementer may also implement the UUID D-Bus interface since that is an MCTP specified way to aid identification.\n\nSome of the text here (and the property description below) might be from DSP0236 and it should be fine to just point to that. More relevant here is the why and how. You need to specify details like:\n- when are objects supposed to be created by the implementer (post MCTP discovery?)?\n- does a bridge endpoint need to be specified?\n- one object per discovered endpoint?\n- why are EID and SupportedMessageTypes needed to be implemented?\n- UUID?\n- what should happen if an endpoint goes down?\n- lifetime of the objects\n- is there a well known root path that implementers must know of?\n- what about connected bus type (where applicable)?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I think you need connected bus type because for a case where an implementation assigns the same EID to two bus paths to an endpoint, the bus type will enable upper layers to pick one (based on speed/redundancy). The \"bus type\" that I'm talking about is \"MCTP physical medium identifiers\" from DSP0239."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "The destination endpoint described by this interface can be behind a MCTP bridge. The goal is to have upper layer protocol like PLDM abstracted from the MCTP network and topology information.\n\nIf the case is that the BMC has multiple local physical interfaces[1], and the suggestion is that PLDM should be able to specify the interface the MCTP message goes out. My view is that it should be another interface that exposes the possible transport types to upper layer protocols.\n\n[1]https://github.com/openbmc/docs/blob/master/designs/mctp/mctp-kernel.md#structure-interfaces--networks"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "How are you expecting pldmd to send its MCTP messages? It feels like the answer might be \"over D-Bus\" which is not the direction MCTP in OpenBMC is headed.\n\nWhy should mctpd expose a D-Bus implementation of what is effectively the routing table when this can be queried by applications through standard kernel interfaces?\n\nThe MCTP socket API should provide a mechanism for binding a socket to a specific interface on the BMC, which will allow you to route packets directly out that interface. Routing table metrics provide information about which interface is preferred in the face of multiple possible routes."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "@tom - I'm not sure if your response was to my second comment or first \ud83d\ude0a. If it was or the second, I think you're saying the same thing as me - the transport types needs to be exposed. The interface of course can be another YAML file if that's what you meant.\n\n@andrew - I don't see how this d-bus interface implies pldmd will send MCTP messages over D-Bus (it doesn't say that anywhere). That's definitely not the intent (and maybe Tom should clarify - see my first comment above). This is more about MCTP discovery, specifically dynamic discovery (PCIe VDM). In the MCTP kernel design, it isn't clear to me what entity performs discovery and assigns EID, and subsequently how does that entity make that information (all EIDs discovered/configured statically, UUIDs if present, transport types, etc) available to upper layer protocols like PLDM. I don't think PLDM for eg cares about how a message is routed, so it doesn't care about the routing table. It cares about what EIDs are present, what are the supported message types, UUIDs, etc."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> @andrew - I don't see how this d-bus interface implies pldmd will send MCTP messages over D-Bus (it doesn't say that anywhere).\n\nOkay, I was just concerned by:\n\n> The goal is to have upper layer protocol like PLDM abstracted from the MCTP network and topology information.\n\nContinuing:\n\n> That's definitely not the intent (and maybe Tom should clarify - see my first comment above). This is more about MCTP discovery, specifically dynamic discovery (PCIe VDM). In the MCTP kernel design, it isn't clear to me what entity performs discovery and assigns EID\n\nThat's covered here:\n\nhttps://github.com/openbmc/docs/blob/master/designs/mctp/mctp-kernel.md#mctp-control-protocol-implementation\n\n> and subsequently how does that entity make that information (all EIDs discovered/configured statically, UUIDs if present, transport types, etc) available to upper layer protocols like PLDM.\n\nAll present EIDs would be present in the route table, both static and dynamic. I don't think the route table should contain route entries for dynamic EIDs that have been provided as part of a device pool but yet to be allocated to an actual endpoint.\n\nAs for transport type, are you looking for the transport type of local interfaces or the transport that the endpoint is attached to?\n\n> I don't think PLDM for eg cares about how a message is routed, so it doesn't care about the routing table.\n\nThe point here is that the route table gives you some of the information your after. You don't necessarily care about the routes themselves."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> Why should mctpd expose a D-Bus implementation of what is effectively the routing table when this can be queried by applications through standard kernel interfaces?\n\nI think there is use for information that mctpd puts on the D-Bus which can be consumed by PLDM, SPDM etc. Discovery/removal of MCTP endpoints is handled better by D-Bus rather than by each upper layer protocol implementation handling it individually. This is not orthogonal to the proposed MCTP kernel implementation."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 66,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "d184a20545dce24d4f6acc4ea16b06e179b841a3",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/3",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1620800762,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 82,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "37c45a87538939420bfd92e836af7c3a5ded36a3",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/4",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1621431780,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 12,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Another option I thought  was to name the D-Bus object path as /xyz/openbmc_project/mctp/<MCTP network ID>/deviceN. But endpoints could be management controller as well, so didn't proceed.\n\nThere was a suggestion to have the UUID in the object path to ease discovery of endpoints related to the same device. I didn't proceed with it, once reason being that UUID is optional. Other being that UUID string is '-' separated and not valid in the D-Bus object path."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can we describe here the advantage of doing this using a DBus interface provided by mctpd and not having an application listen for changes on / iterate the MCTP route table and querying the supported message types for each endpoint?\n\nAlso, paragraph splits in this section would be nice."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I have introduced the MCTP.Network interface, moved some of the documentation to MCTP/README.md"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I don't think the NetworkID should be part of this interface. Network IDs are optional, typically useful to system software (MCTP host interface) or add-in cards. I don't think its reasonable to expect everyone to implement this, We could define a new MCTP.Network interface which can have an \"ID\" property and the object implementing that shall also add the Associations interface to associate with endpoints."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "That sounds reasonable to me."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Done."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 58,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "0f10ab852c27d7b30ddd34df3f944183d69a6a6b",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/5",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1622452886,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Network/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 150,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "e25e5554f273a8da5fac3b245b659db143ef0ef1",
            "parents": [
                "33458d4432a8323616622881f314a73cf0b04d97"
            ],
            "ref": "refs/changes/17/42917/6",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1622453044,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Network/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 150,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "bba7756a59282bcbde233891c2272d03cb0873b3",
            "parents": [
                "0ae40524799fc0030418dbcf2899ca55246a6386"
            ],
            "ref": "refs/changes/17/42917/7",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1622459160,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Any reason for the 16-bit value here? We've proposed an 'int' for the kernel network IDs."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Ack, will change this to int16"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "I wasn't referring to the signed-ness there, more that you've only allowed 16 bits for the network ID. We have an `int` for the network id, which would best map to a dbus int32."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Ack"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 16,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "It's likely that non-OpenBMC systems may use MCTP too, including dbus access. Is the /xyz/openbmc_project/ namespace still suitable there?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 16,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I can rephrase this section, to make it generic with how it will be for example.com along with  openbmc_project.xyz. But the interface definition itself is named xyz.openbmc_project.MCTP.Endpoint. Curious if it is  plausible that object path is com/example/mctp and interface is owned by openbmc_project.xyz. I can revise the section like below.\n\n\"Object paths are often namespaced by starting with a reversed domain name. For instance, if the owner of example.com is implementing this MCTP interface then the root D-Bus object path for the mctpd is `/com/example/mctp'. In OpenBMC, the root D-Bus object path for mctpd is `/xyz/openbmc_project/mctp`.\""
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 16,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "I'm not super concerned about making this generic between implementations - more that we choose and Interface definitions (and object path, to a lesser extent) that caters for non-OpenBMC use cases.\n\nIf the interface definition namespace makes the most sense as xyz.openbmc_project.*, because we're defining the specification, then I'm fine to go with that."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 16,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I am retaining the interface definition in the xyz.openbmc_project.* namespace. I guess that does not rule out non-OpenBMC systems from referring/using it. I think a similar parallel is OpenBMC using the org.freedesktop interface definitions."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Following on a little from previous discussion about networks:\n\nI think the layout at the moment, with separate networks & endpoints, makes the most sense. I'm not so sure networks being optional though. If we're representing MCTP endpoints (ie, something that has an EID), then the endpoint has to be on one (and only one) network. That network may well be the 'default', for cases where the system only has one network - which will probably be the usual case.\n\nSo I think the fixed structure of /xyz/openbmc_project/mctp/<network>/<endpoint> would work best."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "My initial thought process was to have the NetworkID as part of the interface and have it as MCTP_NET_ANY in the case of only one network. Based on the feedback, had the Network as a separate interface to express the NetworkID as optional.\n\nHow to express the default network? One possibility is to use MCTP_NET_ANY(0). Then the D-Bus object path will be in /xyz/openbmc_project/mctp/0/<endpoint> and does not implement the xyz.openbmc_project.MCTP.Network interface."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "The system will always know what network any given endpoint is on; I'm not sure we'd ever need to represent an \"default network\" for this interface at all.\n\nHowever, yes, we've reserved network ID 0 for \"send to the default network\", or \"receive from any network\". But I don't think we want to use those here - we can always be specific."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> The system will always know what network any given endpoint is on; I'm not sure we'd ever need to represent an \"default network\" for this interface at all.\n\nYes, I am leaning towards that as well. If it is the default network, don't implement the xyz.openbmc_project.MCTP.Network interface."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Even if it's on the \"default\" network, it's useful to know the network ID of an endpoint; I'd suggest that we always represent the network ID in the dbus structure, even if it's the default (and the default may change).\n\n[This may mean it's no longer useful to split the interfaces into Endpoint & Network, but I'm OK with either approach there]"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> Even if it's on the \"default\" network, it's useful to know the network ID of an endpoint; I'd suggest that we always represent the network ID in the dbus structure, even if it's the default (and the default may change).\n\nSure, since a network ID exists in the case of default network as well. We can have it in the D-Bus structure.\n\nDeepak/Andrew does that work for both of you?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Deepak Kodihalli",
                        "email": "deepak.kodihalli.83@gmail.com",
                        "username": "dkodihal"
                    },
                    "message": "I'm not sure I followed. Is this about 12.16 Get Network ID from DSP0236 or something else. The Network ID as defined in DSP0236 is optional:\n\n\"A Network ID is required for add-in MCTP networks (For example, an MCTP Network on an add-in card or module). A Network ID is not required for a fixed (not add-in) MCTP network provided there is only one network in the system implementation.\"\n\nFurther, \"The format of the ID follows the byte (octet) format specified in RFC4122.\", a UUID."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "> I'm not sure I followed. Is this about 12.16 Get Network ID from DSP0236 or something else. The Network ID as defined in DSP0236 is optional:\n\nSort of - these network IDs are just local numbers to index separate MCTP networks on the machine. A user *may* associate a UUID with that network, which would allow the control protocol implementation to return that UUID in response to a Get Network ID request.\n\nSo, regardless whether we implement 12.16 Get Network ID, we'll still need to know what network a specific endpoint is on, which is what this property specifies. This is used to allow the local stack to populate a destination sockaddr_mctp, which includes an eid and a network ID.\n\nYour reference to the Get Network ID does bring up a good point though - we need some way to represent the UUID for a network. That confirms the need for an actual dbus object for the network, with a UUID property."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "For upper layer protocols communicating with the MCTP kernel stack would need both the eid and the network ID, patchset 4 with eid and network ID as properties looks to be a good fit.\n\n> Your reference to the Get Network ID does bring up a good point though - we need some way to represent the UUID for a network. That confirms the need for an actual dbus object for the network, with a UUID property.\n\nNetwork ID can be implemented as a separate D-Bus object, like /xyz/openbmc_project/mctp/network/<network ID> implementing UUID interface. There can be D-Bus associations between endpoints and this D-Bus object."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Network/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 149,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "4d2c3ff8a5008a5e15587fbc7870656baed9f4aa",
            "parents": [
                "0ae40524799fc0030418dbcf2899ca55246a6386"
            ],
            "ref": "refs/changes/17/42917/8",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1623049467,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Representing supported message types as array[bytes] is perfectly ok, however representing them with boolean properties gives the advantage of easier parsing from the upper layer protocol: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/30139/14/xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "The proposed interfaces look fine, however few queries -\n\n1. If BMC acts as a responder for upper layer protocol (say PLDM etc), the proposed mctpd should respond with the list of the supported message types it supports. Do you see an usecase of having a \"registerSupportedMessagetTypes\" method through which responder applications on BMC register themselves with mctpd? This should enable the proposed mctpd to respond to queries of get supported message types command\n\n2. You could have upper layer protocols that look for MCTP devices on a specific medium only; thus can we have a physical medium identifier as a property on the endpoint object?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> 1. If BMC acts as a responder for upper layer protocol (say PLDM etc), the proposed mctpd should respond with the list of the supported message types it supports. Do you see an usecase of having a \"registerSupportedMessagetTypes\" method through which responder applications on BMC register themselves with mctpd? This should enable the proposed mctpd to respond to queries of get supported message types command\n\nSounds good.\n\n> 2. You could have upper layer protocols that look for MCTP devices on a specific medium only; thus can we have a physical medium identifier as a property on the endpoint object?\n\nI am not handling such a scenario now, feel free to make changes as follow-up patches."
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Sorry, I might be missing something. Why does this not correspond to actual endpoint ID?"
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> does not correspond to the actual endpoint ID\n\nEndpoint ID's may not be unique and can be duplicate across networks. So didn't want that conflict in D-Bus object paths. Will revisit the section with the latest feedback."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Network/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/Network.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 149,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "43a0641d97d76f09caa6b5c8533da90b8352b511",
            "parents": [
                "08baf48ad5f15774d393fbbf4e9479a0ef3e82d0"
            ],
            "ref": "refs/changes/17/42917/9",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1623727916,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Network/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "bab71eb929e172552b3c41b96b51088539a0632d",
            "parents": [
                "08baf48ad5f15774d393fbbf4e9479a0ef3e82d0"
            ],
            "ref": "refs/changes/17/42917/10",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1623730324,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Does the MCTP protocol require these to be byte?  Are NetworkIDs similarly expected to be int32 by the spec?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "EID is a single byte in the specification, can't rule out the possibility of a change in the next version of MCTP spec.\n\n> Are NetworkIDs similarly expected to be int32 by the spec?\nNetworkID is a MCTP kernel stack defined identifier(int smctp_network) and not coming from the specification.\n\nhttps://github.com/openbmc/docs/blob/master/designs/mctp/mctp-kernel.md"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we just use 'size' for both of them then?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Sure"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we make these enumeration values?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Array of enumerations?\n\nFrom my initial reading of the spec, my understanding was that a range of message types is vendor defined, in which case I was not sure how to express it in the property as an enumeration. \n\nOn a closer look at the spec, the vendor defined message types are well defined [Vendor Defined \u2013 PCI - 0x7E], [Vendor Defined \u2013 IANA - 0x7F], so the D-Bus property needs to only show this capability."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "When it is something like \"Vendor Defined - IANA\" is there additional information you need for support?  Or is that just one type where there is some kind of identifier sent in the message to correspond with IANA?\n\nIf you can create enumerations for these it seems less error prone to me than spreading the #defines around for these."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> When it is something like \"Vendor Defined - IANA\" is there additional information you need for support?  Or is that just one type where there is some kind of identifier sent in the message to correspond with IANA?\n\nFrom the reading of the spec, as part of endpoint discovery, GetMessageTypeSupport command is sent. If vendor defined message type is supported then GetVendorDefinedMessageSupport command is sent to get the PCI Vendor ID or/and IANA. Consumers of this message type would need to know  PCI Vendor ID/IANA to communicate with the vendor defined message type.\n\nWe might need more discussion on how kernel stack will handle vendor defined message types. I am right now interested in the standard types."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "As it stands at the moment, the kernel won't have any knowledge of the message types; it just uses the (opaque-to-the-kernel) 7-bit value in order to correlate messages to sockets.\n\nSo, vendor-defined message types won't be any different from the standard sets in that regard."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": ".. and thinking on this further: I think I'd prefer *not* to require enumeration values for the message types, as this will make it unnecessarily difficult to experiment with new types. We don't require enumeration for UDP/TCP ports elsewhere, right?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "@Patrick, Thoughts on this thread?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Sure.  It is up to you two.  Enumerations are nice because you get the number<->string mapping done for you automatically and you don't have to worry about people putting #defines all over in code repositories.  If they are analogous to IP ports, then maybe it isn't necessary though."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "The EID's are analogous to IP addresses and the message type numbers is similar to a port number."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If these are part of the path, why are they also properties in the object?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "<NetworkId> was added to the network path to aid enumeration of endpoints under the NetworkId, not particular that the implementation have the <EID> in the object patch. A previous patchset had the objectPath naming as <NetworkId>/endpointN where N was implementation dependent. Any suggestions?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It seems like NetworkId can come from the path then but not EID?  Those are just arbitrarily assigned?  It's up to you.  It seems partially redundant but we also don't really want code to have to parse the path if they're using the NetworkId to turn around and make a kernel call."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "The NetworkID and EID are assigned by the discovery portion of the MCTP protocol.\n\nAgree, there is redundancy of data in the object path and properties and seems awkward to parse the object path to setup the socket."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Was there any intended change here?  I can't tell from your response."
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I intend to keep this section same. \n\nJust agreed with your observation that there is a redundancy of data in the object path and properties, at the same time don't want consumers to parse the object path to figure out the NetworkId and EID."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 116,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "23e3f26067531774f2867007e4e467756c9967ba",
            "parents": [
                "08baf48ad5f15774d393fbbf4e9479a0ef3e82d0"
            ],
            "ref": "refs/changes/17/42917/11",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1625579202,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "9952124e06c68009c1de7e3e7759f037ea5de803",
            "parents": [
                "08baf48ad5f15774d393fbbf4e9479a0ef3e82d0"
            ],
            "ref": "refs/changes/17/42917/12",
            "uploader": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "createdOn": 1625580423,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 116,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "e123c4615275434429ecb493a84384c5ad965ec0",
            "parents": [
                "5167e22a72ec4633dbaf2a9450a337dd8a5ac680"
            ],
            "ref": "refs/changes/17/42917/13",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1625659321,
            "author": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/Endpoint/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/MCTP/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/MCTP/README.md",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 116,
            "sizeDeletions": 0
        }
    ]
}