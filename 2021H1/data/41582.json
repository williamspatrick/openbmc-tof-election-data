{
    "project": "openbmc/phosphor-pid-control",
    "branch": "master",
    "id": "I1251207b342aa1159a0dc29def6b0cf301a18be7",
    "number": 41582,
    "subject": "fix fan auto mode",
    "owner": {
        "email": "linchuyuan@google.com",
        "username": "linchuyuan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-pid-control/+/41582",
    "commitMessage": "fix fan auto mode\n\nProblem: swarmpd remembers the last written value to dbus. If there is no\nchange in the value. The next write would be a no-op. This make sense as\nit reduces the communication to the dbus. However, if the user\ninteracted with the dbus directly, e.g. change the fan speed manually,\nswarmpd would not know about this operation and it thinks it is still\nrunning at the old value. As a result, when user wants to go back to the\nauto mode, swarmpd would simply just do nothing because it thinks\nnothing is changed. I tested it with the fan failsafe mode. Normally,\nthe fan failsafe mode is set to 100%. Once I override it to 50% (manual\nmode enabled), it could not go back to 100% after manual mode is\ndisabled.\n\nChange-Id: I1251207b342aa1159a0dc29def6b0cf301a18be7\nSigned-off-by: Chu Lin <linchuyuan@google.com>\n",
    "createdOn": 1616650852,
    "lastUpdated": 1617209649,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1616650852,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1616650870,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1616692392,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1616695963,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 2:\n\nLooks like you don't have CI privs,\njoin Discord https://discord.com/invite/69Km47zH98 and ask an admin to help give you CI privs."
        },
        {
            "timestamp": 1616695979,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 2:\n\nI think the admin I asked was Brad Bishop FYI"
        },
        {
            "timestamp": 1616705700,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nThis new logic deserves a simple unit test"
        },
        {
            "timestamp": 1617044533,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\nI have a similar WIP change: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-pid-control/+/36695"
        },
        {
            "timestamp": 1617045022,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 2:\n\nI had the same bug as well, earlier, and fixed it in 36695. However, I haven't touched that patch in a while, it works, but it's still WIP because I went on to other things. However, I should revisit it, thanks for the wake-up call.\n\nYour patch here has some good ideas in it, such as handling both processFans() and processThermals(), and handling the stepwise controller also. However, I'm not sure it's necessary to disturb so much of the API by adding the boolean parameter to so many different functions."
        },
        {
            "timestamp": 1617209649,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Abandoned\n\nClosing this one we have a different fix now"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8f80159cc4a3dbe83ad0f1366ec3294e7f6c7936",
            "parents": [
                "17971efddc5e44b5a7926d9b3c71def03b739a75"
            ],
            "ref": "refs/changes/82/41582/1",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1616650852,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "pid/controller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/fancontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/fancontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/pidcontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/pidcontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/stepwisecontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "pid/stepwisecontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/thermalcontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/thermalcontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/zone.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "pid/zone.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 18
        },
        {
            "number": 2,
            "revision": "43a071f78cda2c12f0055bcdf94bd80d9c526551",
            "parents": [
                "17971efddc5e44b5a7926d9b3c71def03b739a75"
            ],
            "ref": "refs/changes/82/41582/2",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1616692392,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "pid/zone.cpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Shouldn't this logic be inverted and a bit more involved?\ne.g we only care about when the new _manualMode is false and the previous _manualMode is true."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "pid/controller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/fancontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/fancontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/pidcontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/pidcontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/stepwisecontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "pid/stepwisecontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "pid/thermalcontroller.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/thermalcontroller.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "pid/zone.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "pid/zone.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 18
        }
    ]
}