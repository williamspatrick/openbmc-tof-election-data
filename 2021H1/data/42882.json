{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "topic": "bmc-reset-host-up",
    "id": "I07bc3b3eac4fdfde2a8a1798c2a29f5f2a34a832",
    "number": 42882,
    "subject": "host-condition: implement property read",
    "owner": {
        "name": "Andrew Geissler",
        "email": "geissonator@yahoo.com",
        "username": "geissonator"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/42882",
    "commitMessage": "host-condition: implement property read\n\nThis is the implementation of the new PDI interface for checking if the\nhost is running.\n\nTested:\n- Verified when host was not running that expected response was\n  provided:\n  busctl get-property xyz.openbmc_project.Control.Host /xyz/openbmc_project/control/host0 xyz.openbmc_project.Condition.HostFirmware CurrentFirmwareCondition\n  s \"xyz.openbmc_project.Condition.HostFirmware.FirmwareCondition.Off\"\n\n- Verified when host was running, that expected response was provided:\n  busctl get-property xyz.openbmc_project.Control.Host /xyz/openbmc_project/control/host0 xyz.openbmc_project.Condition.HostFirmware CurrentFirmwareCondition\n  s \"xyz.openbmc_project.Condition.HostFirmware.FirmwareCondition.Running\"\n\n- Verified that if hostAckCallback is not called within allotted time\n  that hostAckTimer expires and successfully sets the hostCondition\n\nSigned-off-by: Andrew Geissler <geissonator@yahoo.com>\nChange-Id: I07bc3b3eac4fdfde2a8a1798c2a29f5f2a34a832\n",
    "createdOn": 1620079070,
    "lastUpdated": 1620421950,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1620079070,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1620079096,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620079097,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1620079248,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16607/ : SUCCESS"
        },
        {
            "timestamp": 1620157467,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1620159633,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1620162371,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1620162371,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2:\n\n(7 comments)"
        },
        {
            "timestamp": 1620162385,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620162659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16676/ : SUCCESS"
        },
        {
            "timestamp": 1620163783,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1620167600,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1620249887,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1620249887,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1620249901,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620250045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16738/ : SUCCESS"
        },
        {
            "timestamp": 1620254818,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1620309920,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1620315410,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1620315410,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1620315421,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620315563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16814/ : SUCCESS"
        },
        {
            "timestamp": 1620316703,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1620320068,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1620325072,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Topic set to bmc-reset-host-up"
        },
        {
            "timestamp": 1620378946,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1620421950,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Change has been successfully rebased and submitted as 758e3af98f90f0526aee315bac8c6dc9d8c1bd0c by Andrew Geissler"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "c4037e7c5dddc2544c1a31829a3b1aed6c438486",
            "parents": [
                "aca18c26d9ea61798573be8e36efc0d65090f6ee"
            ],
            "ref": "refs/changes/82/42882/1",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1620079070,
            "author": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "host-interface.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think this is necessary and is actually buggy because the code becomes non-reentrant (but you can't stop it from being called again)."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest `auto`."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You might want to use phosphor::host::command::CommandHandler here rather than causing a type conversion on line 101."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest `auto`."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Any reason this isn't 0?  I think you're just wanting to know if the future is already complete."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Yeah, I was just thinking it had to be non-zero but I don't see anything saying that in the docs."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Make log messages DEBUG"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "No longer needed now that it's not static"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 57,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "10781b4c839f1a4629063609b52846f1c4ba60cc",
            "parents": [
                "aca18c26d9ea61798573be8e36efc0d65090f6ee"
            ],
            "ref": "refs/changes/82/42882/2",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1620162371,
            "author": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "host-interface.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "We should avoid using std::promise / std::future. It would be worth implementing out own lightweight versions that don't have the locking / serialization + allocations that were needed for the multithreaded variant."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I'm not a big fan of the roll our own approach. This may be a bit overkill but it works using off the shelf standard lib features and this is not in any type of high use or high performance path. With that said, I can't really argue with your comment below about just using std::make_shared<std::optional<Host::FirmwareCondition>> so I moved over to that."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "You should capture the promise by value (move) in case a timeout causes the reference to go away before the callback is executed."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I moved to a shared_ptr so we should be good here now (I think?)."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "Move the callback instead of copying."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 107,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "You have to wait an entire second before you can determine the result? I guess this is tweakable but it feels like you really want to be notified here."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Yeah, somewhat of an arbitrary number to make the for loop easier. I'll optimize it a bit."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "It doesn't feel like you are benefiting much from the use of futures here. If you shared a std::shared_ptr<std::optional<Host::FirmwareCondition>> you could get the same behavior without any of the underlying threading protections std::future offers.\n\nIt would make more sense once we have futures that can be awoken as part of a larger async state machine."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Yeah, I'm fine with this. Seems to work just as well."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "84d51ecf539aa19365ad13e1d53096ce8d25eb3b",
            "parents": [
                "aca18c26d9ea61798573be8e36efc0d65090f6ee"
            ],
            "ref": "refs/changes/82/42882/3",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1620249887,
            "author": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "host-interface.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can't you just return from here? RAII patterns allow you to return from anywhere in a function without having to worry about any cleanups (and you don't have any anyhow)."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "rather than polling for the timeout, why not just use a timer that expires at the timeout? If the event happens prior to the timeout, it can cancel the timer. If the timer expires, you run the error condition."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Done"
                },
                {
                    "file": "host-interface.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there a reason you put parens around this?  In some contexts that can mean something different so it made me go look to see if this is one of them."
                },
                {
                    "file": "host-interface.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "No, no reason, just an old/bad habit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "host-interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 54,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 4
        },
        {
            "number": 4,
            "revision": "19c5337ac1cd0cf7437f301c1edd497f32a4b7ac",
            "parents": [
                "aca18c26d9ea61798573be8e36efc0d65090f6ee"
            ],
            "ref": "refs/changes/82/42882/4",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1620315410,
            "author": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "host-interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 4
        },
        {
            "number": 5,
            "revision": "758e3af98f90f0526aee315bac8c6dc9d8c1bd0c",
            "parents": [
                "c7021b86146ea8fe0667b31ae6087122c02be24e"
            ],
            "ref": "refs/changes/82/42882/5",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1620421950,
            "author": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "host-interface.cpp",
                    "type": "MODIFIED",
                    "insertions": 50,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 4
        }
    ]
}