{
    "project": "openbmc/phosphor-ipmi-flash",
    "branch": "master",
    "id": "I159a132b76eadc569efb8fb47488a4abd4c27404",
    "number": 40716,
    "subject": "tools/pci: Use pci_device_enable() to enable bridge",
    "owner": {
        "name": "Vivekanand Veeracholan",
        "email": "vveerach@google.com",
        "username": "viarand"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-ipmi-flash/+/40716",
    "commitMessage": "tools/pci: Use pci_device_enable() to enable bridge\n\nEnabling the bridge by writing to the PCI config space does not enable\nall the host resources required.\nUse pci_device_enable api.\n\nSigned-off-by: Vivekanand Veeracholan <vveerach@google.com>\nChange-Id: I159a132b76eadc569efb8fb47488a4abd4c27404\n",
    "createdOn": 1613679178,
    "lastUpdated": 1615245502,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1613679178,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1613679207,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613679229,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12633/ : FAILURE"
        },
        {
            "timestamp": 1613701125,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1: Code-Review+1\n\nBenjamin is the most familiar with this code, would like to defer +2 to him."
        },
        {
            "timestamp": 1613704459,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 1:\n\nAre we missing something to unwind this with pci_device_disable?"
        },
        {
            "timestamp": 1613706108,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> Are we missing something to unwind this with pci_device_disable?\n\nlibpciaccess does not have an api to disable."
        },
        {
            "timestamp": 1613706148,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > Are we missing something to unwind this with pci_device_disable?\n> \n> libpciaccess does not have an api to disable.\n\nshould we try to add it there? I couldn't find a reason why it was not provided."
        },
        {
            "timestamp": 1614104791,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> Are we missing something to unwind this with pci_device_disable?\n\nWould it be able to know what state to put the other bridges back into? What if something else is relying on a bridge that was enabled here and we disable it unexpectedly?"
        },
        {
            "timestamp": 1614105398,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 1: Code-Review+1\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > Are we missing something to unwind this with pci_device_disable?\n> \n> Would it be able to know what state to put the other bridges back into? What if something else is relying on a bridge that was enabled here and we disable it unexpectedly?\n\nOther devices are reference counted by the kernel (there is an enable count), assuming you go through the sysfs interface:\nhttps://elixir.bootlin.com/linux/latest/source/drivers/pci/pci.c#L2162\n\nOther devices relying on the bridge being enabled without actually enabling it (and increasing reference count) is a bug.\n\n+1 to add a disable function to libpciaccess. Might need some investigation on how the disable would behave with non-sysfs implementations there.\n\nFWIW, leaving the pci device enabled doesn't seem like too much of an issue (and is definitely better than it not working)."
        },
        {
            "timestamp": 1614363537,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1614364488,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614364739,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614364870,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614370375,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614374688,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614374810,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614375519,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614544767,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Removed Code-Review+1 by Moritz Fischer (1001030)\n"
        },
        {
            "timestamp": 1614544774,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1614669568,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1614669580,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614669605,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13181/ : FAILURE"
        },
        {
            "timestamp": 1614669704,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1614669716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614669743,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13183/ : FAILURE"
        },
        {
            "timestamp": 1614801489,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1614801503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614801792,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13280/ : FAILURE"
        },
        {
            "timestamp": 1614896057,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1614896086,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614896472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13347/ : SUCCESS"
        },
        {
            "timestamp": 1614901462,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5: Code-Review+1\n\nIt looks like the comments may be addressed? How is the disable work being tracked?"
        },
        {
            "timestamp": 1615231599,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1615231701,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5: Code-Review+1\n> \n> It looks like the comments may be addressed? How is the disable work being tracked?\n\nCan we create an issue to track?"
        },
        {
            "timestamp": 1615232042,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Patch Set 5: Code-Review+1\n> > \n> > It looks like the comments may be addressed? How is the disable work being tracked?\n> \n> Can we create an issue to track?\n\nYes, let's create an issue (I guess the issue has to be tracked at where libpciaccess code is)"
        },
        {
            "timestamp": 1615232214,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1615232276,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 5: Code-Review+1\n\nCan someone summarize why we are so concerned with leaving it enabled? \n\nTbh, I'd rather leave it enabled (with a tracking bug to implement the rest in libpciaccess).\n\nBut if everyone else prefers to retain the direct config writes, I'd take that over not working."
        },
        {
            "timestamp": 1615234793,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5: Code-Review+1\n> \n> Can someone summarize why we are so concerned with leaving it enabled? \n> \n> Tbh, I'd rather leave it enabled (with a tracking bug to implement the rest in libpciaccess).\n> \n> But if everyone else prefers to retain the direct config writes, I'd take that over not working.\n\nAfter typing up the patch for libpciaccess, I realized only the linux_sysfs backend even implements enable, so if you want this to be portable to *BSD etc, you'd have to figure out another way of turning on the upstream devices.\n\npci_device_enable(struct pci_device *dev)\n{\n    if (dev == NULL) {\n        return;\n    }\n\n    if (pci_sys->methods->enable)\n        pci_sys->methods->enable(dev);\n}\n\nand:\n\n$ git grep 'enable ='\nsrc/freebsd_pci.c:    .enable = NULL,\nsrc/linux_sysfs.c:    .enable = pci_device_linux_sysfs_enable,\n\n\nAnyways, I'll send out a patch to libpciaccess for pci_disable_device() for the linux_sysfs() case."
        },
        {
            "timestamp": 1615235795,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1615235808,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615236506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13490/ : SUCCESS"
        },
        {
            "timestamp": 1615237494,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1615238029,
            "reviewer": {
                "name": "Moritz Fischer",
                "username": "mfischer"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Patch Set 5: Code-Review+1\n> > \n> > Can someone summarize why we are so concerned with leaving it enabled? \n> > \n> > Tbh, I'd rather leave it enabled (with a tracking bug to implement the rest in libpciaccess).\n> > \n> > But if everyone else prefers to retain the direct config writes, I'd take that over not working.\n> \n> After typing up the patch for libpciaccess, I realized only the linux_sysfs backend even implements enable, so if you want this to be portable to *BSD etc, you'd have to figure out another way of turning on the upstream devices.\n> \n> pci_device_enable(struct pci_device *dev)\n> {\n>     if (dev == NULL) {\n>         return;\n>     }\n> \n>     if (pci_sys->methods->enable)\n>         pci_sys->methods->enable(dev);\n> }\n> \n> and:\n> \n> $ git grep 'enable ='\n> src/freebsd_pci.c:    .enable = NULL,\n> src/linux_sysfs.c:    .enable = pci_device_linux_sysfs_enable,\n> \n> \n> Anyways, I'll send out a patch to libpciaccess for pci_disable_device() for the linux_sysfs() case.\n\nhttps://gitlab.freedesktop.org/xorg/lib/libpciaccess/-/merge_requests/17"
        },
        {
            "timestamp": 1615241451,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 6:\n\n> Patch Set 5: Code-Review+1\n> \n> Can someone summarize why we are so concerned with leaving it enabled? \n> \n> Tbh, I'd rather leave it enabled (with a tracking bug to implement the rest in libpciaccess).\n> \n> But if everyone else prefers to retain the direct config writes, I'd take that over not working.\n\nOur security people wanted it left disabled when not in use. The datasheet for the part also says to keep it disabled unless needed.\n\nIt's not likely to be security critical, but always good to add more layers for defense in depth\n\n\nThanks for sending the upstream patch :)"
        },
        {
            "timestamp": 1615241653,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1615244739,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1615244943,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1615244958,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615245023,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1615245343,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13494/ : SUCCESS"
        },
        {
            "timestamp": 1615245400,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7: Code-Review+2"
        },
        {
            "timestamp": 1615245502,
            "reviewer": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "message": "Change has been successfully merged by Vivekanand Veeracholan"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "38068f143eb1f174b7ddc27cf6fd7be51741fac1",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/1",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1613679178,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tools/pci.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "should call through the pci object instead of calling the library directly"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "Done"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "do we still need the cfg write if we're using pci_device_enable?"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Moritz Fischer",
                        "username": "mfischer"
                    },
                    "message": "If all this is doing is setting MMIO enable bit, this should go away.\n\nI was under the impression there was some device specific thing happening, if not, then yeah by all means get rid of that (and corresponding code in the header)."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Moritz Fischer",
                        "username": "mfischer"
                    },
                    "message": "Yeah, this entire function should essentially be pci->pci_device_enable(dev)."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "It's just setting the MMIO bit here.\n\nThe Aspeed one enables the bridge through a reserved section of the BAR rather than the config space, so that code will need to stay"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "I think you wanted to retain the disable through config space. So if we are doing that, we need this cfg write."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "We should only need it in the disableBridge function, right?\n\nAlso you may want to add a comment there about how pci_disable_device doesn't exist yet, and that's why there's a manual config write"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "Since the disable is directly writing to the config space, the sysfs enable does not keep track of it. so the next time we call the pcienable, it is a no-op. \nIf we are accessing config space directly to disable, we need to have this cfg space enable as well."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "That's a good point. You should document that in a comment too"
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Moritz Fischer",
                        "username": "mfischer"
                    },
                    "message": "You might just add a pci_device_is_enabled() at least the sysfs code in linux lets you query that. You can hide it in the implementation of your class unti you added the code to libpciaccess. At least things can move forward that way.\n\n1. Add function pci_device_disable (essentially open, write, close / echo 0 > /sys/..../enable)\n2. Add function pci_device_is_enabled(essentially open, read, close / cat /sys/.../enable)\n3. Now you can do:\n\nif (!pci_device_is_enabled(...)) {\n  pci_device_enable(...);\n}\n\n...\n\npci_device_disable(...);\n\nIf you insist on disabling it on close.\n\nI don't think bypassing the refcounting is a good idea."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "I think we cannot have a linux sysfs code in here since this is generic. \nI will update the comments."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 12,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "2cf52d82bf052b59da49385d649f32ea39ef7466",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/2",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1614669568,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "701e346cd56c94a64569f5dd9c930964a811d231",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/3",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1614669704,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "f4b60baac29e33483429810e0425538555c92694",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/4",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1614801489,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "658c011caeed9007ad56ea8b13ebcb1c324b46cc",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/5",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1614896057,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tools/test/pciaccess_mock.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Benjamin Fair",
                        "email": "benjaminfair@google.com",
                        "username": "BenjaminFair"
                    },
                    "message": "Please add EXPECT_CALLs to tools/test/tools_pci_unittest.cpp for this method to make sure it gets called when we want it to"
                },
                {
                    "file": "tools/test/pciaccess_mock.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tools/test/pciaccess_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "9754629ee8da5b65422a9002c78c7b752ff4a899",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/6",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1615235795,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tools/pci.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: Do you mind updating the comment with the upstream patch that Moritz provided? https://gitlab.freedesktop.org/xorg/lib/libpciaccess/-/merge_requests/17\n\nHere and in the other file."
                },
                {
                    "file": "tools/pci.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Vivekanand Veeracholan",
                        "email": "vveerach@google.com",
                        "username": "viarand"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tools/test/pciaccess_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tools/test/tools_pci_unittest.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 36,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "55b1a71da3be028675becf994b2ee9b46156a7ed",
            "parents": [
                "7d39eb04acdc6e654019adabda589bcbe0d91971"
            ],
            "ref": "refs/changes/16/40716/7",
            "uploader": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "createdOn": 1615244943,
            "author": {
                "name": "Vivekanand Veeracholan",
                "email": "vveerach@google.com",
                "username": "viarand"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tools/pci.cpp",
                    "type": "MODIFIED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tools/pciaccess.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "tools/test/pciaccess_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tools/test/tools_pci_unittest.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 38,
            "sizeDeletions": 0
        }
    ]
}