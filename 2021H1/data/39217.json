{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Id97282bcd12b70fb7fc92f4d06e0e326522894a3",
    "number": 39217,
    "subject": "FanSensor: Add initial of pwm enable file",
    "owner": {
        "email": "JeffLin2@quantatw.com",
        "username": "JinFuLin"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/39217",
    "commitMessage": "FanSensor: Add initial of pwm enable file\n\n  For some fan controller, they need to set the specific regulator mode\nto make the corresponding fan be able to be updated.\n  For example, we are using fan controller MAX31790 and it need to write\n1 into ./hwmon1/pwm1_enable to make ./hwmon1/fan1_input be able to be\nupdated.\n  Add MAX31790 in sensor type and make it write 1 into pwm*_enable file\nautomatically.\n\nTested:\n1. Remove entry \"Pwm\" in connector of some I2CFan in json and verify\n   pass.\n\nSigned-off-by: Jeff Lin <JeffLin2@quantatw.com>\nChange-Id: Id97282bcd12b70fb7fc92f4d06e0e326522894a3\n",
    "createdOn": 1608692900,
    "lastUpdated": 1617982142,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1608692900,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1608692914,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608693011,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10238/ : SUCCESS"
        },
        {
            "timestamp": 1608695773,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1608725510,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1608725523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608725616,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10267/ : SUCCESS"
        },
        {
            "timestamp": 1608725845,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1608806509,
            "reviewer": {
                "email": "rashmi.r.v@linux.intel.com",
                "username": "Rashmi-RV"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1608857520,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1609021819,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1609306360,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1609306374,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609306447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10366/ : SUCCESS"
        },
        {
            "timestamp": 1609306531,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 5: Commit message was updated."
        },
        {
            "timestamp": 1609306864,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1609352649,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1610072482,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1610072497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610072522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/10653/ : FAILURE"
        },
        {
            "timestamp": 1610073370,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1610073382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610073460,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10654/ : SUCCESS"
        },
        {
            "timestamp": 1610073852,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1612218426,
            "reviewer": {
                "name": "Yong Zhao",
                "email": "yozhao@google.com",
                "username": "YongZhao12"
            },
            "message": "Patch Set 7:\n\nThis type of change is not generic enough. Think about a situation where people want automatic mode (i. e. 2) instead of manual mode (i. e. 1). I think you can implement that in another component (such as a script or service after system boots up) to achieve it. I could be wrong as I am new to this project."
        },
        {
            "timestamp": 1612232617,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1612232627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612232703,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11753/ : SUCCESS"
        },
        {
            "timestamp": 1612234669,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 8:\n\n> Patch Set 7:\n> \n> This type of change is not generic enough. Think about a situation where people want automatic mode (i. e. 2) instead of manual mode (i. e. 1). I think you can implement that in another component (such as a script or service after system boots up) to achieve it. I could be wrong as I am new to this project.\n\nThanks for your opinion!\nActually, this modification is for purpose of making the pwm mode not be \"disable\" because the entry \"Pwm\" here will generate the control interface.\nI correct the condition for setting the mode to 1.\nMaybe it is better to add an entry \"pwmEnable\" to specify the initial mode of pwm by modifying json file?"
        },
        {
            "timestamp": 1612236238,
            "reviewer": {
                "name": "Yong Zhao",
                "email": "yozhao@google.com",
                "username": "YongZhao12"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> > Patch Set 7:\n> > \n> > This type of change is not generic enough. Think about a situation where people want automatic mode (i. e. 2) instead of manual mode (i. e. 1). I think you can implement that in another component (such as a script or service after system boots up) to achieve it. I could be wrong as I am new to this project.\n> \n> Thanks for your opinion!\n> Actually, this modification is for purpose of making the pwm mode not be \"disable\" because the entry \"Pwm\" here will generate the control interface.\n> I correct the condition for setting the mode to 1.\n> Maybe it is better to add an entry \"pwmEnable\" to specify the initial mode of pwm by modifying json file?\n\nThat will be better, but I am not sure whether that is consistent with the design of dbus sensor, as directly changing value is not seen very often."
        },
        {
            "timestamp": 1612240552,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> > Patch Set 8:\n> > \n> > > Patch Set 7:\n> > > \n> > > This type of change is not generic enough. Think about a situation where people want automatic mode (i. e. 2) instead of manual mode (i. e. 1). I think you can implement that in another component (such as a script or service after system boots up) to achieve it. I could be wrong as I am new to this project.\n> > \n> > Thanks for your opinion!\n> > Actually, this modification is for purpose of making the pwm mode not be \"disable\" because the entry \"Pwm\" here will generate the control interface.\n> > I correct the condition for setting the mode to 1.\n> > Maybe it is better to add an entry \"pwmEnable\" to specify the initial mode of pwm by modifying json file?\n> \n> That will be better, but I am not sure whether that is consistent with the design of dbus sensor, as directly changing value is not seen very often.\n\nFor my perspective, the entity-manager provide the configuration for each sensor through json file and then dbus-sensor create the environment to monitor the existing sensor.\nFor example, the CPU Sensor will export the device.\nTherefore I think the mode of pwm should be enabled before fan sensor started polling.\nIf I have misunderstanding with dbus-sensor please correct me."
        },
        {
            "timestamp": 1617912826,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)\n\nOne super minor change, then this looks good to go."
        },
        {
            "timestamp": 1617913895,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> > Patch Set 8:\n> > \n> > > Patch Set 8:\n> > > \n> > > > Patch Set 7:\n> > > > \n> > > > This type of change is not generic enough. Think about a situation where people want automatic mode (i. e. 2) instead of manual mode (i. e. 1). I think you can implement that in another component (such as a script or service after system boots up) to achieve it. I could be wrong as I am new to this project.\n> > > \n> > > Thanks for your opinion!\n> > > Actually, this modification is for purpose of making the pwm mode not be \"disable\" because the entry \"Pwm\" here will generate the control interface.\n> > > I correct the condition for setting the mode to 1.\n> > > Maybe it is better to add an entry \"pwmEnable\" to specify the initial mode of pwm by modifying json file?\n> > \n> > That will be better, but I am not sure whether that is consistent with the design of dbus sensor, as directly changing value is not seen very often.\n> \n> For my perspective, the entity-manager provide the configuration for each sensor through json file and then dbus-sensor create the environment to monitor the existing sensor.\n> For example, the CPU Sensor will export the device.\n\nAgreed, ideally each sensor would have 100% of the code needed to instantiate and run a given sensor.  We're not there today.\n\n> Therefore I think the mode of pwm should be enabled before fan sensor started polling.\n\nThis patch does that.... Unless I'm misunderstanding your statement.\n\n> If I have misunderstanding with dbus-sensor please correct me."
        },
        {
            "timestamp": 1617920931,
            "reviewer": {
                "name": "Zhenfei Tai",
                "email": "ztai@google.com",
                "username": "ztai-goog"
            },
            "message": "Patch Set 8:\n\nTested locally with this change in a patch file with modified entity manager config."
        },
        {
            "timestamp": 1617953120,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1617953134,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617953254,
            "reviewer": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1617953433,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15173/ : SUCCESS"
        },
        {
            "timestamp": 1617982136,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1617982142,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "4beaf61d8617180cf517f77f2bfa18fc08f54379",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/1",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1608692900,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Rather than adding a new config entry, can we just keep a list of driver types that require enabling the PWM outputs, or detect it somehow?  That seems much easier."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "I add array for recording what device can write pwm*_enable automatically.\nIf I had misunderstand, please correct me.\nThanks."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pass int by value please."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 81,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please build the path as a fs::path using operator/ directly, don't build a std::string, then pass it to std::path."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 84,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't required.  RAII will close the object."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 93,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 94,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please remove this print."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 94,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "58572a410955bdc5ec8da89bd34377bd74505fbc",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/2",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1608725510,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "email": "rashmi.r.v@linux.intel.com",
                        "username": "Rashmi-RV"
                    },
                    "message": "nit: 'verify' typo"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 24,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "53b90786bac4f9c069699566474d6219646759c2",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/3",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1608857520,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "src/FanMain.cpp",
                    "line": 395,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering we already know the type, I don't think we need to read this out of the filesystem, we just need to use the existing type information from the config spec."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 395,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "This looks better than reading from filesystem, thanks.\nI had added the MAX31790 in sensorTypes array."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 24,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "f3eea3837eeb07ab438e8a77ce65b01b1bebe04d",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/4",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1609306360,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 4
        },
        {
            "number": 5,
            "revision": "3c695f181bcd92b91c936eaed3a744562b3f4d14",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/5",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1609306531,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "src/FanMain.cpp",
                    "line": 392,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does the pwm enable file return 1 for the systems that don't require enabling?  Maybe we could do read-modify-write\n\nif (pwm enable file exists)\n    read pwm file\n    if (pwm is not enabled)\n        write enable\n\n\nI'm trying to avoid having yet another fixed set of special cased types here."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 392,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "I add the enable function here to make that only the sensor has add the Connector with entry \"Pwm\" in configuration will auto enable the corresponding pwm.\nThis is greater than checking the sensor type, so I remove sensor type MAX31790 from array."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 4
        },
        {
            "number": 6,
            "revision": "c81ca291b9a9308c153a191fd0389931ba7c5bf7",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/6",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1610072482,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 1
        },
        {
            "number": 7,
            "revision": "6627dc6ccd135c0d02a959e2a00888d1b0433144",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/7",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1610073370,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 1
        },
        {
            "number": 8,
            "revision": "97fdb14b6fec5937be6e855bd6a258ebd5d52264",
            "parents": [
                "6736d4b2a77cec00a8919f26035176c8b8025a4d"
            ],
            "ref": "refs/changes/17/39217/8",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1612232617,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/FanMain.cpp",
                    "line": 398,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This check is redundant.  Just open the file, and if it fails to open, ignore the failure.  No need to handle exists differently."
                },
                {
                    "file": "src/FanMain.cpp",
                    "line": 398,
                    "reviewer": {
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 1
        },
        {
            "number": 9,
            "revision": "abf91de1876278b8b8f98787577a539804833ad4",
            "parents": [
                "0362738df78e3bb511105f9fe28637ec2d7b0ffa"
            ],
            "ref": "refs/changes/17/39217/9",
            "uploader": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "createdOn": 1617953120,
            "author": {
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 1
        }
    ]
}