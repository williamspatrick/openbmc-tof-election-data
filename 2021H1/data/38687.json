{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I8f5c148fc09aa3ff65f0722f3cb5d4880c8bb6ff",
    "number": 38687,
    "subject": "Add support to take actions if fan fails",
    "owner": {
        "name": "Kumar Thangavel",
        "email": "thangavel.k@hcl.com",
        "username": "HCL-BMC"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/38687",
    "commitMessage": "Add support to take actions if fan fails\n\nAdded support to take platform specific actions if the fan sensors\nvalues getting below threshold or fan fails. The slots getting\npowered off when fan fails or fan sensor values getting below\nthreshold value.\n\nTESTED : Built Facebook YosemiteV2 images and loaded on the target hardware.\nVerified all the slots getting powered off when fan sensor values getting\nthreshold value.\n\nSigned-off-by: Kumar Thangavel <thangavel.k@hcl.com>\nChange-Id: I8f5c148fc09aa3ff65f0722f3cb5d4880c8bb6ff\n",
    "createdOn": 1606825226,
    "lastUpdated": 1625496155,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1606825226,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1606825240,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606825269,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/8819/ : FAILURE"
        },
        {
            "timestamp": 1606825813,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1606825825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606825921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/8820/ : SUCCESS"
        },
        {
            "timestamp": 1606927010,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\nIn terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n\nWithin an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n\n\nIn terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up."
        },
        {
            "timestamp": 1607065151,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> \n> Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> \n> \n> In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n\nThanks for your comments. \n\nWhen all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer."
        },
        {
            "timestamp": 1607096910,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> > \n> > Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> > \n> > \n> > In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n> \n> Thanks for your comments. \n> \n> When all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer.\n\nThis is identical to the work that Matt Spinler has been working on.  Please reference the discussions on the existing reviews, as well as discord to get yourself up to speed with what the plan is for this."
        },
        {
            "timestamp": 1607497068,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> > > \n> > > Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> > > \n> > > \n> > > In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n> > \n> > Thanks for your comments. \n> > \n> > When all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer.\n> \n> This is identical to the work that Matt Spinler has been working on.  Please reference the discussions on the existing reviews, as well as discord to get yourself up to speed with what the plan is for this.\n\nok. Thanks for the info.\nCould you please share me the link for the discussion or Please add me in that discussion."
        },
        {
            "timestamp": 1609773637,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> > > > \n> > > > Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> > > > \n> > > > \n> > > > In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n> > > \n> > > Thanks for your comments. \n> > > \n> > > When all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer.\n> > \n> > This is identical to the work that Matt Spinler has been working on.  Please reference the discussions on the existing reviews, as well as discord to get yourself up to speed with what the plan is for this.\n> \n> ok. Thanks for the info.\n> Could you please share me the link for the discussion or Please add me in that discussion.\n\nHi All,\n\nCould you please share me the link for the discussion or provide your comments. \n\nThanks."
        },
        {
            "timestamp": 1612213955,
            "reviewer": {
                "name": "Yong Zhao",
                "email": "yozhao@google.com",
                "username": "YongZhao12"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1612216813,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > > Patch Set 2:\n> > > > > \n> > > > > In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> > > > > \n> > > > > Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> > > > > \n> > > > > \n> > > > > In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n> > > > \n> > > > Thanks for your comments. \n> > > > \n> > > > When all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer.\n> > > \n> > > This is identical to the work that Matt Spinler has been working on.  Please reference the discussions on the existing reviews, as well as discord to get yourself up to speed with what the plan is for this.\n> > \n> > ok. Thanks for the info.\n> > Could you please share me the link for the discussion or Please add me in that discussion.\n> \n> Hi All,\n> \n> Could you please share me the link for the discussion or provide your comments. \n> \n> Thanks.\n\nPlease check the docs repo for getting access to discord, gerrit, and the mailing list.  All have search available.  I'd recommend starting by searching for \"threshold\" as a search term, which you can do just as easily as I can."
        },
        {
            "timestamp": 1612414332,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > > Patch Set 2:\n> > > > > \n> > > > > > Patch Set 2:\n> > > > > > \n> > > > > > In terms of dbus sensors, we already set the threshold events to dbus.  If platform specific actions need to be taken, they can be acted on from the threshold events on dbus.\n> > > > > > \n> > > > > > Within an entity-manager config, you would need to define what those specific actions are if you wanted this to move forward.\n> > > > > > \n> > > > > > \n> > > > > > In terms of \"I'd like a fan to power off if it asserts a threshold\" that behavior would be fine, but please don't launch a service file to do it.  Simply make PWM sensor/phosphor-pid-control react appropriately when the threshold events occur on dbus, and add a config item to set that up.\n> > > > > \n> > > > > Thanks for your comments. \n> > > > > \n> > > > > When all the fans fails in the system, we need to power off the heat producing components, like chassis components, hosts/slots and etc. not powering off the fans. In our system we are powering off all the hosts using the service file. Similarly, others can do their platform specific actions using that service from the machine layer.\n> > > > \n> > > > This is identical to the work that Matt Spinler has been working on.  Please reference the discussions on the existing reviews, as well as discord to get yourself up to speed with what the plan is for this.\n> > > \n> > > ok. Thanks for the info.\n> > > Could you please share me the link for the discussion or Please add me in that discussion.\n> > \n> > Hi All,\n> > \n> > Could you please share me the link for the discussion or provide your comments. \n> > \n> > Thanks.\n> \n> Please check the docs repo for getting access to discord, gerrit, and the mailing list.  All have search available.  I'd recommend starting by searching for \"threshold\" as a search term, which you can do just as easily as I can.\n\nThanks for the info."
        },
        {
            "timestamp": 1625496155,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Abandoned\n\nUpdating the Implementation with different way."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9010ebf03df845f677a809e7ef857ff716bff857",
            "parents": [
                "da27423cdaf0558579fbdcf1eaa2a34ea19cb8de"
            ],
            "ref": "refs/changes/87/38687/1",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1606825226,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 49,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "114a89e1cb6f8bd0aa4afe5e74a20b1bc24da329",
            "parents": [
                "da27423cdaf0558579fbdcf1eaa2a34ea19cb8de"
            ],
            "ref": "refs/changes/87/38687/2",
            "uploader": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "createdOn": 1606825813,
            "author": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Yong Zhao",
                        "email": "yozhao@google.com",
                        "username": "YongZhao12"
                    },
                    "message": "72 characters limit should be enforced here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 0
        }
    ]
}