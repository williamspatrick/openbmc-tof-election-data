{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I236ea86a05f43e46605e4a6f9922156b1d15309f",
    "number": 40283,
    "subject": "Inventory.Decorator.I2CDevice: Add I2CDevice Interface YAML",
    "owner": {
        "name": "Santosh Puranik",
        "email": "santosh.puranik@in.ibm.com",
        "username": "santoshpuranik"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/40283",
    "commitMessage": "Inventory.Decorator.I2CDevice: Add I2CDevice Interface YAML\n\nDefine a I2CDevice inventory item interface. This can be implemented by\ninventory objects that want to expose i2c device bus number and address\non D-Bus.\n\nOne example of how this interface is used can be found in the Entity\nManager repo.\n\nSigned-off-by: Santosh Puranik <santosh.puranik@in.ibm.com>\nChange-Id: I236ea86a05f43e46605e4a6f9922156b1d15309f\n",
    "createdOn": 1612435057,
    "lastUpdated": 1617831072,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1612435057,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1612435070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612435100,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/11892/ : FAILURE"
        },
        {
            "timestamp": 1612435102,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 1:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1612435239,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1612435249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612435515,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11893/ : SUCCESS"
        },
        {
            "timestamp": 1612449811,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2: Code-Review+1\n\nLooks like this matches what FRUDevice is putting out there, so now we can have PIM hold this interface so that entity-manager can find it after a probe with our VPD format so we can use $bus in the JSON."
        },
        {
            "timestamp": 1612461190,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1612477739,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1612498586,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613483422,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2: -Code-Review\n\nI haven't been able to make this work with entity-manager yet"
        },
        {
            "timestamp": 1613484258,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613554072,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613913594,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613929216,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613929438,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613932885,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613933610,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613948515,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1613949491,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1614002184,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1614011870,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1614169635,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n@Santosh, I think the only outstanding work is to move this to Decorator?  Agreed?"
        },
        {
            "timestamp": 1614319955,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> @Santosh, I think the only outstanding work is to move this to Decorator?  Agreed?\n\nAgreed, I'll move this to the Decorator namespace."
        },
        {
            "timestamp": 1614584507,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Removed reviewer Vishwanatha Subbanna."
        },
        {
            "timestamp": 1616758295,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1616758312,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616758671,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14423/ : SUCCESS"
        },
        {
            "timestamp": 1616765542,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1616766263,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 4: Commit message was updated."
        },
        {
            "timestamp": 1616766308,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Uploaded patch set 5: Commit message was updated."
        },
        {
            "timestamp": 1616766318,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1616766367,
            "reviewer": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "message": "Patch Set 5:\n\nOnce this is approved, I'll follow it up with a change in the EM/FRUDevice repos"
        },
        {
            "timestamp": 1616766699,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1617824480,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Patch Set 5 was rebased"
        },
        {
            "timestamp": 1617824491,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1617824498,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617824941,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14998/ : SUCCESS"
        },
        {
            "timestamp": 1617831072,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5b3375e013c94f87710072336728646484a616de",
            "parents": [
                "1b4a98af49059da61695c41469e4b7b134c1bf68"
            ],
            "ref": "refs/changes/83/40283/1",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1612435057,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Item/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 30,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d8d8af51111b30e9e6de048ddf9786c2804bb2a9",
            "parents": [
                "1b4a98af49059da61695c41469e4b7b134c1bf68"
            ],
            "ref": "refs/changes/83/40283/2",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1612435239,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Say I have I2C8 from ASPEED to a PCA9552 that is on 0061, will this interface return : \n\nBus --> 8\nAddress --> 61 ?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I believe the plan was to just put this on object paths where the EEPROMs are so that entity-manager knows what bus it came from so that it can find the other devices on the card."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Yes, the plan is to just do what FruDevice does today and have the EM key off of that data so other apps can write configurations against it. That said, I am not sure how publishing the address of the eeprom is going to help apps that are interested in other devices that the inventory item may have on this I2C bus. So looking for more feedback there."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Two questions:\n\n1. Isn't an \"I2CDevice\" a Decorator (I2CAddress maybe?) and not an inventory Item of its own?\n\n2. How are we certain that this bus/address scheme is portable between Linux versions, appropriate for hot-plugged i2c hubs, etc?  Doesn't Linux assign the bus number in an arbitrary manner?"
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "> Isn't an \"I2CDevice\" a Decorator (I2CAddress maybe?) and not an inventory Item of its own?\nI tend to agree here, a given inventory item may even have multiple such I2C devices on it. I can change this accordingly, provided we are in agreement about changing the EM code to utilize the new property.\n\n> Doesn't Linux assign the bus number in an arbitrary manner?\nThis relies on the bus number being explicitly defined in the device tree."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> This relies on the bus number being explicitly defined in the device tree.\n\nHow does this work for a system that uses something like RunBMC then?  In a design like that you may have a single flash image that supports 5 different machines and then uses EntityManager support to determine what device it is running on, and dynamically bind the downstream i2c hubs.  You're not going to have i2c information in the device tree because the different machines the RunBMC card plugs into have different structures."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > This relies on the bus number being explicitly defined in the device tree.\n> \n> How does this work for a system that uses something like RunBMC then?\n\nToday it doesn't.\n\n>  In a design like that you may have a single flash image that supports 5 different machines and then uses EntityManager support to determine what device it is running on, and dynamically bind the downstream i2c hubs.  You're not going to have i2c information in the device tree because the different machines the RunBMC card plugs into have different structures.\n\nThe intent when entity-manager was designed was that we could use device tree overlays.  In practice we used them for sensors for a while, but then when beaglebone gave up on their patch to add a userspace dt overlay interface, we moved back to the add_device api for keeping things working with an upstream kernel.  Something like that would be required for runBMC to be able to enable/disable i2c busses at will at runtime.  If I ever have to personally support a runBMC system, that's what I'd do.\n\nIf someone working on a runBMC system wanted this to work with a single image, we'd likely need to get those beaglebone patches going again in upstream."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I would note, nothing about this dbus interface precludes making the above work, and having it exist means that people are far less likely to be hardcoding bus numbers in config files, so that when/if we do get dt overlays working again, we should have minimal code to fix in the individual reactors."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The alternative to dt overlays is direct binding calls though, right?  And this won't work if we go that direction.  So it seems like this interface is forcing us to go a direction that isn't even supported by the upstream kernel when there is another path that is supported upstream..."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Direct bindings as in, have a device tree per system?  I'm not quite following what direct binding calls would allow for here.  Can you expand a little?\n\nThe EM code that exists today works with this interface on the mainline kernel, so when you say it \"isn't even supported by the upstream kernel\" that's not really true.  We use the add device API, then pass the generated bus and i2c address information to dbus, we're just limited in the things we can instantiate.  We can't, for example, turn on root i2c bus 3, but we certainly can instantiate a mux with 4 new busses on bus 3 if it's already instantiated, then pass that information down the line to other things that might need that info to instantiate, say, a sensor behind that mux.\n\nIf you know how to do this in a simpler, more upstream compatible way, I'm all ears, I'd love to see something easier to digest."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "By 'bind' I was referring to the sysfs interface. I guess PCIe and USB calls it that but i2c doesn't.\n\nhttps://www.kernel.org/doc/html/v5.10/i2c/instantiating-devices.html#method-4-instantiate-from-user-space\n\nThere is also 'drivers_probe' UAPI for setting up the engine itself, I think."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> By 'bind' I was referring to the sysfs interface. I guess PCIe and USB calls it that but i2c doesn't.\n> \n> https://www.kernel.org/doc/html/v5.10/i2c/instantiating-devices.html#method-4-instantiate-from-user-space\n\nThis API is exactly what this interface is used for today (I mistakenly called it \"add device\" not \"new_device\".  My bad.)\n\nThe dbus interface exists so we can pass along the dynamic runtime-generated bus information about the newly added device to the userspace code responsible for instantiating the dbus interfaces.\n\nIn a perfect world, the bind would be done in the individual reactors, not centralized in EM, so we include all the data to make that possible in the future without breaking this API.  The reasons it's the way it is now are largely because of using DT overlays in the past, it made more sense to stick all the code for that in one spot.\n \n> \n> There is also 'drivers_probe' UAPI for setting up the engine itself, I think.\n\nI was unaware of this UAPI.  I'll have to look into what interfaces it provides and see if they're useful to us."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> The dbus interface exists so we can pass along the dynamic runtime-generated bus information about the newly added device to the userspace code responsible for instantiating the dbus interfaces.\n\nAh, I might have misunderstood something along the way.  I assumed these were specified in EM json statically and EM just creates them.  It seems like you're suggesting that EM creates these dynamically based on what it sees in sysfs?  In that case I have no concerns.\n\nMy concern was if we were going down a path where i2c bus/addr information is hard coded in json because that is fragile."
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > The dbus interface exists so we can pass along the dynamic runtime-generated bus information about the newly added device to the userspace code responsible for instantiating the dbus interfaces.\n> \n> Ah, I might have misunderstood something along the way.  I assumed these were specified in EM json statically and EM just creates them.  It seems like you're suggesting that EM creates these dynamically based on what it sees in sysfs?  In that case I have no concerns.\n> \n> My concern was if we were going down a path where i2c bus/addr information is hard coded in json because that is fragile.\n\n\nIt's a combination of both.  They CAN be hardcoded in a config, in the case of undetectable devices that have a known address and bus number in the DTS/board wiring, but in most of the usages it's for when cards are installed, or muxes are instantiated that might not have consistent bus numbering.  Having this interface means that we deal with the fragile part of the code in one spot, so individual reactors aren't trying to roll their own \"predict the bus number\" logic.\n\nIn EM we try to keep the hardcoded bit to the bare minimum, and only where it's truly required as there's no other way to detect the device.  In the future, if we have device tree overlays again, I'm hoping we can even make most of that dynamic."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Item/I2CDevice/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Item/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Item/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "074ec14e604126c1cdf1cb50e9994f5a2d9c7d15",
            "parents": [
                "ae956ad9efd2be24c5439a4ef6498fb5c8383719"
            ],
            "ref": "refs/changes/83/40283/3",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1616758295,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Item isn't in the name anymore."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Thanks, will fix."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "nit: line a bit long since gerrit is showing it wrapped"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Santosh Puranik",
                        "email": "santosh.puranik@in.ibm.com",
                        "username": "santoshpuranik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/I2CDevice/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Decorator/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "5acd565b36dae384e17bf794b9c8cdfc9022031c",
            "parents": [
                "ae956ad9efd2be24c5439a4ef6498fb5c8383719"
            ],
            "ref": "refs/changes/83/40283/4",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1616766263,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/I2CDevice/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Decorator/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "21fe87a46f215705a70cf94442c80dbf620bd4da",
            "parents": [
                "ae956ad9efd2be24c5439a4ef6498fb5c8383719"
            ],
            "ref": "refs/changes/83/40283/5",
            "uploader": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "createdOn": 1616766308,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/I2CDevice/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Decorator/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "523dc36ac1a73bb63ecb3cbd76f7d88a9ac3481b",
            "parents": [
                "70ee1cff21ade602590f7be9310d68a6903a5bf8"
            ],
            "ref": "refs/changes/83/40283/6",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1617824480,
            "author": {
                "name": "Santosh Puranik",
                "email": "santosh.puranik@in.ibm.com",
                "username": "santoshpuranik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/I2CDevice/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Inventory/Decorator/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Inventory/Decorator/I2CDevice.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 44,
            "sizeDeletions": 0
        }
    ]
}