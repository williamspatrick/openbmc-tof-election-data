{
    "project": "openbmc/phosphor-objmgr",
    "branch": "master",
    "id": "Ibe3e887dcd95c01e1270bf218fd47572852e1e54",
    "number": 45148,
    "subject": "associations: Handle SdBusError exception",
    "owner": {
        "name": "Lei YU",
        "email": "yulei.sh@bytedance.com",
        "username": "mine260309"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/45148",
    "commitMessage": "associations: Handle SdBusError exception\n\nIn checkIfPendingAssociation() it could create new interface on DBus\nobjects. The interface::interface() could throw if it fails, and mapperx\nwould crash due to the exception:\n\n    phosphor-mapper[428]: terminate called after throwing an instance of 'sdbusplus::exception::SdBusError'\n    phosphor-mapper[428]:   what():  sd_bus_add_object_vtable: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\n\nWorkaround this issue by adding try-catch and skip the interface to\nprevent mapperx from crash.\n\nFixes openbmc/phosphor-objmgr#21\n\nSigned-off-by: Lei YU <yulei.sh@bytedance.com>\nChange-Id: Ibe3e887dcd95c01e1270bf218fd47572852e1e54\n",
    "createdOn": 1626947322,
    "lastUpdated": 1627662409,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1626947322,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1626947333,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1626947621,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/22542/ : SUCCESS"
        },
        {
            "timestamp": 1627013755,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(3 comments)\n\nMostly seems reasonable approach to me."
        },
        {
            "timestamp": 1627022655,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1627022675,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627022678,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1627022971,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/22654/ : SUCCESS"
        },
        {
            "timestamp": 1627045845,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\nAre you running this through your tests so we can hopefully get to root cause on your fail?"
        },
        {
            "timestamp": 1627268668,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> Are you running this through your tests so we can hopefully get to root cause on your fail?\n\nThe issue is hard to reproduce, it only occurs twice in the BMC upgrade/downgrade cycle test.\nThe stack backtrace is described in the github issue."
        },
        {
            "timestamp": 1627331664,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1627461902,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1627461935,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1627508672,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > Are you running this through your tests so we can hopefully get to root cause on your fail?\n> \n> The issue is hard to reproduce, it only occurs twice in the BMC upgrade/downgrade cycle test.\n> The stack backtrace is described in the github issue.\n\nIt isn't clear to me from the stack trace what exactly went wrong.  Can you explain?"
        },
        {
            "timestamp": 1627538070,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 2:\n> > > \n> > > Are you running this through your tests so we can hopefully get to root cause on your fail?\n> > \n> > The issue is hard to reproduce, it only occurs twice in the BMC upgrade/downgrade cycle test.\n> > The stack backtrace is described in the github issue.\n> \n> It isn't clear to me from the stack trace what exactly went wrong.  Can you explain?\n\nIt's a hard question, but let me explain:\n1. The `vtable` argument is somehow invalid, and thus `sd_bus_add_object_vtable()` returns `EINVAL`, and the code throws. This is the cause of the crash.\n2. In the above stack, `sdbusplus::asio::dbus_interface::initialize()` passes the valid `vtable_` argument.\n3. I do not know what exactly happens that causes the `vtable` argument becoming invalid.\n\nThis patch adds the try-catch to handle the exception."
        },
        {
            "timestamp": 1627558370,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> I do not know what exactly happens that causes the `vtable` argument becoming invalid.\n\nI think a casual reading might lead someone to believe we have memory corruption (since virtual function tables becoming invalid would mean that) but I don't think that is what is meant here by the \"[dbus] vtable becoming invalid\".  It is not that objmgr has formulated bad function pointers in the vtable.\n\nI strongly suspect that an association is being requested which would cause objmgr to attempt to create an object that violates the dbus specifications on object/property names.  sdbus is seeing the vtable/object-creation request and validating these strings and saying \"this string is garbage because...\"  Maybe it has a space in it or something.\n\nIn order to fully capture what is going on, I would suggest logging the parameters that went into the vtable creation if we can.  Since this is an association, there should only be 3 parameters, right?"
        },
        {
            "timestamp": 1627563611,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> > Patch Set 3:\n> > I do not know what exactly happens that causes the `vtable` argument becoming invalid.\n> \n> I think a casual reading might lead someone to believe we have memory corruption (since virtual function tables becoming invalid would mean that) but I don't think that is what is meant here by the \"[dbus] vtable becoming invalid\".  It is not that objmgr has formulated bad function pointers in the vtable.\n> \n> I strongly suspect that an association is being requested which would cause objmgr to attempt to create an object that violates the dbus specifications on object/property names.  sdbus is seeing the vtable/object-creation request and validating these strings and saying \"this string is garbage because...\"  Maybe it has a space in it or something.\n> \n> In order to fully capture what is going on, I would suggest logging the parameters that went into the vtable creation if we can.  Since this is an association, there should only be 3 parameters, right?\n\nYup, but the issue occurs in `i->initialize();` in `addEndpointsToAssocIfaces()`, what really matters is the assocPath that is already printed, the interface is always XYZ_ASSOCIATION_INTERFACE.\n\nBut I just find out that I only put one `addSingleAssociation()` in the try-catch, but missed the other one.\nI will send a new PS to fix this."
        },
        {
            "timestamp": 1627563969,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1627563986,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627564291,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23199/ : SUCCESS"
        },
        {
            "timestamp": 1627565167,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n> Patch Set 3:\n> \n> > Patch Set 3:\n> > \n> > > Patch Set 2:\n> > > \n> > > > Patch Set 2:\n> > > > \n> > > > Are you running this through your tests so we can hopefully get to root cause on your fail?\n> > > \n> > > The issue is hard to reproduce, it only occurs twice in the BMC upgrade/downgrade cycle test.\n> > > The stack backtrace is described in the github issue.\n> > \n> > It isn't clear to me from the stack trace what exactly went wrong.  Can you explain?\n> \n> It's a hard question, but let me explain:\n> 1. The `vtable` argument is somehow invalid, and thus `sd_bus_add_object_vtable()` returns `EINVAL`, and the code throws. This is the cause of the crash.\n> 2. In the above stack, `sdbusplus::asio::dbus_interface::initialize()` passes the valid `vtable_` argument.\n> 3. I do not know what exactly happens that causes the `vtable` argument becoming invalid.\n> \n> This patch adds the try-catch to handle the exception.\n\nthanks"
        },
        {
            "timestamp": 1627565176,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1627570389,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1627662407,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1627662409,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Change has been successfully merged by Matt Spinler"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "02bae10c2ef55f0b3df7860808fe6eaa2434eec1",
            "parents": [
                "2b7789c0180e9678909407df2c195dd3191dfc68"
            ],
            "ref": "refs/changes/48/45148/1",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1626947322,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/associations.cpp",
                    "line": 411,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd prefer we don't catch this type but either sdbusplus::exception::exception or sdbusplus::exception::internal_exception.  I want to do some major rearranging to the exceptions because SdBusError is not particularly useful in most cases."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 411,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We should probably put a comment around this.  Something like \"we can get garbage from a client which causes the association to not be able to be made, violating dbus requirements.  Rather than try to find all those requirements, catch the error that is reported and drop the association request.\"  (You can probably word better than copy/pasting this)"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 411,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 411,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest logging e.what() also."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 15,
            "sizeDeletions": 5
        },
        {
            "number": 2,
            "revision": "525996070890c6d27245f0db3ca50775f2fbaae4",
            "parents": [
                "2b7789c0180e9678909407df2c195dd3191dfc68"
            ],
            "ref": "refs/changes/48/45148/2",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1627022655,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can probably remove [POC]?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 5
        },
        {
            "number": 3,
            "revision": "a66025c8335d4cdf06d84b709ec8567092e3ce59",
            "parents": [
                "2b7789c0180e9678909407df2c195dd3191dfc68"
            ],
            "ref": "refs/changes/48/45148/3",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1627461902,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 5
        },
        {
            "number": 4,
            "revision": "b89c661401fc53ff895dc9194114031e5940ded9",
            "parents": [
                "2b7789c0180e9678909407df2c195dd3191dfc68"
            ],
            "ref": "refs/changes/48/45148/4",
            "uploader": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "createdOn": 1627563969,
            "author": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 7
        }
    ]
}