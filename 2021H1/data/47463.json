{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I1d8bdb90a2705c4f16c5b015b7135870782ad672",
    "number": 47463,
    "subject": "pcieslot, cpu: add upstream_processor association",
    "owner": {
        "name": "Brad Bishop",
        "email": "bradleyb@fuzziesquirrel.com",
        "username": "bradbishop"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/47463",
    "commitMessage": "pcieslot, cpu: add upstream_processor association\n\nDefine a mechanism for documenting associations in PDI YAML files.\n\nA new associations member is added to the interface definitions.  The\nnew associations member is an array, with each array element having an\nobject or structure type that consists of a name, reverse_name (all\nOpenBMC associations are bi-directional), description, and an array of\nrequired_endpoint_interfaces.  The name and reverse_name properties must\nbe snake_case and comply with D-Bus specification restrictions on object\npaths so they could be used directly as an object path element in a real\nD-Bus implementation.  Similarly the required_endpoint_interfaces array\nelements must also comply with D-Bus specification restrictions and best\npractices on interfaces names.\n\nAssociations should only exist as subordinate objects to a superior\nobject with a specific D-Bus interface - for example the\nupstream_processor association should only exist on objects which\nimplement the PCIeSlot interface.  This is the motivating thought behind\ndocumenting OpenBMC associations in the existing interface definition\nfiles instead of somewhere else.  Reuse of upstream_processor in other\ninterfaces is allowed (for example a memory DIMM), but it must be\nexplicitly listed in each interface definition that wishes to host the\nassociation.\n\nThis first use of the associations documentation adds an\nupstream_processor interface used to link PCIeSlots to upstream PCIe\nhost bridges or on-processor PCIe root complexes.\n\nChange-Id: I1d8bdb90a2705c4f16c5b015b7135870782ad672\nSigned-off-by: Brad Bishop <bradleyb@fuzziesquirrel.com>\n",
    "createdOn": 1633377938,
    "lastUpdated": 1634939191,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1633377938,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633377947,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633378324,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27414/ : SUCCESS"
        },
        {
            "timestamp": 1633378338,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633384530,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633389026,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633437017,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633437025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633437413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27468/ : SUCCESS"
        },
        {
            "timestamp": 1634939187,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1634939191,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as df55704398ec8fc3cc608206f05a2226f134c786 by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "29d8ba2ad8569c35b1ee8b34e378c48f028138cc",
            "parents": [
                "ebcb17e9ae66a1079c69582e810ce4a6220bf6bc"
            ],
            "ref": "refs/changes/63/47463/1",
            "uploader": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "createdOn": 1633377938,
            "author": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "line": 107,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "I guess I should add that the pointed-to objects _must_ implement Item.Processor?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "line": 107,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Don't we need a reverse name for the association as well?  I thought associations were bi-directional.\n\n> I guess I should add that the pointed-to objects _must_ implement Item.Processor?\n\nShould we add something to the YAML for this also?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "line": 107,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "> Don't we need a reverse name for the association as well?\n\nHow does an additional field in the array entry called reverse_name sound?\n\nTechnically I think you can make a one-way association by leaving the reverse name blank in the Associations.Definitions.Associations property - recall that the type of that is a(sss) - (forward,reverse,endpoint).  So is that a feature or a bug?\n\n> Should we add something to the YAML for this also?\n\nGood idea - how does an additional field (type array of interfaces(strings)) in the array entry called required_endpoint_interfaces sound?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 7,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "56008a64bc6054664d54095507b6d3296d6e594a",
            "parents": [
                "ebcb17e9ae66a1079c69582e810ce4a6220bf6bc"
            ],
            "ref": "refs/changes/63/47463/2",
            "uploader": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "createdOn": 1633437017,
            "author": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Cpu.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "df55704398ec8fc3cc608206f05a2226f134c786",
            "parents": [
                "7fd1de390723586dd94bd0b0119f8273d20ff46e"
            ],
            "ref": "refs/changes/63/47463/3",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1634939191,
            "author": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Cpu.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 0
        }
    ]
}