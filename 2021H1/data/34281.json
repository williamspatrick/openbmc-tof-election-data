{
    "project": "openbmc/libmctp",
    "branch": "master",
    "topic": "routing",
    "id": "Ida879e5f7e5998c910be0fc4d19e895023767705",
    "number": 34281,
    "subject": "core: Add endpoint ID helpers",
    "owner": {
        "name": "Andrew Jeffery",
        "email": "andrew@aj.id.au",
        "username": "amboar"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/libmctp/+/34281",
    "commitMessage": "core: Add endpoint ID helpers\n\nThe introduction of bridging and routing functionality depends on being\nable to test and compare endpoint IDs and ranges. Add helpers testing\nfor equality, validity, containment and intersection.\n\nSigned-off-by: Andrew Jeffery <andrew@aj.id.au>\nChange-Id: Ida879e5f7e5998c910be0fc4d19e895023767705\n",
    "createdOn": 1593619971,
    "lastUpdated": 1611016164,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1593619971,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1593619990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593619998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/311/"
        },
        {
            "timestamp": 1593620141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/311/ : SUCCESS"
        },
        {
            "timestamp": 1594023658,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1594097691,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1594612912,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1603883272,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1604407381,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1605067417,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1605067437,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1605067503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/7638/ : SUCCESS"
        },
        {
            "timestamp": 1605749097,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)\n\nJust a query on the API; otherwise all fine."
        },
        {
            "timestamp": 1605750477,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1605750958,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1606966669,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1607315599,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1607559662,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1610347979,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1611016056,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1611016068,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611016137,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11055/ : SUCCESS"
        },
        {
            "timestamp": 1611016164,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7fcf274e15a3185746023783520d41ed36a4eb0f",
            "parents": [
                "3ac70d62571953be172a0d16976e383490d25059"
            ],
            "ref": "refs/changes/81/34281/1",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1593619971,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "core.c",
                    "line": 235,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "MCTP_EID(8)."
                },
                {
                    "file": "core.c",
                    "line": 235,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "And thanks for this change, I think NULL EIDs are valid EIDs."
                },
                {
                    "file": "core.c",
                    "line": 235,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "That macro hasn't yet been introduced. It comes later in the series. I believe it gets fixed eventually because mctp_eid_t changes to a struct."
                },
                {
                    "file": "core.c",
                    "line": 244,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "nit: \nDidn't notice it in earlier review, but when i re-look it seems to cause confusion. \ni.e. 2 API's of is_valid (eid_is_valid or eid_range_is_valid), conveying different meaning - first covers the special, and second doesn't. \ncan we rename one?"
                },
                {
                    "file": "core.c",
                    "line": 244,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "How about mctp_eid_range_is_routable()?"
                },
                {
                    "file": "core.c",
                    "line": 244,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "core.c",
                    "line": 258,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "why not bool here ?"
                },
                {
                    "file": "core.c",
                    "line": 258,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I can't see a reason not to now. Probably just force of habit :)"
                },
                {
                    "file": "core.c",
                    "line": 258,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "core.c",
                    "line": 265,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Why do we need this ?"
                },
                {
                    "file": "core.c",
                    "line": 265,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Well, it's questionable, but because of the assert, and I'm trying to get the interfaces right in the face of future MCTP specification releases that might make use of the reserved EID values. If that happens then we need to know which MCTP protocol version we're using to determine what's valid."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "libmctp.h",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -3
                },
                {
                    "file": "tests/test_eid.c",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "9bac1bf1db2d9f4e7c60e7b78cb9e8fdb7933a8c",
            "parents": [
                "c2b833e40ddb858a94734f77a0bd761b76733c65"
            ],
            "ref": "refs/changes/81/34281/2",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1605067417,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "core.c",
                    "line": 295,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Suggestion: (to have fewer cycles) to have one inline static function to check in_range() (highlighted one), so that mctp_eid_range_intersects() can be updated to to check routable twice and then followed by in_range 4 times."
                },
                {
                    "file": "core.c",
                    "line": 295,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think that's a good optimisation to add later. Trying to go for \"obviously correct\" for now."
                },
                {
                    "file": "core.c",
                    "line": 295,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "fine with that approach. Hope you have some To-do sheet / issue list, where this is tracked to be done later."
                },
                {
                    "file": "core.c",
                    "line": 295,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'm working on enabling the wiki on openbmc/libmctp on github. I will start a todo-list there."
                },
                {
                    "file": "libmctp.h",
                    "line": 30,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Planning to add API documentation here?"
                },
                {
                    "file": "libmctp.h",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yep, it's probably a good time to start adding documentation now that we've been through a few iterations of the code."
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Why do these need a struct mctp *? You don't use it anywhere in the implementations,\nand I'd expect the EID conditions to remain independent of any state of the stack."
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "To handle future spec revisions that take advantage of the reserved EIDs. We'll need to extract the version in use from the context struct."
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "You're planning for libmctp to concurrently support multiple spec versions, configured at runtime, *and* expect those versions to not be backwards compatible?\n\nWhile I admire your forward-planning here, I don't share your pessimism :D"
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Having future versions of MCTP specification on API is really difficult. It's better not to make any choices, until we know what is fixed.\n\nNote: I am with the idea of passing mctp structure as argument, such that any customization in terms of Special Endpoint handling can make use of it. But not sure, the usage in terms of eid range/validity check."
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> You're planning for libmctp to concurrently support multiple spec versions\n\nI don't see a reason to start preventing it :)\n\n> configured at runtime\n\nWell, it's the choice of the context owner what commands and such they want to support, so it seems reasonable that libmctp should accommodate that where it can.\n\n> expect those versions to not be backwards compatible?\n\nWell, the ranges are reserved, we have no idea how they'll be used?"
                },
                {
                    "file": "libmctp.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "yes, but that's not going to change the behavior for range_equal, range_intersects or range_contains. \n\nNote: I am still with the idea of passing the argument and fine with the current API."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "libmctp.h",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -3
                },
                {
                    "file": "tests/test_eid.c",
                    "type": "MODIFIED",
                    "insertions": 71,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "a289513a9692ab3f597133f25250a59c79dcf3df",
            "parents": [
                "b4ae00b9f822f1d136f4684e039057521a30ac47"
            ],
            "ref": "refs/changes/81/34281/3",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1611016056,
            "author": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "libmctp.h",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -3
                },
                {
                    "file": "tests/test_eid.c",
                    "type": "MODIFIED",
                    "insertions": 71,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 4
        }
    ]
}