{
    "project": "openbmc/openbmc-build-scripts",
    "branch": "master",
    "topic": "json-validation",
    "id": "I2c2c14b18bb626b1a5ab5d818b92d5ba370e1639",
    "number": 45902,
    "subject": "JSON validation support in CI",
    "owner": {
        "name": "ManojKiran Eda",
        "email": "manojkiran.eda@gmail.com",
        "username": "manojkiraneda"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/45902",
    "commitMessage": "JSON validation support in CI\n\nMost of the openbmc repositories depend on JSON configuration files,\nwhich are consumed by the respective daemons at runtime.\n\nIt's a good value add to catch the JSON validation errors early in the\nrepository CI itself.\n\nBy default, the CI would be picking config/eslint-global-config as the\ndefault configuration to run the JSON validation. The default configuration\ncan be overridden by the presence of the .eslintrc.json file from the\nrepository for which the CI is running against.\n\nRepositories cannot completely opt-out of the JSON validation, but they\nchoose to skip whatever files/folders they want using the .eslintignore\nconfiguration file or, they can also write the rules in .eslintrc.json\nconfig file to turn errors into warnings.\n\nThis commit brings in eslint & eslint-plugin-json which does only the\n\"json validation\".\n\nVisit the below link(s) for more details & various error's/warnings that\nthis plugin would report:\nhttps://www.npmjs.com/package/eslint-plugin-json\nhttps://github.com/azeemba/eslint-plugin-json\n\nI have tested all the repos under openbmc with the eslint-global-config\nand only two repos are breaking due to this change, they are already\nfixed(please check the topic: \"json-validation\" for more details)\n\nTesting Example :\n1. Make a json bad by purposefully removing a comma\n\nRunning the json validator on the repo using it's config >\n\n/home/manojeda/ci_test_area/pldm/configurations/fru_master.json\n  19:26  error  Expected comma  json/*\n\n\u2716 1 problem (1 error, 0 warnings)\n\n2. if the json is good, the validation proceeds fruther without\nany issues.\n\nChange-Id: I2c2c14b18bb626b1a5ab5d818b92d5ba370e1639\nSigned-off-by: Manojkiran Eda <manojkiran.eda@gmail.com>\n",
    "createdOn": 1628925628,
    "lastUpdated": 1636826620,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1628925628,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1628925644,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628925653,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/347/"
        },
        {
            "timestamp": 1628926028,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1628926043,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628926044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/347/ : ABORTED"
        },
        {
            "timestamp": 1628926053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/348/"
        },
        {
            "timestamp": 1628926814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/348/ : FAILURE"
        },
        {
            "timestamp": 1628954318,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 2: Ok-To-Test+1"
        },
        {
            "timestamp": 1628954324,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/349/"
        },
        {
            "timestamp": 1628954335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/349/ : FAILURE"
        },
        {
            "timestamp": 1628996497,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1628996511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628996521,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/350/"
        },
        {
            "timestamp": 1628996897,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/350/ : SUCCESS"
        },
        {
            "timestamp": 1629033471,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 4: Commit message was updated."
        },
        {
            "timestamp": 1629085631,
            "reviewer": {
                "name": "Sampa Misra",
                "email": "sampmisr@in.ibm.com",
                "username": "sampmisr"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1629099198,
            "reviewer": {
                "name": "Sridevi Ramesh",
                "email": "sridevra@in.ibm.com",
                "username": "SrideviRamesh"
            },
            "message": "Patch Set 4:\n\nManoj,\n\nHow can i make sure that json file which I changed has been validated in CI.. Does it show all the CI files it validated?"
        },
        {
            "timestamp": 1629101854,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> Manoj,\n> \n> How can i make sure that json file which I changed has been validated in CI.. Does it show all the CI files it validated?\n\nAs stated in my commit message, you should get the trace like below for all the json files that are checked in the CI :\nRunning the json validator on the commit >>\nchecking :  oem/ibm/configurations/bios/enum_attrs.json\nValid JSON (oem/ibm/configurations/bios/enum_attrs.json)\nchecking :  oem/ibm/configurations/fru_master.json\noem/ibm/configurations/fru_master.json: Parse error on line 3:\n...                    \"xyz.openbmc_project...\n----------------------^\nExpected one of: 'EOF', '}', ',', ']'"
        },
        {
            "timestamp": 1629121632,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1629256549,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1629285609,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1629690651,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1629690671,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629690681,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/358/"
        },
        {
            "timestamp": 1629690732,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1629692156,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/358/ : SUCCESS"
        },
        {
            "timestamp": 1629753360,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1629756343,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1629756947,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1629810863,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1629861523,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1629892174,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1630861922,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1630861939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630861949,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/365/"
        },
        {
            "timestamp": 1630862045,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1630862332,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1630862349,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630862350,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/365/ : ABORTED"
        },
        {
            "timestamp": 1630862359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/366/"
        },
        {
            "timestamp": 1630862424,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1630862439,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630862440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/366/ : ABORTED"
        },
        {
            "timestamp": 1630862449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/367/"
        },
        {
            "timestamp": 1630862895,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/367/ : FAILURE"
        },
        {
            "timestamp": 1630898109,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1630898135,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630898140,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/368/"
        },
        {
            "timestamp": 1630898959,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/368/ : SUCCESS"
        },
        {
            "timestamp": 1630932411,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1631042137,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 9:\n\nSimilar discussion to clang12. Will this suddenly cause a bunch of repos to break? I could do my hack again where I cherry pick this into the job that runs CI against all repos? I certainly hope everyone's json passes the basic validation though."
        },
        {
            "timestamp": 1631076834,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Topic set to json-validation"
        },
        {
            "timestamp": 1631077501,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 9:\n\n> Patch Set 9:\n> \n> Similar discussion to clang12. Will this suddenly cause a bunch of repos to break? I could do my hack again where I cherry pick this into the job that runs CI against all repos? I certainly hope everyone's json passes the basic validation though.\n\nAndrew, this could certainly break certain repos, when these repos have \n1. comments in their json files\n2. malformed jsons that are typically seen in the bad unit test cases\n\nis there any magic way to get a list of repos that might break with this change, I can fix those before we enforce this in CI."
        },
        {
            "timestamp": 1631209420,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 9:\n\n> Patch Set 9:\n> \n> > Patch Set 9:\n> > \n> > Similar discussion to clang12. Will this suddenly cause a bunch of repos to break? I could do my hack again where I cherry pick this into the job that runs CI against all repos? I certainly hope everyone's json passes the basic validation though.\n> \n> Andrew, this could certainly break certain repos, when these repos have \n> 1. comments in their json files\n> 2. malformed jsons that are typically seen in the bad unit test cases\n> \n> is there any magic way to get a list of repos that might break with this change, I can fix those before we enforce this in CI.\n\nI thought the reason to switch to eslint was that it allowed comments in JSON, what needs to be done to allow this? and can it be added to the global config?"
        },
        {
            "timestamp": 1631210147,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n> I thought the reason to switch to eslint was that it allowed comments in JSON, what needs to be done to allow this? and can it be added to the global config?\n\nIt does and the eslint-global-config.json here enables it.\n\nManoj said it would break some repositories, just like a clang-format update might, because there are some repositories that still have invalid JSON even _with_ the comments.  I think the main one that he ran into is that JSON-5 specifies comments as /* */ but many people used #.  nlohmann-json supports either, but we should switch to the one specified by JSON itself now.\n\nAlso, he ran into test cases that *purposefully* had broken JSON.  He needed a lint ignore-file to handle those."
        },
        {
            "timestamp": 1631210193,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1631210792,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 9:\n\n> Patch Set 9:\n> \n> > I thought the reason to switch to eslint was that it allowed comments in JSON, what needs to be done to allow this? and can it be added to the global config?\n> \n> It does and the eslint-global-config.json here enables it.\n> \n> Manoj said it would break some repositories, just like a clang-format update might, because there are some repositories that still have invalid JSON even _with_ the comments.  I think the main one that he ran into is that JSON-5 specifies comments as /* */ but many people used #.  nlohmann-json supports either, but we should switch to the one specified by JSON itself now.\n> \n> Also, he ran into test cases that *purposefully* had broken JSON.  He needed a lint ignore-file to handle those.\n\nAh, I'm only aware of nlohmann-json allowing `/* */` or `//` when enabled, so I agree with your request to add this to the docs that it appears `/* */` is the overall best choice for comments within JSON as it should work for both?"
        },
        {
            "timestamp": 1631219640,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n> Ah, I'm only aware of nlohmann-json allowing `/* */` or `//` when enabled, so I agree with your request to add this to the docs that it appears `/* */` is the overall best choice for comments within JSON as it should work for both?\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-led-manager/+/46653/1/example/lamp-test/lamp-test-led-overrides.json\n\nThis was an example of a repository using # as a comment instead of // that Manoj fixed."
        },
        {
            "timestamp": 1631335932,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1631356027,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1631434374,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1631434677,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1631434697,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631434706,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/374/"
        },
        {
            "timestamp": 1631435641,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/374/ : SUCCESS"
        },
        {
            "timestamp": 1631592352,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10:\n\nI was able to run eslint on all the repo's under openbmc, and the only repos that are breaking are pldm & led-manager. I have pushed patches for fixing both of them. I think we can go ahead and merge this change."
        },
        {
            "timestamp": 1631654447,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 10: Code-Review+1\n\nCool stuff Manoj. I'm good, lets give others a few more days."
        },
        {
            "timestamp": 1631739927,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 10:\n\nWas a common eslint (this `eslint-global-config.json`) put in the docs repo per comment https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/45902/9/config/eslint-global-config.json#1"
        },
        {
            "timestamp": 1631767503,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> Was a common eslint (this `eslint-global-config.json`) put in the docs repo per comment https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/45902/9/config/eslint-global-config.json#1\n\nMatt, \n\neslint-global-config.json is the configuration file that is picked up by default when the CI is run against the commit. If individual repos want to override this setting, then repos should have .eslintrc.json file in their repo.\n\nAnd the global config already supports the comments in json, so most of the repo's does not even need to override the existing settings. so i dont think its useful to put this CI configuration file in the style folder. Because that is not copied to the individual repos."
        },
        {
            "timestamp": 1631792069,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n> And the global config already supports the comments in json, so most of the repo's does not even need to override the existing settings. so i dont think its useful to put this CI configuration file in the style folder. Because that is not copied to the individual repos.\n\nI agree most repos will not need to override the default settings, but I do think it is good to have a pointer to this style file so that people do not try to recreate there own.\n\nAre there _any_ cases where we expect someone to override the global default we have here?  I'd like to eventually see this extended to cover JS/TS files as well, so as we start to do that the style will likely become more complex."
        },
        {
            "timestamp": 1631810353,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10:\n\n> Patch Set 10:\n> \n> > And the global config already supports the comments in json, so most of the repo's does not even need to override the existing settings. so i dont think its useful to put this CI configuration file in the style folder. Because that is not copied to the individual repos.\n> \n> I agree most repos will not need to override the default settings, but I do think it is good to have a pointer to this style file so that people do not try to recreate there own.\n> \n> Are there _any_ cases where we expect someone to override the global default we have here?  I'd like to eventually see this extended to cover JS/TS files as well, so as we start to do that the style will likely become more complex.\n\nYes, one use case i could think is , if we bring in schema validation(using another eslint plugin), then we would want the repo to tell which json file needs to be validated against which schema using rules in an overridden .eslintrc.* file."
        },
        {
            "timestamp": 1631811723,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 10:\n\nthe style commit is up for review : https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/46946"
        },
        {
            "timestamp": 1632150038,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1632153101,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1632156545,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(5 comments)"
        },
        {
            "timestamp": 1632156703,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1632159088,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1632558070,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1632558085,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632558094,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/384/"
        },
        {
            "timestamp": 1632558206,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 11:\n\n(6 comments)"
        },
        {
            "timestamp": 1632559295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/384/ : SUCCESS"
        },
        {
            "timestamp": 1632758573,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 11: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1633226339,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1633226347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633226356,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/389/"
        },
        {
            "timestamp": 1633226984,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1633227248,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/389/ : SUCCESS"
        },
        {
            "timestamp": 1633358792,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1633371200,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1633613163,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 12: Code-Review+1\n\nok, just looking for a +1 from Ed at this point since he had some earlier comments"
        },
        {
            "timestamp": 1634748181,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1634752467,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 12: Code-Review+2\n\nGood stuff, thanks for driving this Manoj."
        },
        {
            "timestamp": 1634752496,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Change has been successfully rebased and submitted as 87111bb7060b9501fd902a717c0988b748169e4a by Andrew Geissler"
        },
        {
            "timestamp": 1634795990,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 13:\n\nThis broke google-misc. Needs fixes for symlink loops.\n\n```\nFormatting code under /src/google-misc/\nRunning the json validator on the repo using the global config >\neslint /src/google-misc --no-eslintrc -c /src/eslint-global-config.json                --ext .json --resolve-plugins-relative-to /usr/local/lib/node_modules               --no-error-on-unmatched-pattern\n\nOops! Something went wrong! :(\n\nESLint: 8.0.1\n\nError: ELOOP: too many symbolic links encountered, stat '/src/google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects'\n```"
        },
        {
            "timestamp": 1634823986,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> This broke google-misc. Needs fixes for symlink loops.\n> \n> ```\n> Formatting code under /src/google-misc/\n> Running the json validator on the repo using the global config >\n> eslint /src/google-misc --no-eslintrc -c /src/eslint-global-config.json                --ext .json --resolve-plugins-relative-to /usr/local/lib/node_modules               --no-error-on-unmatched-pattern\n> \n> Oops! Something went wrong! :(\n> \n> ESLint: 8.0.1\n> \n> Error: ELOOP: too many symbolic links encountered, stat '/src/google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects'\n> ```\n\nI believe , this is a legitimate issue that should be fixed in the google-misc repo itself.\n\ngoogle-misc/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n\ud83c\udf1e \u26a1  cd subprojects\ngoogle-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n\ud83c\udf1e \u26a1  ls\nacpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\ngoogle-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n\ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n\ud83c\udf1e \u26a1  ls\nacpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n\ud83c\udf1e \u26a1  cd subprojects\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n\ud83c\udf1e \u26a1  ls\nacpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n\ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n\ud83c\udf1e \u26a1  ls\nacpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\ngoogle-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n\nIts a recursive loop of symlinks ..and once a call goes in ..it never comes out."
        },
        {
            "timestamp": 1634826735,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13:\n> > \n> > This broke google-misc. Needs fixes for symlink loops.\n> > \n> > ```\n> > Formatting code under /src/google-misc/\n> > Running the json validator on the repo using the global config >\n> > eslint /src/google-misc --no-eslintrc -c /src/eslint-global-config.json                --ext .json --resolve-plugins-relative-to /usr/local/lib/node_modules               --no-error-on-unmatched-pattern\n> > \n> > Oops! Something went wrong! :(\n> > \n> > ESLint: 8.0.1\n> > \n> > Error: ELOOP: too many symbolic links encountered, stat '/src/google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects'\n> > ```\n> \n> I believe , this is a legitimate issue that should be fixed in the google-misc repo itself.\n> \n> google-misc/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  cd subprojects\n> google-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\n> google-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  cd subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \n> Its a recursive loop of symlinks ..and once a call goes in ..it never comes out.\n\nI just looked at the repo - and i had a hard time trying to understand the repository structure, but I can probably put a temp fix to ignore the subprojects folder. Guess that should work for now."
        },
        {
            "timestamp": 1636826620,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n> Patch Set 13:\n> \n> > Patch Set 13:\n> > \n> > This broke google-misc. Needs fixes for symlink loops.\n> > \n> > ```\n> > Formatting code under /src/google-misc/\n> > Running the json validator on the repo using the global config >\n> > eslint /src/google-misc --no-eslintrc -c /src/eslint-global-config.json                --ext .json --resolve-plugins-relative-to /usr/local/lib/node_modules               --no-error-on-unmatched-pattern\n> > \n> > Oops! Something went wrong! :(\n> > \n> > ESLint: 8.0.1\n> > \n> > Error: ELOOP: too many symbolic links encountered, stat '/src/google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects'\n> > ```\n> \n> I believe , this is a legitimate issue that should be fixed in the google-misc repo itself.\n\nIf that's your opinion, feel free to propose a patchset, but circular symlinks are allowed in the filesystem, and something that should be handled by any CI solution we use.\n\n> \n> google-misc/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  cd subprojects\n> google-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\n> google-misc/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  cd subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state-daemon  fmt.wrap  googletest.wrap  libcr51sign  metrics-ipmi-blobs  ncsid  nemora-postd  phosphor-dbus-interfaces.wrap  phosphor-logging.wrap  sdbusplus.wrap  stdplus.wrap\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects on \ue0a0 master\n> \ud83c\udf1e \u26a1  cd acpi-power-state-daemon/\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \ud83c\udf1e \u26a1  ls\n> acpi-power-state.service.in  acpi_power_state.cpp  host-s0-state.target  host-s5-state.target  meson.build  subprojects\n> google-misc/acpi-power-state-daemon/subprojects/acpi-power-state-daemon/subprojects/acpi-power-state-daemon on \ue0a0 master is \ud83d\udce6 v0.1\n> \n> Its a recursive loop of symlinks ..and once a call goes in ..it never comes out.\n\nSomehow the other CI scripts don't seem to have an issue with that, I suspect because they're using git ls-files to get the file list, should Ci build scripts be doing the same thing?"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "d13535d7b198074c74410b120de1beeafcb31fba",
            "parents": [
                "120c99ee64088a825d46771f8f705c1c1ade7c98"
            ],
            "ref": "refs/changes/02/45902/1",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628925628,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 15,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "943b3ba78e7c782e24b84c40199833cc8defe0d2",
            "parents": [
                "120c99ee64088a825d46771f8f705c1c1ade7c98"
            ],
            "ref": "refs/changes/02/45902/2",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628926028,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 15,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "bbe6ad418b5d44c3c907e1e0a8f8f938819153c4",
            "parents": [
                "120c99ee64088a825d46771f8f705c1c1ade7c98"
            ],
            "ref": "refs/changes/02/45902/3",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1628996497,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 15,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
            "parents": [
                "120c99ee64088a825d46771f8f705c1c1ade7c98"
            ],
            "ref": "refs/changes/02/45902/4",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1629033471,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We should add a method to skip this or enable this for repositories which aren't ready for it yet."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "i am not sure i get your intent behind wanting to skip this. can you elaborate on why we would need that ? what do you mean by \"aren't ready for it yet \"?\n\nwe would not want anyone to merge any invalid json even when they are not functionally ready correct ?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Most of the other aspects of this script we allow repositories to opt-out of.  Right now you have this as a simple lint, but in the future I expect this will be extended to a json-style."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why only pick the files in the commit and not all of them?  For all the other linters we do everything, so I'd prefer to not do something special for json."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "yeah i could do that as well, i did not check what others are doing, thinking more on it .. why would we want to run it on all the files every time on every commit ? is it not an overhead ?\n\nis it not just sufficient to run on the commit alone ?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> is it not an overhead ?\n\nI don't think it is enough to matter.\n\n> why would we want to run it on all the files every time on every commit ?\n\nAs the linter improves we want it to report issues on files, even if they haven't been touched recently.\n\nAlso, this git magic is difficult to get right.  In fact, you have it wrong.  As an example:\n\n```\n$ git rm LICENSE              \nrm 'meta-phosphor/LICENSE'\n$ git commit -s -m \"remove license\"                                   \n[master bc6321185] remove license\n 1 file changed, 12 deletions(-)\n delete mode 100644 meta-phosphor/LICENSE\n$ git show --pretty=\"\" --name-only -n 1 HEAD~1..HEAD\nmeta-phosphor/LICENSE\n```\n\nSo deletions of json files will show up in your `json_files_in_commit` and then fail when the for-loop calls jsonlint on a file that no longer exists."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "dang..you are right..i must be sleepy writing this piece of code."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can this space be removed?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 36,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "A PHP program?\n\nIt doesn't appear like this does anything to do with schema validation.  Are there any better linters we could pick up that do that?  I quick search shows maybe `npm jsonlint`?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "well i quickly checked the package for ubuntu, and its named as jsonlint, but the binary was name as jsonlint-php which was a bit weird\n\nI can change it to npm jsonlint"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "To be clear, `npm jsonlint` is something else, but it being a real nodejs package I expect it to be better maintained than jsonlint-php.  Also it has some options that allow us to format the json as well, which may be useful."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 38,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you adjust the indentation on this whole block?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 38,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 15,
            "sizeDeletions": 1
        },
        {
            "number": 5,
            "revision": "291a773cbb50af8acd2d9dd0db82d85f886f06b1",
            "parents": [
                "a56c7012bc40b76165c9135fa4e341838c62bff0"
            ],
            "ref": "refs/changes/02/45902/5",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1629690651,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "scripts/format-code.sh",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm fine if you want to leave this opt-in.  Do we want to make it opt-out?  (\".skip-jsonlint\")"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 29,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I would prefer to just have an opt in like shellcheck , probably we could use this .jsonvalidate file as a configuration file that tells what json schemas to be used to validate what json files against in future.\n\nWhat do you think ?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I would prefer to just have an opt in like shellcheck\n\nThe only reason shellcheck is opt-in is because I still have a few repositories that are failing. \ud83d\ude0a\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-psu-code-mgmt/+/42193\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-debug-collector/+/42233\n\n> probably we could use this .jsonvalidate file as a configuration file that tells what json schemas to be used to validate what json files against in future.\n\nIf we end up using eslint, I think it has its own config file to determine these things, right?  Though, I don't think the opt-in is as simple as looking for the eslint file because in most cases a repository will simply want to default to a sane project-wide version (I hope)."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 29,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "FWIW...The use of nlohmann JSON allows `//` and `/* */` commenting styles(where it treats it as whitespace), but I'm guessing jsonlint will flag those as invalid JSON?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Good point Matt.  I wonder if we should rethink this and maybe use 'eslint' for JSON and JS.  eslint allows comments and we could get a consistent coding style.\n\nIt appears that webui-vue is already using eslint."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Agreed, took a quick look at 'eslint` and that appears to be a more customizable solution for linting openbmc applications' JSON files."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 37,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Sure, agreed. I will try to bring in the \"eslint\" instead."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 16,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "e0615da380883598d1864a0a834b3fdbfe00226a",
            "parents": [
                "0a82a76f00b3466e39d58c55495a38b44247a2a1"
            ],
            "ref": "refs/changes/02/45902/6",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1630861922,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 25,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "429970f6878dbcb6f340f3844fb2fae6af05c58b",
            "parents": [
                "0a82a76f00b3466e39d58c55495a38b44247a2a1"
            ],
            "ref": "refs/changes/02/45902/7",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1630862332,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "b5d9dec09c44eae538e7a025b2471fa0597e4cde",
            "parents": [
                "0a82a76f00b3466e39d58c55495a38b44247a2a1"
            ],
            "ref": "refs/changes/02/45902/8",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1630862424,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "1c970c6cfb340d10ccdca37f4ef8190fb1207f0c",
            "parents": [
                "0a82a76f00b3466e39d58c55495a38b44247a2a1"
            ],
            "ref": "refs/changes/02/45902/9",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1630898109,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "config/eslint-global-config.json",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think we should also put this into docs under style/json (or style/js?) so we have a common eslint to spread around like we do for .clang-format."
                },
                {
                    "file": "config/eslint-global-config.json",
                    "line": 1,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Patrick,\n\neslint-plugin-json is shipped with two modes, one that supports comments which is invoked with (extends\": [\"plugin:json/recommended-with-comments\"]), and the one that does not support comments(extends\": [\"plugin:json/recommended\"]).\n\nIn this commit, i had put more stricter(extends\": [\"plugin:json/recommended\"]) which does not support the comments in the global config, and this would be picked if the repo does not have an override .eslintrc.json file.\n\nwhen a repo, has comments in their json files, they need to add an override .eslintrc.json file that uses (extends\": [\"plugin:json/recommended-with-comments\"]) like in (https://gerrit.openbmc-project.xyz/c/openbmc/pldm/+/46335)\n\nDo you prefer the default config to support comments or not support comments ?"
                },
                {
                    "file": "config/eslint-global-config.json",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I prefer adding support for comments. I think that can be our general approach in the project. It makes for much better JSON."
                },
                {
                    "file": "config/eslint-global-config.json",
                    "line": 1,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config.json",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "971ed6d59b3a0aa1aa60c3394107c2ba85eb78fd",
            "parents": [
                "4569bf49daaebff06be0482426908bb5497fad08"
            ],
            "ref": "refs/changes/02/45902/10",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1631434677,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we get more details here on exactly what we're enforcing here, and get the relevant docs set up in the docs repo?\n\nFor example, by default are we enforcing:\nPretty printing?  Whitespace?  Key naming?  Line at the end of the file?  Comments?\n\nwhen we did this similar thing for c++/C, we had pretty well documented rules we were just enforcing;  With json, I don't think we have that, so when CI rejects a json patch, what are we supposed to do?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "As stated in the commit message this commit only does json validation. I have added more details in the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Um..... how is a spell check an effective test of this?  Did this get pulled from a different commit message?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Feel free to ignore the above\n\nI just realized this is the output of the build script.  Understood, although it would be nice to enumerate what you did to test, rather than simply giving the output of the test."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering that PLDM isn't the only thing that's getting effected by this change, can we get some verification that we have some confidence that this isn't going to break repos that use json for configuration data?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Considering that PLDM isn't the only thing that's getting effected by this change, can we get some verification that we have some confidence that this isn't going to break repos that use json for configuration data?\n\nI had tested this change with all the repos under openbmc & that has been already documented in this commit in the comments, but since you asked i had added that to the commit message as well."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This would imply that it's enforcing some kind of schema because it's failing a specific property name?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Well i don't exactly remember what json corruption i had to get this error. And this plugin does not do schema validation. This is just plain and simple json validation. we can add more plugins in future for schema validation & json formatting and that should be simple too. As eslint has that infrastructure to add more plugins and control their behavior using a single configuration file (and this has been discussed in comments in this commit)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "duplicate sign off."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 51,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This block would be a lot more clear if you loaded the \"config to use\" and the \"ignore to use\" into variables, then called eslint in one spot.  As-written this duplicates a lot of things between the branches that are hard to track."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 48,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config.json",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "50e81e6f468decab575551259911770e6c878ce1",
            "parents": [
                "d3c516b8b056eda29cf71bdb8bec03210dd8d255"
            ],
            "ref": "refs/changes/02/45902/11",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1632558070,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "scripts/format-code.sh",
                    "line": 40,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It is a little dangerous to set the same bash variable as two separate strings.  Any reason you can't just insert a space here instead of two quotes?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 40,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 50,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "eval sounds poor.  Can you call eslint with the arguments?  I suspect shellcheck complained to you about word-splitting but by doing an eval you haven't actually solved the word-split issue."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 50,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config.json",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "31f016361343076ab2651c9c2dd1e6f4b3eb4c7b",
            "parents": [
                "d3c516b8b056eda29cf71bdb8bec03210dd8d255"
            ],
            "ref": "refs/changes/02/45902/12",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1633226339,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config.json",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 36,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "87111bb7060b9501fd902a717c0988b748169e4a",
            "parents": [
                "01534ec4d019507387b497a4fa2c35bbee32db83"
            ],
            "ref": "refs/changes/02/45902/13",
            "uploader": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "createdOn": 1634752496,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "config/eslint-global-config.json",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "run-unit-test-docker.sh",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 36,
            "sizeDeletions": 0
        }
    ]
}