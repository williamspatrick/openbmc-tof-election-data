{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "Ifc052b988af86f02a7665ed0477b364c243e9f71",
    "number": 40900,
    "subject": "chassishandler: Add support for boot type flag (Legacy/EFI)",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/40900",
    "commitMessage": "chassishandler: Add support for boot type flag (Legacy/EFI)\n\nAdd support for IPMI boot type field of a\n\"Get System Boot Options\" \u0441ommand:\n\n[1] - BIOS boot type (for BIOS that support both legacy and EFI boots)\n  0b = \"PC compatible\" boot (legacy)\n  1b = Extensible Firmware Interface Boot (EFI)\n\nFor the architectures that don't implement Legacy/EFI boot type\nproperty (for example POWER), always return EFI boot type.\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: Ifc052b988af86f02a7665ed0477b364c243e9f71\n",
    "createdOn": 1614174400,
    "lastUpdated": 1622031195,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1614174400,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1614174420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614174790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12972/ : SUCCESS"
        },
        {
            "timestamp": 1614177343,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\nHello!\nPlease review this patch that adds support for the IPMI boot type flag (Legacy/EFI) in the chassishandler of `phosphor-host-ipmid` program"
        },
        {
            "timestamp": 1614203935,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1614381579,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1614429444,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(3 comments)\n\nHi Vernon!\nThanks, for the review.\nBasically I did all of this work based on the current handling of the BootSource/BootMode properties.\nSo all of your notices are relevant to them to. Therefore wouldn't it be better to fix them all at once in a separate refactor commit to keep things more organized?"
        },
        {
            "timestamp": 1615216705,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1616095085,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1617402184,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2: Code-Review+1\n\nThis looks fine, especially with the follow-on patch. But, as you said, it requires the yaml interface change. I don't really have a problem with that change either, but I work with systems that do have EFI boot. :)"
        },
        {
            "timestamp": 1617915347,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1617915360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617915680,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/15150/ : FAILURE"
        },
        {
            "timestamp": 1617915865,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1617915879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617916322,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/15151/ : FAILURE"
        },
        {
            "timestamp": 1617916682,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1617916694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1617917017,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/15152/ : SUCCESS"
        },
        {
            "timestamp": 1618824495,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 5:\n\nI've added tests for the Legacy/EFI option to the `openbmc-test-automation` framework:\n42215: Add tests for Legacy/EFI boot type selector | https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/42215"
        },
        {
            "timestamp": 1619185453,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1619185469,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619185608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16095/ : SUCCESS"
        },
        {
            "timestamp": 1619187971,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 6:\n\nHi!\n\nI've checked the current version of the patchset with an openBMC image that doesn't have\nBootType interface in a settings object (to imitate POWER host).\n\nAnd all the tests have passed successfully:\n(42215: Add tests for Legacy/EFI boot type selector | https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/42215)\n(42275: Add support for Legacy/EFI selector in Redfish boot tests | https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-test-automation/+/42275)\n\nSo this commit is now independent from the change:\n(40910: Add BootType to the default settings | https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/40910)\n\nCould we merge it now?"
        },
        {
            "timestamp": 1621549994,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1621588655,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1621602423,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased"
        },
        {
            "timestamp": 1621602434,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621602581,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17806/ : SUCCESS"
        },
        {
            "timestamp": 1621602973,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1621602984,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1621603548,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/17809/ : SUCCESS"
        },
        {
            "timestamp": 1621605564,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1621630631,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 8: Code-Review+1\n\nThis looks good to me. I would prefer if this one also got a +1 from someone at IBM. Tom, Ratan, Deepak, Adriana?"
        },
        {
            "timestamp": 1622031029,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 8: Code-Review+2"
        },
        {
            "timestamp": 1622031083,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1622031195,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Change has been successfully merged by Tom Joseph"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "913d3558c886dabae9c1f0e8c984f059383da7c2",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1614174400,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "chassishandler.cpp",
                    "line": 1696,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "dbus.call() will throw rather than simply return an error via the is_method_error() call. You must have try/catch around the call function or ipmid will abort."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1696,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "We have try/catch in the ipmiChassisSetSysBootOptions function, that calls this setBootType() function. Would the program abort anyway?\n\nDo you want the code to be something like:\n```\ntry \n{\n    auto reply = dbus.call(method);\n    if (reply.is_method_error())\n    {\n        log<level::ERR>(\"Error in BootType Set\");\n        report<InternalFailure>();\n        return ipmi::ccUnspecifiedError;\n    }\n}\ncatch (const sdbusplus::exception::SdBusError& e)\n{\n        log<level::DEBUG>(\"set-property failed\",\n            entry(\"SERVICE=%s\", objects.service(bootTypeSetting, bootTypeIntf).c_str()),\n            entry(\"OBJPATH=%s\", bootTypeSetting.c_str()),\n            entry(\"INTERFACE=%s\", ipmi::PROP_INTF),\n            entry(\"PROP=%s\", \"BootType\"));\n}\n```\n\nAnyway, I've created this `setBootType` method based on the `setBootSource` and `setBootMode` methods. So if this method has a problem, the rest of the methods have it too. Do you want me to fix them in this commit or in a separate one? Maybe it would be better to refactor them all in a separate commit?\n\nOne more thought.\nWouldn't it be better to use `ipmi::setDbusProperty` and `ipmi::getDbusProperty` in all of the three methods (`setBootType`, `setBootSource`, `setBootMode`) ?\nIt doesn't have try/catch, so it would be necessary to add it anyway, but it would remove some boilerplate code."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1696,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "The try/catch looks fine except there is no need to call if(reply.is_method_error()) because that will always be false if it didn't throw.\n\nSure, using the ipmi::(set/get)DbusProperty calls is convenient. The try/catch is still needed, but it would make the code easier to read. Also, there is a yielding variant for those that can be used if you request the ipmi::Context::ptr parameter as the first argument to ipmiChassisGetSysBootOptions."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1808,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "call() and read() will both throw on error, so you must have try/catch around them to avoid an abort."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1808,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "See the discussion above. I think the situation is the same in here."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 2023,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "An error log is already present in the setBootType() function. No need to log an error twice for the same failure."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 2023,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "This is a mistake that comes from the `setBootSource`/`setBootMode` methods.\nDo you want me to fix it here, or in a separate commit?"
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 2023,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Since both the function and the code that calls it are new code in this commit, it makes sense to change it now. I just don't want two messages logged about the same error."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 78,
            "sizeDeletions": 11
        },
        {
            "number": 2,
            "revision": "ca00988ff609daf57692e9a01af66ff59583d1d1",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1616095085,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 78,
            "sizeDeletions": 11
        },
        {
            "number": 3,
            "revision": "6ba8b8597f847e186385a9cec7a595fbb7d4f41c",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/3",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1617915347,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 120,
                    "deletions": -59
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 59
        },
        {
            "number": 4,
            "revision": "5917f0b38bf338d4503c302df3b334170ae7f652",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/4",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1617915865,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 76,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 11
        },
        {
            "number": 5,
            "revision": "9568a000d27502bf358efc423a6a36d93896a646",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/5",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1617916682,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 77,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 77,
            "sizeDeletions": 11
        },
        {
            "number": 6,
            "revision": "498213d0941522c03baf1819551888bde4ef4206",
            "parents": [
                "da06d15cab1dd116d3279d66f70966f95afdf676"
            ],
            "ref": "refs/changes/00/40900/6",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1619185453,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "chassishandler.cpp",
                    "line": 1698,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I don't think the comment here explains sufficiently why an error to set the boot type would return success here. It says that not reporting would be a normal thing to do, but not why you return here instead of executing the rest of the function."
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1698,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "How about:\n```\nReturn immediately if BootType interface is not present.\nThis interface is not relevant for some Host architectures\n(for example POWER). In this case we don't won't IPMI to\nreturn an error, but just skip this function.\n```\n?"
                },
                {
                    "file": "chassishandler.cpp",
                    "line": 1698,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "Fixed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 109,
            "sizeDeletions": 11
        },
        {
            "number": 7,
            "revision": "493fa1be326cb3a1bbc3047c5a7c0fabe126ed73",
            "parents": [
                "7a0e5dfcfa49f4a60e2d0ddd9f90c64d177a7f14"
            ],
            "ref": "refs/changes/00/40900/7",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1621602423,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 109,
            "sizeDeletions": 11
        },
        {
            "number": 8,
            "revision": "96ef02824710c2736ffdb3de3218fbdc984e55be",
            "parents": [
                "7a0e5dfcfa49f4a60e2d0ddd9f90c64d177a7f14"
            ],
            "ref": "refs/changes/00/40900/8",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1621602973,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "chassishandler.cpp",
                    "type": "MODIFIED",
                    "insertions": 110,
                    "deletions": -11
                }
            ],
            "sizeInsertions": 110,
            "sizeDeletions": 11
        }
    ]
}