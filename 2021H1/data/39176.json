{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I1044f40a8688d8749c885a1d45073fbe047a052b",
    "number": 39176,
    "subject": "Entity-manager: Add support to update assetTag",
    "owner": {
        "name": "Mansi Joshi",
        "email": "mansi.joshi@linux.intel.com",
        "username": "Joshi-Mansi"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/39176",
    "commitMessage": "Entity-manager: Add support to update assetTag\n\nAsset tag is an updateable property from User level interface like\nRedfish. User-level interface will update Asset tag in entity-manager,\nwhich will further update the needed FRU interface property exposed.\n\nTested:\nSuccessfully updated in assetTag interface as well as in fru interface\nwhile using set-property and using redfish as well.\nThe new value is preserved after BMC resets.\n\nSigned-off-by: Joshi-Mansi <mansi.joshi@linux.intel.com>\nSigned-off-by: Archana-Kakani <archanax.kakani@linux.intel.com>\nChange-Id: I1044f40a8688d8749c885a1d45073fbe047a052b\n",
    "createdOn": 1608316592,
    "lastUpdated": 1619706603,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1608316592,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1608316607,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608316655,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Topic set to Work In Progress"
        },
        {
            "timestamp": 1608316893,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10128/ : SUCCESS"
        },
        {
            "timestamp": 1608317286,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1609768949,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nCould you briefly describe how one would add support for persistent asset tag that is not backed by IPMI FRU records?  On my systems we use a different data structure in the eeproms (and a different application provides the interface).  Would I just add a conditional compilation flag here around the IPMI backed implementation?"
        },
        {
            "timestamp": 1609917239,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 1:\n\n(2 comments)\n\n> Patch Set 1:\n> \n> (1 comment)\n> \n> Could you briefly describe how one would add support for persistent asset tag that is not backed by IPMI FRU records?  On my systems we use a different data structure in the eeproms (and a different application provides the interface).  Would I just add a conditional compilation flag here around the IPMI backed implementation?\n\nWe need to expose desired FRU interface accordingly. If your question is related to PLDM FRU, then the plan is to support those too. (i.e. User level interface will update Entity-manager for the Asset tag and Entity-manager will accordingly update property exposed by xyz.openbmc_project.FruDevice or PLDMFruDevice (service)."
        },
        {
            "timestamp": 1610400653,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1610400668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610400732,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1:\n\n> > Could you briefly describe how one would add support for persistent asset tag that is not backed by IPMI FRU records?  On my systems we use a different data structure in the eeproms (and a different application provides the interface).  Would I just add a conditional compilation flag here around the IPMI backed implementation?\n>\n\n> We need to expose desired FRU interface accordingly. If your question is related to PLDM FRU\n\nMy question is not related to PLDM FRU rather IBM FRU.  The interfaces are defined here:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/tree/master/com/ibm/ipzvpd\n\n> then the plan is to support those too.\n\nTo be clear, I'm not looking for you to write my code.  I just want to know what code I would need to write or how to plug-in here to persist the asset tag given that it isn't stored in the same way (IPMI/PLDM) on POWER systems."
        },
        {
            "timestamp": 1610400824,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Topic Work In Progress removed"
        },
        {
            "timestamp": 1610400887,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 2:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1610400936,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10747/ : SUCCESS"
        },
        {
            "timestamp": 1610401413,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1610648863,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(7 comments)\n\n> Patch Set 1:\n> \n> > > Could you briefly describe how one would add support for persistent asset tag that is not backed by IPMI FRU records?  On my systems we use a different data structure in the eeproms (and a different application provides the interface).  Would I just add a conditional compilation flag here around the IPMI backed implementation?\n> >\n> \n> > We need to expose desired FRU interface accordingly. If your question is related to PLDM FRU\n> \n> My question is not related to PLDM FRU rather IBM FRU.  The interfaces are defined here:\n> \n> https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/com/ibm/ipzvpd\nYes, this can be done, once the suggested changes are done (https://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/39176/2/src/EntityManager.cpp#579).\n> \n> > then the plan is to support those too.\n> \n> To be clear, I'm not looking for you to write my code.  I just want to know what code I would need to write or how to plug-in here to persist the asset tag given that it isn't stored in the same way (IPMI/PLDM) on POWER systems.\n\nI meant to say that we are planning to support both FruDevice (IPMI) and PLDM FRU based AssetTag too.\ni.e. In the entity-manager Json configuration, AssetTag property name will be queried $<PropertyName> (https://github.com/openbmc/entity-manager/blob/master/configurations/R2000%20Chassis.json#L526), in case of PLDM, it will be updated to \"AssetTag\": \"$AssetTag\"and in your requirement, please replace it with $<PropertyName>. Hope this clarifies"
        },
        {
            "timestamp": 1611696980,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1611696997,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611697267,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11429/ : SUCCESS"
        },
        {
            "timestamp": 1611697372,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 4: Patch Set 3 was rebased"
        },
        {
            "timestamp": 1611697382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1611697649,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11430/ : SUCCESS"
        },
        {
            "timestamp": 1611697694,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 4:\n\n(7 comments)"
        },
        {
            "timestamp": 1611723128,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1611741524,
            "reviewer": {
                "email": "smriti.ayushi@linux.intel.com",
                "username": "Smriti-Ayushi"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1611742840,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1611762790,
            "reviewer": {
                "name": "Jae Hyun Yoo",
                "email": "jae.hyun.yoo@linux.intel.com",
                "username": "yoojae"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1611763324,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1611766603,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1611810107,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1611811206,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5: Commit message was updated."
        },
        {
            "timestamp": 1611811232,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1611877641,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\nOverall, this patch suffers from one pretty major flaw: it's way too specific to asset, as well as specific fields in it, and hardcodes a lot of stuff that should be generic.  If this is really what you want to do, this needs to be opposite and parallel to how the existing config forwarding APIs work, and should not just be hardcoding in specific interfaces and names, otherwise, we'll just end up with a giant list of special cases.\n\nOverall, if you really want writeable fields, I suspect we need to rethink how the interface forwarding is done in entity-manager, so we can simply associate things back to the underlying implementation, instead of having to be a forwarding agent, but that's a much longer discussion."
        },
        {
            "timestamp": 1611895367,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> Overall, this patch suffers from one pretty major flaw: it's way too specific to asset, as well as specific fields in it, and hardcodes a lot of stuff that should be generic.  If this is really what you want to do, this needs to be opposite and parallel to how the existing config forwarding APIs work, and should not just be hardcoding in specific interfaces and names, otherwise, we'll just end up with a giant list of special cases.\n> \n> Overall, if you really want writeable fields, I suspect we need to rethink how the interface forwarding is done in entity-manager, so we can simply associate things back to the underlying implementation, instead of having to be a forwarding agent, but that's a much longer discussion.\n\nDo you expect setting back any other properties back to the source daemon, apart from Asset Tag. Code is written to write back to the source daemon (from where things are read) in generic form and not hardcoded. Hardcode is done to restrict the write back only to AssetTag (as we don't foresee write back usage to the source daemon - Note: This is different from json write back, which is already supported). \nPlease clarify what are the other properties, which you foresee (Happy to look at that angle, and if needed re-design entity-manager accordingly)."
        },
        {
            "timestamp": 1615386193,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5:\n\nHi Ed,\nWaiting on your response. Thank you."
        },
        {
            "timestamp": 1615393410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Patch Set 5:\n> > \n> > Overall, this patch suffers from one pretty major flaw: it's way too specific to asset, as well as specific fields in it, and hardcodes a lot of stuff that should be generic.  If this is really what you want to do, this needs to be opposite and parallel to how the existing config forwarding APIs work, and should not just be hardcoding in specific interfaces and names, otherwise, we'll just end up with a giant list of special cases.\n> > \n> > Overall, if you really want writeable fields, I suspect we need to rethink how the interface forwarding is done in entity-manager, so we can simply associate things back to the underlying implementation, instead of having to be a forwarding agent, but that's a much longer discussion.\n> \n> Do you expect setting back any other properties back to the source daemon, apart from Asset Tag. Code is written to write back to the source daemon (from where things are read) in generic form and not hardcoded.\n Hardcode is done to restrict the write back only to AssetTag (as we don't foresee write back usage to the source daemon - Note: This is different from json write back, which is already supported). \n\nAll the fields in the FRU should be able to be written back, not just asset tag.\n\n> Please clarify what are the other properties, which you foresee (Happy to look at that angle, and if needed re-design entity-manager accordingly).\n\nThe listed fields are in FruDevice, I would expect all of them to be write-through.  If any filtering is needed, I would expect it to happen in FruDevice, not in EM."
        },
        {
            "timestamp": 1615875008,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Patch Set 5:\n> > \n> > > Patch Set 5:\n> > > \n> > > Overall, this patch suffers from one pretty major flaw: it's way too specific to asset, as well as specific fields in it, and hardcodes a lot of stuff that should be generic.  If this is really what you want to do, this needs to be opposite and parallel to how the existing config forwarding APIs work, and should not just be hardcoding in specific interfaces and names, otherwise, we'll just end up with a giant list of special cases.\n> > > \n> > > Overall, if you really want writeable fields, I suspect we need to rethink how the interface forwarding is done in entity-manager, so we can simply associate things back to the underlying implementation, instead of having to be a forwarding agent, but that's a much longer discussion.\n> > \n> > Do you expect setting back any other properties back to the source daemon, apart from Asset Tag. Code is written to write back to the source daemon (from where things are read) in generic form and not hardcoded.\n>  Hardcode is done to restrict the write back only to AssetTag (as we don't foresee write back usage to the source daemon - Note: This is different from json write back, which is already supported). \n> \n> All the fields in the FRU should be able to be written back, not just asset tag.\n> \n> > Please clarify what are the other properties, which you foresee (Happy to look at that angle, and if needed re-design entity-manager accordingly).\n> \n> The listed fields are in FruDevice, I would expect all of them to be write-through.  If any filtering is needed, I would expect it to happen in FruDevice, not in EM.\n\nOk Ed, will check on making it generic for all fru fields."
        },
        {
            "timestamp": 1616595484,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Topic set to Work In Progress"
        },
        {
            "timestamp": 1619198731,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1619198748,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619199230,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16097/ : SUCCESS"
        },
        {
            "timestamp": 1619201690,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1619201703,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1619202181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16099/ : SUCCESS"
        },
        {
            "timestamp": 1619417488,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Topic Work In Progress removed"
        },
        {
            "timestamp": 1619417545,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1619706603,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Abandoned\n\nUsing association this will be achieved which will have different view than this, so abandoning."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "99bb8d7fb5c4d7383fb3824e3ce8d0504effff51",
            "parents": [
                "c7c5de795cf672797ae35965e95642dd1fc39363"
            ],
            "ref": "refs/changes/76/39176/1",
            "uploader": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "createdOn": 1608316592,
            "author": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/EntityManager.cpp",
                    "line": 565,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "Is this where I would add support for non-IPMI FRU data?"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 565,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Yes Brad. Once Entity manager receives the data, it can do corresponding Set propery of the FRU daemon, which can be IPMI FRU / PLDM FRU."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 575,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Instead of hard-coding this one, the property name also needs to be tracked."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 575,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "We have Asset Tag only in Product Info Area, for which we have \"PRODUCT_ASSET_TAG\" to persist in fru interface. We have been using in similar manner in bmcweb as well."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 575,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Not really, today, we are querying PRODUCT_ASSET_TAG, as that was requested in the json configuration.\ne.g. https://github.com/openbmc/entity-manager/blob/master/configurations/R2000%20Chassis.json#L526 Due to $PRODUCT_ASSET_TAG, in case of PLDM, it will be $AssetTag is what will be in json configuration."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 575,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Oh okay. Got it, thank you."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 88,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 3
        },
        {
            "number": 2,
            "revision": "a23b9e0925b925c9dae6c5b59998856a86b55a2f",
            "parents": [
                "c7c5de795cf672797ae35965e95642dd1fc39363"
            ],
            "ref": "refs/changes/76/39176/2",
            "uploader": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "createdOn": 1610400653,
            "author": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "to"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Asset tag is an updateable property from User level interface like Redfish. User-level interface will update Asset tag in entity-manager, which will further update the needed FRU interface property exposed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "not needed, can be removed."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 577,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "this must be foundPath right?"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 577,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "suggestion: No need to address below comment in this review(separate commit is better).\n\n1. This function can be called only when foundConn/foundPath is not empty.  I.e. When AssetTag is maintained in direct JSON configuration then, this call is not needed.\n2. WriteJson is called, even if there is failure to update the FRU (Also, this must be in yield call, so after successful D-Bus response writejson is called and proper status is returned to the caller of the SetProperty of AssetTag). --> Note: right now, this is not direct issue, as #1 case, writeJson is still needed.\n3. Similar to foundPath, foundPropertyName must be used instead of PRODUCT_ASSET_TAG. i.e. Do SetProperty of Service, Path, Interface & PropertyName used during the foundProbe"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Sure Richard. Thank you."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 597,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "&propertyName"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 597,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Passing & doesn't work as expected in this case."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 99,
            "sizeDeletions": 28
        },
        {
            "number": 3,
            "revision": "da43a1ab87a7eb3a79b081f1ce1d039546dfdd7c",
            "parents": [
                "c7c5de795cf672797ae35965e95642dd1fc39363"
            ],
            "ref": "refs/changes/76/39176/3",
            "uploader": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "createdOn": 1611696980,
            "author": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 28
        },
        {
            "number": 4,
            "revision": "3406cd80c95892494402ac740f5e27a34aa0c6f5",
            "parents": [
                "f094125cd3bdbc8737dc8035a6e9ac252f6e8840"
            ],
            "ref": "refs/changes/76/39176/4",
            "uploader": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "createdOn": 1611697372,
            "author": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "looking at your change, it doesn't look like it will persist correctly.  Please add a bmc reboot to your test, and subsequent read of the FRU data."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Hi Ed, I have checked after bmc reboots also. It will persist the changed data correctly."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Updated in the Commit message. Thanks."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 1051,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This interface isn't special, and shouldn't be hardcoded like this."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 1051,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "hi Ed, we have 2 decorator interfaces for Asset details. Decorator.Asset is already used in .hpp file, so similarly I used for Decorator.AssetTag. This is how it is picking from json files.\nPlease suggest me if it should be in different way. Thank you."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 1051,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Hi Ed, AssetTag is getting exposed only through this interface. As Mansi pointed out, this is already used in entity-manager to log DeviceAdded log, and also used in bmcweb to read the AssetTag."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 28
        },
        {
            "number": 5,
            "revision": "aacd2eb9229bc064289423237b8d7e76316b5cc2",
            "parents": [
                "f094125cd3bdbc8737dc8035a6e9ac252f6e8840"
            ],
            "ref": "refs/changes/76/39176/5",
            "uploader": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "createdOn": 1611811206,
            "author": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/EntityManager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -6
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 28
        },
        {
            "number": 6,
            "revision": "834dab098d8700598825d799ea43667b27de9386",
            "parents": [
                "9fd87e54f5a65f3103b996114e052470dd1afd03"
            ],
            "ref": "refs/changes/76/39176/6",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1619198731,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 111,
            "sizeDeletions": 13
        },
        {
            "number": 7,
            "revision": "9e58a2ad34e4f0ae17dd062d9e9d22ded8bd5eb6",
            "parents": [
                "9fd87e54f5a65f3103b996114e052470dd1afd03"
            ],
            "ref": "refs/changes/76/39176/7",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1619201690,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/EntityManager.cpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "PRODUCT to all mapping"
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 627,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Please add check for the negative test case. If it fails setting in fru interface, it should fail in entity-manager as well."
                },
                {
                    "file": "src/EntityManager.cpp",
                    "line": 1444,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "this extra line looks unintentional :)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.cpp",
                    "type": "MODIFIED",
                    "insertions": 102,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 102,
            "sizeDeletions": 4
        }
    ]
}