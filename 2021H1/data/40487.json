{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Ia31918ee941f4dbed5f27c4f5cbfb62c2b259d6e",
    "number": 40487,
    "subject": "Add d-bus interface for BIOS boot type (EFI/Legacy)",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/40487",
    "commitMessage": "Add d-bus interface for BIOS boot type (EFI/Legacy)\n\nThe interface is addded to support IPMI boot type field of a\n\"Get System Boot Options\" \u0441ommand.\n\n[1] - BIOS boot type (for BIOS that support both legacy and EFI boots)\n  0b = \"PC compatible\" boot (legacy)\n  1b = Extensible Firmware Interface Boot (EFI)\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: Ia31918ee941f4dbed5f27c4f5cbfb62c2b259d6e\n",
    "createdOn": 1612977289,
    "lastUpdated": 1613925007,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1612977289,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1612977302,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612977867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12254/ : SUCCESS"
        },
        {
            "timestamp": 1612978020,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\nHello!\n\nPlease review my patch that adds 'BootType' d-bus interface.\n\nI've described why it is needed in here:\nhttps://lists.ozlabs.org/pipermail/openbmc/2021-February/024961.html"
        },
        {
            "timestamp": 1613118379,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\nHello!\n\nI've found a lack of support for the EFI/Legacy selector in\nthe 'phosphor-host-ipmid' utility.\nMore details in here: https://lists.ozlabs.org/pipermail/openbmc/2021-February/024961.html\nI have a patch for the `phosphor-host-ipmid` chassis handler that adds this functionality. But to use it it is necessary to add D-bus interface for the BIOS boot type.\nPlease review this `phosphor-dbus-interfaces` patch."
        },
        {
            "timestamp": 1613121655,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1613579745,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1613582636,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1: Code-Review+1\n\nPlease submit your patch to phosphor-host-ipmid as well."
        },
        {
            "timestamp": 1613592386,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\n> Patch Set 1: Code-Review+1\n> \n> Please submit your patch to phosphor-host-ipmid as well."
        },
        {
            "timestamp": 1613592791,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1: Code-Review+1\n> \n> Please submit your patch to phosphor-host-ipmid as well.\n\nThanks for the review!\nI definitely have plans to submit other patches!\nOnce this change would be merged and the `BootType` interface would be available for use I'll try to submit my patches for the `phosphor-host-ipmid`, `phosphor-settingsd` and `bmcweb` apps. They all need some changes to support EFI/Legacy selector."
        },
        {
            "timestamp": 1613644946,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1613771141,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nDrive by comments."
        },
        {
            "timestamp": 1613772679,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1613823735,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1613823753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613823771,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12736/ : FAILURE"
        },
        {
            "timestamp": 1613828511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12737/ : FAILURE"
        },
        {
            "timestamp": 1613829076,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/12738/ : FAILURE"
        },
        {
            "timestamp": 1613912903,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1613924138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12751/ : SUCCESS"
        },
        {
            "timestamp": 1613925007,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 6aa72f654eef4d6c0ffda861584871b5727124f7 by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "e2319975ba59195e7d99308650c57f1d82498bb0",
            "parents": [
                "9969a5b4016bc8ae62e5f23aad476c6352dfac86"
            ],
            "ref": "refs/changes/87/40487/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1612977289,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Should we make EFI the default value?\n\nDo we need another value for systems for which this concept doesn\u2019t even make sense?  This is mostly an x86-only setting. Should we make an x86-only interface?  I guess it is self-contained enough that it would only be instantiated on x86 machines?"
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Konstantin Aladyshev",
                        "email": "aladyshev22@gmail.com",
                        "username": "Kostr"
                    },
                    "message": "I don't think we need to add another value. This boot type parameter is just a hint for the host firmware. Even x86 firmware might not follow it, if it doesn't want to or does not support it.\nFor example we can have legacy BIOS (coreboot+SeaBIOS) that can't even boot EFI images. In this case this setting wouldn't make any sense either, but even here I think one would expect that after `ipmitool ... efiboot` boot type would be indicated as EFI, and after setting boot to legacy, boot type would be later read as legacy.\nIt is up to the system user to decide if this setting sane or not.\n\nAs for the default value, I think it should be EFI. As OpenBMC positions itself as a modern project, it should use modern standard for the default boot type. Moreover I think by now EFI is a de facto standard for the x86."
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I don't think we need to add another value. This boot type parameter is just a hint for the host firmware. Even x86 firmware might not follow it, if it doesn't want to or does not support it.\n\nTechnically this is a value for all EFI firmware, not just x86 (ARM64 can boot UEFI these days too).\n\nWith that said, what would the other option be for?  Wouldn't systems that only support a single boot mode just not publish this interface, as it implies that the mode can be changed, which it cant?\n\n> For example we can have legacy BIOS (coreboot+SeaBIOS) that can't even boot EFI images. In this case this setting wouldn't make any sense either, but even here I think one would expect that after `ipmitool ... efiboot` boot type would be indicated as EFI, and after setting boot to legacy, boot type would be later read as legacy.\n> It is up to the system user to decide if this setting sane or not.\n> \n> As for the default value, I think it should be EFI. As OpenBMC positions itself as a modern project, it should use modern standard for the default boot type. Moreover I think by now EFI is a de facto standard for the x86.\n\nDon't we (OpenBMC) have no control over the default?  It's that entirely within the various BIOSes control?"
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We can have a default in the sense that the property (BootType) should have a default value of EFI so that a default-constructed instance has that as the property value.  The way this is coded up now, Legacy will be the default by nature of how C++ enumeration assigning is done.\n\nWe cannot have a default in the sense of actively forcing the BIOS to do something.  What our default would do is set up the default response, if the user does nothing else, in our IPMI command.\n\n@Konstantin, you'll want to add a 'default: self.Types.EFI' to BootType above."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/Type/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 49,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "b27ea6ee6888183f062c25041079d01da8d415b4",
            "parents": [
                "9969a5b4016bc8ae62e5f23aad476c6352dfac86"
            ],
            "ref": "refs/changes/87/40487/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1613823735,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/Type/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "6aa72f654eef4d6c0ffda861584871b5727124f7",
            "parents": [
                "cfe12d262822fe7cdde8e744842a22b24513e6d3"
            ],
            "ref": "refs/changes/87/40487/3",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1613925007,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/Type/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Control/Boot/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Control/Boot/Type.interface.yaml",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 0
        }
    ]
}