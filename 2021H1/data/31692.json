{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "topic": "telemetry",
    "id": "Ie6b0b49f4ef5eeaef07d1209b6c349270c04d570",
    "number": 31692,
    "subject": "Redfish TelemetryService schema implementation",
    "owner": {
        "name": "Jozef Wludzik",
        "email": "jozef.wludzik@intel.com",
        "username": "jwludzik"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31692",
    "commitMessage": "Redfish TelemetryService schema implementation\n\nNow user is able to communicate with Telemetry service using Redfish.\nAdded TelemetryService, MetricReports, MetricReportCollection,\nMetricReportDefinition and MetricReportDefinitionCollection nodes\nwith GET method support. Added TelemetryService URI to root service.\nImplemented communication with backend - Telemetry:\nhttps://github.com/openbmc/telemetry\n\nAdded schemes attributes that are supported by Telemetry service\ndesign, ref.:\nhttps://github.com/openbmc/docs/blob/master/designs/telemetry.md\n\nChange introduces function that converts decimal value into\nduration format that is described by ISO 8601 and Redfish\nspecification.\n\nTested:\n - Tested using romulus and s2600wf images on QEMU\n - Verified DBus method calls to Telemetry service from bmcweb\n - Verified bmcweb responses from new nodes in different cases:\n   - Report collection is empty\n   - Report collection is filled with artificial data\n   - Telemetry service is disabled\n - Verified time_utils::toDurationString() output\n - Passed RedfishServiceValidator.py\n\nSigned-off-by: Wludzik, Jozef <jozef.wludzik@intel.com>\nSigned-off-by: Adrian Ambro\u017cewicz <adrian.ambrozewicz@linux.intel.com>\nSigned-off-by: Krzysztof Grobelny <krzysztof.grobelny@intel.com>\nChange-Id: Ie6b0b49f4ef5eeaef07d1209b6c349270c04d570\n",
    "createdOn": 1588002179,
    "lastUpdated": 1612890870,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1588002179,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1588002209,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588002230,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48356/"
        },
        {
            "timestamp": 1588002261,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48356/ : FAILURE"
        },
        {
            "timestamp": 1588003264,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1588003290,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588003305,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48357/"
        },
        {
            "timestamp": 1588003628,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48357/ : SUCCESS"
        },
        {
            "timestamp": 1588075479,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 2:\n\nIt would be nice to split it into few files in new directory telemetry_service"
        },
        {
            "timestamp": 1588144604,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> It would be nice to split it into few files in new directory telemetry_service\n\nI don't know if that's the things are done here in bmcweb. \n\n@Maintainers\nWhat's your opinion?"
        },
        {
            "timestamp": 1588145401,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 2:\n\n(3 comments)\n\nTelemetryService consists of many nodes with quite similar names (MetricReport, Metric, MetricReportDefinition, MetricDefinition). I also agree that it would be beneficial to split implementation into separate files, to avoid confusion.\n\nIf I were the author I would also include any utility functions inside classes which use them."
        },
        {
            "timestamp": 1588178082,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1588242434,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1588248382,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1588248469,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588248545,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1588248551,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48509/"
        },
        {
            "timestamp": 1588248927,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48509/ : SUCCESS"
        },
        {
            "timestamp": 1588253101,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1588253128,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588253147,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48511/"
        },
        {
            "timestamp": 1588253461,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48511/ : SUCCESS"
        },
        {
            "timestamp": 1588268433,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1588268661,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1588576151,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1588578996,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1588587426,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1588587460,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588587485,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48588/"
        },
        {
            "timestamp": 1588587795,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48588/ : SUCCESS"
        },
        {
            "timestamp": 1588601809,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1588601843,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588601871,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48596/"
        },
        {
            "timestamp": 1588601982,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1588602179,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48596/ : SUCCESS"
        },
        {
            "timestamp": 1588609352,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1588610039,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1588615173,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 6:\n\n(6 comments)\n\nnit picks, else lgtm."
        },
        {
            "timestamp": 1588662653,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1588666016,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1588685138,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1588685164,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 7:\n\n(13 comments)"
        },
        {
            "timestamp": 1588685164,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588685495,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48665/"
        },
        {
            "timestamp": 1588685894,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48665/ : SUCCESS"
        },
        {
            "timestamp": 1588698804,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1588698869,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1588699114,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1588749384,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1588752944,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7:\n\n(4 comments)"
        },
        {
            "timestamp": 1588755766,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1588756517,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1588779249,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1588779285,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1588779298,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/48857/"
        },
        {
            "timestamp": 1588779567,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/48857/ : SUCCESS"
        },
        {
            "timestamp": 1588792014,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1588824788,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1588839317,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1588870847,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 8:\n\nJust noticed that monitoring service isn't available yet, have you tested this without monitoring service to verify that it doesn't create 500 errors and handles it gracefully? Needs to not 500 without service."
        },
        {
            "timestamp": 1588922536,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 8:\n\n> Patch Set 8:\n> \n> Just noticed that monitoring service isn't available yet, have you tested this without monitoring service to verify that it doesn't create 500 errors and handles it gracefully? Needs to not 500 without service.\n\nBMCWeb works without monitoring service. I ran RedfishServiceValidator.py with and without monitoring service with success on TelemetryService, MetricReportCollection and MetricReportDefinitionCollection schemas. Same with monitoring service that stored few reports. I am sorry, I should mentioned it in commit message."
        },
        {
            "timestamp": 1589799215,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 9: Patch Set 8 was rebased."
        },
        {
            "timestamp": 1589799240,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1589799255,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 9:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/49703/"
        },
        {
            "timestamp": 1589800392,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/49703/ : SUCCESS"
        },
        {
            "timestamp": 1590406995,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1590407027,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590407037,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 10:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50036/"
        },
        {
            "timestamp": 1590407066,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50036/ : FAILURE"
        },
        {
            "timestamp": 1590408334,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1590408363,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590408378,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50039/"
        },
        {
            "timestamp": 1590408411,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50039/ : FAILURE"
        },
        {
            "timestamp": 1590409508,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1590409556,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590409574,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50042/"
        },
        {
            "timestamp": 1590409933,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50042/ : FAILURE"
        },
        {
            "timestamp": 1590410447,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 13: Patch Set 12 was rebased."
        },
        {
            "timestamp": 1590410478,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590410547,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50046/"
        },
        {
            "timestamp": 1590411752,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50046/ : SUCCESS"
        },
        {
            "timestamp": 1590412240,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1590418243,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1590418806,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1590418858,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590418899,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50049/"
        },
        {
            "timestamp": 1590418932,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50049/ : FAILURE"
        },
        {
            "timestamp": 1590649346,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 15: Patch Set 14 was rebased."
        },
        {
            "timestamp": 1590649832,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1590650375,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 15:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50394/"
        },
        {
            "timestamp": 1590650713,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50394/ : SUCCESS"
        },
        {
            "timestamp": 1590775797,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 15: Code-Review+1"
        },
        {
            "timestamp": 1590775808,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Topic set to Waiting on backend"
        },
        {
            "timestamp": 1591003540,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1591003585,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591003598,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 16:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/50595/"
        },
        {
            "timestamp": 1591003898,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/50595/ : SUCCESS"
        },
        {
            "timestamp": 1591620339,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 17: Patch Set 16 was rebased."
        },
        {
            "timestamp": 1591620376,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591620398,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 17:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/51212/"
        },
        {
            "timestamp": 1591621112,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/51212/ : SUCCESS"
        },
        {
            "timestamp": 1591790334,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1591790359,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591790378,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 18:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/51397/"
        },
        {
            "timestamp": 1591790918,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/51397/ : SUCCESS"
        },
        {
            "timestamp": 1591952869,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1591952896,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591952913,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 19:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/51649/"
        },
        {
            "timestamp": 1591952945,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/51649/ : FAILURE"
        },
        {
            "timestamp": 1591953790,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1591953817,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1591954145,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 20:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/51653/"
        },
        {
            "timestamp": 1591954458,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/51653/ : SUCCESS"
        },
        {
            "timestamp": 1592576169,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 21: Patch Set 20 was rebased."
        },
        {
            "timestamp": 1592576206,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1592576236,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 21:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/52442/"
        },
        {
            "timestamp": 1592576652,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/52442/ : SUCCESS"
        },
        {
            "timestamp": 1592839420,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 22: Patch Set 21 was rebased."
        },
        {
            "timestamp": 1592839453,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1592839463,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 22:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/52650/"
        },
        {
            "timestamp": 1592839824,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/52650/ : SUCCESS"
        },
        {
            "timestamp": 1593076649,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1593183229,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 24: Patch Set 23 was rebased."
        },
        {
            "timestamp": 1593183246,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593183246,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593183251,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/42/"
        },
        {
            "timestamp": 1593183251,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/43/"
        },
        {
            "timestamp": 1593183536,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/42/ : FAILURE"
        },
        {
            "timestamp": 1593183694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/43/ : FAILURE"
        },
        {
            "timestamp": 1593595940,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Uploaded patch set 25: Patch Set 24 was rebased."
        },
        {
            "timestamp": 1593595953,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593595959,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/285/"
        },
        {
            "timestamp": 1593595983,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/285/ : FAILURE"
        },
        {
            "timestamp": 1593596347,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1593596363,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1593596369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/287/"
        },
        {
            "timestamp": 1593596673,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/287/ : SUCCESS"
        },
        {
            "timestamp": 1594103510,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(50 comments)\n\nOverall, this patchset seems to add lots of \"utils\" type functions that are really not needed, especially when they're only used in one place.\n\nAnother theme in this review, all of the handlers forget that untrusted user-facing strings need to be escaped in all instances where a request path is turned into a dbus path.\n\nOverall, if your goal is to get this merged quickly, I suspect you need to separate the \"we should use more generic utils functions\" concept into a separate patchset from the telemetry service implementation.  Which gets merged first is up to you, but I think separating out the concerns will help get your first patch merged faster.  In terms of dbus, you're not really doing anything unique here, so I'd start by following the existing patterns."
        },
        {
            "timestamp": 1594632167,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 27: Patch Set 26 was rebased."
        },
        {
            "timestamp": 1594632182,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1594632188,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/950/"
        },
        {
            "timestamp": 1594632580,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/950/ : SUCCESS"
        },
        {
            "timestamp": 1594640898,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 27:\n\n(45 comments)"
        },
        {
            "timestamp": 1594648289,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 27:\n\n(3 comments)"
        },
        {
            "timestamp": 1594714337,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 27:\n\n(28 comments)"
        },
        {
            "timestamp": 1594812460,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Topic Waiting on backend removed"
        },
        {
            "timestamp": 1594812467,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Topic set to telemetry"
        },
        {
            "timestamp": 1594992204,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 27:\n\n(4 comments)"
        },
        {
            "timestamp": 1595086084,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 27:\n\n(6 comments)"
        },
        {
            "timestamp": 1595599445,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 28."
        },
        {
            "timestamp": 1595599458,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1595599464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/1876/"
        },
        {
            "timestamp": 1595599786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/1876/ : SUCCESS"
        },
        {
            "timestamp": 1595603973,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 29."
        },
        {
            "timestamp": 1595603993,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1595603998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/1887/"
        },
        {
            "timestamp": 1595604284,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/1887/ : SUCCESS"
        },
        {
            "timestamp": 1595950716,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 29:\n\n(1 comment)"
        },
        {
            "timestamp": 1597231879,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 30."
        },
        {
            "timestamp": 1597231894,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1597231900,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/2839/"
        },
        {
            "timestamp": 1597232216,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/2839/ : SUCCESS"
        },
        {
            "timestamp": 1597242568,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 30:\n\n(41 comments)"
        },
        {
            "timestamp": 1597325296,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 31."
        },
        {
            "timestamp": 1597325310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1597325315,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/2914/"
        },
        {
            "timestamp": 1597325450,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 31:\n\n(8 comments)"
        },
        {
            "timestamp": 1597325630,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/2914/ : SUCCESS"
        },
        {
            "timestamp": 1597340632,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(32 comments)"
        },
        {
            "timestamp": 1597340788,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1597353530,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 31:\n\n(14 comments)"
        },
        {
            "timestamp": 1597358663,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(13 comments)"
        },
        {
            "timestamp": 1597652444,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 31:\n\n(3 comments)"
        },
        {
            "timestamp": 1597655547,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1597908164,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 31:\n\n(2 comments)"
        },
        {
            "timestamp": 1597908505,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 31:\n\n(2 comments)"
        },
        {
            "timestamp": 1597911848,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 31:\n\n(5 comments)"
        },
        {
            "timestamp": 1597924467,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 32."
        },
        {
            "timestamp": 1597924481,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1597924488,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3383/"
        },
        {
            "timestamp": 1597924516,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 33: Commit message was updated."
        },
        {
            "timestamp": 1597924548,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 33:\n\n(1 comment)"
        },
        {
            "timestamp": 1597924791,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3383/ : SUCCESS"
        },
        {
            "timestamp": 1597927752,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 34."
        },
        {
            "timestamp": 1597927767,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1597927767,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(1 comment)"
        },
        {
            "timestamp": 1597927773,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3384/"
        },
        {
            "timestamp": 1597928069,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3384/ : SUCCESS"
        },
        {
            "timestamp": 1597929335,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(5 comments)"
        },
        {
            "timestamp": 1597929491,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(1 comment)"
        },
        {
            "timestamp": 1597930483,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(2 comments)"
        },
        {
            "timestamp": 1597930539,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(1 comment)"
        },
        {
            "timestamp": 1597932679,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(4 comments)"
        },
        {
            "timestamp": 1598013837,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 34:\n\n(1 comment)"
        },
        {
            "timestamp": 1598023446,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 34:\n\n(3 comments)\n\nI haven't made it through all the comments, but I figured a quick response to the below.  I'll come back around in the next few days."
        },
        {
            "timestamp": 1598024882,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 34:\n\n(2 comments)\n\nWe seem to be several patchsets in the future, and this review still has not been split up into its independent parts as requested initially.  DBus utils functions should be in their own patchset (in sdbusplus if they're generic), along with moving a significant portion of the codebase over to use them.\n\nAt this point, I believe that (and Telemetry service getting merged) are the biggest impediments to getting this patchset merged on mainline.  There are small issues still, but the above will probably be the biggest portion of the work."
        },
        {
            "timestamp": 1598435648,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 35: Patch Set 34 was rebased."
        },
        {
            "timestamp": 1598435662,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598435668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3666/"
        },
        {
            "timestamp": 1598435829,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3666/ : FAILURE"
        },
        {
            "timestamp": 1598436667,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 36."
        },
        {
            "timestamp": 1598436683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598436688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3669/"
        },
        {
            "timestamp": 1598436960,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3669/ : SUCCESS"
        },
        {
            "timestamp": 1598439476,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 37."
        },
        {
            "timestamp": 1598439493,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598439499,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3676/"
        },
        {
            "timestamp": 1598439645,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3676/ : FAILURE"
        },
        {
            "timestamp": 1598441257,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 38: New patch set was added with same tree, parent, and commit message as Patch Set 37."
        },
        {
            "timestamp": 1598441271,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: -Ok-To-Test"
        },
        {
            "timestamp": 1598441273,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598441278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3682/"
        },
        {
            "timestamp": 1598441434,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3682/ : FAILURE"
        },
        {
            "timestamp": 1598448063,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 39: New patch set was added with same tree, parent, and commit message as Patch Set 38."
        },
        {
            "timestamp": 1598448076,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: -Ok-To-Test"
        },
        {
            "timestamp": 1598448078,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598448084,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3698/"
        },
        {
            "timestamp": 1598448215,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3698/ : FAILURE"
        },
        {
            "timestamp": 1598450323,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 40: New patch set was added with same tree, parent, and commit message as Patch Set 39."
        },
        {
            "timestamp": 1598450336,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: -Ok-To-Test"
        },
        {
            "timestamp": 1598450338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598450344,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3704/"
        },
        {
            "timestamp": 1598450489,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3704/ : FAILURE"
        },
        {
            "timestamp": 1598454850,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 41."
        },
        {
            "timestamp": 1598454868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598454874,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3710/"
        },
        {
            "timestamp": 1598456002,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3710/ : SUCCESS"
        },
        {
            "timestamp": 1598475815,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 41:\n\n(2 comments)"
        },
        {
            "timestamp": 1598534967,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 41:\n\n(1 comment)"
        },
        {
            "timestamp": 1598603090,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 41:\n\n(1 comment)"
        },
        {
            "timestamp": 1598612791,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 42."
        },
        {
            "timestamp": 1598612806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598612812,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3862/"
        },
        {
            "timestamp": 1598613129,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3862/ : SUCCESS"
        },
        {
            "timestamp": 1598623464,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 43."
        },
        {
            "timestamp": 1598623476,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598623482,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3871/"
        },
        {
            "timestamp": 1598623610,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 44."
        },
        {
            "timestamp": 1598623626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598623627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/3871/ : ABORTED"
        },
        {
            "timestamp": 1598623632,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3872/"
        },
        {
            "timestamp": 1598623827,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 44:\n\n(4 comments)"
        },
        {
            "timestamp": 1598623959,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3872/ : SUCCESS"
        },
        {
            "timestamp": 1598624219,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Uploaded patch set 45."
        },
        {
            "timestamp": 1598624231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598624237,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/3873/"
        },
        {
            "timestamp": 1598624561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/3873/ : SUCCESS"
        },
        {
            "timestamp": 1598624854,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 45:\n\n(7 comments)"
        },
        {
            "timestamp": 1598881689,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 45:\n\n(1 comment)"
        },
        {
            "timestamp": 1598968733,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 46."
        },
        {
            "timestamp": 1598968751,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1598968752,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 45:\n\n(4 comments)"
        },
        {
            "timestamp": 1598968757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4033/"
        },
        {
            "timestamp": 1598969055,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4033/ : SUCCESS"
        },
        {
            "timestamp": 1598973770,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 46:\n\n(24 comments)"
        },
        {
            "timestamp": 1599146164,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 47."
        },
        {
            "timestamp": 1599146181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599146186,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4168/"
        },
        {
            "timestamp": 1599146796,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4168/ : SUCCESS"
        },
        {
            "timestamp": 1599146807,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 47:\n\n(21 comments)"
        },
        {
            "timestamp": 1599149861,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 47:\n\n(5 comments)"
        },
        {
            "timestamp": 1599149877,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 47:\n\n(1 comment)"
        },
        {
            "timestamp": 1599161154,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 47:\n\n(1 comment)"
        },
        {
            "timestamp": 1599224009,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 48."
        },
        {
            "timestamp": 1599224023,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599224029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4237/"
        },
        {
            "timestamp": 1599224199,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 48:\n\n(15 comments)"
        },
        {
            "timestamp": 1599224394,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4237/ : SUCCESS"
        },
        {
            "timestamp": 1599232139,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 48:\n\n(8 comments)\n\nResponded to old comments, have not reviewed the latest patch yet."
        },
        {
            "timestamp": 1599471769,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 48:\n\n(9 comments)"
        },
        {
            "timestamp": 1599546522,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 48:\n\n(7 comments)"
        },
        {
            "timestamp": 1599548349,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 48:\n\n(9 comments)\n\nThis is looking much better.  Now we just need to see it split up, and the couple minor things below fixed, and this should be good to go (assuming the phosphor-dbus-interfaces change goes through)"
        },
        {
            "timestamp": 1599577783,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 48:\n\n(1 comment)"
        },
        {
            "timestamp": 1599654641,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 49."
        },
        {
            "timestamp": 1599654657,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599654663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4457/"
        },
        {
            "timestamp": 1599654910,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 49:\n\n(8 comments)"
        },
        {
            "timestamp": 1599655040,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4457/ : SUCCESS"
        },
        {
            "timestamp": 1599659258,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 50: Patch Set 49 was rebased."
        },
        {
            "timestamp": 1599659272,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 50: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599659278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 50:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4469/"
        },
        {
            "timestamp": 1599660072,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 50:\n\n(1 comment)"
        },
        {
            "timestamp": 1599661661,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 50: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4469/ : SUCCESS"
        },
        {
            "timestamp": 1599662637,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 50: Code-Review+1\n\n(3 comments)\n\nA couple super minor things, but this looks good to go.\n\nGood job!"
        },
        {
            "timestamp": 1599675580,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 50: Code-Review+2"
        },
        {
            "timestamp": 1599675760,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Removed Code-Review+2 by James Feist <james.feist@linux.intel.com>\n"
        },
        {
            "timestamp": 1599675770,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 50: Code-Review+1\n\nWaiting on monitoring service"
        },
        {
            "timestamp": 1599730722,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 51."
        },
        {
            "timestamp": 1599730737,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 51: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599730743,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 51:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4535/"
        },
        {
            "timestamp": 1599730743,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 51:\n\n(2 comments)"
        },
        {
            "timestamp": 1599731072,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 51: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4535/ : SUCCESS"
        },
        {
            "timestamp": 1599863194,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 51: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1600110925,
            "reviewer": {
                "name": "James Feist",
                "email": "james.feist@linux.intel.com",
                "username": "feistjj"
            },
            "message": "Patch Set 51: Code-Review+1"
        },
        {
            "timestamp": 1606229162,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 52."
        },
        {
            "timestamp": 1606229178,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 52: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606229356,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 52:\n\n(2 comments)"
        },
        {
            "timestamp": 1606229604,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 52: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/8478/ : FAILURE"
        },
        {
            "timestamp": 1606232281,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 53."
        },
        {
            "timestamp": 1606232303,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 53: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1606233306,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 53: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/8480/ : SUCCESS"
        },
        {
            "timestamp": 1607092265,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 54."
        },
        {
            "timestamp": 1607092287,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 54: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1607093238,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 54: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/9087/ : SUCCESS"
        },
        {
            "timestamp": 1607329531,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 54:\n\n(4 comments)"
        },
        {
            "timestamp": 1607348221,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 54:\n\n(4 comments)\n\nThanks for comments"
        },
        {
            "timestamp": 1607348844,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 54: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1607687171,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 54:\n\n(1 comment)\n\nThe rest LGTM."
        },
        {
            "timestamp": 1607696916,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 54: Code-Review+1"
        },
        {
            "timestamp": 1607943505,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 54:\n\n(11 comments)"
        },
        {
            "timestamp": 1608008056,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 54:\n\n(5 comments)\n\nI just replied to comments, didn't re-review the latest patchset."
        },
        {
            "timestamp": 1608028232,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 54:\n\n(2 comments)"
        },
        {
            "timestamp": 1608036161,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 55."
        },
        {
            "timestamp": 1608036180,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 55: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1608037218,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 55: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/9810/ : SUCCESS"
        },
        {
            "timestamp": 1608038300,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 55:\n\n(2 comments)"
        },
        {
            "timestamp": 1609234355,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 56: Patch Set 55 was rebased."
        },
        {
            "timestamp": 1609234389,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 56: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1609235412,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 56: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10346/ : SUCCESS"
        },
        {
            "timestamp": 1610034431,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 56:\n\nPlease, review if possible"
        },
        {
            "timestamp": 1610039886,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 56:\n\n> Patch Set 56:\n> \n> Please, review if possible\n\nHave all the dependencies been merged?  Are your tests still valid?"
        },
        {
            "timestamp": 1610090313,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 56:\n\n> Patch Set 56:\n> \n> > Patch Set 56:\n> > \n> > Please, review if possible\n> \n> Have all the dependencies been merged?  Are your tests still valid?\n\nYes, all dependencies are there. Tests are still valid, I have functional tests that covers Telemetry functionality. Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it."
        },
        {
            "timestamp": 1610585870,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 56:\n\n> Patch Set 56:\n> \n> > Patch Set 56:\n> > \n> > > Patch Set 56:\n> > > \n> > > Please, review if possible\n> > \n> > Have all the dependencies been merged?  Are your tests still valid?\n> \n> Yes, all dependencies are there.\n\n\nCan you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n\n> Tests are still valid, I have functional tests that covers Telemetry functionality.\n\nCan you point to them?\n\n> Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n\nSo, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written."
        },
        {
            "timestamp": 1610626126,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 57."
        },
        {
            "timestamp": 1610626146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 57: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610626218,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 56:\n\n> Patch Set 56:\n> \n> > Patch Set 56:\n> > \n> > > Patch Set 56:\n> > > \n> > > > Patch Set 56:\n> > > > \n> > > > Please, review if possible\n> > > \n> > > Have all the dependencies been merged?  Are your tests still valid?\n> > \n> > Yes, all dependencies are there.\n> \n> \n> Can you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n> \n> > Tests are still valid, I have functional tests that covers Telemetry functionality.\n> \n> Can you point to them?\n> \n> > Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n> \n> So, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written.\n\nSorry for this misunderstanding. Here is a Telemetry recipe added to main repository:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/37548\n\nI guess you want telemetry to be added to image packages. Telemetry should be treated as optional service in OpenBMC environment. If user requires Telemetry functionality, it needs to be added to image. Please, advice me if I misunderstand it.\n\nTo push those functional tests to upstream repository I have to improve them first, it is all done under desk. Please, give me some time for it"
        },
        {
            "timestamp": 1610627203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 57: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10930/ : SUCCESS"
        },
        {
            "timestamp": 1610738359,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 57:\n\n> Patch Set 56:\n> \n> > Patch Set 56:\n> > \n> > > Patch Set 56:\n> > > \n> > > > Patch Set 56:\n> > > > \n> > > > > Patch Set 56:\n> > > > > \n> > > > > Please, review if possible\n> > > > \n> > > > Have all the dependencies been merged?  Are your tests still valid?\n> > > \n> > > Yes, all dependencies are there.\n> > \n> > \n> > Can you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n> > \n> > > Tests are still valid, I have functional tests that covers Telemetry functionality.\n> > \n> > Can you point to them?\n> > \n> > > Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n> > \n> > So, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written.\n> \n> Sorry for this misunderstanding. Here is a Telemetry recipe added to main repository:\n> https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/37548\n\nThat review adds the recipe.  I don't see any platforms or images actually using it, nor an image option to select it.\n\n> \n> I guess you want telemetry to be added to image packages. Telemetry should be treated as optional service in OpenBMC environment.\n\nThen why doesn't this patchset add an option for it or test that with the option disabled Redfish functions as designed?  That seems like a prerequisite if that's what you intended.\n\n> If user requires Telemetry functionality, it needs to be added to image. Please, advice me if I misunderstand it.\n> \n> To push those functional tests to upstream repository I have to improve them first, it is all done under desk. Please, give me some time for it\n\nGreat, looking forward to seeing them, but lets get the tests you have run documented better, and run the tests against a system that doesn't have telemetry service installed."
        },
        {
            "timestamp": 1610985272,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 57:\n\n> Patch Set 57:\n> \n> > Patch Set 56:\n> > \n> > > Patch Set 56:\n> > > \n> > > > Patch Set 56:\n> > > > \n> > > > > Patch Set 56:\n> > > > > \n> > > > > > Patch Set 56:\n> > > > > > \n> > > > > > Please, review if possible\n> > > > > \n> > > > > Have all the dependencies been merged?  Are your tests still valid?\n> > > > \n> > > > Yes, all dependencies are there.\n> > > \n> > > \n> > > Can you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n> > > \n> > > > Tests are still valid, I have functional tests that covers Telemetry functionality.\n> > > \n> > > Can you point to them?\n> > > \n> > > > Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n> > > \n> > > So, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written.\n> > \n> > Sorry for this misunderstanding. Here is a Telemetry recipe added to main repository:\n> > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/37548\n> \n> That review adds the recipe.  I don't see any platforms or images actually using it, nor an image option to select it.\n> \n> > \n> > I guess you want telemetry to be added to image packages. Telemetry should be treated as optional service in OpenBMC environment.\n> \n> Then why doesn't this patchset add an option for it or test that with the option disabled Redfish functions as designed?  That seems like a prerequisite if that's what you intended.\n\nCan you be more specific? Do you mean to add another meson option to control existence of code? Thanks in advance for answer\n\n> > If user requires Telemetry functionality, it needs to be added to image. Please, advice me if I misunderstand it.\n> > \n> > To push those functional tests to upstream repository I have to improve them first, it is all done under desk. Please, give me some time for it\n> \n> Great, looking forward to seeing them, but lets get the tests you have run documented better, and run the tests against a system that doesn't have telemetry service installed.\n\nThis patch has been tested with and without Telemetry service added to image."
        },
        {
            "timestamp": 1610989435,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 57:\n\n> Patch Set 57:\n> \n> > Patch Set 57:\n> > \n> > > Patch Set 56:\n> > > \n> > > > Patch Set 56:\n> > > > \n> > > > > Patch Set 56:\n> > > > > \n> > > > > > Patch Set 56:\n> > > > > > \n> > > > > > > Patch Set 56:\n> > > > > > > \n> > > > > > > Please, review if possible\n> > > > > > \n> > > > > > Have all the dependencies been merged?  Are your tests still valid?\n> > > > > \n> > > > > Yes, all dependencies are there.\n> > > > \n> > > > \n> > > > Can you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n> > > > \n> > > > > Tests are still valid, I have functional tests that covers Telemetry functionality.\n> > > > \n> > > > Can you point to them?\n> > > > \n> > > > > Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n> > > > \n> > > > So, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written.\n> > > \n> > > Sorry for this misunderstanding. Here is a Telemetry recipe added to main repository:\n> > > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/37548\n> > \n> > That review adds the recipe.  I don't see any platforms or images actually using it, nor an image option to select it.\n> > \n> > > \n> > > I guess you want telemetry to be added to image packages. Telemetry should be treated as optional service in OpenBMC environment.\n> > \n> > Then why doesn't this patchset add an option for it or test that with the option disabled Redfish functions as designed?  That seems like a prerequisite if that's what you intended.\n> \n> Can you be more specific? Do you mean to add another meson option to control existence of code? Thanks in advance for answer\n\nI would personally like to see telemetry added to all images, but it wasn't clear what your intent was, because this patchset appears to be adding telemetry service to all images, yet there are no machines in upstream that have telemetry service enabled.\n\n> \n> > > If user requires Telemetry functionality, it needs to be added to image. Please, advice me if I misunderstand it.\n> > > \n> > > To push those functional tests to upstream repository I have to improve them first, it is all done under desk. Please, give me some time for it\n> > \n> > Great, looking forward to seeing them, but lets get the tests you have run documented better, and run the tests against a system that doesn't have telemetry service installed.\n> \n> This patch has been tested with and without Telemetry service added to image.\n\nAnd you tested that the telemetry service nodes were not present if the telemetry daemon was not installed?  That doesn't look like what the code does, the telemetry service nodes and links are installed unconditionally.\n\n\nFor this patchset, lets start with your intent;  Did you intend for this to be configurable, or did you intend for this to be a standard feature?  My preference would be standard feature, but as written, it's not clear what you intended.  It's written like a standard feature, but wasn't added to the standard image."
        },
        {
            "timestamp": 1611076287,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 57:\n\n> Patch Set 57:\n> \n> > Patch Set 57:\n> > \n> > > Patch Set 57:\n> > > \n> > > > Patch Set 56:\n> > > > \n> > > > > Patch Set 56:\n> > > > > \n> > > > > > Patch Set 56:\n> > > > > > \n> > > > > > > Patch Set 56:\n> > > > > > > \n> > > > > > > > Patch Set 56:\n> > > > > > > > \n> > > > > > > > Please, review if possible\n> > > > > > > \n> > > > > > > Have all the dependencies been merged?  Are your tests still valid?\n> > > > > > \n> > > > > > Yes, all dependencies are there.\n> > > > > \n> > > > > \n> > > > > Can you point me at the review adding the telemetry daemon to the main image?  I'm not seeing it, and in this commit it doesn't appear that you've tested/implemented them to be optional.\n> > > > > \n> > > > > > Tests are still valid, I have functional tests that covers Telemetry functionality.\n> > > > > \n> > > > > Can you point to them?\n> > > > > \n> > > > > > Telemetry repository contains code that covers all functionality used in bmcweb patches. OpenBMC user is able to add telemetry to image and start using it.\n> > > > > \n> > > > > So, to be clear, telemetry has not been added to the image yet?  That would be a dependency for this to go in as written.\n> > > > \n> > > > Sorry for this misunderstanding. Here is a Telemetry recipe added to main repository:\n> > > > https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/37548\n> > > \n> > > That review adds the recipe.  I don't see any platforms or images actually using it, nor an image option to select it.\n> > > \n> > > > \n> > > > I guess you want telemetry to be added to image packages. Telemetry should be treated as optional service in OpenBMC environment.\n> > > \n> > > Then why doesn't this patchset add an option for it or test that with the option disabled Redfish functions as designed?  That seems like a prerequisite if that's what you intended.\n> > \n> > Can you be more specific? Do you mean to add another meson option to control existence of code? Thanks in advance for answer\n> \n> I would personally like to see telemetry added to all images, but it wasn't clear what your intent was, because this patchset appears to be adding telemetry service to all images, yet there are no machines in upstream that have telemetry service enabled.\n> \n> > \n> > > > If user requires Telemetry functionality, it needs to be added to image. Please, advice me if I misunderstand it.\n> > > > \n> > > > To push those functional tests to upstream repository I have to improve them first, it is all done under desk. Please, give me some time for it\n> > > \n> > > Great, looking forward to seeing them, but lets get the tests you have run documented better, and run the tests against a system that doesn't have telemetry service installed.\n> > \n> > This patch has been tested with and without Telemetry service added to image.\n> \n> And you tested that the telemetry service nodes were not present if the telemetry daemon was not installed?  That doesn't look like what the code does, the telemetry service nodes and links are installed unconditionally.\n\nDo you mean that I should not add some nodes if telemetry backend is absent? If yes, I can create new nodes inside other node and it should work properly. The difficult part is to come with a condition to check if service is present in system during bmcweb initialization. Maybe it could be done by checking /lib/systemd/system/ directory.\n\n> For this patchset, lets start with your intent;  Did you intend for this to be configurable, or did you intend for this to be a standard feature?  My preference would be standard feature, but as written, it's not clear what you intended.  It's written like a standard feature, but wasn't added to the standard image.\n\nOk, thanks. I will provide a patch that add Telemetry as standard feature to OpenBMC"
        },
        {
            "timestamp": 1611576145,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 57:\n\n(2 comments)"
        },
        {
            "timestamp": 1612185993,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 58."
        },
        {
            "timestamp": 1612186012,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 58: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612187712,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 58: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11701/ : SUCCESS"
        },
        {
            "timestamp": 1612201435,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 59."
        },
        {
            "timestamp": 1612201458,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 59: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612202291,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 60."
        },
        {
            "timestamp": 1612202315,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 60: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612202318,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 59: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/11716/ : ABORTED"
        },
        {
            "timestamp": 1612202819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 60: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/11722/ : FAILURE"
        },
        {
            "timestamp": 1612206634,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 61."
        },
        {
            "timestamp": 1612206672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 61: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612207727,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 61: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11733/ : SUCCESS"
        },
        {
            "timestamp": 1612208004,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 61:\n\nTelemetry (backend for Redfish Telemetry) is a main feature of OpenBMC -> https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/40086\nTests used to verify all patches from relation chain: https://gerrit.openbmc-project.xyz/c/openbmc/telemetry/+/40091"
        },
        {
            "timestamp": 1612208004,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Removed reviewer James Feist."
        },
        {
            "timestamp": 1612777311,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 61: Code-Review+1"
        },
        {
            "timestamp": 1612782259,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 61: Code-Review+1"
        },
        {
            "timestamp": 1612804733,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 61: Code-Review+1"
        },
        {
            "timestamp": 1612874028,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Uploaded patch set 62."
        },
        {
            "timestamp": 1612874050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 62: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1612875262,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 62: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12153/ : SUCCESS"
        },
        {
            "timestamp": 1612890864,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 62: Code-Review+2"
        },
        {
            "timestamp": 1612890870,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 081ebf06b4c947e828408029273699ff2d49a54f by Ed Tanous"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "3cb8d438f07806731088f6e15feea3be6ae555cd",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/1",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588002179,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 650,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 660,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "a9e46a41bb3899868a5f31e686db49abd59e21ce",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/2",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588003264,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "This helper already puts things in the redfish time format https://github.com/openbmc/bmcweb/blob/3b6dea601ede930c4596b0160b5a8d328b92b0c4/http/utility.h#L755\n\nif its needed separately for some reason, it should live with the other time heleprs"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is required because it is a different format than the from getDateTime(). I called it a duration format to differentiate it from timestamp or datetime format and sync with redfish naming.\nIt is specific for redfish. Is it ok to create new header in redfish-core/include/utils/time_format.h to store this utility function ? Thanks in advance"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "this should live with the other json helpers"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok. I will move it. Can I move it to redfish-core/include/utils/json_utils.hpp?"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "As this is used only by TelemetryService class maybe it could be part of it?"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 138,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "+1"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "check return code? is it an error if it doesn't exist?"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "In this case it is not an error. This field is not required in redfish schema according to http://redfish.dmtf.org/schemas/v1/TelemetryService.v1_2_0.json.\nFor developers I can add debug information to assignIfPresent so I can omit check on return code from every assignIfPresent() function.\nThe other reason why I added return code for assignIfPresent is in line 356. Return code is needed to proceed with other action on this specific attribute. If it does not fit bmcweb code style I can modify it."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 326,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "toReportActions and getReportDefinitionProperties also could be closed inside its only user class"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 326,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 532,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "The same story - getReportProperties and toMetricValues used only by one class"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 532,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 640,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 650,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "db40d501451cecf2ac4ff2ebaa24970ee6d37023",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/3",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588248382,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 513,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 701,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/4",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588253101,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "cant this be a static assert?"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "Also, isn't this std::is_void_v<T> ? https://en.cppreference.com/w/cpp/types/is_void"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "std::function is not constexpr so you are not able to use in static_assert.\nstd::is_void is useless because compiler see that convert function requires return type that is acceptable by attribute object (line 376). I can add this as an extra hint for developer"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "You can use constexpr to make the static assert like this https://github.com/openbmc/dbus-sensors/blob/10306bd5032fda014628487665d8000c0db49177/include/Utils.hpp#L132"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, but convert parameter as std::function<> is an object that is not const for compilers, so static_cast is not possible. Unless you mean to ban std::function as parameter for assignIfPresent.\nstatic_assert(std::is_std_function<S>, \"Not supported because of possible nullptr target\");"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "yes, that is what I meant"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 366,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "oh, ok so you allow it in some cases and not others.. ok no problem\n\nDone."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 432,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This helper util functions can be pushed as separate commit . Don't mix with telemetry implementation code change( May be you can push telemetry on top of this helper commit)."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 432,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I do not feel confident to separate assignIfPresent generic function. In separate commit reviewers may have a problem with understanding use of this code. If this stay in this commit, you have few example how this is used. Let me know if this is enough. If not I will separate it."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 432,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "That is reason you should make telemetry commit as dependent on this helper commit. That way reviewer will be aware of both and reviews both. That is generic practice followed to make scope of changes isolated.\n\nProblem with this approach are:\n1) Change is big which is in general misses multiple eyes(Reviewers).\n2) Helper function alone can be used for other commits( Example: EventService can use them now).\n3) Context isolation."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Are there parameters the same as in async_method_call in function below?\n\nWe could think of some helper function which will look like this:\n\nconst auto GET_SUB_TREE_PATHS = SomeStructName(\"xyz.openbmc_project.ObjectMapper\",\n            \"/xyz/openbmc_project/object_mapper\",\n            \"xyz.openbmc_project.ObjectMapper\", \"GetSubTreePaths\",\n            \"/xyz/openbmc_project/MonitoringService/Reports/TelemetryService\");\n\nasyncDbusCall([asyncRect] { /* code of lambda */ }, GET_SUB_TREE_PATHS, 1, interfaces);\n\nAnd const getSubTreePaths could be easy to reuse."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "put trailing slash on all paths so trailing slash matches as well"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This looks like it is duplication in other classes. This could be const.\n\nentryPrivileges = ENTRY_PRIVILEGES;"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Privileges for TelemetryService, MetricDefinitionReport and MetricReport are the same because they have not been defined in Privilege Registry map yet.\nhttps://redfish.dmtf.org/registries/Redfish_1.0.4_PrivilegeRegistry.json\nThose privileges might change in the future.\nI can only placed them as a global const value, because it is a flat_map. I am not able to make it as a static class variable. Is it ok to keep TelemetryPrivilegeRegistry as global in header?"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ok, I understand now. We can get back to it when it will be defined in that json file."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 257,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 757,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "74be21530a6f00b2672d0c40115c723ae70e222c",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/5",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588587426,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 257,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 767,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "5853fbaf43e9bf60b1c49114c8f046afc8a5f878",
            "parents": [
                "b52664e2f47512c4eb7ce8f036eacf7a4b161320"
            ],
            "ref": "refs/changes/92/31692/6",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588601809,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "much better than before, thanks"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "All thanks to Krzysztof Grobelny"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 370,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "nit: Remove extra lines"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 422,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This is specific to telemetry right? Why do we need it in helper function?\n\nAlso do you think, Is this standard and will not change tomorrow if any requirement comes?"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I added it here because it seems like other nodes create member list in similar way, for example: doGet in ChassisCollection in redfish-core/lib/chassis.hpp\nI would like to keep this generic here so other would use it for their collections. If new changes are required than we can extend this function with some callback or sth similar."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 422,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "OK, Its generic and can be used by other places( Chassis) we are good."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 422,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "In success case, Where are we filling \"Members@odata.count\" value? That is mandatory property."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is inside dbusPathsToMembersArray() function. Please, let me know if this is enough."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "ok, That is enough."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 141,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "nit: Inverse the condition for consistency. i.e  if (path == std::end(reports)) return error. Else continue the remaining execution."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 141,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Look like it is same as in line 124. It would be nice to have const for it. Reduces risk of typos, copy paste errors and forgetting to change it in all places."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "+1 \ncould be 'static constexpr std::string_view' member for all classes."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 153,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This should be 1 right? To be specific."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 153,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Would it be possible to do similar change as with getSubTreePaths?"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, but my fear is that all \"GetAll\" method should be changed in bmcweb. Not only in TelemetryService MetricReportDefinition and MetricReport."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 210,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 251,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 767,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "99146f938a080bcc0a31ee271ff2d8bf20c4eade",
            "parents": [
                "8c88860856ac446254cd13ff352f6f8c06a0bf30"
            ],
            "ref": "refs/changes/92/31692/7",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588685138,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Did you ran this with creating atleast one MetricReport, MetricReportDefinitions etc..? Else we may be missing validation of those schema's."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, I ran it with existings MetricReport and MetricReportDefinition."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 191,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 752,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "95902d0ef1392f6f6c8a7f753e069400b187d913",
            "parents": [
                "8c88860856ac446254cd13ff352f6f8c06a0bf30"
            ],
            "ref": "refs/changes/92/31692/8",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1588779249,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 753,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "d8f98030d997317feb4e09e5b7b71259524b5b30",
            "parents": [
                "ec3bd21de71d98b4ab4656d5f9bcb8f217d79828"
            ],
            "ref": "refs/changes/92/31692/9",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1589799215,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 753,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "2d8f5239620d3a41c9027baef309b1f25306af25",
            "parents": [
                "ec3bd21de71d98b4ab4656d5f9bcb8f217d79828"
            ],
            "ref": "refs/changes/92/31692/10",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590406995,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "2da9827086a91e11a87b82567e085f3c9375a9ba",
            "parents": [
                "ec3bd21de71d98b4ab4656d5f9bcb8f217d79828"
            ],
            "ref": "refs/changes/92/31692/11",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590408334,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "7cb1654d20a3142f0a14dd3c109b4c2cb36edc88",
            "parents": [
                "ec3bd21de71d98b4ab4656d5f9bcb8f217d79828"
            ],
            "ref": "refs/changes/92/31692/12",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590409508,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Changes in this file are the results of bumping clang to clang-10\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/32639\nCI returns wrong formatting without those changes."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "There is a patch that fixes clang-format\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/32729"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 761,
            "sizeDeletions": 4
        },
        {
            "number": 13,
            "revision": "5e05a56848386b582b0dd3110d3db10e57f8961b",
            "parents": [
                "8517e658417ce73d6c7575f58ab403ce574ee42d"
            ],
            "ref": "refs/changes/92/31692/13",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590410447,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 761,
            "sizeDeletions": 4
        },
        {
            "number": 14,
            "revision": "eb03378763e3537aff093f5f66d5653c50a0f5c9",
            "parents": [
                "8517e658417ce73d6c7575f58ab403ce574ee42d"
            ],
            "ref": "refs/changes/92/31692/14",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590418806,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "d1c4f06f153fc974843b72605c87b2d0e83d5151",
            "parents": [
                "5bb6b31e4855d00f0b2adf395b70be76c66f718a"
            ],
            "ref": "refs/changes/92/31692/15",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1590649346,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "80134378f780fba1031d9f3ddffffba6140c34c9",
            "parents": [
                "1479c82697ad19c2610eca89dcbe5b0eaa9acb67"
            ],
            "ref": "refs/changes/92/31692/16",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1591003540,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "706dd40eb52e69a221d1d81f4072938c3fde11d2",
            "parents": [
                "bea6005c6aa2f2ae7b0fb7b3d6379484d8ccbe4e"
            ],
            "ref": "refs/changes/92/31692/17",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1591620339,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "01992222a76112be2c07ff914a172d2b6715933c",
            "parents": [
                "bea6005c6aa2f2ae7b0fb7b3d6379484d8ccbe4e"
            ],
            "ref": "refs/changes/92/31692/18",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1591790334,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 757,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "732c31b72cfa367d71b30d194d517c96405d4d08",
            "parents": [
                "bac5db8806b56f9288abaf328a8207361acc7b4a"
            ],
            "ref": "refs/changes/92/31692/19",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1591952869,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 757,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "73103d4c75e2ed910c9a9bb783a5aa791fce5e0d",
            "parents": [
                "bb6b34887f65e02b7180c43e1153c5d41b45af31"
            ],
            "ref": "refs/changes/92/31692/20",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1591953790,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "c5c0ed421733c757985cc57af90a3c8fa4277fee",
            "parents": [
                "63e26b87a4adf8b9a6bc58ff13d9844beae6d1ab"
            ],
            "ref": "refs/changes/92/31692/21",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1592576169,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "354d80e9e4db6dc3cb579e4f6caf631edaee33e6",
            "parents": [
                "4d9bb1dc6317c8d804e2ce6880377b578e0176d5"
            ],
            "ref": "refs/changes/92/31692/22",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1592839420,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "d333a66afd0e9e5f8a1f4a815b5bb1404bd28f47",
            "parents": [
                "4d9bb1dc6317c8d804e2ce6880377b578e0176d5"
            ],
            "ref": "refs/changes/92/31692/23",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1593076649,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "3ccfb99019e26f5f17a4bf0af01a4a2b4997e755",
            "parents": [
                "a0ec28b671391473a6dbe1258fb5216311861396"
            ],
            "ref": "refs/changes/92/31692/24",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1593183229,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "394eed23ca9096837aafca756426ebf2705bfdf1",
            "parents": [
                "6eda7685694dca84db5a1b86b497c8d1e9fcbd06"
            ],
            "ref": "refs/changes/92/31692/25",
            "uploader": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "createdOn": 1593595940,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "39f50f7fa28f4eec1c38bd1e3f65cbb5e8029e8e",
            "parents": [
                "6eda7685694dca84db5a1b86b497c8d1e9fcbd06"
            ],
            "ref": "refs/changes/92/31692/26",
            "uploader": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "createdOn": 1593596347,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please list the dependent patches this change requires."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is standalone patch. All patches in relation chain required this commit."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, so you tested this without monitoring service installed?  That is a separate patch not on master at the moment."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you forgot to mention that you wrote these functions you tested.  You might also want to mention why you wrote \"utils\" classes that are used in one place, without updating the rest of bmcweb to the new paradigm.\n\nI suspect the utils classes probably need to be reviews on their own, as they're changing some major semantics of how bmcweb treats json and dbus today."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We wrote utils to remove duplicated code and as you know duplicated code is almost always a bad practice.\n\nWe cannot change it everywhere with this commit, if we want it everywhere it should be after this code is merged otherwise this review would be a lot bigger, with lots of unrelated changes. Progress needs time."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Understood, but having 2 different methods of executing the same action, with very different code is far worse than some duplicated, relatively easy to read code.  In most cases, you've replaced very easy to understand semantics with utility functions that obfuscate intent, and worse, cause the codebase to have 2 different \"right\" ways to do things.\n\nAt no point did I ask you to change it everywhere in this commit.  I asked you to separate your concerns.  There is nothing in TelemetryService that REQUIRES the constructs you've added, and the types of conversions you're doing have been done in other redfish services many many times.  Also, in a lot of those cases, these utils functions have been discussed and discounted, as they obfuscate and make the code larger, and slower.  I'm suggesting you can either.\n\n1. Push a commit to add the utils functions, and transfer enough of the bmcweb control flow over to those utils that they make the implementation cleaner, and host all the discussions that entails. Then, once that's merged use another patchset to check in the Telemetry Service implementation.\n2. (preferred) Build telemetry service with the existing abstractions and patterns available in the codebase today.  Then, when you feel comfortable, build the utils functions and transfer them over.\n\nSaid another way, there is nothing technically binding these two together, and they need to be separated in concept."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I see some strange logic here. You said that if we wrap some code in function we create 2 right ways to write something, but right now that code is all over bmcweb in multiple places everyone just online it. It looks like right now we have a lot of ways to do one thing and this utility functions are first step to make one \"right\" way.\n\nOnce you have something small and ready to reuse it makes thinks easier for others. If there was such function before we didn't have to write it, we could just reuse it. Right now we can't so we wan't to create it so it can be used by others in the future."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"It looks like right now we have a lot of ways to do one thing and this utility functions are first step to make one \"right\" way.\"\n\nThey're only the first step if you port a number of the other uses of them to your utility function.  Otherwise, you've just created a third \"right way\".  Right now we have the \"2 right ways\" because previous authors also wanted to come up with new patterns and utility functions, similar to this, and didn't follow through on rolling the rest of the codebase forward.  This then falls to maintainers to do, which doesn't scale, and wastes time for the project as a whole.\n\n\"Once you have something small and ready to reuse it makes thinks easier for others.\"\nSmall, ready to reuse, and tested/reused on an array of cases.  The last point is what I'm asking for.  Using your utility functions on heavily used schemas will prove the utility, and show how much better of a pattern it is.  Using it on new code, tends to reduce the initial visibility, and cause problems down the road.\n\n\"Right now we can't so we wan't to create it so it can be used by others in the future.\"\nThis is exactly how you get N competing patterns/utility functions in bmcweb."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "The latest patch does not introduce any new pattern to bmcweb."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need more tests here.  You've added several new handlers that I'm hoping you validated ahead of time."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Yes it is validated, we will add cases in next patchset."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You need to take some effort to constrain these two, to avoid very confusing error messages when used.\nArray needs to meet the forward iterable class, and the value_type needs to be a string\nCallback needs to be callable.\n\nSimply handing them blindly to async_method_call is dangerous, and leads to code that compiles fine, but doesn't work."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We will add proper Array verification. About the callback it is already validated in async_method_call."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If this is something you'd like to see done, please update all the uses in bmcweb to use this helper.  I personally don't like the way it obfuscates what's going on, and I don't find it a useful abstraction, but push it to the rest of the uses, and we'll see if we can get some consensus.\n\npath should be accepted by std::string_view.\n\nNormal semantics would put the callback at the end, to allow lambdas to be used in a clean way.\n\nArray should also be const"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "std::string_view - sdbusplus is using const std::string& which would force us to use copy. Thats why we are using const std::string& here.\n\nArray as const - OK\n\nWe discussed that we want to keep this helper function as much as we can\nsimilar to async method call so the users can easily replace one with another. For that we need callback to be first parameter."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I thought sdbusplus had added std::string_view overloads.  Apparently that patch never made it in.  That's fine as is.\n\nFair, the ordering isn't crucial here."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "again, please update std::String to std::string_view."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "As above"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 443,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please put this in a different file.  \"is std function\" has nothing to do with json."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 443,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 443,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 463,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These kinds of abstractions are exactly what bmcweb was built to try to avoid.\n\n1. They create a lot of ancillary data structures\n2. They're difficult to read.\n3. They are slower at runtime, and consume more memory\n4. They're slower to compile.\n\nIn almost all cases where this is used, you're constructing a map, then doing a bunch of map lookups, rather than simply looping over a vector, which is much more efficient at both compile time and runtime, as well as using less memory."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 463,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We use boost::flat_map is actually a vector of pairs. Also we are getting this flat_map from sdbusplus and because of that we need to handle it this way. We are passing this flat_map as reference so there is no copy.\n\nWe avoid code duplication with that, which also has a lot of advantages.\nIt saves us a lot of development effort. We can optimize it once we have a proof that it slows down the system."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 463,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"We use boost::flat_map is actually a vector of pairs.\"\nA SORTED vector of pairs.  That sorting takes CPU cycles, that you then don't use, because you iterate the entire structure.\nSaid another way:\nInserting into a vector, then iterating said array is O(N)\nInserting into a map, then doing a lookup on said map by each key is O(NlogN)\n\n\"Also we are getting this flat_map from sdbusplus and because of that we need to handle it this way\"\nI'm not sure where you got this impression.  I wrote the sdbusplus patch to support any iterable container, including flat_map.  It can use any other type, there is nothing about sdbusplus that requires a flat_map.\n\n\"We are passing this flat_map as reference so there is no copy.\"\nI never said that you copied it.\n\n\"We avoid code duplication with that, which also has a lot of advantages.\"\nDisagree.  The point of deduplicating code is to have less code.  If you wrote out your parsers, I'm betting you would have significantly less code than you have in this patchset.\nI think you're confusing duplicated code with duplicated patterns.  You can have the later, and be no worse off.  In fact, following consistent patterns allows developers to develop a mindset around these things.  Randomly changing patterns, destroys a lot of that.  as-is, you've made the code readability very very difficult compared to the relatively simpler loop and if/else if statement approach that the other handlers take.\n\n\"It saves us a lot of development effort. We can optimize it once we have a proof that it slows down the system.\"\nFrankly, it only saves development effort for the person writing the code, and even then it only saves a few keystrokes.  It causes significant development effort for those that have to maintain these constructs in the long run, and even more for the people that have to debug or use these constructs in the future.  Feel free to write the test to prove the performance, but I promise you, more code is being executed using this pattern, more memory is being copied, consumed and moved, and more code is being generated.  It is also much more difficult to read."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 463,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "a static_assert would be better here.  With that said, you need to do a better job delineating types of S here more than just \"isn't a std::function\".  Is a reference to a function ok?  Does it have to be callable?"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "static assert doesn\u2019t work for std::function::operator bool()\nwe don\u2019t check if it\u2019s callable, we call convert in line 482 if it is not callable code won\u2019t compile."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That wasn't what I was asking for.  S is required to be callable, that's what you should be testing for, not whether or not it's a std::function"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 472,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 515,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like a good utilities function to add, but I'm worried about duplicating logic.  Can you find the other collections that might benefit from this, and move them over to this one?"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 515,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We will be still working on bmcweb. Once we find duplicated logic we will\nrefactor code to remove that duplication. We are doing it step by step."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 515,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See main comment.  Feel free to either do it the existing way, or add a utils function.  Don't do both in the same patchset."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 515,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 520,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "considering you put this in a generit \"utils\" class, this probably shouldn't be called \"reports\""
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 520,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 520,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 521,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "should be string_view."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 521,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 521,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 534,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "missing range check."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 534,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 534,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please include these URLs in the structures that require them, instead of constexpr defining them in one place.  This makes the code easier to audit in the future, and means that fewer urls (and strings) will be generated at runtime."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "To be honest I don\u2019t understand how it impacts urls and string during runtime.\n\nWe defined this consts to reduce code duplication which are used in few files (telemetry service is split into few small files)."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if I call \nfoo(metricReportDefinitionUri + \"MyPostfix\")\nit has to generate a new string, copy in the first string from RODATA, then append the second string from RODATA, then take the string_view to that.\n\nif I instead call\nfoo(\"/redfish/v1/TelemetryService/MetricReportDefinitions/MyPostfix\") the only object generated is the string_view, and no memory is malloced.\n\nThe filesystem openbmc uses is fully capable of deduplicating common prefixes.  Again, if you think this is a pattern we should use, transition some of the old code to use this pattern, and put it through a review."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, you are right with your example. We are aware of it. But using same value like \"/redfish/v1/TelemetryService/...\" in many places is less readable than a simple constexpr variable that is same everywhere. This is a main reason why we define it as constexpr.\nIf you are afraid of constexpr and keeping strings in pointers, we can change it to macros as in C and thanks to ## join them in compile time.\n#define METRIC_REPORT_URI \"/redfish/v1/TelemetryService/MetricReports/\""
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\" But using same value like \"/redfish/v1/TelemetryService/...\" in many places is less readable than a simple constexpr variable that is same everywhere. \"\n\nThis is not true, especially when doing endpoint url audits.  You might try to put yourself in the maintainers shoes for a second, and attempt doing an endpoint and permissions audit on your code (along with every other handler) to see how hard it is.\nWithout your code, it can be done largely with a single grep statement.  With your code, it has to be done by hand."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done. Now every Node class that is included into Telemetry contains string literal. Uris as variables are only used in node methods."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Excellent.  Thank you."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "pass by string_view"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't see any dbus escaping of uri in either the caller of this code, or here.  it will need to be done.\n\n(note) I don't see any dbus escaping at all in any function.  Please audit all the places where user facing strings are placed on dbus, and make sure errors are handled properly."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "sdbusplus library ensures that string we pass there is handled properly. It is sdbusplus library responsibility to escape/validate this."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you point to the code that does what you say?  In my experience, what you've described is in no way true, and sdbusplus does no validation on the paths.  Bad paths simply leads to bmcweb being removed from dbus.  We've seen this happen before."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Added getDbusReportPath() that check for escaped characters"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "uri is captured by pointer here.  This could lead to lifetime issues.  fix."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If the report was not found, this needs to return 404, not an empty array."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We need to return empty collection here. It is expected behavior by redfish."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is only called in one place, it does not need to accept the callback by template parameter.  Simply call the callback directly."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This change doesn't have any noticeable benefits. It will couple utils with specific implementation and introduce circular dependency.\n\nAlso it will prevent future reuse in another use case."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Noticeable benefits that you seem to have overlooked:\n1. Normal functions compile faster than templates.\n2. Code is easier to read and debug, as all types are known in the scope, and not determined by a calling scope.\n\nIf you end up using this function again in the future, it's a relatively small code change to change it back to a callable.  For now, solve the problem you have."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please pass schemaType by string_view"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "id is not escaped for dbus here."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Value of id is not used for dbus call. It's only used for comparison against returned collection objects."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's a really good point.  you shouldn't be calling subtree paths at all, you should be calling getObject."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you've mixed a callback pattern with a inlined handler pattern.  Either pass an ec to the callback, and let it handle the failure, or handle the whole thing inline here.  Don't mix the two.  Same on line 80"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is done on purpose"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Avoid auto here."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: For consistency, compare against reports.end()."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above.  Don't try to sort through the reports after the whole set has been returned.  Use GetObject to return just the object you want."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 90,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering that this function (see below) is going to boil down to 2 lines per entry, I suspect that this can simply be inlined."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "The way it is not we want to keep because it decreases code duplication a lot."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No.... it doesn't.  It makes significantly more code than is needed."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not liking this as an input parameter.  for the types you care about, this can either be done in calling code, or the mapping can exist in a branch in the code here, but passing it in makes it possible for a user to call this with an incorrect character in a non obvious way."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This function is an implementation details of this file. We don\u2019t expect users to call details namespace outside of this file so this mapping is not really needed."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Disagree.  Regardless of whether its in details or not, the postfix should be moved to the calling scope, as it really has nothing to do with this routine."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given the size of the strings here, it seems unlikely that stringstream would be anything but a performance impediment."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Using std::stringstream makes formatting much easier than solution with std::to_string. We compared it with other solution and this one was better."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I find that difficult to understand.  Can you post the code that you wrote before that used to_string?\n\nAlso, the performance here is important.  stringstream is going to make several copies, and will not optimize down well.  to_string optimizes much better."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "How can you be sure that std::to_string is better optimize than std::stringstream? Have you verified it on yocto system?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I haven't looked at the assembly for this specific case, but I've done many profiles, and for short strings, std::string (with reserve) and operator += has to optimized better on ast2500 yocto systems in the past.\n\nWhat I really should've said here is that when built with std::to_string, this code is smaller, simpler, and easier to read.  You're right, I did jump too quickly to performance in my question.  See my proposed implementation below."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect you don't want to type check milliseconds here, you want to check if T::period::den > 0.  Otherwise, this helper won't work for nanoseconds (which I realize doesn't effect you in this case)\n\nedit: see below.  I suspect you don't need this special case at all."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should likely be using a fixed point printing, instead of printing the float as is to avoid rounding errors.\n\nI suspect that if it ended up as scientific notation (unlikely, but possible) that would go out of spec."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It uses the default floating-point formatting. It is not scientific and fixed."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Stringstream definitely contains the logic to print in scientific notation.  It should only happen if t.count() is much bigger than you think it should be, but it's doing a branch either way.\nhttp://www.cplusplus.com/reference/ios/defaultfloat/\n\nI'm pretty sure that's not what you intended."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're doing a lot of fancy arithmetic here that I think the std library already does in duration cast.\n\nI suspect what you want here is\nstd::chrono::duration_cast<std::chrono::duration<float>>(t).count();\n\nThat will properly handle any std library eccentricities as well as rounding for you.\n\nNote, I'm pretty sure with that, you can also remove the branch.\n\nContinuing to look at it more, I suspect this whole function can be replaced with a call to std::chrono::duration cast, and std::chrono::floor, with no branches at all."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, I will change to duration cast. You are right with this math, it is properly handled by\nstd::chrono::duration_cast<std::chrono::duration<float>>(t).count()\n\nI do not see how you can change it using only single call to duration_cast and floor. You have to differentiate between milliseconds and days/hours/minutes to store it value in integer or float."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More concretely, this is the function I would've expected to see here (compiled, but untested)\n\nIt is about a third the code, uses no details utils functions, includes no templates, has no compile time branching, requires no complete string copies (unless you count the intermediate to_string calls), does not use iostreams and is only doing pretty standard std::library conversions.  It does need zero padding added.  If the shortened version is require then that will need to be added back.\n\nI was also incorrect, you don't even need duration_cast to do this the way the library intends, only floor.\n\n\n\nstd::string toDurationFormat(std::chrono::milliseconds ms)\n{\n    std::string fmt;\n    fmt.reserve(sizeof(\"PxxxDTxxHxxMxx.xxxxxxS\"));\n    fmt += \"P\";\n\n    using Days = std::chrono::duration<std::chrono::hours::rep, std::ratio<24 * 60 * 60>>;\n    Days d = std::chrono::floor<Days>(ms);\n    fmt += std::to_string(d.count());\n    ms -= d;\n\n    fmt += \"DT\";\n    std::chrono::hours h = std::chrono::floor<std::chrono::hours>(ms);\n    fmt += std::to_string(h.count());\n    ms -= h;\n    fmt += \"H\";\n\n\n    std::chrono::minutes m = std::chrono::floor<std::chrono::minutes>(ms);\n    fmt += std::to_string(m.count());\n    fmt += \"M\";\n    ms -= m;\n\n    std::chrono::seconds s = std::chrono::floor<std::chrono::seconds>(ms);\n    fmt += std::to_string(s.count());\n    ms -= s;\n\n    fmt += \".\";\n    fmt += std::to_string(ms.count());\n    fmt += \"S\";\n\n    return fmt;\n}"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "floor is not required. We do not need to round it. duration_cast is enough for our use case.\n\nYour code is not exactly what we want because using std::to_string causes some numeric errors.\nfmt += std::to_string(std::chrono::duration_cast<std::chrono::duration<float>>(ms).count());\nFor example:\nUser input: P48DT20H50M59.626S -> Counted to ms: 4222259626, back to user output: P48DT20H50M59.625999S\n\nUsing stringstream is less problematic in this case because it does not add numeric error."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"floor is not required.\"\nYou are functionally implementing floor in your code.  Using the library function for floor makes it easier to read, and better documented.\n\n\nCan you be more clear in your example of where my code is broken?  You've said \"user input\" but this function does not accept a string, so your test case doesn't make sense to me.  What input did you use in the ms duration?\n\nWhen I compile the below test app, using your data point of 4222259626 it returns the correct string (P48DT20H50M59.626S).  It's surprising that it would have floating point errors, as it uses zero floating point values, and everything in done as ints (which should also help performance in a minor way).  Are you sure that your parser doesn't have an issue somewhere?\n\nHere is an isolated test app\n#include <string>\n#include <chrono>\n#include <iostream>\n\nstd::string toDurationFormat(std::chrono::milliseconds ms)\n{\n    std::string fmt;\n    fmt.reserve(sizeof(\"PxxxDTxxHxxMxx.xxxxxxS\"));\n    fmt += \"P\";\n\n    using Days = std::chrono::duration<std::chrono::hours::rep, std::ratio<24 * 60 * 60>>;\n    Days d = std::chrono::floor<Days>(ms);\n    fmt += std::to_string(d.count());\n    ms -= d;\n\n    fmt += \"DT\";\n    std::chrono::hours h = std::chrono::floor<std::chrono::hours>(ms);\n    fmt += std::to_string(h.count());\n    ms -= h;\n    fmt += \"H\";\n\n\n    std::chrono::minutes m = std::chrono::floor<std::chrono::minutes>(ms);\n    fmt += std::to_string(m.count());\n    fmt += \"M\";\n    ms -= m;\n\n    std::chrono::seconds s = std::chrono::floor<std::chrono::seconds>(ms);\n    fmt += std::to_string(s.count());\n    ms -= s;\n\n    fmt += \".\";\n    fmt += std::to_string(ms.count());\n    fmt += \"S\";\n\n    return fmt;\n}\n\n\nint main(int argc, char** argv){\n   std::cout << toDurationFormat(std::chrono::milliseconds(std::chrono::milliseconds(4222259626)));\n\n}"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here is a new version that zero pads properly.  I suspect this can be used as-is.\n\n\n#include <string>\n#include <chrono>\n#include <iostream>\n\nvoid zeroPad(std::string& value, size_t digits){\n    // Note, does not work on negative numbers\n    if (value.size() < digits){\n        value.insert(0, digits - value.size(), '0');\n    }\n}\n\nstd::string toDurationFormat(std::chrono::milliseconds ms)\n{\n    std::string fmt;\n    fmt.reserve(sizeof(\"PxxxDTxxHxxMxx.xxxxxxS\"));\n    fmt += \"P\";\n    using Days = std::chrono::duration<std::chrono::hours::rep, std::ratio<24 * 60 * 60>>;\n    Days d = std::chrono::floor<Days>(ms);\n    std::string value = std::to_string(d.count());\n    zeroPad(value, 3);\n    fmt += value;\n    ms -= d;\n    fmt += \"DT\";\n    std::chrono::hours h = std::chrono::floor<std::chrono::hours>(ms);\n    value = std::to_string(h.count());\n    zeroPad(value, 2);\n    fmt += value;\n    ms -= h;\n    fmt += \"H\";\n\n    std::chrono::minutes m = std::chrono::floor<std::chrono::minutes>(ms);\n    value = std::to_string(m.count());\n    zeroPad(value, 2);\n    fmt += value;\n    fmt += \"M\";\n    ms -= m;\n\n    std::chrono::seconds s = std::chrono::floor<std::chrono::seconds>(ms);\n    value = std::to_string(s.count());\n    zeroPad(value, 2);\n    fmt += value;\n    ms -= s;\n    fmt += \".\";\n    value = std::to_string(ms.count());\n    zeroPad(value, 3);\n    fmt += value;\n    fmt += \"S\";\n    return fmt;\n}\n\nint main(int argc, char** argv){\n   std::cout << toDurationFormat(std::chrono::milliseconds(std::chrono::milliseconds(4222259626)));\n}"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Modified toDurationFormat() according to your comments. Thanks for all hints. I didn't want to add zeroPad because it is not required."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "At the very least in the milliseconds case, I believe it is absolutely required for this code to be functionally correct.  See comments in new patchset.  Also, I still believe we should zero pad here, as it makes life easier on the user, and is still correct per the spec."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's really non-obvious that duration is getting modified here.  I suspect simply using the next types floor would avoid quite a few rounding errors, and be easier to grok."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This is expected, we are using it internally to avoid code duplication. Because of that I think it will be easy to understand you only read it once.\n\nI guess you will have same problem if you inline it and have multiple duration -= t; in external function. Duration and t.count() are both integers so there is no problems with rounding."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "see implementation I posted above.  Much more obvious to the user what's going on"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 56,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, it's a duration value, not a time value."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you might be better off simply giving some examples.  Giving a double escaped regex isn't very helpful in a comment."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't reference the design doc.  The code should stand on its own.\n\nAlso, I see no mention of this duration format in the design doc.  Can you give a better reference?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Better variable name needed here.\n\nAlso, would it make more sense to simply take in a duration here?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This function is intended to convert uint32_t from sdbusplus to std::string.\n\nWe can rename ms to milliseconds and duration to time."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I see no mention of sdbusplus in this?  Let the calling code do the sdbusplus->duration convertion, as it's much clearer when done in that scope, and less likely to have duration issues (seconds accidentally converted to milliseconds, ect)"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're doing a type conversion of the underlying type here, as std::chrono::milliseconds contains an implementation defined type, and you're reading it in as a uint32_t.  I'm guessing you didn't intend that."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This is expected behavior. We only care that we create it as ex. chrono::milliseconds(10) and we don't care how it is represented internally."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "sure.  Technically the standard guarantees minimum 48 bit type in std::chrono::milliseconds, so there's no danger of overflow here, although the underlying type might be signed, which might cause issues.  With that said, having this api take std::chrono::milliseconds instead of a uint32_t makes the code cleaner, and seaparates concerns better."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this branch even needed?  It seems odd that it would be done has a hardcoded string instead of simply making the algorithm handle it properly."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This is needed. Redfish expects us to have time in this format, this is the simplest way to implement it."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "in the comment above, can you add the relevant section number  of the redfish spec that talks about this?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're reserving up to 999 days here.  Might want to consider adding 1 more in case an event gets more than 3+ years old,"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We are taking uint32_t as parameter we are limited to +- 49 days."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I didn't think about that, but that's worrisome.  What happens when a duration exceeds that?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "std::string will allocate more memory then. We only reserve some length to make it less memory consuming when appending new signs. It is limited to uint32 size."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "49 days isn't very long, and well within a duration that the system would see.  Should this parameter be upgraded to a uint64_t to reduce the possibility of overflow?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "instead of int, you should be using similar type to the one the library uses.\n\nIn this case the closest is probably std::chrono::hours::rep.\n\nWhile in theory this won't be perfect, it will cover the cases that openbmc is likely to care about."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 78,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is going to stop the parsing there.  In the case of this, does it make sense to print out the zeros anyway, to:\n1. remove the extra branches.\n2. Make parsing easier by the user?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, we can print zeros for every value but it will make duration format less readable. In the patch with support for POST on MetricReportDefinition we convert duration value from string to milliseconds value. User will pass it to bmcweb in the shortest possible form, for ex. PT1M30S."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We're building a machine API here.  Readability is important for the webui.  Implement-ability is important to the API.\n\nAlso, because zero padding allows durations to be compared (by a person) more easily, I don't really agree about the less readable point.\n\n\"User will pass it to bmcweb in the shortest possible form, for ex. PT1M30S.\"\n\nYou're talking about a parser, which should accept both zero padded, or not, because we don't know how the user will pass it.  This code here is the serializer"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "DOesn't look used?"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK, we will verify this."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please simply include the correct route string here, instead of constructing it at runtime.  This makes the code eisier to audit and grep.  There are other places where this needs fixed as well, please fix all of them."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Managing routes the way you propose can introduce many problems. If we\nhave error in metricReportUri then we need to fix it all the places with constant it will be always one place."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"If we have error in metricReportUri\"\nThen you didn't run the tests as you've been asked.  If you've run the validator, there is no way there's an error in your URI.  Having every node contain a fixed, compile time string makes it easier to audit the table routing with a simple grep of the codebase.\n\nAlso, we're talking about 3 locations here.  It's not like we're using this in 1000s of handlers.  Fixing a route in 3 strings is in the noise compared to the effort to test and commit it, and the ease of security auditing the codebase is far outweighed by the extra typing.\n\nAlso, it's more efficient at startup, as you're not generating a new string at runtime."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See other comments.  This line is really really hard to grok at first look, for something that would be relatively simple if written out in code.  If written out in code, it would remove the need for toMetricValues, the MetricValues type, and all the extra allocations, and data structures that go with them."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It will introduce lots of code duplication and there will be much more code to read and understand. We can change it to:\n\n\njson_utils::assign_if(asyncResp->res, dbus_utils::get_if<std::string>(ret, \"Timestamp\"));\njson_utils::assign_if(asyncResp->res, \"MetricValue\", dbus_utils::get_if<Readings>(ret, \"Readings\", toMetricValues));"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please follow the patterns that already exist in the codebase.  If you'd like to try using these utils patterns, do it on some old handlers, and submit it for a separate review.\n\nps, I don't find your second attempt any more readable, and performance wise it's still doing O(nlogn) lookups for something that can be done in O(n)."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There are only 2 actions here.  Please use a simple \"if (action == 'Event')\" type branch here, instead of constructing a map for every single call.\n\nOnce you've done that, I suspect this method doesn't need to exist, and could be inlined to simplify this quite a bit."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Instead of boost::flat_map we can use std::array<std::pair<std::string, std::string>> then compiler should optimize it."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think the compiler is allowed to optimize it to that level, as std::string has to allocate.  Also, it's harder to read.\n\nPlease just use a simple branch for this."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please put a comment explaining what this type is.\n\nIt's a list of maps of paths and properties (I think)."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 120,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Typo"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't find these abstractions  very helpful in practice.  They obfuscate a lot of what's going on here, and don't handle errors properly, by returning a 500 if the properties doesn't exist, or explicitly noting that the error is not handled and why.\n\nAlso, taking a json value by operator[] will create the key in the map, even if it doesn't exist, so this in practice has the effect of \"assign if present or null)\" which isn't expected.\n\nPlease inline the logic for handling properties here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, this is another case where the code to handle this is about as much code as the helper, and would be much clearer.\n\nAlso, in this case, you again, haven't handled the error branch, where this result might be false.  Please fix."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This will introduce a lot of duplicated code which will make it much harder\nto read.\n\nWe will change error handling of assignIfPresent to not return success."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"This will introduce a lot of duplicated code which will make it much harder to read.\"\n\nHaving built many of these over several years, including several times trying to build similar functions to the utils functions you're trying, I disagree.  This is much harder to read than what the existing handlers do.\n\n\"We will change error handling of assignIfPresent to not return success.\"\nTo be clear, I'm asking you to remove assignIfPresent.  It is not a userful abstraction.  You've also not responded to the fact this codes doesn't seem to understand how operator[] works in c++.  Adding the correct handling with find will bloat this code even more."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 173,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 189,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "DOes this really need to be public?"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 189,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "OK"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 189,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "considering getMonitoringServiceProperties is only used here, on the line below it, does it make sense to just inline it?  That would also let you declare asyncResp at the top."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We don\u2019t want to inline it because it will make method calling it much bigger and harder to read. With this you know that this 20 lines of code is doing getMonitoringServiceProperties."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I disagree that it's more readable, but if you want it that way, I'm not going to argue.  personally, I think that breaking it up into 2 functions instead of 1, just adds extra readability problems."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If the path doesn't exist, it is 404, not absent."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It is expected by redfish."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, this line is very hard to grok, and would by much simpler written out without templates, and for the types expected."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "We are doing this to remove code duplication."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There is no code duplication here if the code is properly handling all your errors, which this code currently isn't."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "d98a402510c6fd57b9acd5db30d3c1c92463d9d1",
            "parents": [
                "a502de3d661acf95613d4e4d27c9611f2c8148ea"
            ],
            "ref": "refs/changes/92/31692/27",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1594632167,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be using get object, not pulling down every path, and doing a  search at this level.  Let the mapper do the search for you."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 68,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "03b1eff5d81141d7d31286b304b8d422fb8f9c9a",
            "parents": [
                "62de0c68e793c694d9bb2386e837efe7320cced0"
            ],
            "ref": "refs/changes/92/31692/28",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1595599445,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 764,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "7820421433349df28bd393e8d610d1848af0f1c8",
            "parents": [
                "62de0c68e793c694d9bb2386e837efe7320cced0"
            ],
            "ref": "refs/changes/92/31692/29",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1595603973,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 765,
            "sizeDeletions": 0
        },
        {
            "number": 30,
            "revision": "67f2271f41998bcdf328f5fefd68d213675dece5",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/30",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1597231879,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 140,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 183,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 690,
            "sizeDeletions": 0
        },
        {
            "number": 31,
            "revision": "b94af77573ded9bec4b8984d1844cae3bc963626",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/31",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1597325296,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you're going to add a generic utils function, can you audit the code and make sure that at least half of our uses actually use this?  This feels like something that deserves to be in its own patch, given that it's changing an existing way of doing things."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This is going to change lot's of random places in code. Once it is accepted here we cant find and replace other usages with this function. No need to make all the changes in single patchset."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please do that first, before using this pattern in a new patchset then.\n\nThe point is to ensure that this utility function can be used for all our existing uses of this without issue, and if it needs modified, or causes a significant thrash, we don't end up with 2 competing patterns in bmcweb.\n\nThese are the exact same rules we've used for other generic \"utils\" type functions like readJson."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Function was removed."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This causes a copy."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "looks not done?"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "You are right. I apologize, I forgot to git add this change."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same as above, Please make sure this utils function is used consistently in the codebase, and add to its own review."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Once it is accepted here we can find/replace other places which can use this. Creating a function where other's do not is not inconsistency it's just good practice that should be supported. There are no rules telling you when you can or cannot create helper function. Of course some are more useful than the other. This is first helper function for this.\n\nThere should be no issues with larger code or being to slow. Compiler should inline this for us.\n\nLet's just do this step by step. Once it is in repository others can start to use it even if it's not changed everywhere yet."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Consider it \"accepted\" (technically James does that, but I don't see him having an issue with this), but a patch setting this utils function everywhere needs to merge in ahead of the rest of the patches.\n\nAlso, this function belongs in sdbusplus, not bmcweb, as it's a generic dbus construct, and has nothing specific to bmcweb.\n\n\"Creating a function where other's do not is not inconsistency it's just good practice that should be supported.\"\nBest practices are determined by what the existing code does today.  If you want to change that, feel free, I think this would be a good change, but it needs to happen ahead of adding new features, not together with it.\n\n\"There are no rules telling you when you can or cannot create helper function\"\nThere are plenty of rules that disallow the creation of a single line helper function that adds code overall.\n\"Code should be clear and concise.\" is the first rule of the coding standard.\n\n\"There should be no issues with larger code or being to slow. Compiler should inline this for us.\"\nAt no point was a worried about code size.  I agree, I think this will likely be inlined and optimized identically.  I'm worried about consistency in the codebase, and being able to point to any example of GetAll properties, and have it be a similar callsite (be it a utils function, or a direct call to async_method_call).  If you're willing to do that, great, but please do it ahead of this patch.\n\nWe enforced similar rules for the other generic helper functions that are in the codebase.  Each one is used multiple times, and was used (or patchsets were in review) to use it on a majority of the codebase before they were merged."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Proposition in newest patchset. I will submit it to sdbusplus."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This pattern can't be made a utils function given its inherent inefficiencies.  There have been many people that have tried to check this in, and every time it generates more code, larger binary sizes, and is slower, and gets removed again.\n\nIf you really want a pattern like this that's easier to use, I would look at and model it after the prototype of readJson that Jason Bills wrote (also in this codebase).  readJson is doing a very similar operation (just on json objects instead of dbus dicts), and doesn't have this problem.  Also, it's able to handle extra keys, and provide appropriate errors when that happens.\n\nOnce that's done, please put it in its own patch, and make sure the codebase is at least somewhat consistent in its use, so we know that this can be used as a generic utilities function.\n\nAlternatively, you can follow the pattern that all the existing code uses, as you're not doing anything unique here when reading in a dbus dict."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Can you provide reviews where someone tried it and failed? I will check if I am able to provide better solution. Thanks in advance\nThis function is inline by compiler so the binary is not larger than code that is written inline."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "@Ed are you suggesting something like this?\n\nauto [value1, value2] = getIf<int, std::string>(variant, \"Key1\", \"Key2\");"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't have an example in my head offhand.  The last attempt was a long time ago.  It should be in the gerrit/git history.\n\nThe API I'm proposing is similar, but looks more like readJson, and doesn't rely on moved params to do its job (it unpacks directly into the correct types) I'm suggesting an API like this.\n\nstd::vector<std::pair<std::string, dbus_variant>>& ret;\n\nstd::string foo;\nstd::optional<uint32_t> bar;\n\nif (getPropertiesFromResponse(res, ret, \"StringKeyToGet\", foo, \"OptionalBarKey\" bar){\n    return;\n}\n\n// If we get to this point, we know that the keys parsed correctly, and have type safe values in them.\n\n\nGo take a look at readJson.  It's very very similar to the above, and resolved more error handling bugs than I could count when it was introduced."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "James Feist",
                        "email": "james.feist@linux.intel.com",
                        "username": "feistjj"
                    },
                    "message": "Agree that something like readJson for variants would be useful. The only real problem I have with this approach is it assumes the caller is using a vector<pair>, which for many reasons they may prefer a map, where this approach would be less efficient. This would cause multiple loops over the same data structure that were not needed. Further, as Ed suggested, it only allows you to pull out one item at a time, where readJson can be smarter and pull out many at once. I'm not in love with this mostly for the multiple extra loops it will cause if used widely."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I can do that, it will work like readJson. There is one thing you should be aware of. Iterating twice over map/vector is quite cheap if we assume we have line 1-10 keys in map, even for 100 keys it should be quite cheap.\n\nIf we do it like in readJson if key is present it will make a copy to assign it. Making a copy of vector might be expensive depending of how many elements has this vector. Even std::string might be heavy if it is long.\n\nEach getIf currently iterates over all keys (in worst case scenario) but it doesn't make a copy. If we do something like readJson we avoid duplicated iterations but we make a copy.\n\nWe can have both if we introduce new type similar to boost::python::pointer_wrapper for heavy types.\n\nuint32_t a; // makes a copy\nstd::optional<uint32_t> b; // makes a copy, but readProperties wont return false in case if not present\npointer_wrapper<std::string> c; // won't make a copy\nstd::optional<pointer_wrapper<std::string>> c; // won't make a copy and won't return false in case if not present\npointer_wrapper<std::vector<std::string>> d; // won't make a copy\n\nbool allNonOptionalPropertiesRead = readProperties(ret, \"key1\", a, \"key2\", b, \"key3\", c, \"key4\", d);\n\nIn basic solution when user want a copy it will work exactly like readJson, if user wan't to avoid copy or want to read optional fields pointer_wrapper and or std::optional can be used."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Proposition in newest patchset. I will submit it to sdbusplus."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "readProperties() has been added to bmcweb to the patchset 45 as a draft of new utility function. It will be moved from this patch to the sdbusplus repository."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Great.  Once that is done, please patch bmcweb to move a majority of the unpack code to your new pattern."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 445,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please inline this utils function.  It assumes that the project has a generic way to translate dbus collection into redfish collection, which today we don't, therefore this code can just be inlined.\n\nAlternatively, you could put it in the details:: namespace in the telemetry namespace, to make it clear that this just just how telemetry does things."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 445,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 461,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Missing range checks."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 461,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It looks like it is range check.\n\nIf there is no characters after pos then log error and continue."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 461,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "yep.  Missed that.  Fine as-is"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 467,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "missing range checks."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 467,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It looks like range check is in line 461"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 467,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep, messed that up.  I was reviewing quickly.  Appologies."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't include usings for these.  They imply that these types can be changed simply and on a single line.  Most of these can simply be inlined, to make the code more clear (as the rest of bmcweb does)"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This is called self documenting code. if you have:\n\nstd::variant<\n  std::vector<std::tuple<std::vector<sdbusplus::message::object_path>, std::string, std::string, std::string>>,\n  std::vector<std::tuple<std::string, std::string, double, Timestamp>>,\n  std::vector<std::string>,\n  std::string, uint32_t, int32_t> reportProperties;\n\nThen it is really hard to tell what is what. Once you get used to it this really help you can always have some IDE which tells you what type is under ReportingType so you don't have to jump yourself. Here you don't event need that all you need is few lines above, and it helps you know that uint32_t is ScanPeriod if you look at the code I pasted in this comment you have no way to tell what does uint32_t mean."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "This types has been already removed from telemetry_utils and moved to MetricReportDefinition and MetricReport nodes. Short types has been removed and only complex are used."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "great!"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a 2 line method, one line of which is a string specific to that handler.  Please just inline these two calls."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "There is no gain in inlining it, we will only increase code duplication.\n\nThis helper function is intended to be small, if you need details about what path is really under dbusReportPath you look inside, it will be in one place. It's a feature, not a big I agree but still it's a feature for us."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "sure, fine as is."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The somewhat standard convention in bmcweb is to call by templated callback.  std::function might be better in some cases, but that's probably something for another patchset."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Again I am lost. I remember in previous comments you asked not to use templates. I will change it back to callback but I do not want to change parameters of callback. It is intended to be used like this to make code easier to read in metric_report/metric_report_definition"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "My exact comment was \"This is only called in one place, it does not need to accept the callback by template parameter.  Simply call the callback directly.\"\n\nAt no point did I say to use a std::function.  What I meant was to inline your callback at the end of getReport.  But in this case, you're right, it shouldn't be a template at all, and should be a single call to the completion function.\n\n\"but I do not want to change parameters of callback.  It is intended to be used like this to make code easier to read in metric_report/metric_report_definition\"\nAs someone who needs to inspect for correctness, I find that code much harder to read, as it muddies the water about ownership.  A lambda does not (as much), and explicitly states at the call site which objects are being owned by what portions, and that the callback itself owns all the parameters it needs to continue (with the exception of the actual thing being returned)\n\nWith all of that said, just inline it like my previous advice was.  Apologies for missing this on the newest patchset.  It's been a few weeks, and I didn't have all this stuff hot in cache."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "If we inline this std::function code here it will be no longer something that is ready to be reused in other places. I agree that some of it can be improved. See comments below."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Also this helper doesn't increase binary size. Compiler is very good at inlining lambdas that it produces same result if we inline it manually. Actually there is much smaller binary size if we use same lambda in many places. Compiler have no way to optimize it if we just copy paste it everywhere. What I didn't expect was that when we used std::function binary size was larger than with lambdas.\n\nSo if we look at this from performance side solution with this helper function and callback as template parameter is best solution. Execution time more or less the same. Only with large number of repeats solution with lambdas was noticeably better.\n\nApplication A had X calls to async_method_call with GetAll on some service. Application B had X calls to helper method with Callback type as template parameter. Two callbacks were introduced  - onError and onSuccess. To paste this X duplicated calls in both cases macro was used. Same code but in different style was in both applications.\n\nApplication A always uses plain code duplication.\nApplication B uses helper class and same lambda in each call:\n\nWhen X=1: size of both applications is the same\n\nWhen X=1000:\n- Application A: 2984792 (2,9M)\n- Application B: 183128 (179K)\n\nApplication B used helper and same lambda in each call, helper takes std::function<...> instead of templete parameter:\n\nWhen X=1:\n- Application A: 133976 (131K)\n- Application B: 138072 (135K)\n\nWhen X=1000:\n- Application A: 2984792 (2,9M)\n- Application B: 453464 (443K)\n\nApplication B uses helper class and different lambda with exactly the same code:\n\nWhen X=1: size of both applications is the same\nWhen X=1000:\n- Application A: 2984792 (2,9M)\n- Application B: 3046232 (3,0M)"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "getReport does not exist in the latest patch, closing a comment"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In general, callback patterns like this include an error code, and guarantee that the callback is called in all cases.  Please resolve."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "In general it's also common that callback is called only on success or you can pass multiple callbacks, on success, on error and have different callback for different cases. In this case this callback is only called on success. It doesn't include error code, because it won't be called on failure.\n\nWe can change it to take two callbacks, on success and on failure. It's a middle ground and we can reduce code future duplication, because error handling in most cases will be the same only on success callback will be different.\n\nIf sdbusplus used same pattern (on success callback and on failure callback) lots of code in bmcweb could be removed, you could just pass one of the generic error handling lambdas instead of having it always included in callback."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In general, the pattern for these functions is to simply return the item requested to the callback, and not include extra items (like asyncResp and id).  If the caller wants these things, they can add a lambda capture as their callback."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Good point, you are right"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you post a reference to the redfish documentation on the type that we're trying to implement here?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I am a lost here. This is your comment:\n\"Please don't reference the design doc.  The code should stand on its own.\"\nAnyway, duration format is specified in ISO 8061"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A design doc is different than pointing to the spec in which this is implemented.  ISO8601 is great, but a link to the portion of the redfish spec outlining the specifics of how this property is handled would be great.  With that said, I'm assuming it exists.  If it doesn't, no worries."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "http://redfish.dmtf.org/schemas/DSP0266_1.11.0.html#duration-values\nI will add it to comment in next patchset"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please make this a std::chrono::milliseconds, and put the time_t to milliseconds conversion into the calling code."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: Technically floor is still more correct here, as it would work for negative durations as well as positive ones, but considering this is only likely to see positives, this works, it's just a little harder to read."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "floor is only useful for floating point types. Here we only uses milliseconds that type is long int or long long int."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here's the page on std::chrono::floor:\nhttps://en.cppreference.com/w/cpp/chrono/duration/floor\n\nCould you point out where it claims this only works on floating point types?\n\n\nWith that said, I'm not worried about it.  What you have works, and is reasonably easy to read."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok, I made some experiment with it to prove myself that it works. I will change it in next patchset"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I gave you an example that worked, but sure, the more examples the better."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I think I reverted it back by accident during rebase. Changed duration_cast to floor again. Done."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I still really don't like that this chops off some of the dates.  It makes writing a consistent parser for it much harder, and might lead to cases where a user writes something against a short duration, then has it fail on longer durations.\n\nDo you know if there's anything in redfish or ISO 8601 that speaks to this problem?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "They allow to make a short version of it and does not require any padding. There is one problem with converting this date to and from binary because of daylight saving time. For example PT48H is different than P2D when there is a time change but I noticed that OpenBMC does not care about time zones"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"I noticed that OpenBMC does not care about time zones\"\nI'm not sure where you got that impression.  We've had bugs on timezones before.\nWith that said,  in this context we're only talking about duration, and I believe iso8601 defines a \"day\" as exactly 24 hours, so I think you're good here.\n\nok, I guess if it's allowed in the standard then I'm fine with it.\n\nTechnically isn't PT48H invalid?"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "From bmcweb code and from OpenBMC system that I works on because it is missing time zones database. Of course it require double check with community. Getting time zone is expensive operation.\nPT48H is valid."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generally we enforce timezones in the UI, that's where I've seen bugs in the past."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "https://github.com/openbmc/bmcweb/blob/master/http/utility.h#L789\nThan seems that %z in this line is unnecessary. Thanks for confirming it."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ignoring the rest of the function, Isn't zero padding absolutely required for this case?\n\nP1DT1H1H10.9S is very different than\nP1DT1H1H10.0000009S\n\nAs is, your code will render the former, which is incorrect.\n\n\nI still think we should be zero padding everything, and not making any part optional."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, but we have a double here. It generates \"PT1.000000S\" for single second for example. So some padding is applied. I do not like the idea of padding unless there is some other cases that you can point. Thanks in advance"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Good point, I missed that double up there.  I still really don't like converting to and from floats here, it brings up all kinds of weirdness.  Any chance you'd be willing to do my original one, which operated entirely on ints?\n\nIf not, I'm not that worried about it."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 67,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This whole function is much much cleaner."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Is it a compliment? Or is it connected with previous comments? Sorry"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was a compliment.  You've legitimately made this method much better but just about any measure."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 70,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Rather than organizing it this way, can you follow the existing patterns, and put these utils function in the same file as the nodes themselves?  If you need to split files up, split them up on node boundaries.\n\nIn this way, most of the code for a single handler exists in one file."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "There is no single pattern in bmcweb, sorry. It is not described well. This function getReportCollection is used in two nodes. It is designed this way to not divide two similar nodes - MetricReport and MetricReportDefinition."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I agree its not described well, but a majority of the code follows the pattern of including most of the logic for a given collection in one file, with the exception of generic, non-collection specific utils classes.  With that said, I'm not that worried about this one.\n\nI only saw one use in this patchset.  It's fine if it's used in multiple places in the final solution."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I guess you are fine with keeping it like this. Marking this thread as resolved."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a user facing string, it needs escaped."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is done in getReport"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Marking it as resolved."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is inline, not static.  A lot of your methods are missing this.  Please fix all of them."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sorry, this was a bad comment.  This, and the function below it don't need to be attached to this class at all."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "MetricValues are part of MetricReport so it was natural to connect it to MetricReport. We can change this, but I still think this is the right place for this method."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "moving it out of the class scope change a namespace of it. I would rather keep all specific functions inside redfish::MetricReport:: namespace than redfish::"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "@Ed Tanous, any comment on it?"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Long term, I'd like to see the node class go away, and start replacing the node handler with simpler, per-route handlers.  To facilitate that in the future, I'd prefer it if the inherited node classes avoid implementing anything other than the overridden values their base classes do.  Because this is a static API, the namespace change is relatively straightforward to accomplish."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok, I will modify it according to your advice"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See comment in other file.  This is causing a loop over ret for every property, and doesn't give the ability to handle errors on unknown properties.  Please write this as the other handlers currently do."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Answered in another comment which refers to same issue."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Closing it because it duplicates.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31692/31/include/dbus_utility.hpp#147"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please inline this as most other node classes do today.  Most node classes do duplicate this string (although it gets deduplicated later).  If you want to push this as a new pattern, that's a good discussion for a different patch moving all of the nodes to this pattern."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I understand that this is something new, but it's not some new pattern which needs to be followed and changed everywhere, of course it would be nice if all strings that repeat in few places had consts like this.\n\nEven making const for something that is used once can be still good practice. Someone looking at this who is new to bmcweb will see that this string is schemaType.\n\nIn my opinion we should keep it. Defining a constant or variable is one of the basing things, we are not introducing new pattern here."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "@Ed Tanous, any comment on it?"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"it's not some new pattern which needs to be followed and changed everywhere\"  Disagree, I'd like to see redfish handlers be consistent, and it helps review faster.\n\n\"Even making const for something that is used once can be still good practice\"\n\nSee above about the Node classes being simple, to facilitate the change later.  That's the intent behind this request."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a user facing string.  It needs escaped."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Escaped in getReport"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ok as is (although I would've preferred it escaped here)."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If it's not either of these, you need to handle that with an error of some kind.  Given the way you've organized this, that's going to be complicated.\n\nI'd recommend implementing this as a non-loop method, that accepts and returns a single string, and uses empty string to return an error."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is not required because on error we receive empty vector."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "so if i call\nauto ret = toReportActions({\"Event\", \"FOobar\"})\n\nRet is an empty collection?  I don't think so, or I'm missing something."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "You will get: {\"RedfishEvent\"} only incorrect values are ommited. So if you want to check for error you could compare result size() with input size()"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think what I see here is explicitly creating an array of size 1?  Don't use an intermediate, use the existing nlohmann brace construction types to do this, or use push_back on that type.  Inlining this function call is hard to read, and considering it has an assignment operator in an rvalue, hard to verify it's correct (even if it is)."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I have to use push_back here because bracket did not work. Ok, I will change it."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I agree, the brackets are super finiky to get right with nlohmann.  push_back is fine, but if you want, attach the bracket invocation you tried, and I can probably (maybe) tell you what's wrong with it."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 118,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't use auto here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Auto is not an issue here, compiler won't allow us to use this incorrectly:\nerror: invalid conversion from 'int*' to 'int'\n\nType is not really that important here, you have type on the right side getIf<telemetry::ReportAction>, you can have here telemetry::ReportAction* or std::optional<telemetry::ReportAction> because that's the only way to implement it when exception are turned off.\n\nI see no reason to avoid auto here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "getIf changed so this auto is no longer here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See note about getIf"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is going to change the schema dependent on the value of a dbus property.  That generally breaks the rules that we've tended to follow.  Are you sure that ScanPeriod doesn't have a null/zero state that redfish intends you to use here?"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, redfish specification allows it. You do not have to show all attributes of scheme to user. You can hide some of it depending on other attributes."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Redfish spec allows it, but bmcweb generally takes the policy of a schema being the same for a given resource, independent of values, to improve our test coverage.  There are several places we explicitly put in null, or unused values for other cases similar to this.  It helps a lot with the service validator being able to validate all endpoints."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Setting it to null is equal to not creating an attribute. Test coverage is same for both cases. Not required attributes in redfish schemas can be null or specific type. RedfishServiceValidator does not return fail if not required attribute is set to null. I would keep response as small as possible, especially that some attributes depend on other attributes."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"Setting it to null is equal to not creating an attribute. \"\n\nNo, it's not.  At an api level.\n{}\nis different than\n{\"foo\": null}\n\nSemantically they're the same, functionally they are not.\n\n\"Test coverage is same for both cases.\"\nNo, it's not.  In the case where you add the parameter with a null/not valid state you are testing the key correctness even if the key isn't present.  We've had a number \"validator fails when X is set\" types of bugs pop up when we've done these kinds of things in the past.\n\nAlso, it's helpful to the user, as they know that the implementation supports this property, even if it isn't used at the moment.  Otherwise, users have no way to know what properties are supported and when.\n\n\" I would keep response as small as possible\"\nI would much rather we keep responses consistent and self documenting than small.  We're talking about a couple extra bytes here, which probably doesn't even push us into 2 memory pages.\nIf your goal is small responses, there are much better things to accomplish that, like gzipping and not prettifying, but we do those because it makes the service easier to use, and the impact is minimal.  This is in the same category."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Functionally it is the same, attribute exists with no meaningful value or does not exist. Same story. Especially that RedfishServiceValidator does not care for null values, so it is ignored.\nMaybe to help me understand your point, can you provide me some validator that take advantages of null? Thanks in advance\nYou are right, small response is not a case here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "The latest patch adds all possible attributes to response"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a perfect case where your code is hard to read because of a using declaration.  It's really hard to verify this is correct, as ScanPeriod is opaque in this file.  Also, you declare the left side to auto, which doesn't convey the fact that it's a pointer, and needs to be checked."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Based on what std::get_if returns I would guess that it getIf returns a pointer. I noticed that I made a mistake, because I should pass telemetry::ScanPeriod* as an argument for template. I will fix it.\nscanPeriod ptr is verify in next line."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's a perfect example then.  If you made a mistake as the guy that wrote it, what chance do the rest of us have :)\n\nThe normal \"loop over the parameters, and pick them out one at a time\" approach looks ugly, but it's the best that we've been able to come up with for readability.\n\nIn all seriousness, this get_if and looping type safety stuff has been a problem for a long time, if you want to go solve it for bmcweb as a whole, similar to how readJson does it, I'm all for it and happy to help review, test, or give advice."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "No, I didn't make mistake. It matches to std::get_if function. Okay, I will see what are the possibility to solve it for whole bmcweb. Thanks"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Honestly I don't see how we can do something similar to readJson.\n\nNow we have something like this:\nstd::vector<std::pair, std::variant<std::string, int, double...>> ret;\nint* value1 = getIf<int>(ret, \"Key1\");\nint* value2 = getIf<int>(ret, \"Key2\");\n\nIf we want something readJson like we will have;\nstd::vector<std::pair, std::variant<std::string, int, double...>> ret;\nint* value1 = nullptr;\nint* value2 = nullptr;\ngetIf(ret, &value1, \"Key1\", &value2, \"Key2\");\n\nor if we want to have it via return value like it should be:\nauto [value1, value2] = getIf<int, int>(ret, \"Key1\", \"Key2\");\n\nAbout type safety compiler checks it for us. We can be safer if we use std::optional it won't static_cast to std::time_t for example.\n\nAbout telemetry::ScanPeriod being an using, that's something now nowadays we don't have to worry. We all have or should have IDE which tells which type is under that using. My understanding of getIf is that it either return reference and throw exception on fail. Or returns something that need's to be checked before using. In this case the second one and there is no other way around it. If you use it incorrectly compiler should return compilation error. We can do a little better and prevent static cast if we have std::optional<std::reference_wrapper<T>> or just optional<T> then it wont be possible to static cast like it would be possible with pointer compiler will do all the work for us."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "I'm closing this thread same discussion is in different comment thread:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31692/31/include/dbus_utility.hpp#147"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See note in other file, you're casting to several different types anyway.  Just use std::chrono::milliseconds here."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 675,
            "sizeDeletions": 0
        },
        {
            "number": 32,
            "revision": "a1d0eb88d552db75239e8ad68e5753c58d62b080",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/32",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1597924467,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 674,
            "sizeDeletions": 0
        },
        {
            "number": 33,
            "revision": "1b82e1de4e18de5a5cc68848225900e5d077df1a",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/33",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1597924516,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 674,
            "sizeDeletions": 0
        },
        {
            "number": 34,
            "revision": "ae948806775266d7544ebc15edf7826f885dcf76",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/34",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1597927752,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 673,
            "sizeDeletions": 0
        },
        {
            "number": 35,
            "revision": "c8377598e9ca874a860ab50fbf97a0f8a69ad00f",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/35",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598435648,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 673,
            "sizeDeletions": 0
        },
        {
            "number": 36,
            "revision": "7488349890da8bc9d29fb3f13aec4baa0f4d5aee",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/36",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598436667,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 673,
            "sizeDeletions": 0
        },
        {
            "number": 37,
            "revision": "5acb1490e572b5721b48ce4493b151f7d4224433",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/37",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598439476,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 675,
            "sizeDeletions": 0
        },
        {
            "number": 38,
            "revision": "a4c457ea12c6e70e4aa50f62e9e8e108d11177bd",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/38",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598441257,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 675,
            "sizeDeletions": 0
        },
        {
            "number": 39,
            "revision": "123d3d140e4513a75a30254b750548048ec02ba0",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/39",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598448063,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 675,
            "sizeDeletions": 0
        },
        {
            "number": 40,
            "revision": "ce30374232a610556886d444e65897c2379d3b8f",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/40",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598450323,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 675,
            "sizeDeletions": 0
        },
        {
            "number": 41,
            "revision": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
            "parents": [
                "3fcb12d03cd99b6e0ea5a1a332676af440930bfa"
            ],
            "ref": "refs/changes/92/31692/41",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598454850,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "vector as well?"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These should both set internal errors."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Internal error will be ignored in actual implementation."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Internal error needs to be propagated to the user, as the bmcweb coding style requires."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Maybe I am not aware of proper bmcweb coding style. Can you point it in bmcweb documents?\nAnyway, chassis handles this case similar\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/chassis.hpp (line 206)\nError is not propagated to user."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Check out heading #4 in DEVELOPING.md.  I'm assuming you've read that doc?\n\nYep that line is that's incorrect.  Would you mind putting up a patch to fix it?  It should be as easy as adding a messages::internalError(res); on line 207.  If you figured out a good way to find these, you might consider fixing it for more of them.\n\nThere are a couple exceptions, like when we have an interface that's optional, and it returns not_found, obviously we won't propagate that to the user, but this isn't one of the exceptions."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, I read it. It focus on mapping error to valid HTTP response. So it allows to omit internal error and continue building response with success (especially that there are examples of it in code). I understand what you mean, I will follow suggested way.\nYes, I can add a patch for chassis."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The first line of what I mentioned is \"Error handling should be constructed in such a way that all possible errors return valid HTTP responses.\".\n\n\"So it allows to omit internal error and continue building response with success (especially that there are examples of it in code).\"\nIt doesn't allow for blanket ignoring of error returns.  There are some examples of ignoring errors where we expect there to be errors, for things like optional interfaces, or objects that doesn't exist, and their non-existence is expected.  I don't think this is one of those cases.  The example you found is incorrect, and should be fixed.  If you find anymore, let me know, and we can get them fixed as well.\n\n\"I understand what you mean, I will follow suggested way.\nYes, I can add a patch for chassis.\"\n\nMuch appreciated."
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "line": 464,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done, the latest patch response with internal error if one of the path is invalid"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 673,
            "sizeDeletions": 0
        },
        {
            "number": 42,
            "revision": "aed9c7729b4516b07e2e1291b5ba22888b90e8d3",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/42",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598612791,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 150,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 801,
            "sizeDeletions": 0
        },
        {
            "number": 43,
            "revision": "2d825184211d2eae8dfff74ac06d9c60db9d5b23",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/43",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598623464,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 794,
            "sizeDeletions": 0
        },
        {
            "number": 44,
            "revision": "d19f610f397db1924af7b40114455ed09fd42515",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/44",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598623610,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 797,
            "sizeDeletions": 0
        },
        {
            "number": 45,
            "revision": "1130d6384c2cb528a831be43ff43805358228075",
            "parents": [
                "f71882ffecef5e64d1f5ad7ef59e811383de7156"
            ],
            "ref": "refs/changes/92/31692/45",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1598624219,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't quite how I imagined it.  I'm not liking that we're combining the dbus call with the parsing, as it leads to some odd semantics around how to handle errors.  I'll try to keep an open mind though."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The conventional way to model this would be as a single callback with an error code as the first argument.  That's how most of the rest of the webserver and boost do it.\n\nThis way is modeling async callbacks in the javascript way (with onsuccess and onerror handlers) which is discouraged, as it makes the control flow harder to track.  This was more important in bmcweb before AsyncReq existed, but it's still important."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This can be passed by value."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These look copied and pasted from readJson.  Can we deduplicate them?"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This mixes case styles.  This would be IsOptionalV"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 152,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can this just be a simple bool?  If we need more states than \"worked\" and \"failed\" then we should make an enum class, but in this case, I suspect we can just use true or false."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I would really prefer if this handler didn't support pointer types as inputs.  In the readJson case, we couldn't find a use for them over const references or const references of std::optional."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "readJson copies all values"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not following that comment.  Can you explain why readJson copying all values would require this to support pointer types?"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I did not understand your comment correctly. What is your opinion on not using ptr here? Thanks in advance.\nRight now unpackProperties is very similar to common unpacking style of dbus call messages used in bmcweb = for values stored in variant use ptr type.\nT_ptr my_ptr;\nfor (const auto& [key, var] : vector) {\n  if (key == expected_key) {\n    T_ptr ptr = std::get_if<T>(var);\n    if (ptr != nullptr) {\n      my_ptr = ptr;\n    }\n  }\n}"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the case you cited, all elements are in scope, and it's fairly obvious that ptr points to the object within var.\n\nOnce you move this to a utility function, it becomes something like\n\nT* myptr;\nreadProperties(ret, \"MyKey\", myptr);\n\nand is far more obfuscated that myptr points to an element within ret.  We've had this pattern before, and people tended to mess it up.  Also, the move cost on basically every type you're likely to pull out of dbus is negligible."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok, I will remove unpackProperties. One more question, how people mess it up with this pattern? Thanks in advance"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generally when the use the variable after the object that it's pointing to has been destroyed.  Sometimes it's by passing a pointer into a lambda callback, sometimes it's just a simple scope issue.  These can be really hard to find, as they can rely on the order of the dbus replies coming in to actually see a crash or failure."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Closing a comment because readProperties is no longer present in the patch"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you avoid auto here?  T* makes it clearer that this is a pointer.  Also, moving it to its own line would help with the readability.\n\nsomething like:\nConst T* value = std::get_if<T>(&variant);\nif (value != nullptr){\n    outValue = *value;\n    return true;\n}"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 170,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be a std::move to handle the string case."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 170,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 170,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, my fault, in this context the variant is const, so move wont do anything, you also need to make the variant non-const, then you'll get appropriate move semantics."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 170,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 186,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if you invert the check on 200 and move it here, this static assert becomes redundant."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 186,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This branch can be simplified with std::conditional\n\nusing baseType = std::conditional<IsOptionalV<ValueType>, typename ValueType::value_type, ValueType>::type;\n\nassigned[Index] += getIf<BaseType>(variant, outValue);"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "in readJson this was a std::bitset.  that seems better here."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 209,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 224,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "minor style thing, Invert this check, and use it to return.\n\nif constexpr (sizeof...(Args) == 0)\n{\n    return\n}"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 224,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I wonder if this would be a good opportunity for boost::container::small_vector.  It's significantly more efficient for small numbers of values.\n\nTotally optional, but might be a good win to have if we're going to propagate this pattern around."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Good hint, thanks"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Declare this the conventional way;\n\nstd::array<uint8_t, sizeof...(Args) / 2> assigned;"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Duplicated comment\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31692/47/include/dbus_utility.hpp#168"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "yep"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This probably needs to differentiate between a duplicated key and an unfound key in the return code, as a hint to the user."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is internal error, not mentioned to be for REST user. bmcweb responses internal error in such cases. Please, continue this discussion in comment on line 151 (https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/31692/47/include/dbus_utility.hpp#151). Thanks in advance"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "But probably wont be an internal error in all cases (as you'll find when you propagate this out to more code.\n\nThere are cases where properties might be multiple types, because of backward compatibility or dbus schema transitions, and this will likely need to try to pull a property out in multiple ways.\n\nA good example of this would be in sensors, where the sensor value can be an int64_t or a double.  \nIn that case, I suspect the user would need to do check for a \"wrong type\" error, and try to read out the values in the other format."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, I understand. Same with overflow errors. unpackProperties will be moved to other patch anyway. I am closing this discussion. Hope we exhausted this subject."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So long as you fix it in the sdbusplus version, I'm happy and this is resolved.\n\nOverflow errors tend to be different, as they're generally just a failure, and we wouldn't try a different unpack type if we got an overflow, we would immediately return an error."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 250,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 190,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 796,
            "sizeDeletions": 0
        },
        {
            "number": 46,
            "revision": "55baec8607ba518e5f9890a669129b835bd826b0",
            "parents": [
                "5b0de033d13a7d7e566477269dca6626fcd704be"
            ],
            "ref": "refs/changes/92/31692/46",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1598968733,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you put this stuff in another commit please?"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I want to continue discussion about unpackProperties here. Thanks in advance"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please inline these usings.  They make the code harder to maintain."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is easier to maintain all types in one place than looking for them in many places."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As a maintainer who has maintained this project for a long time, it is not easier to maintain, because a patchset can change the type easily, and not have all the call sites that now need to be re-reviewed for correctness show up in code review.  If you inline these, code reviews become much much easier."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sorry, former maintainer."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I do not follow your inline style. You have to do review all places, it does not matter if it is inline or not. If you have one custom type that is common across project than it is easier to review it. You can find all important places to in blink of an eye. For example:\n#define time_t   long int\ngrep time_t | ./script_to_verify_if_type_is_ok\nDo you disagree with it? Other way you have to look for all those places manually."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets say in the future, we have a review that adds this line to another file.\n\nScanPeriod scan = (int64_t)-1;\n\nis that valid?  Is it secure from over/underflows for both 32 bit and 64 bit?\n\nNow, on the contrary, if I have this:\nuint32_t scan = (int64_t)-1;\n\nThat immediately stands out as a problem, given that I'm moving a larger parameter into a smaller parameter without a range check, and I'm moving a signed int into an unsigned int without a < 0 check.\n\n\nIn a review, you have no idea, unless you look up every using throughout the file, and in practice, that doesn't tend to happen, and we just end up with a security issue.  Unfortunately we see this pattern all the time in bmcweb, and given that most of the time we're dealing with attacker driven values, we need to be aware of that, and code in such a way that we can avoid it in review, even if it does require larger patchsets.\n\nHow about this as a compromise:  You can leave the types that are more complex than std::vector<std::string>, but all others need to be inlined.  Does that sound reasonable?"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "After long discussion I see your point. It make more sense now. Both of ways have some benefits and drawbacks. It is open project it is very hard to maintain so keeping simple code as possible is big deal. Yes, I already divided it in the latest patch and left only complex types. Thanks"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Great!  Thank you!"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please inline this function in the places it's needed.  That makes it more clear that the error handling is correct in all cases, and covers everything it needs to."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 140,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/json_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 88,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 786,
            "sizeDeletions": 0
        },
        {
            "number": 47,
            "revision": "6d086efca6e081f92e3ba6530ed6d7f12573741b",
            "parents": [
                "5b0de033d13a7d7e566477269dca6626fcd704be"
            ],
            "ref": "refs/changes/92/31692/47",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1599146164,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs to propagate an error to the caller.  The type was incorrect, and that needs to be able to be handled.\n\nAlso, as written, this would allow duplicating key parameters in the unpack call, which is a bad thing to allow."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "If your dictionary have two same keys than your implementation is wrong. I guess that dbus does not allow for properties with same name on same interface. You suggested to use bool to have simple API. Propagating specific error code from this place to user is meaningless. Its only meaningful for developer, so simply false/true is enough and some log in debug version (as I can see it is common in bmcweb)."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"If your dictionary have two same keys than your implementation is wrong.\"\n\nTo be clear, I mean this code will work:\nstd::optional<double> a;\nstd::optional<std::string> b;\nreadProperties(ret, \"MyKey\", a, \"MyKey\" b);\n\nSure, the call site is wrong, but wouldn't we want to make that obvious?\n\nThis probably wont be an internal error in all cases (as you'll find when you propagate this out to more code before it gets merged.)\n\nThere are cases where properties might be multiple types, because of backward compatibility or dbus schema transitions, and this will likely need to try to pull a property out in multiple ways.\n\nA good example of this would be in sensors, where the sensor value can be an int64_t or a double.  \nIn that case, I suspect the user would need to do check for a \"wrong type\" error, and try to read out the values in the other format.\n\nI agree, bool is simpler than int if you only return success, but I think there's a need for returning more than just success here."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "The case that you mention is solved by variant type on dbus. Then you can use std::variant<double, std::string> var; readProperties(ret, \"MyKey\", var); and then resolve it type. Is it make sense?"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That could be one approach, but in that case, we're back to having to code in variant get_if() implementations, which is what I thought you were hoping to avoid.  With that said, yes, if you supported a variant type, that would solve the problem, but it's going to make the code a bit worse to read."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 151,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Closing a comment because unpackProperties is no longer present in the patch"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you delcare this the way most of the rest of bmcweb does it?\n\nstd::bitset<sizeof...(Args) / 2>() assigned;"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 168,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 163,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 730,
            "sizeDeletions": 0
        },
        {
            "number": 48,
            "revision": "68bd047f5c4b7eee9672c80d59705a496bd271f7",
            "parents": [
                "5b0de033d13a7d7e566477269dca6626fcd704be"
            ],
            "ref": "refs/changes/92/31692/48",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1599224009,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "missing inline keyword."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's odd that this is namespaced under the service that owns it.  We tend to avoid that so that services are loosely bound and can be replaced as needed.  Not really a discussion for this patch, but for the interfaces patchset."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "It is specified in design ->\nhttps://github.com/openbmc/docs/blob/master/designs/telemetry.md\nYou can add your comments on it in the latest review:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/docs/+/31690/7/designs/telemetry.md#290"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Commented.  Thanks for the pointer."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Modified in the latest patch. Now we look for reports in /xyz/openbmc_project/Telemetry/Reports/TelemertyService path"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Missing \"inline\" keyword."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is technically a bug.  std::to_string returns an rvalue reference, which is being returned on line 37 by reference again.  Technically the to_string rvalue has been destroyed at that point.  The fact that this works is relying on undefined behavior.\n\nI suspect you can drop the return value on leftZeroPadding, and just use a temporary string on stack.\n\nThat would also space out this line a bit, which would help with the readability."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is so much better than the old way.  Good job!"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks. Removed unpackProperties and changed it to inline version"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This still looks like it doesn't handle errors."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "not all dbus errors indicate the element is missing.  I suspect this needs to be more specific."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok, I will compare ec to specific error to inform user that backend service is absent. On other errors I will set internal error message"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Initialize your variables please."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 736,
            "sizeDeletions": 0
        },
        {
            "number": 49,
            "revision": "da4edbb7b8a4c8f711ad317a09e93382800adfa8",
            "parents": [
                "5b0de033d13a7d7e566477269dca6626fcd704be"
            ],
            "ref": "refs/changes/92/31692/49",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1599654641,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 168,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 700,
            "sizeDeletions": 0
        },
        {
            "number": 50,
            "revision": "463a42dd2f3354f544aa83bb2b2201dac37ed3d0",
            "parents": [
                "ac29323dda1b643a81bf85719f7d3b7b2ab97903"
            ],
            "ref": "refs/changes/92/31692/50",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1599659258,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Shouldn't this be something like P0S? if ms == zero?\n\nI think the < case is still correct."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "My mistake, if ms is zero than string is \"P\", \"PT\" or \"P0DT0H0M0.000S\". ISO 8061 allows for negative duration, for example \"-PT1S\" (\"PT-1S\" is invalid), but it is not specified in Redfish duration but pattern from schema covers this case"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like this was changed.  Not a problem."
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit.  error_code can be passed by value."
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 168,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 700,
            "sizeDeletions": 0
        },
        {
            "number": 51,
            "revision": "a2284b2cfe9fe6ed3ff0fb7d0c251788332fcebf",
            "parents": [
                "ac29323dda1b643a81bf85719f7d3b7b2ab97903"
            ],
            "ref": "refs/changes/92/31692/51",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1599730722,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 168,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 700,
            "sizeDeletions": 0
        },
        {
            "number": 52,
            "revision": "75e0d6354da22ae4419650291851f48db96e1b35",
            "parents": [
                "9f8bfa7c6deb3808e3679d332479311dc4202819"
            ],
            "ref": "refs/changes/92/31692/52",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1606229162,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 166,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 608,
            "sizeDeletions": 0
        },
        {
            "number": 53,
            "revision": "055a434005b98cb068fd27a07f68221974402470",
            "parents": [
                "9f8bfa7c6deb3808e3679d332479311dc4202819"
            ],
            "ref": "refs/changes/92/31692/53",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1606232281,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 166,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 608,
            "sizeDeletions": 0
        },
        {
            "number": 54,
            "revision": "c7fce288802ece4a6e1ff71ee060a44e0b8fe992",
            "parents": [
                "9f8bfa7c6deb3808e3679d332479311dc4202819"
            ],
            "ref": "refs/changes/92/31692/54",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1607092265,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "tip: std::filesystem::path might be useful here."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "converting string to path requires extra step, cutting string is easier and faster. Looking at the performance number using std::filesystem::path is almost 4 time slower than rfind() and substr() when running simple hand made benchmark"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Something for something. Speed for the readability and less chance for potential defect.\nIf speed is crucial here then I am fine with it."
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "My 2 cents. \nI was asked to make a similar change for VM, and the rationale is that we should use specialized tools to do specific tasks. And std::filesystem::path IS more readable.\n\nBTW. Even if std::string is sometimes heavier than char* we prefer the use of std::string :)"
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this is a dbus path, so std::filesysytem::path is not a good fit.  We could use object_path from sdbusplus, but this exact pattern (pick last element from path) shows up all over bmcweb, so I'd rather we be consistent.  At some point, this could definitely be a method within the sdbusplus path object, that would help a ton, but for now, this is what we have."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "internal error is quite generic and does not tell what happen\nIf there is more specific error connected with invalid parameters then use it here."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I guess it is done as a double check for routing logic in bmcweb. I copied it from other redfish nodes to follow a pattern"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "considering in theory this code should be impossible to hit, internal error is fine here."
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "all erroneous cases logs something but in this case we do not log, is this on purpose?"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, it is done on purpose. In this case we can be sure that user receives single specific error so there is no need to check any additional information in journal. On line 80, bmcweb responses with internal error - it is required to be logged with error value for debug purpose"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "does it have to be static?"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I would like to keep it as static because other components can access it without creating an object, e.g. eventService. It is possible to move function out of class but than it requires additional namespace.\nThere is no drawback of keeping it as static as far as I know"
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please set these directly on lines 68 and 72, and remove the error on line 75, as it reduces the per-handler code, and doesn't require intermediate variables."
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Yes, but there was a request to fill all supported attributes. What if \"MaxReports\" is not in dictionary? What if there is an extra key in dictionary? I can create \"MaxReports\" and \"MinCollectionInterval\" before the loop with null values. If I remove intermediate variables then I am not able to handle errors. Are you ok with it?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 186,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 602,
            "sizeDeletions": 0
        },
        {
            "number": 55,
            "revision": "d790a1ed0d451918848c37d3253c760eff782708",
            "parents": [
                "f16f62633a64f386fd0382703ff0949ea177f457"
            ],
            "ref": "refs/changes/92/31692/55",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1608036161,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 602,
            "sizeDeletions": 0
        },
        {
            "number": 56,
            "revision": "69c5a3646448f93db4f048adb52f1cf2054f0a3d",
            "parents": [
                "81ce609e30274435b4f8c3fc65340c6b6b153b0c"
            ],
            "ref": "refs/changes/92/31692/56",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1609234355,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 602,
            "sizeDeletions": 0
        },
        {
            "number": 57,
            "revision": "5272f2e43471bd372dafae5dcf50f3ceeb51825f",
            "parents": [
                "2d5fe9d0ee205b6244b004c5d7fc9592d346b155"
            ],
            "ref": "refs/changes/92/31692/57",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1610626126,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "line": 64,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "You can use sdbusplus::unpackProperties for unpacking variants:\n\nhttps://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/unpack_properties.hpp"
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "https://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/unpack_properties.hpp"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 602,
            "sizeDeletions": 0
        },
        {
            "number": 58,
            "revision": "154f2f4a7eecf3f2bb132b554f95e16459016846",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/92/31692/58",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1612185993,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 596,
            "sizeDeletions": 0
        },
        {
            "number": 59,
            "revision": "51ba99bdebb1597863af71216c96254f77996d53",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/92/31692/59",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1612201435,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 161,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 603,
            "sizeDeletions": 0
        },
        {
            "number": 60,
            "revision": "264d8d71bafff1813cf567afc75ec78f05c12b37",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/92/31692/60",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1612202291,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 161,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 603,
            "sizeDeletions": 0
        },
        {
            "number": 61,
            "revision": "dfb599fa103bc78a070e340633032baeeb4e699e",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/92/31692/61",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1612206634,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 161,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 604,
            "sizeDeletions": 0
        },
        {
            "number": 62,
            "revision": "5f6adce9f70e88038837a7b5ae6f028fcdf7f8a7",
            "parents": [
                "349a2ac3921e17ff0e2bce47ba6698112d586e67"
            ],
            "ref": "refs/changes/92/31692/62",
            "uploader": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "createdOn": 1612874028,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 159,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 601,
            "sizeDeletions": 0
        },
        {
            "number": 63,
            "revision": "081ebf06b4c947e828408029273699ff2d49a54f",
            "parents": [
                "eaa96da3f862bf814ac7147a8a87fd3eaa97731b"
            ],
            "ref": "refs/changes/92/31692/63",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1612890870,
            "author": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/telemetry_utils.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/time_utils.hpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report.hpp",
                    "type": "ADDED",
                    "insertions": 159,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/metric_report_definition.hpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/service_root.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/telemetry_service.hpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 601,
            "sizeDeletions": 0
        }
    ]
}