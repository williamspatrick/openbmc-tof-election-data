{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "id": "I61318bb906de7d5a252414c1d3ea25322874e23e",
    "number": 47961,
    "subject": "Add non-throwing version of unpackProperties",
    "owner": {
        "name": "Szymon Dompke",
        "email": "szymon.dompke@intel.com",
        "username": "sdompke"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/sdbusplus/+/47961",
    "commitMessage": "Add non-throwing version of unpackProperties\n\nSome projects (e.g., bmcweb) don't use functions which throw exceptions.\nThis change introduces unpackPropertiesNoThrow() function, which returns\noptional string. In case of mismatched type or missing property, it will\ncontain its name. In case of no errors, std::nullopt will be returned.\n\nAs a side change, message returned by UnpackPropertyError::what() now\nalso includes propertyName and reason.\n\nTesting done:\n- Added unit tests for unpackPropertiesNoThrow().\n- unpackProperties() functionality remained the same.\n\nSigned-off-by: Szymon Dompke <szymon.dompke@intel.com>\nChange-Id: I61318bb906de7d5a252414c1d3ea25322874e23e\nSigned-off-by: Patrick Williams <patrick@stwcx.xyz>\n",
    "createdOn": 1634659656,
    "lastUpdated": 1636581695,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1634659656,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634732424,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1634732444,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634732780,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1634733066,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28618/ : SUCCESS"
        },
        {
            "timestamp": 1634735772,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1634735802,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634735816,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1634736435,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28624/ : SUCCESS"
        },
        {
            "timestamp": 1634832998,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1634844669,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1634844694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634844700,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1634845335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28745/ : SUCCESS"
        },
        {
            "timestamp": 1635956837,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 4:\n\nJust a reminder - please let me know if I need to explain or change anything here."
        },
        {
            "timestamp": 1636494350,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1636494362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636494438,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review+1\n\n@Szymon - Apologies for being so slow at getting back to this one.  I made some changes to shift the optional/noexcept handling to compile time differences.  Can you re-review the changes I made?"
        },
        {
            "timestamp": 1636495013,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29980/ : SUCCESS"
        },
        {
            "timestamp": 1636540737,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\nThanks @Patrick, it is very good idea to make it in compile time. I have only one small comment, except that it looks good."
        },
        {
            "timestamp": 1636542113,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 5: Code-Review+1\n\nI really like the usage of std::conditional_t. Looks good to me."
        },
        {
            "timestamp": 1636542198,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5:\n> \n> (1 comment)\n> \n> Thanks @Patrick, it is very good idea to make it in compile time. I have only one small comment, except that it looks good.\n\nThis"
        },
        {
            "timestamp": 1636542571,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1636542574,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1636543994,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1636544147,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1636544854,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1636569939,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1636569955,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1636569990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636570658,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30071/ : SUCCESS"
        },
        {
            "timestamp": 1636575569,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1636576335,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1636581695,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "32a64f5a9c2540b80234dadaba26f7424da314e1",
            "parents": [
                "b466765473ac442b8f482b0a8f4356b330437bcc"
            ],
            "ref": "refs/changes/61/47961/1",
            "uploader": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "createdOn": 1634659656,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 164,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "nit: you can pass std::ref(badProperty) it will be exactly the same, but you will give a hint that it's going to be passed as reference wrapper"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 164,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -11
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 197,
            "sizeDeletions": 19
        },
        {
            "number": 2,
            "revision": "6ae59c584b99fb260546631a26feb18732f74b3f",
            "parents": [
                "b466765473ac442b8f482b0a8f4356b330437bcc"
            ],
            "ref": "refs/changes/61/47961/2",
            "uploader": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "createdOn": 1634732424,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "You can put it inside else block. In case of throwing exception function will not return and in all other cases it means success."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -11
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 159,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 74
        },
        {
            "number": 3,
            "revision": "d69854e35eb26383f082fa531efbc3afb61e5670",
            "parents": [
                "b466765473ac442b8f482b0a8f4356b330437bcc"
            ],
            "ref": "refs/changes/61/47961/3",
            "uploader": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "createdOn": 1634735772,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Add `noexcept`"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 160,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't understand how this turns the function into a non-throwing.  The 'common' function still throws and there is no catch here."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 165,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "By passing badProperty, we are certain that condition in line 123 is always false, and there is the only throwing block in the common function. So this means, there is no need to catch anything. Or am I wrong? I am open for other ideas, but my intention here was to not duplicate much code."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -11
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 159,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 74
        },
        {
            "number": 4,
            "revision": "23c0c151d42e3f98aa23e4261c468191402b7b0a",
            "parents": [
                "b466765473ac442b8f482b0a8f4356b330437bcc"
            ],
            "ref": "refs/changes/61/47961/4",
            "uploader": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "createdOn": 1634844669,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -11
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 159,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 214,
            "sizeDeletions": 74
        },
        {
            "number": 5,
            "revision": "ecd1b80d47fe8c6813a570a46fcc8c3ca3e9f2cd",
            "parents": [
                "11a50dda6e05081418b78333e2e42f8d896e7b45"
            ],
            "ref": "refs/changes/61/47961/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1636494350,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Could be renamed to NoThrow"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "This, or maybe something with verb like ReturnBadProperty?"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: could be `void` return type for else. You could modify the function body to only return if `BadProperty`"
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "If it's void then return in line 143 will fail for non void version of this function. Anyway compiler should optimize it and discard bool return type because it's not used."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "So then wrap it in `if constexpr (BadProperty) { return {}; }` and it works fine..."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Your are right. Thanks for pointing it out."
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/exception.cpp",
                    "line": 146,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "nit: Would be nice to use std::format here, but I guess we don't include fmtlib in this project so \ud83d\ude10"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": -17
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 159,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 80
        },
        {
            "number": 6,
            "revision": "6d83cf539ac0613e5639ec484c4865317795cd75",
            "parents": [
                "11a50dda6e05081418b78333e2e42f8d896e7b45"
            ],
            "ref": "refs/changes/61/47961/6",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1636569955,
            "author": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/exception.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/unpack_properties.hpp",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": -18
                },
                {
                    "file": "src/exception.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "test/unpack_properties.cpp",
                    "type": "MODIFIED",
                    "insertions": 159,
                    "deletions": -58
                }
            ],
            "sizeInsertions": 212,
            "sizeDeletions": 81
        }
    ]
}