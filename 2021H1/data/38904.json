{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I8f1490db179e7ad8b67c45c656482f351fd5122d",
    "number": 38904,
    "subject": "Add operator panel high level design.",
    "owner": {
        "name": "Jinu Joy Thomas",
        "email": "jinu.joy.thomas@in.ibm.com",
        "username": "jinuthomas"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/38904",
    "commitMessage": "Add operator panel high level design.\n\nThis design is related to the IBM operator panel to be used\non BMC based systems.\n\nSigned-off-by: Jinu Joy Thomas <jinu.joy.thomas@in.ibm.com>\nChange-Id: I8f1490db179e7ad8b67c45c656482f351fd5122d\n",
    "createdOn": 1607503050,
    "lastUpdated": 1611259595,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1607503050,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1607514028,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607635830,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1607708086,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1607718813,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(3 comments)\n\nThis is a good start to the design.  If this design is limited to IBM it, should be under a subdirectory, for example: docs/designs/ibm"
        },
        {
            "timestamp": 1607750713,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1607774077,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607777120,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1607887826,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1607960578,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1608068424,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 1:\n\n(4 comments)\n\nI am looking forward to the second draft.  If this goes into an IBM-specific design directory, does that mean the implementation goes into an IBM specific source repo?"
        },
        {
            "timestamp": 1608183894,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 1:\n\n(11 comments)"
        },
        {
            "timestamp": 1608270439,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1608297379,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1608300279,
            "reviewer": {
                "name": "Vishwanatha Subbanna",
                "email": "vishwa@linux.vnet.ibm.com",
                "username": "vishwabmc"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1609865779,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1611259595,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Abandoned"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "74e909e7058f3c5860eb80097b602ba3ded3dab7",
            "parents": [
                "0f6c884822ca2d101e2a0bf3256ecf4f6f2431a3"
            ],
            "ref": "refs/changes/04/38904/1",
            "uploader": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "createdOn": 1607503050,
            "author": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this called 'OPNL'?  That seems like an arbitrary acronym.\n\nIs this design exclusively unique to IBM or do you intend it to be able to support other panel designs?  Have you looked at the OCP Debug Card and determined if you would be able to easily extend to support to an OCP card?\n\nIf this is IBM-only design and code, and you have no intention on this working with anyone else's hardware, please put into an IBM subdirectory."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Why is this called 'OPNL'?  That seems like an arbitrary acronym.\n- YES, Just for ease of use or do i need to use IOPMA ?\n\nIs this design exclusively unique to IBM or do you intend it to be able to support other panel designs?  Have you looked at the OCP Debug Card and determined if you would be able to easily extend to support to an OCP card?\n- The way I see it , yes it is , I am not pretty sure if there will be other panels like this, seems outdated and one of a kind. Yes have looked at the OCP debug card and it did not look easy enough to plug my requirements into that, Both does things totally different and it also depends on the code within the micro. \n\nIf this is IBM-only design and code, and you have no intention on this working with anyone else's hardware, please put into an IBM subdirectory.\n- I had mailed the mailing list asking if anyone had any interest in such a thing and I had got no response. If someone else hardware is the OCP debug card , then I do nto see any easy way, but if someone wants to use the IBM operator panel or wants to design one similar to it, then they could, and since I cannot force the future in that , I placed the design here.\n\nI am hoping for you guys to steer me in the right direction."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I understand it this way: Multiple IBM systems currently accept and can be operated by IBM's [physical control panel][physical panel] aka OpPanel.  This design is to enhance IBM systems built on OpenBMC to respond to the IBM OpPanel."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": ">> Why is this called 'OPNL'?  That seems like an arbitrary acronym.\n> YES, Just for ease of use or do i need to use IOPMA ?\n\nPlease avoid making up new acronyms here.  Just refer to this by its repository name when/if appropriate.\n\n> Yes have looked at the OCP debug card and it did not look easy enough to plug my requirements into that, Both does things totally different and it also depends on the code within the micro.\n\nI somewhat disagree but I understand if you're not willing to implement.  The transport mechanism (your protocol vs OCP) are different, but the ability to display things and handle user requests is fairly common.  A framework for adding op-panel style user interfaces would be more work but more generally applicable.\n\nIt is up to you to decide what you want to work on.  You could contact some of the HCL team working on Facebook's Yosemite-v2 server if you wanted to see if they could work together with you on it.  (Kumar Thangavel <thangavel.k@hcl.com> is the first name I find in my email.)"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "I would put it in docs/designs/operator-panel.md"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "@Patrick: Do you know if we have the debug card support in openBMC , I do not see the code anywhere, maybe have not looked correctly. Could you give me the link to the code please.\nI will check with Kumar and see what they are up to and if we could do something.\n Also the logic of display is different between both , as well as the execution logic. We can create a common framework but will be at a cost of time and effort. Let me see the OCP card code and can give a better picture.\n\n@vishwa: I am more inclined to opnl-design.md, and would like it that way unless it causes an issue."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Well... If you are not willing to update it, then fine. I was just saying what makes more sense from a readability standpoint. \n\nopnl : People would need a way to know that opnl means operator-panel. Or, they need to open this file and then read the first line to know OPNL means Operator Panel.\n\nalso, all the designs in OpenBMC are kept in design/ path."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> We can create a common framework but will be at a cost of time and effort. Let me see the OCP card code and can give a better picture.\n\nYes, often open source takes more time and effort for 1 solution but the advantage is if you and Kumar are both working on it, then it reduces the overall effort for both of you.\n\n> I am more inclined to opnl-design.md, and would like it that way unless it causes an issue.\n\nI agree with Vishwa here.  4 letter acronyms are part of your FSP implementation and not what we do in OpenBMC.  We strive for readability and understandability.  'opnl-design' vs 'operator-panel.md'.  The second is clearly more understandable to someone new."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 2,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Drive by comment. \n\n> Please avoid making up new acronyms here.  Just refer to this by its repository name when/if appropriate. \n\n+1\n\n> I agree with Vishwa here.  4 letter acronyms are part of your FSP implementation and not what we do in OpenBMC.  We strive for readability and understandability.  'opnl-design' vs 'operator-panel.md'.  The second is clearly more understandable to someone new.\n\n+1"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 3,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please don't include pictures in the docs repository.  I would prefer you use either an ascii art or embedded UML using gravizo.com."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 3,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "since I saw a svg file already in the design folder , I added the picture, it is not easy to use the ascii art, but can be done later, I guess."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 3,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We're trying to remove all graphics from this repository.  It looks like the MCTP one got left.\n\nLike I said, you can also use gravizo, which allows you to embed UML directly into the document and renders the picture when the markdown is rendered.  Let me know if you need help with this."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 3,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Sure, will try gravies and try."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "As a first review comment, could remove these white spaces / tabs ?"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "I am not keen on removing the white space without reason, as it is following the basic syntax of markdown, \n\nPlease read \nhttps://www.markdownguide.org/basic-syntax#line-breaks\n\nPlease specify where the tabs are."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I think the request is to remove *trailing* whitespace.  You can see these trailing spaces, for example, in the gerrit review (with gerrit > preferences (gear icon) > Show trailing whitespace = true).\nSample Linux command to remove trailing spaces:\nsed -i 's/[[:space:]]*$//' OPNL-design.md\n\nAlso, please never have more than 2 blank lines in a row, and prefer to remove most blank lines."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "I meant that markdown syntax tells to add two space ,and Gerrit interprets it as trailing space, why would you need that removed ? then we should not be using the markdown. Regarding having not more than 2 blank lines could be done. Basically I would suggest to look at the markdown version  of the file and not the source."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "@Jinu,\n\nI think you misunderstand the Markdown spec here. Two trailing spaces forces a line break. I don\u2019t see any circumstances here where you should be forcing a line break in the middle of your paragraph. You shouldn\u2019t be forcing the generated markdown to be at 80 characters, but let it flow the paragraphs however the user has set their screen width. \n\nWhat you are doing here is foreign to all our other documentation, so that is why it was noticed and called out. Generally we simply use a paragraph break, which you\u2019ve also used, as a blank new-line. If your document really needs forced line breaks they should be rare and likely quite obvious and in that case we would ignore the Gerrit highlighting."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Thanks @Patrick for the clarification, I actually misunderstood the 80 char limit, thought it was meant for the markdown. I can remove all the line breaks"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "is the usage of \"your\" needed here ?"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "wordings copied from \nhttps://www.ibm.com/support/knowledgecenter/en/POWER9/p9hb5/areaaphycntrlpnl.htm"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": ":) Fine.. That said, we don't necessarily have to map knowledge centre documentation into this."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "this is IBM centric. It is anyway covered by \"power on\". So we could remove IPL"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "wordings copied from \nhttps://www.ibm.com/support/knowledgecenter/en/POWER9/p9hb5/areaaphycntrlpnl.htm"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "The objective here is not to match whatever the IBM support document says, instead make it more generic. As said before, this is OpenBMC design document. That means, whoever that wants to implement this, should be able to understand the terminology. I am not sure whole of industry maps IPL to IBM POWER system's interpretation of system power on. Since Power-on is also mentioned right after IPL, what is IPL conveying here."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "think so, a number would be better ?"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Vishwanatha Subbanna",
                        "email": "vishwa@linux.vnet.ibm.com",
                        "username": "vishwabmc"
                    },
                    "message": "Enter"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Ack"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How are you going to do this?  I don't think there are any \"i2c slave device in userspace\" driver support in the kernel.  It seems to me like you have to do your \"alternative design\" below and write a driver that turns your i2c slave device commands into an input device."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "I just meant that I will have an event loop which can capture the raw I2C data from the hardware,\nMy thought was more on something like \nhttps://lkml.org/lkml/2019/6/5/707\n\nor maybe \nhttp://patchwork.ozlabs.org/patch/1113278/\n\nAs mentioned below there is an issue as the input subsystem does not cater to the exceptional requirement of the hardware.if that is solved , I will go by the alternate design."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is slave-mqueue going to be accepted upstream?"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "With work it could"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 88,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Can you clarify this tool could be a command line utility, and where it would inject data (i2c, D-Bus, or both?)."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 88,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "yes this would be a command line utility , currently planned to be used only for development, The injection will be through the a DBus API towards execution of the function only."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Can you clarify and expand this requirement to say something like:\n- Log all hot plug events (plug and unplug).\n- Log the presence (present, not present) of the OpPanel when the app starts up."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Ack"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 93,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Please add: Log functions invoked via the OpPanel.  For example, log when the Enter button is pressed to activate a BMC function.  This should be in addition to any log entries made by the function itself, and will help to explain why that function was called (namely, because of the OpPanel)."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 93,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Ack"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Is this a non-requirement?: A way to disable the OpPanel, so the BMC would not respond to it."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "This was not there in our legacy code, it could be added as a new requirement, just need a use case where it would be helpful."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This assumes that upstream would accept it.  I think you need to get commitment from the upstream i2c subsystem maintainers that they would accept this before we commit to this design."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "I just mentioned that will try to upstream it, it can also stay downstream, I guess. or maybe use the IPMB driver http://patchwork.ozlabs.org/patch/1113278/"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "spelling: driver"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "Ack"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I have no idea what this sentence means.\n\nYou could turn the input device into a keycodes like we do for GPIO or a keyboard, or you could do a real \"HID\" device driver.  What do you mean about \"cannot give only single events\"?"
                },
                {
                    "file": "OPNL-design.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "The linux kernel caches the button state, it requires both a press and release event, even if that is a delayed release, but it does not accept repeated press event without a release event. Our requirement is a mix of buttons having either press and release events or only press events. we have this path tested and also have a custom driver between the input subsystem and i2c driver to cater to our needs and also upstreamed, only issue I that the driver/kernel doesn't support single execution (either only press events or only release events and not both) . If a way is found this will be the choice of design."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do you have a press without a release?  I still don't understand what the issue is.\n\nHID is widely used for game controllers with force-feedback and variable pressure sensing and mice and graphics tablets.  I can't imagine that it is unusable for a simple low-button panel interface."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "The press and release is actually the change in the line , so for example the rising edge specifies a press and the falling edge specifies a release , and the code which detects this takes a decision to either send both the events out or only one. So in this way you can have only press events or you can have both press and release events.\n\nwe do not not need something as complex as an HID driver. just a plane i2c slave backend would be good enough as it is raw i2c messages in this case."
                },
                {
                    "file": "OPNL-design.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> we do not not need something as complex as an HID driver. just a plane i2c slave backend would be good enough as it is raw i2c messages in this case.\n\nI think this is the big catch.  You *can* get something working with raw i2c messages, but in general that is *not* the Linux way.  We strive to work in ways that are acceptable upstream so we don't have to keep maintaining support.  We *could* implement SPI drivers by bit-banging GPIO lines too, but instead we choose to work within the frameworks provided by upstream.\n\nI'm not saying HID is the right solution here, but if we *can* use an appropriate framework from upstream we should.  At a minimum, to me, that seems like i2c slave support should go in the kernel and maybe it ties into HID to get information to userspace, but the appropriate kernel->userspace layer is for you to investigate (as long as we use an existing one).\n\n> The press and release is actually the change in the line , so for example the rising edge specifies a press and the falling edge specifies a release , and the code which detects this takes a decision to either send both the events out or only one. So in this way you can have only press events or you can have both press and release events.\n\nI think you're describing how the micro-controller in your op-panel works?  I don't see why you couldn't change this into a quick press/release combination at the driver level before it gets into your userspace application."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "OPNL-design.md",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "opnl_alt_architecture.jpg",
                    "type": "ADDED",
                    "insertions": 0,
                    "deletions": 0
                },
                {
                    "file": "opnl_architecture.jpg",
                    "type": "ADDED",
                    "insertions": 0,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 177,
            "sizeDeletions": 0
        }
    ]
}