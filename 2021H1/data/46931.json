{
    "project": "openbmc/intel-ipmi-oem",
    "branch": "master",
    "id": "I389d4949e43ae95605b225e07aeb8e0e703c3454",
    "number": 46931,
    "subject": "StorageCmd: Get fru data from different services",
    "owner": {
        "email": "archanax.kakani@linux.intel.com",
        "username": "Archana-Kakani"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/46931",
    "commitMessage": "StorageCmd: Get fru data from different services\n\nGet fru details from fru interface defined under different services.\nRemoved hardcoded dependency with service and made it more generic\nwith respect to fru interface.\n\nTasks Completed:\n1. Get the list of objectPaths and the services\n   implementing FruDevice Interface.\n2. Get the details of all the object paths under\n   each service (ObjectPath->Interface->Properties)\n3. Save only the objectpaths which have FruDevice interface.\n4. Save the device id and corresponding objectPath.\n5. In getFru,\n    Get Object path using device Id\n    Get service name using DBus query GetObject using object path\n        and \"xyz.openbmc_project.FruDevice\" interface.\n    Call GetRawFru using service name\n\nTested:\nUsed ipmitool fru command and observed that the Fru data is displayed\nfor all FRU's defined under different services.\n\nSigned-off-by: Archana Kakani <archanax.kakani@linux.intel.com>\nChange-Id: I389d4949e43ae95605b225e07aeb8e0e703c3454\n",
    "createdOn": 1631770379,
    "lastUpdated": 1637820207,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1631770379,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1631770394,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631770671,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/26431/ : SUCCESS"
        },
        {
            "timestamp": 1632120070,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1632150234,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n@Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there."
        },
        {
            "timestamp": 1632842743,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1632842778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632843054,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27088/ : SUCCESS"
        },
        {
            "timestamp": 1633421204,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1633434820,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1633605563,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1633605570,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633605939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27696/ : SUCCESS"
        },
        {
            "timestamp": 1633607669,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Patch Set 3:\n\n(7 comments)"
        },
        {
            "timestamp": 1634025201,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1634025445,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1634031556,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1634580595,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1634580608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634580884,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28470/ : SUCCESS"
        },
        {
            "timestamp": 1634581372,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Patch Set 4:\n\n(8 comments)"
        },
        {
            "timestamp": 1634621693,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 4:\n\n> Patch Set 1:\n> \n> @Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there.\n\nI agree with Andrei. dbus-sdr is replicated throughout *-ipmi-oem repositories. I am fine if Intel prefers to continue using dbus-sdr on intel-ipmi-oem. But OpenBMC community will benefit from features/bug fixes to dbus-sdr, so feel free to create patches in phosphor-host-ipmid/dbus-sdr.\n\n+ Willy, Shakeeb for review."
        },
        {
            "timestamp": 1634662698,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 4:\n\n(6 comments)\n\n> Patch Set 4:\n> \n> > Patch Set 1:\n> > \n> > @Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there.\n> \n> I agree with Andrei. dbus-sdr is replicated throughout *-ipmi-oem repositories. I am fine if Intel prefers to continue using dbus-sdr on intel-ipmi-oem. But OpenBMC community will benefit from features/bug fixes to dbus-sdr, so feel free to create patches in phosphor-host-ipmid/dbus-sdr.\n> \n> + Willy, Shakeeb for review.\n\n+1\n\nI also agree that moving to dbus-sdr is better, unless intel has really specific stuff that they need.\n\nI think the change is fine overall, I am worry about how this can affect the performance. This would also mean the Fru that it return will not match to what Entity Manager shows (which is probably fine.)"
        },
        {
            "timestamp": 1635137775,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1635137790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635138042,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1635138278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28894/ : SUCCESS"
        },
        {
            "timestamp": 1635138305,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1636542759,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5:\n\n> Patch Set 4:\n> \n> > Patch Set 1:\n> > \n> > @Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there.\n> \n> I agree with Andrei. dbus-sdr is replicated throughout *-ipmi-oem repositories. I am fine if Intel prefers to continue using dbus-sdr on intel-ipmi-oem. But OpenBMC community will benefit from features/bug fixes to dbus-sdr, so feel free to create patches in phosphor-host-ipmid/dbus-sdr.\n> \n> + Willy, Shakeeb for review.\n\nHi @Tom Joseph and @Andrei,\n\nAs our image build follows intel-ipmi-oem repo (not dbus-sdr), I would like this patch to get merged in this repo itself. We welcome your comments and hence we plan to push the same patch there as well but at later point of time. I hope this works well for both of us. \nI request you to review this patch and provide your comments. Thank you!"
        },
        {
            "timestamp": 1636571790,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1636608763,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1637516740,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 5:\n\nAny comments?"
        },
        {
            "timestamp": 1637573575,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1637749356,
            "reviewer": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Patch Set 4:\n> > \n> > > Patch Set 1:\n> > > \n> > > @Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there.\n> > \n> > I agree with Andrei. dbus-sdr is replicated throughout *-ipmi-oem repositories. I am fine if Intel prefers to continue using dbus-sdr on intel-ipmi-oem. But OpenBMC community will benefit from features/bug fixes to dbus-sdr, so feel free to create patches in phosphor-host-ipmid/dbus-sdr.\n> > \n> > + Willy, Shakeeb for review.\n> \n> Hi @Tom Joseph and @Andrei,\n> \n> As our image build follows intel-ipmi-oem repo (not dbus-sdr), I would like this patch to get merged in this repo itself. We welcome your comments and hence we plan to push the same patch there as well but at later point of time. I hope this works well for both of us. \n> I request you to review this patch and provide your comments. Thank you!\n\nAs mentioned by Mansi, we'll focus on merging this patch if there are no concerns. Submitted similar patch \"https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/49075\" in the repo \"phosphor-host-ipmid/dbus-sdr\" for community interest. Please review this patch. Thanks!"
        },
        {
            "timestamp": 1637813323,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1637820161,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5: Code-Review+2\n\n> Patch Set 5:\n> \n> > Patch Set 5:\n> > \n> > > Patch Set 4:\n> > > \n> > > > Patch Set 1:\n> > > > \n> > > > @Intel-team: don't you plan to move out all FRU/SDR/SEL functionality to phosphor-host-ipmid? There is already \"dbus-sdr\" module copied from intel-ipmi-oem. I believe, entire community would benefit if you continue develop this functions there.\n> > > \n> > > I agree with Andrei. dbus-sdr is replicated throughout *-ipmi-oem repositories. I am fine if Intel prefers to continue using dbus-sdr on intel-ipmi-oem. But OpenBMC community will benefit from features/bug fixes to dbus-sdr, so feel free to create patches in phosphor-host-ipmid/dbus-sdr.\n> > > \n> > > + Willy, Shakeeb for review.\n> > \n> > Hi @Tom Joseph and @Andrei,\n> > \n> > As our image build follows intel-ipmi-oem repo (not dbus-sdr), I would like this patch to get merged in this repo itself. We welcome your comments and hence we plan to push the same patch there as well but at later point of time. I hope this works well for both of us. \n> > I request you to review this patch and provide your comments. Thank you!\n> \n> As mentioned by Mansi, we'll focus on merging this patch if there are no concerns. Submitted similar patch \"https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/49075\" in the repo \"phosphor-host-ipmid/dbus-sdr\" for community interest. Please review this patch. Thanks!\n\nThanks Joseph for suggestion of moving SDR?FRU specific registration to common place(phosphor-ipmi-host) - I believe SEL implementation is different from common to intel-ipmi-oem. Overall it requires some efforts to cross moving and checking w.r.t what exist there vs here. Also need to understand impact of change a bit more ( W.r.t consumers of intel-ipmi-oem repo). We will try to check and knock the registration from intel-ipmi-oem once we get there( Due to other priorities it may get delayed).\n\nMoving ahead with +2 for now, As code looks good  and suggestions can be considered in future."
        },
        {
            "timestamp": 1637820205,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Change has been successfully rebased and submitted as f23fd543404a948ae436a5cf4092354dcb60a366 by AppaRao Puli"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "10b9f9c12585ad4bae9b6a40d6f55e2438ee0fa1",
            "parents": [
                "98cb6186e77fb820dd26666118964897d36730be"
            ],
            "ref": "refs/changes/31/46931/1",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1631770379,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "you can define 1st step as\nRemoved hardcoded dependency with service and made it more generic with respect to fru interface\nAnd then move down below steps."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Also please test with ipmitool raw commands, it should not break in middle."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "Needed? Please help me if I am missing on something here. Thanks!"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 24,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "call failed."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 252,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 253,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "level::ERR log without if condition? \nec check?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 253,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 265,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "interface (just to maintain consistency in the file)"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 265,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 333,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "typo - because"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 333,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -18
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 18
        },
        {
            "number": 2,
            "revision": "56e0f7ae593a9c5c09aabcd86ae0928d03901b42",
            "parents": [
                "98cb6186e77fb820dd26666118964897d36730be"
            ],
            "ref": "refs/changes/31/46931/2",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1632842743,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/storagecommands.cpp",
                    "line": 358,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "This sounds erroneous, suppose if we don't get the cacheBus and cacheAddr right in the first service's call, then we should be proceeding to next one, no?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 358,
                    "reviewer": {
                        "name": "Mansi Joshi",
                        "email": "mansi.joshi@linux.intel.com",
                        "username": "Joshi-Mansi"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 358,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 13
        },
        {
            "number": 3,
            "revision": "3349d8fed22f60abe8120f67308ee07c76b5a932",
            "parents": [
                "f4d5e05e388aafd06d8320a2f81594de35c77c0d"
            ],
            "ref": "refs/changes/31/46931/3",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1633605563,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/storagecommands.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "nit : you can use more specific headers here \nrefer : https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47708"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 26,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : any functionality of this header  are you using in this file ..?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 35,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 38,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : is this header necessary here ..?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 38,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Removed it"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 38,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "can we use std::vector ..? is there any particular reason we are using std::unordered_set ..?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 260,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Using unordered_set to avoid duplicates."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "if this not used please remove ."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 270,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "move outside the for loop."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 273,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 345,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Can we re-use boost::system::error_code ec from line number 327 here ..?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 345,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Can we break for loop after this line ..?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 353,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": -10
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 10
        },
        {
            "number": 4,
            "revision": "b0644f1300fae43ebe24b63a1d8ad1cd88e0ff7f",
            "parents": [
                "d4b74b4f7ccc92152eabf7eebb5f1722889a73c9"
            ],
            "ref": "refs/changes/31/46931/4",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1634580595,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/storagecommands.cpp",
                    "line": 238,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "just realized that this is not used at all."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 238,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Removed"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 259,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "you are variable shadowing with the `path`."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 259,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 268,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "```\nconst auto&\n```\n\nor better yet, just `const std::string&`"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 268,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Add\n\n```\ncontinue;\n```\n\nhere and remove the else bracket."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 279,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 285,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "const auto&?"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 285,
                    "reviewer": {
                        "email": "archanax.kakani@linux.intel.com",
                        "username": "Archana-Kakani"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Can you refactor https://github.com/openbmc/intel-ipmi-oem/blob/3861fea7af194ce5f571a0802f5a4fbe6a71cea2/include/sdrutils.hpp#L450-L451 to take in an interface variable and use that instead?\n\num.. maybe not. It does not have the context/yield there."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 92,
            "sizeDeletions": 13
        },
        {
            "number": 5,
            "revision": "e851e0fb9287ce8c90d701e598f4334b4ec413bf",
            "parents": [
                "d4b74b4f7ccc92152eabf7eebb5f1722889a73c9"
            ],
            "ref": "refs/changes/31/46931/5",
            "uploader": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "createdOn": 1635137775,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 15
        },
        {
            "number": 6,
            "revision": "f23fd543404a948ae436a5cf4092354dcb60a366",
            "parents": [
                "9e58cfe1ba5ca5bcd5263b50730c5a231eabdd4f"
            ],
            "ref": "refs/changes/31/46931/6",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "createdOn": 1637820205,
            "author": {
                "email": "archanax.kakani@linux.intel.com",
                "username": "Archana-Kakani"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 15
        }
    ]
}