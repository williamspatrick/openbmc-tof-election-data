{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I7d1fe3710b431e45285caafcf37422340aecc3e0",
    "number": 43351,
    "subject": "Add Drive Manager service design",
    "owner": {
        "email": "Jun-Lin.Chen@quantatw.com",
        "username": "kmfic567"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/43351",
    "commitMessage": "Add Drive Manager service design\n\nPropose a design daemon for collection storage device information\n\nSigned-off-by: JunLin Chen <Jun-Lin.Chen@quantatw.com>\nChange-Id: I7d1fe3710b431e45285caafcf37422340aecc3e0\n",
    "createdOn": 1621408178,
    "lastUpdated": 1623995578,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1621408178,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1621415912,
            "reviewer": {
                "name": "Thang Q. Nguyen",
                "email": "thang@os.amperecomputing.com",
                "username": "thangqn-ampere"
            },
            "message": "Patch Set 1:\n\nI see in your proposal, just presence information is detected/checked. No other inventory data.\nI see we already have phosphor-nvme which supports to read inventory information and check GPIO presence but no Redfish support.\nHow's about supporting a framework (or dbus interface) so that services like phosphor-nvme can update information to so that the information can display in Redfish SimpleStorage?"
        },
        {
            "timestamp": 1621564941,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1622050287,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 2:\n\n(8 comments)"
        },
        {
            "timestamp": 1622080679,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1622083454,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1622083583,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Patch Set 4:\n\n(8 comments)"
        },
        {
            "timestamp": 1622709303,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Patch Set 4:\n\n> Patch Set 1:\n> \n> I see in your proposal, just presence information is detected/checked. No other inventory data.\n> I see we already have phosphor-nvme which supports to read inventory information and check GPIO presence but no Redfish support.\n> How's about supporting a framework (or dbus interface) so that services like phosphor-nvme can update information to so that the information can display in Redfish SimpleStorage?\n\nSorry for so long to reply you\n\nThe existing bmcweb already has the storage scheme, which can display the information of the Storage Device, it used the dbus interface , xyz.openbmc_project.Inventory.Item.Drive.\nConsidering the duplication of SimpleStorage and Storage, the design proposal for simpletorage has been abandoned."
        },
        {
            "timestamp": 1623995578,
            "reviewer": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "message": "Abandoned\n\nThis service is not to be needed now"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a97e8c079d1aa849f516836b0fed824e4d25ceff",
            "parents": [
                "4e997b042e3aa930eaf1299d00f32a579f9fd82c"
            ],
            "ref": "refs/changes/51/43351/1",
            "uploader": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "createdOn": 1621408178,
            "author": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "type": "ADDED",
                    "insertions": 153,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "4b60fc2005a863bfa127b29c5ef1e103531df15e",
            "parents": [
                "4e997b042e3aa930eaf1299d00f32a579f9fd82c"
            ],
            "ref": "refs/changes/51/43351/2",
            "uploader": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "createdOn": 1621564941,
            "author": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I think we went with using Drive in the offline discussion. We won't use SimpleStorage anymore. Any other reasons that we keep this name?\n\nWe might need to change all \"simple storage\" to \"drive\"."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 1,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Done."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "nit: \"Redfish GET request\" should go to BMCweb?"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 54,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Device status is read to bmcweb."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "So presence and powergood for a single device will be two objects that has \"xyz.openbmc_project.Inventory.Item\" implemented, right?\n\nAnd the \"Present\" property for powergood basically represents \"Power Good or not\", right?"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 74,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Yes. You're right."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Can you explain how we are going to use this interface with object mapper to match presence and powergood objects for a device?\n\nCan we use \"GetSubTree\"? Given a deviceId, I thought we can do something like searching objects under \"/xyz/openbmc_project/inventory/system/<SimpleStorageController>/<DeviceId>/\". \n\nWe can get deviceIds using the same \"GetSubTree\" method for \"/xyz/openbmc_project/inventory/system/<SimpleStorageController>/\"."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 99,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Can you explain how we are going to use this interface with object mapper to match presence and powergood objects for a device?\n\nWe will parse the object path to determine which objects are same device\nThat's why we define the `/xyz/openbmc_project/inventory/system/<StorageController>/<DeviceId>/<DeviceStatus>` path rule.\n\nCan we use \"GetSubTree\"? Given a deviceId, I thought we can do something like searching objects under \"/xyz/openbmc_project/inventory/system/<SimpleStorageController>/<DeviceId>/\". \n\nSure.\n\nWe can get deviceIds using the same \"GetSubTree\" method for \"/xyz/openbmc_project/inventory/system/<SimpleStorageController>/\".\n\nYes."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 107,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Why do we need controller id here? Is it just to make the object path unique?"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 107,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Considering that there may be different types of controller on different BMCs and Controller names are user defined\nSort controllers and give them Id can save the code which transfer name to Id on the bmcweb side."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 111,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "nit: be created by the Manager?"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 111,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "can you explain more about how we manage this index?"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 111,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "such like official example:\n/redfish/v1/Systems/437XR1138R2/Storage/1#/StorageControllers/0\nThe 0 is <ControllerId>\nIf we created ControllerId on Manager side and mark it on Dbus path so that we do not need to sort them on bmcweb side."
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 111,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Should it be drive?\n\nhttp://schemas.dmtf.org/viewvc/Development/documents/specifications/DSP0268/DSP0268_2020.4.html?revision=1.1&view=co#Drive"
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "line": 139,
                    "reviewer": {
                        "email": "Jun-Lin.Chen@quantatw.com",
                        "username": "kmfic567"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "type": "ADDED",
                    "insertions": 156,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 156,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "efbc335fed79138c60add4375ed9bca8229f546f",
            "parents": [
                "4e997b042e3aa930eaf1299d00f32a579f9fd82c"
            ],
            "ref": "refs/changes/51/43351/3",
            "uploader": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "createdOn": 1622080679,
            "author": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 142,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "b28bb48aea6605c1b7e2bacaa3bb088e2ff457a4",
            "parents": [
                "4e997b042e3aa930eaf1299d00f32a579f9fd82c"
            ],
            "ref": "refs/changes/51/43351/4",
            "uploader": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "createdOn": 1622083454,
            "author": {
                "email": "Jun-Lin.Chen@quantatw.com",
                "username": "kmfic567"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/simplestorage-manager.md",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 142,
            "sizeDeletions": 0
        }
    ]
}