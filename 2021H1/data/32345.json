{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I9c77c2cd116d0b159d7b1810a2d988f7618f52ea",
    "number": 32345,
    "subject": "Add virtual sensors design",
    "owner": {
        "name": "Vijay Khemka",
        "email": "vijaykhemkalinux@gmail.com",
        "username": "vijaykhemka"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/32345",
    "commitMessage": "Add virtual sensors design\n\nAdded design for virtual sensors which will have values based\non algorithm defined in configuration.\n\nSigned-off-by: Vijay Khemka <vijaykhemka@fb.com>\nChange-Id: I9c77c2cd116d0b159d7b1810a2d988f7618f52ea\n",
    "createdOn": 1589418730,
    "lastUpdated": 1619800000,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1589418730,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1589418754,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1591730016,
            "reviewer": {
                "name": "Amithash Prasad",
                "email": "amithash@fb.com",
                "username": "amithash"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1593018778,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1593018849,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1593213424,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(9 comments)"
        },
        {
            "timestamp": 1593213865,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1593213933,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1593214095,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1593214474,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1593214916,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1593460225,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1593461087,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1593461955,
            "reviewer": {
                "name": "Alex Qiu",
                "email": "xqiu@google.com",
                "username": "alex310110"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1593478563,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(8 comments)\n\nOverall, this somewhat goes against the design intent of entity manager, in that you're \nA. Defining your own config file infrastructure\nB. Hardcoding a list of sensors, not treating them as a dynamically changing system (as is the case with FRU devices).\nC. Adding a lot of complexity to configuration files.\nD. Doubling the number of dbus transactions, by adding a round trip for every sensor.\n\nThis proposal is also inventing its own DSL for handling arithmetic, which shows in that there are lots of conditions that the AST doesn't handle.\n\nLooking at what's there, it doesn't really feel like you've answered a lot of the design questions that this document intends that you answer before moving forward.  With that said, by all means, give it a shot."
        },
        {
            "timestamp": 1593530214,
            "reviewer": {
                "name": "Piotr Matuszczak",
                "email": "piotr.matuszczak@intel.com",
                "username": "pmatuszc"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1593569365,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1593653733,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1593654207,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1593731586,
            "reviewer": {
                "name": "Amithash Prasad",
                "email": "amithash@fb.com",
                "username": "amithash"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1593755115,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1593762410,
            "reviewer": {
                "name": "Piotr Matuszczak",
                "email": "piotr.matuszczak@intel.com",
                "username": "pmatuszc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1594066424,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1595878189,
            "reviewer": {
                "name": "Amithash Prasad",
                "email": "amithash@fb.com",
                "username": "amithash"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1596119007,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1596615159,
            "reviewer": {
                "name": "Piotr Matuszczak",
                "email": "piotr.matuszczak@intel.com",
                "username": "pmatuszc"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1604435236,
            "reviewer": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1619799966,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\nThis code is already in place.  Merging design as is."
        },
        {
            "timestamp": 1619799997,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Verified+1 Code-Review+2"
        },
        {
            "timestamp": 1619800000,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 448ac2bd59cfc12223f7446c26b93dc784acf1c2 by Patrick Williams"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
            "parents": [
                "3b77b83d240a38db1f3f9a2450eab9f096bd9875"
            ],
            "ref": "refs/changes/45/32345/1",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1589418730,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemka@fb.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Instead of starting with sensor-correction as the primary use-case, I would go with a pure virtual sensor example airflow which is calculated from the fan speed."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Virtual sensor examples:\n1. Airflow - function of Fan RPM reported in units of cubic-feet per second.\n2. Voltage delta between two ADC inputs. When the actual diff is what which should not cross a threshold.\n3. Power consumption when we have Energy/time.\n4. Tiogapass, inlet sensor skews in a cubic(?) way at low fan speeds. We would want to correct these values and have swampd use the corrected values instead of the raw ones read."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "1. This sensor exists today in dbus-sensors, and has quite a bit of state for handling power state, fans that are dual rotor, and sensor error conditions.  Handling all those states properly in a generic case here would be difficult, if not impossible.\n2. This seems like a specific case that ADCSensor could simply have added to its implementation.  The current ADC sensor takes \"Index\": 0 to define which input to use, \"DiffIndex\": 1 could be added as an optional parameter to support differential mode.  In this way, for the ADCs that actually support differential measurement, ADCSensor can do that in the ADC preamp hardware, instead of relying on software.  In the proposal you've given, you're locked into software only, and you will have unintended noise skew between samples when the readings change rapidly.  Double check with your hardware engineers if back to back samples are clean enough to be compared, and they didn't intend for you to use the differential mode.\n3. You haven't defined any integral operators, or defined how you would time bound them for what you would need that to do power consumption measurements from a current monitor.  With that said, I think that's much better done in code, in the relevant daemon that already knows the sample rate, and can update the value much more accurately.  Also, considering this would likely need to persist somewhere to be accurate between bmc reboots, again, the virtual sensor daemon seems like the wrong place to do doing that.\n4. (trying to remember thermodynamics class from college)  Yep, energy transfer from a flowing liquid is a 3rd order transfer function of the flow rate.  Of all these cases, this seems like the best fit for something like this proposal, but it seems easily solved in code with a declaration of 3 coefficients, as well as sensor names in a config file.  If you did that it would be, better documented (in code), and easier to debug.\n\nFor what it's worth I think adding code to the appropriate place is much easier in the long run (and more efficient)."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I am not trying to make it complex here, the whole idea here is create a new sensor and calculates its value based on  existing sensor and some other parameters. This can be max of multiple sensor along with some coefficient."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": ">> ADCSensor can do that in the ADC preamp hardware, instead of relying on software\nNot if you already have the hardware out in production. I agree it's not perfect, but we never usually have these as ADC inputs. Sometimes we get these sensors values via IPMB and other times through various pmbus means. In fact, one of the use cases have the two voltage sensors coming from a pmbus device."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Vijay,\nI get you're not making this too complex, but my point is you're over simplifying it to the point of it not being useful.  I'm not sure how you'd properly handle error states, or power states on any of these sensors.\n\nAmithash\nI'm not following?  Many ADCs (BMC and non BMC alike) have a built in differential mode, that generally takes 2 adjacent GPIO bank pins, and turns them into a single ADC differential channel.  I'm not recommending you change your hardware, just that you use the ADC the way its intended, rather than relying on the timing of 2 independent samples.\nIf your IC ADCs aren't capable of that mode, it's still valid, as other ADCs might have that mode, so we don't want to duplicate the \"how to do a differential measurement\" code in 2 places.  Also, done in the ADC sensor, in the case where your IC doesn't support it, it can be sure to synchronize the two ADC channel scans to reduce the skid between them."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Ed, This is just basic start to provide a way of recalculating existing sensors values with platform specific rules. In simple way, it can have a scale factor but some platforms have different other aspect as well in getting final values.\n\nAnd I am open for advice to incorporate in this. This is not a final design but to start something and can always be extended with more required feature."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "With respect, we already have \"a way of recalculating existing sensors values with platform specific rules\" in a lot of the entity manager sensor types.  It's just baked into the sensors to avoid the overhead of extra dbus traffic."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Reword: \"will allow to generate new virtual sensors which are defined to be specific manipulation/function of existing sensors.\""
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "eee"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "try a little bit here.  Some references on existing solutions?  A link to the wiki page for how fluid transfer is the cubic of the flow rate?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Let me provide some of facebook code link from github here."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Do we consider chaining virtual sensors? For example physical sensor 1 and 2 generates virtual sensor 1 that we need, and we also need virtual sensor 2 generated from virtual sensor 1 and physical sensor 3. If we don't consider chaining at the moment, can we make a note to architecture the code so that it would be easy to be extended for chaining?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Every sensors would be calculated from it's give path of it's parameter. And I don't see any reason for chaining not work. It should work as expected."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "If the chaining is POR in this design doc, we'd probably better explicitly specify it; or deny it as POR on the other hand, because you may need make sure there's no loop in the chaining, since it's making implementation harder."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I am not sure if I am understanding this completely. et me explain what I understand here, every sensors mentioned in a config file will have a dbus interface with initial values of zero. And this process will start monitoring every parameter provided if they are dbus path. If any sensor make changes in the given path will trigger in calculation of this new sensor so I don't see any chaining issues in implementation. \n\nPlease explain your thought, I might be missing some serious issues here."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "I see. Then we should explicitly specify that it's user's responsibilities not to create a loop , since it's a dead event loop which will consume all the resources? Again, from my other comment because I'm not familiar with dbus monitoring event: Is there any performance impact on the virtual sensor? For example, if there are 3 normal sensors, there are 3 normal updates on dbus per polling cycle. Then if we add a virtual sensor aggregating these 3, will we have 6 updates on dbus per polling cycle?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Sure, I will add this chaining in this design document. Yes as per current design it may have 6 updates. I need to think on this while implementing."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Thanks for detailing this!"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is 2X the dbus transactions on an already overworked bus.  This wont scale at all for systems with lots of sensors."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "other options here as polling at egular interval and that way we may end up having very old data for chained sensors. Given an example if a sensor nested virtual sensors and each individual sensors are polled every 10 second then based on depth of nesting, new sensor may have multiplied delay in current values."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Polling at a regular interval still results in 2X the number of dbus paths, and significantly more dbus traffic.  A sensor that updates every 10 seconds isn't very useful for thresholding or fan control, as it can easily outrun most thermal masses in a common server."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "10 second was an example, I see most of sensors are being polled at 500 milli second and we can define a delay here to add after we see an event of change in values. And I agree that it adds little overhead of having dbus transaction. But I don't see any other way to update these and open for suggestions."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Integrate these functions into the sensor implementations themselves, rather than making a generic, high overhead service."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Units. Thresholds(?) define here or get from entity manager?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Entity manager has a very similar sensor for calculating exit air temp, and does so by simply requiring the sensor names as input.  Are there enough cases to really need a new daemon and justify the dbus overhead that having a separate virtual sensor daemon creates?  I'm imagining a system that I've tuned, with every sensor having some kind of simple offset.  Sensor->virtual->dbus for every single one seems like a lot of extra overhead."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I agree but this is not only handling exit airflow, that was just an example, it simply does airthmatic calculation based on configured function."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I get that, but as I said in another comment, you've oversimplified it.  It would be good if you walked through something that already does this (like the CFM sensor) and make sure that every branch and error in it is covered in your design."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I will start with simple design and add more functionalities to get perfection."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please make sure that you've added non-trivial error handling and performance before this gets merged.  I suspect those will be VERY difficult to retrofit in later."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Remove."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Do we prefer the variables to have dollar sign before them? Do we need to support parentheses and functions like max(), min()? One of my concerns with JSON config file is that we may be trying to implement a script language parser in every daemon reading them. And one of my asks on sensor aggregation is to get the maximum temperature reading among dozens of them to save sensor number, especially for IPMI sensor space. In this design, Do we consider the functionality to hide them in dbus when superseded by a virtual sensor?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "We can certainly support max/min in algorithm and currently we will not be supporting hiding other sensors from dbus as we get values from there only. But it can be extended to support that. As I can understand that we don't want some original sensors in our SDR."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If you're going to define a DSL, you need to do a better job of specifying the syntax rules for it.  What types are allowed?  Only int, or bool as well?  What operators are allowed?  What's the operator precedence?  What precision are the numbers calculated?  Does it support float values?  Strings?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Yes, I have not yet thought of this advanced feature in first phase. Yes we can certainly define syntax and as you know design document can change once you do implementation. Because you have clear picture of data structure."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "Of all the math expression parser I have found, https://github.com/ArashPartow/exprtk seems to have done a really good job of taking care of every use case.\n\nThus, keeping it without the $ sign would be easier since thats pretty much what it expects."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This kind of thing is exactly what the design doc is for.  The difference between a toy parser, and something that actually handles sub expressions and operator precedence is pretty vast.  Knowing that you need one up front will save you time on the backend.  If you disagree, feel free to go ahead, but I believe that these kinds of things will need to be better defined before it hits master.\n\nConsidering binary free space is at an all time low in the BMC these days, I would go with whatever parser compiles to the smallest binary."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I agree with you Ed but to let ball moving we need to start from somewhere and this is not going to be comprehensive and final design but it is very high level and basic design which can get enhanced over a period with requirement and usage."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "\"Val\": \"/xyz/openbmc_project/sensor/temperature/\"Inlet_Temp\""
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Agree. I'd like the virtual sensor not bidden to individual sensors."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I have made this also as a parameter."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What is the behavior if a sensor doesn't exist?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "My understanding is we should not create this virtual sensor if any of given parameter is invalid. I am open for all the suggestions and implementing those."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I was hoping for a better answer.  Please think about it some more.  Proper error handling is a significant portion of most sensor code in openbmc.  If we were simply reading sensors, the code would be much much much simpler."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "If any of sensors doesn't exist then we can log as an error. I agree with you for proper error handling and I will give more thought on this"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What if one of the sensors doesn't exist on purpose?  Like in the case of dual-rotor, or single-rotor fans.  You can't just blindly log an error."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lots of questions still.  How do you plan to hide the \"real\" sensor values from user-facing interfaces?  Have you done any performance benchmarking to show this is possible?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Honestly speaking, haven't thought of hiding existing sensor and there is no code yet so no performance evaluation."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Definitely something you will need to research.  I suspect that \"hiding\" sensors and having a duplicate of most/all sensor is not going to pan out performance wise, but you're free to come to your own conclusions."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 62,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I completely agree if we are accumulating lots of sensor to come up with new sensors then it doesn't make sense to have those sensors visible. And it can hit number of sensors in SDR as well."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "I'm too familiar with stuffs with dbus; does that mean if we drop the 'Path' parameter in the design, either we have to specify which sensor change event to listen to, or we are getting much more sensor update frequency with this virtual sensor due to listening to update events of multiple sensors?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Alex Qiu",
                        "email": "xqiu@google.com",
                        "username": "alex310110"
                    },
                    "message": "Sry, I meant 'not too familiar'..."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "So now path has been covered in parameter itself. Every parameter would be considered as either path or absolute value."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "With respect, you can do better than this.  Off the top of my head:\n1. You're creating an arbitrary expression parser.  It will need to be fuzzed.\n2. You need a test for each possible operator, as well as operator chaining order.\n3. You will need to simulate sensors in error states.\n4. You will need to simulate overflows.\n5. You will need to test that webui, Redfish, rest-dbus, and others don't display the child sensors that make up your \"virtual sensor\".\n6. You will need to performance test it with reasonable numbers of sensors running through it."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I agree Ed, all of these are valid points. It would be much easier for me to address once I have some simple implementation."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Frankly, it frustrates me, as it feels like you didn't even try on this section.  Sure, a simple implementation would be great, but if you don't plan on testing it, then it's going to be a hard sell that it should be merged."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "Ok, I will have to add more to this once I have more data."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 74,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "facc725d14c17c884b4d94f08c5859be0925969a",
            "parents": [
                "31de159f86a42b643858e33eed4840dbdd6dd9f8"
            ],
            "ref": "refs/changes/45/32345/2",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1593213865,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemka@fb.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 86,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "6329310fa9a650ba49d26c4e4aa968d1bc6a52bf",
            "parents": [
                "31de159f86a42b643858e33eed4840dbdd6dd9f8"
            ],
            "ref": "refs/changes/45/32345/3",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1593461087,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemka@fb.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "I think that you should consider readings synchronization. The readings of component sensors are not synchronized, thus such virtual sensor may produce some reading fluctuations, because calculation will be performed on one fresh sample (from recently updated component sensor), and the rest of old samples from component sensors. Of course, I assumed, thad update will be performed at any of component sensors update.\nI assume, that virtual sensor will produce readings with the period of the component sensor with the shortest update period. Is this correct?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is the generic case of the differential ADC issue that I mentioned in another comment.  In some cases, like CFM measurement, it's tolerable (and realistically, needs a low pass filter on the output anyway, to account for fan pressure waves, but I digress).\n\nThis is something that today is easily handled in code, based on physical assumptions in the measurement it's trying to do, and can account for things like sample rate and sample hold delays.  I'm not sure how you would handle that in a daemon like this."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "I agree, I have to think on synchronization of all dependent sensor before calculating this sensor, I am not sure what approach will be best for this synchronization. But my assumption is if all other sensors are updated at the same rate then I would have fresh data if I add small delay.\n\nYes you are right about shortest period."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "CFM sensor handles this by updating on any change, to avoid the possible sample skid, but you would need to sort through the performance implications of this."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 55,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "How the formula will be parsed by the machine to perform calculations?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I had assumed Vijay would use some combination of bison/flex or other parsers.  The exact parser to use feels like an implementation detail."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 55,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "We have some parser code to do this"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "split up params into constants and sensors. That way it is easier to extend with new variable types in the future."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Amithash Prasad",
                        "email": "amithash@fb.com",
                        "username": "amithash"
                    },
                    "message": "constant should be a float: \"P3\": 200.0"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "Have you considered this: https://lists.ozlabs.org/pipermail/openbmc/2020-January/020394.html ?"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think telemetry solves it.  If you look at Vijays examples, he's trying to do:\n1. Transfer functions (offsets, gains, ect) to go from electrical readings to calibrated \"real\" values.\n2. Equations to calculate an differential or integral order above or below what the physical reading is (like going from current, to current/time (watts) or current * voltage * time (Power VA).\n3. Combining a lot of sensors, to form a totally new measurement (ex, combining fan speeds, power usage, and incoming air temp to form a new sensor, exit air temp)"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Vijay Khemka",
                        "email": "vijaykhemkalinux@gmail.com",
                        "username": "vijaykhemka"
                    },
                    "message": "It caters a simple arithmetic calculation based on predefined algorithm."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "I was talking about proposition of user-defined reading types. The assumption of these was to enable creating new measurements out of existing ones using mathematical formulas. The proposition supported simple operations, but there is no reason why it cannot support more complex operations. I think the main difference would be in the configuration. The suer-defined readins were to be configured over the Redfish,"
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As this is an open source project, can't a user simply create the new type in code, rather than creating a new language specification for it?  For closed source applications, a user defined type like that might make a ton of sense."
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Piotr Matuszczak",
                        "email": "piotr.matuszczak@intel.com",
                        "username": "pmatuszc"
                    },
                    "message": "Agree, but still it requires re-compilation of the code. The user-defined readings is a way of defining new synthesized readings in runtime."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "9221327e43b07848ee12905300fffbbcf77fac64",
            "parents": [
                "d09b685f1a5b6a02800d1c23938caa38db55eeaa"
            ],
            "ref": "refs/changes/45/32345/4",
            "uploader": {
                "name": "Vijay Khemka",
                "email": "vijaykhemkalinux@gmail.com",
                "username": "vijaykhemka"
            },
            "createdOn": 1604435236,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemka@fb.com",
                "username": ""
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "448ac2bd59cfc12223f7446c26b93dc784acf1c2",
            "parents": [
                "d101b07606cd243eb7afa1eb26bd7839810abaea"
            ],
            "ref": "refs/changes/45/32345/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1619800000,
            "author": {
                "name": "Vijay Khemka",
                "email": "vijaykhemka@fb.com",
                "username": ""
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/virtual-sensors.md",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        }
    ]
}