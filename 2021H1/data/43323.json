{
    "project": "openbmc/libmctp",
    "branch": "master",
    "id": "I6371ab9e22e2c8ece70a9480f224de3f1f2f184e",
    "number": 43323,
    "subject": "core: Handle MCTP fragment sizes",
    "owner": {
        "name": "Sumanth Bhat",
        "email": "sumanth.bhat@linux.intel.com",
        "username": "sumbhat90"
    },
    "assignee": {
        "name": "Andrew Jeffery",
        "email": "andrew@aj.id.au",
        "username": "amboar"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/libmctp/+/43323",
    "commitMessage": "core: Handle MCTP fragment sizes\n\nMessage assembly can be terminated if case we receive a\nmiddle/end packet of unexpected size. This provision is\nprovided in DSP0236 v1.3.1 section 8.8 incorrect transmission\nunit.\n\nReception of middle packets whose size is not equal to\nstart packet and end packets whose size is not less than\nor equal to the start packet causes message assembly\ntermination.\n\nSigned-off-by: Sumanth Bhat <sumanth.bhat@linux.intel.com>\nChange-Id: I6371ab9e22e2c8ece70a9480f224de3f1f2f184e\n",
    "createdOn": 1621325170,
    "lastUpdated": 1624366144,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1621325170,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1621325309,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Assignee added: Andrew Jeffery <andrew@aj.id.au>"
        },
        {
            "timestamp": 1621388110,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nSumanth: Can you please attach a test case that triggers the bug?"
        },
        {
            "timestamp": 1621512035,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1621512165,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1621512488,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nAdded a test case to verify that the introduced code handles the overflow. Without the introduced code in core, the test will induce segfaults."
        },
        {
            "timestamp": 1621556842,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(9 comments)\n\nThanks for the test case Sumanth. Various queries and minor comments on the test case."
        },
        {
            "timestamp": 1621557260,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1621576889,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1621578422,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1621768658,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1621768820,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1621769196,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1621897815,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(10 comments)\n\nThanks for the work here Sumanth, particularly on the test cases. Generally I think the patch is in good shape but I do have a few comments."
        },
        {
            "timestamp": 1622000474,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 5:\n\n(9 comments)"
        },
        {
            "timestamp": 1622011015,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 6: Commit message was updated."
        },
        {
            "timestamp": 1622019065,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1622019190,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1622025187,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1622052399,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1622079886,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1622083338,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1622089079,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1622095287,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1622137447,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1622137508,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1622158528,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 10: Code-Review+1\n\n(7 comments)\n\nLooks good Sumanth. I have some minor comments, you can choose whether you want to address them.\n\nI'm still waiting to hear from James."
        },
        {
            "timestamp": 1622430875,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1622430928,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1622551482,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 11: Code-Review+1"
        },
        {
            "timestamp": 1623374124,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 11:\n\nMerging bits of an external discussion to here.\n\nI agree with the concept of this change - enforcing consistent fragment sizes - but it's a little obtuse in how it fixes the important issue here: a potential overrun of the allocated message buffer size.\n\nAt present, that overrun is addressed, but this is through a side-effect of enforcing consistent fragment sizes. We should be explicit in that check instead.\n\nThere's also a new check for an unsigned-integer overflow in the calculation for the new message size, but I think that's impossible to hit with a sensible allocator in place. I'd still like to include that check, but it's not strictly related to the fragment size.\n\nI'd prefer to see those checks made explicit (possibly as separate changes), so that we're clear on the actual protections around buffer overruns:\n\n1) a check that the newly-allocated message buffer is large enough for the expanded message\n\n2) a check for the overflow (of message size + new fragment)\n\n3) a check for consistent fragment sizes\n\nI believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections."
        },
        {
            "timestamp": 1623379943,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Change message removed by: Andrew Jeffery"
        },
        {
            "timestamp": 1623379987,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 11:\n\n> I believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections.\n\nSo I think the consequence is it's unnecessary to get a CVE as this patch is just a fix that reduces the need to handle corner cases in packetisation."
        },
        {
            "timestamp": 1623649395,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11:\n\n> Patch Set 11:\n> \n> Merging bits of an external discussion to here.\n> \n> I agree with the concept of this change - enforcing consistent fragment sizes - but it's a little obtuse in how it fixes the important issue here: a potential overrun of the allocated message buffer size.\n> \n> At present, that overrun is addressed, but this is through a side-effect of enforcing consistent fragment sizes. We should be explicit in that check instead.\n> \n> There's also a new check for an unsigned-integer overflow in the calculation for the new message size, but I think that's impossible to hit with a sensible allocator in place. I'd still like to include that check, but it's not strictly related to the fragment size.\n> \n> I'd prefer to see those checks made explicit (possibly as separate changes), so that we're clear on the actual protections around buffer overruns:\n> \n> 1) a check that the newly-allocated message buffer is large enough for the expanded message\n> \n> 2) a check for the overflow (of message size + new fragment)\n> \n> 3) a check for consistent fragment sizes\n> \n> I believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections.\n\nThere is an additional issue with the exhaustion of the context buffers. This is fairly easy to reproduce and can potentially cause segfaults/ denial of MCTP service?"
        },
        {
            "timestamp": 1623803296,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 11:\n\n> > I'd prefer to see those checks made explicit (possibly as separate changes), so that we're clear on the actual protections around buffer overruns:\n> > \n> > 1) a check that the newly-allocated message buffer is large enough for the expanded message\n> > \n> > 2) a check for the overflow (of message size + new fragment)\n> > \n> > 3) a check for consistent fragment sizes\n> > \n> > I believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections.\n> \n> There is an additional issue with the exhaustion of the context buffers. This is fairly easy to reproduce and can potentially cause segfaults/ denial of MCTP service?\n\nI think we should split that out to a separate patch to keep the discussion focused in each case.\n\nAre you happy to do that Sumanth? I guess split the test case out with it."
        },
        {
            "timestamp": 1623822832,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 11:\n\n> Patch Set 11:\n> \n> > > I'd prefer to see those checks made explicit (possibly as separate changes), so that we're clear on the actual protections around buffer overruns:\n> > > \n> > > 1) a check that the newly-allocated message buffer is large enough for the expanded message\n> > > \n> > > 2) a check for the overflow (of message size + new fragment)\n> > > \n> > > 3) a check for consistent fragment sizes\n> > > \n> > > I believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections.\n> > \n> > There is an additional issue with the exhaustion of the context buffers. This is fairly easy to reproduce and can potentially cause segfaults/ denial of MCTP service?\n> \n> I think we should split that out to a separate patch to keep the discussion focused in each case.\n> \n> Are you happy to do that Sumanth? I guess split the test case out with it.\n\nSure, will split this into 4 patchsets and submit.\n\n1) a check that the newly-allocated message buffer is large enough for the expanded message\n \n2) a check for the overflow (of message size + new fragment)\n \n3) a check for consistent fragment sizes\n\n4) a check for successful context buffer allocation"
        },
        {
            "timestamp": 1623827753,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1623829557,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 12:\n\n> Patch Set 11:\n> \n> > Patch Set 11:\n> > \n> > > > I'd prefer to see those checks made explicit (possibly as separate changes), so that we're clear on the actual protections around buffer overruns:\n> > > > \n> > > > 1) a check that the newly-allocated message buffer is large enough for the expanded message\n> > > > \n> > > > 2) a check for the overflow (of message size + new fragment)\n> > > > \n> > > > 3) a check for consistent fragment sizes\n> > > > \n> > > > I believe that the overrun cannot be triggered given the current binding implementations (none will generate a fragment packet large enough to cause an overrun), but we should definitely add these protections.\n> > > \n> > > There is an additional issue with the exhaustion of the context buffers. This is fairly easy to reproduce and can potentially cause segfaults/ denial of MCTP service?\n> > \n> > I think we should split that out to a separate patch to keep the discussion focused in each case.\n> > \n> > Are you happy to do that Sumanth? I guess split the test case out with it.\n> \n> Sure, will split this into 4 patchsets and submit.\n> \n> 1) a check that the newly-allocated message buffer is large enough for the expanded message\n>  \n> 2) a check for the overflow (of message size + new fragment)\n>  \n> 3) a check for consistent fragment sizes\n> \n> 4) a check for successful context buffer allocation\n\nSubmitted the split in a different order, so that non-controversial patches can get in. Also, with the new order, check for newly-allocated message buffer is large enough for the expanded message becomes unnecessary."
        },
        {
            "timestamp": 1623887686,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1623900104,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 12: Code-Review+1\n\n(2 comments)\n\nJust a couple of super minor things; but all looks good to me otherwise."
        },
        {
            "timestamp": 1623901771,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 13: Published edit on patch set 12."
        },
        {
            "timestamp": 1623901796,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1623902461,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 14: New patch set was added with same tree, parent, and commit message as Patch Set 13."
        },
        {
            "timestamp": 1623903111,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Code-Review+1"
        },
        {
            "timestamp": 1623969972,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 14:\n\nCode seems okay to me, but I am not familiar with it."
        },
        {
            "timestamp": 1624254137,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 14: Code-Review+2\n\nLGTM, thanks."
        },
        {
            "timestamp": 1624318539,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Unset private"
        },
        {
            "timestamp": 1624318562,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Ok-To-Test+1"
        },
        {
            "timestamp": 1624318654,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20290/ : FAILURE"
        },
        {
            "timestamp": 1624356493,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1624356639,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1624356811,
            "reviewer": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1624356822,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624356867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20344/ : SUCCESS"
        },
        {
            "timestamp": 1624365098,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1624365113,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624365159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20375/ : FAILURE"
        },
        {
            "timestamp": 1624365918,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1624365933,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624365982,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20378/ : SUCCESS"
        },
        {
            "timestamp": 1624366124,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 19: Code-Review+2"
        },
        {
            "timestamp": 1624366144,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Change has been successfully merged by Andrew Jeffery"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "cdaa2e3d96d0ca1199b5049987735a7689b41f4e",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/1",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1621325170,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "core.c",
                    "line": 229,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We can get rid of MAX_CTX_BUFFER_SIZE by using unsigned overflow:\n\n if ((ctx->buf_size + len) < ctx->buf_size)\n  return -1;"
                },
                {
                    "file": "core.c",
                    "line": 229,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 5,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "eb0d08a4f3979333ac46d1ab42db533b5cfe98fc",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/2",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1621512035,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 138,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "77825a1182457d7aea79fbdde2f601eaa8482b17",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/3",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1621512165,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "CMakeLists.txt",
                    "line": 42,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's make sure to update the autotools build system as well."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Like the define for _GNU_SOURCE, this should be before any other includes. For instance, test-utils.h could feasibly include assert.h."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 15,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This is just SIZE_MAX, part of stdint.h:\n\nhttp://port70.net/~nsz/c/c99/n1256.html#B.17"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 28,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We shouldn't need this to be a global. rx_message() has the data pointer parameter."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Agree, modified the rx_message() to consume the data pointer."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 32,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Why does this need to be global? It could be static in main?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 55,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This function could do with some comments about how it sets up the packet and why this particular setup is necessary for the test case."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 55,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "No doubt we'll want some other test cases for core eventually. I'd prefer we plan ahead slightly by defining a separate function for the test case, then invoking that from main(). The other test sources give an example of what can be done in this regard."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "I realised that and this was done in next change in the series. I will pull back those into this change."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, it just saves a patch with code motion \ud83d\ude0a"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Done"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 108,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Actually, if this can only be provoked by the second packet then we've already failed to adhere to the spec, see: DSP0236 8.8 \"Terminating message assembly/dropped messages\", \"Incorrect transmission unit\"."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 108,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Good point. However, the spec's wording is - implementations \"may\" terminate message assembly if it receives middle packet where the payload size does not match the start packet's size.\n\nThis means:\n1) We could enforce all fragments (except end packet) to have the same size\n2) Or we could support variable size fragments\n\nFrom my point of view, I agree with you. Fragments need to be of same size. Unless there is a usecase to support variable size fragments, we could terminate message assembly on receiving fragments whose size is not equal than the first packet size."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 108,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yep, let's keep things simple and terminate the assembly (1 above)"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 108,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Since fragmentation is handled in this patch, I guess the next change in the series is no longer required and can be abandoned."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 110,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "If this is necessary then aren't we protected already? What happens if we don't call this?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 110,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Nothing happens, max_size is set to default value. I wanted the test to have maximum possible context buffer size so that buffer size is not a constraint to demonstrate the overflow condition. If it is confusing, I can remove it/add a comment."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 110,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we should remove it if it's not contributing to the test scenario."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 110,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Looks like the indentation switches to spaces here, should consistently use tabs."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 112,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Looks like my code editor is doing tricks. Will resolve."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "cbcf0a875cf204535c31ab5983a499077b831c07",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/4",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1621768658,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 433,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 474,
            "sizeDeletions": 1
        },
        {
            "number": 5,
            "revision": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/5",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1621769196,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "IMO we don't need this, it's obvious what you've done from the test cases themselves (which are great). If there weren't automated tests then it might be useful as a point of discussion.\n\nSo I'd prefer we drop it in this case."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Is there any reason to use this calculation and not just the raw size of the transmission unit (i.e. mctp_pktbuf_size(pkt))?"
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "The context buffers copy the data only from the actual mctp payload, thus keeping the fragment_size equal to first packet's mctp payload size."
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't follow what you mean. The MCTP packet header is always present, so it's just a constant addition to the packet length. The total packet size will still vary with the data payload length."
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "To put it another way: you're subtracting sizeof(struct mctp_hdr) here, *and* again in each of the checks. You could just drop the calculation and use mctp_pktbuf_size() directly."
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Agree that MCTP packet header is a constant addition. However, when I think about it, the *real* fragment size is mctp_pktbuf_size() - sizeof(struct mctp_hdr) isn't it? If one wants to build on top of the fragment size, suppose to add something like negotiating transmission size / enforce upper limit on fragment size, they would want to do it on the real payload size, no?"
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Right, but I think we can deal with that complexity later when it's needed rather than now when it's not."
                },
                {
                    "file": "core.c",
                    "line": 556,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Alright. Made the fragment size = mctp_pktbuf_size(pkt)"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 111,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think it would be easier on the eyes to assign this to a variable."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 111,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 116,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As above.\n\nIn fact, this is an issue in several test cases below as well. Please audit the file and fix all instances."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 116,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Done. The mix of spaces and tabs appear to be result of clang formatting."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 359,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Is this necessary given we're tearing down the stack immediately below?\n\nOther test cases should not be relying on the state of the buffer, they should initialise it to their requirements explicitly.\n\nIt would be more obvious if this buffer were not global."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 359,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 365,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The test case should be named after the packet properties it provides, not after the behaviour of libmctp. Hopefully we no longer buffer overflow?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 365,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "We no longer overflow, since the fragment size check itself handles this case."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 379,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Mixed tabs and spaces here again, with some more below as well :)"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 379,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 412,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "At some point we should move this to its own header. And ARRAY_SIZE(). And probably the TEST_CASE() stuff as well. Don't worry about it in this patch though."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 412,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 420,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'd prefer this weren't a global and the test cases set up a buffer themselves. Let's try to be as explicit and self-contained as possible in each case."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 420,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 426,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I expect we want a \\n here?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 426,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Not really required here, the \\n after the end: %s makes sure that we have an empty line between the test cases."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 434,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 475,
            "sizeDeletions": 1
        },
        {
            "number": 6,
            "revision": "d043c8e0c1f4dcb7ad9ca0da05db4c65baaffecd",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/6",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622011015,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 434,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 475,
            "sizeDeletions": 1
        },
        {
            "number": 7,
            "revision": "20a334b8a223d1d6039acf09fafa8dd3358d8841",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/7",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622019065,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 468,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 509,
            "sizeDeletions": 1
        },
        {
            "number": 8,
            "revision": "f9f075fa8d607424b34aee2e6dfbd8b6e7fe9597",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/8",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622025187,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 468,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 509,
            "sizeDeletions": 1
        },
        {
            "number": 9,
            "revision": "f6771aa9c7720999623720b86300d8b5fa0ae595",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/9",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622052399,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 468,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 509,
            "sizeDeletions": 1
        },
        {
            "number": 10,
            "revision": "37c813d54f187ce381f4d14b91c98b7062432655",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/10",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622137447,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tests/test_core.c",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The cast is unnecessary in C; assigning from a void pointer automatically converts to the target type."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 155,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Committing stack crimes, but it's just a test at least.\n\nMaking this static might be an option."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 155,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Yeah, did not worry too much because these will not run on BMC. Made it static."
                },
                {
                    "file": "tests/test_core.c",
                    "line": 190,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "'smaller'?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 229,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "'bigger'?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 268,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "'smaller'?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 268,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 308,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "'invalid'?"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 308,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 383,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "assembly"
                },
                {
                    "file": "tests/test_core.c",
                    "line": 383,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 468,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 510,
            "sizeDeletions": 1
        },
        {
            "number": 11,
            "revision": "8496dac9ca186cf3762aab966c0acdb32ae8455d",
            "parents": [
                "9f5b47a5844023719b84855cb6c554271c95ee4a"
            ],
            "ref": "refs/changes/23/43323/11",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1622430875,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 468,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 510,
            "sizeDeletions": 1
        },
        {
            "number": 12,
            "revision": "b1b914178b2c45a2d60d32606a765f387240d08e",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/12",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1623827753,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "core.c",
                    "line": 577,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "You probably want a space between \"Expected\" and \"less\"."
                },
                {
                    "file": "core.c",
                    "line": 577,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                },
                {
                    "file": "core.c",
                    "line": 609,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Super minor, but no space after the opening bracket."
                },
                {
                    "file": "core.c",
                    "line": 609,
                    "reviewer": {
                        "name": "Sumanth Bhat",
                        "email": "sumanth.bhat@linux.intel.com",
                        "username": "sumbhat90"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 385,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 416,
            "sizeDeletions": 1
        },
        {
            "number": 13,
            "revision": "4a98462542f8cc47fbc43a0ffdadc06d7ee85795",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/13",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1623901771,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 385,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 416,
            "sizeDeletions": 1
        },
        {
            "number": 14,
            "revision": "1251bd18ca5e1b18811796a3d02be3afdedd2fa3",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/14",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1623902461,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 385,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 416,
            "sizeDeletions": 1
        },
        {
            "number": 15,
            "revision": "ed438005e6323fbf63579a17cd1fd104e00eeb04",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/15",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1624356493,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 394,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 425,
            "sizeDeletions": 1
        },
        {
            "number": 16,
            "revision": "4da0b698e2c22a4cd2c81145c567671e67b92fd4",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/16",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1624356639,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 393,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 1
        },
        {
            "number": 17,
            "revision": "09b7d23b92b2026da5c46e2a52323bacc98b157d",
            "parents": [
                "a523bcc102cdabbb7537c63374deaa0f5e42f033"
            ],
            "ref": "refs/changes/23/43323/17",
            "uploader": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "createdOn": 1624356811,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 393,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 1
        },
        {
            "number": 18,
            "revision": "f1cdddce60a84c46f73cb443febeb3412800ea54",
            "parents": [
                "d4103f8f55e1f20869809b61be2567c48c817bb2"
            ],
            "ref": "refs/changes/23/43323/18",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1624365098,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 394,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 425,
            "sizeDeletions": 1
        },
        {
            "number": 19,
            "revision": "69f545f72264931cbdda0b2dd6e11686f836b938",
            "parents": [
                "d4103f8f55e1f20869809b61be2567c48c817bb2"
            ],
            "ref": "refs/changes/23/43323/19",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1624365918,
            "author": {
                "name": "Sumanth Bhat",
                "email": "sumanth.bhat@linux.intel.com",
                "username": "sumbhat90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "core.c",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "tests/test_core.c",
                    "type": "ADDED",
                    "insertions": 400,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 431,
            "sizeDeletions": 1
        }
    ]
}