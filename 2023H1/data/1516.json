{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "topic": "service-watcher",
    "id": "I3e1f2555f6192f33fe4e8bca6a9d3aee817bd832",
    "number": 1516,
    "subject": "sdbusplus: implemented a service watcher",
    "owner": {
        "name": "Christian Andersen",
        "email": "c.andersen@kostal.com",
        "username": "milindur"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/1516",
    "hashtags": [],
    "createdOn": 1481817739,
    "lastUpdated": 1681939743,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1481817739,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1481817970,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Patch Set 1:\n\nThis is just a first idea. What do you think?"
        },
        {
            "timestamp": 1481891098,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1482227389,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1482238419,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1484168599,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1487865656,
            "reviewer": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1493693975,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\nI did merge the move from server to bus namespace.  For this functionality, I've implemented a more generic API for registering and creating watch handlers.  Please take a look at the commit sequence ending with this and see if it fits the needs well enough:\n\nhttps://gerrit.openbmc-project.xyz/4021"
        },
        {
            "timestamp": 1543516755,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\nCan this be abandoned?"
        },
        {
            "timestamp": 1681939743,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nNo feedback from author in a long time."
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "4e5e646d9a7b73ccff49cd00dce78be39c8f48f2",
            "parents": [
                "4bae1753c11f627a5659947127f54a58c62eee50"
            ],
            "ref": "refs/changes/16/1516/1",
            "uploader": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "createdOn": 1481817739,
            "author": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 110,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "59df19e6ebe186375ab1cb32ac551005f5c3e5d8",
            "parents": [
                "4bae1753c11f627a5659947127f54a58c62eee50"
            ],
            "ref": "refs/changes/16/1516/2",
            "uploader": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "createdOn": 1481891098,
            "author": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "b90c218982e9a44041d5609fdee9d4eaa5c537f0",
            "parents": [
                "87b40f9e7ecefd6474fd8b903ec3b2d39118a73b"
            ],
            "ref": "refs/changes/16/1516/3",
            "uploader": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "createdOn": 1482227389,
            "author": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "a82d3165ac7b0595d53f2bb8f0a9e32f8439a65b",
            "parents": [
                "9c987af7853e7d2074d7605e7ad45ab822424453"
            ],
            "ref": "refs/changes/16/1516/4",
            "uploader": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "createdOn": 1482238419,
            "author": {
                "name": "Christian Andersen",
                "email": "c.andersen@kostal.com",
                "username": "milindur"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need to be able to pass a void* context?  I'm thinking a typical use case would be that I have a class that owns a 'watch'.  I want to create a watch instance that [eventually] calls this->foo().\n\nHow can I make this work with std::function with this format?  I think std::mem_fn might be useful here but I don't think that is of type std::function."
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Christian Andersen",
                        "email": "c.andersen@kostal.com",
                        "username": "milindur"
                    },
                    "message": "Registering a member function of the class owning the watch is possible using a lambda, e.g.:\n\nsdbusplus::bus::watch_t watch_{\n    bus,\n    \"my.service.Name\",\n    [this](){ on_connected(); },\n    [this](){ on_disconnected(); }};\n\nBut a void* context might be useful nevertheless to differentiate between multiple watch instances while using the same callback function in every case. Or the callback should provide the matched bus name."
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why not just use string concatenation here?"
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Christian Andersen",
                        "email": "c.andersen@kostal.com",
                        "username": "milindur"
                    },
                    "message": "Ok"
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Minor style point here but we tend to prefer * and & with the type.  \"sd_bus_message* m\".  This is due to recommendation from the CppCoreGuidelines."
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Christian Andersen",
                        "email": "c.andersen@kostal.com",
                        "username": "milindur"
                    },
                    "message": "Ok, I just copied the signature from the C API and forgot to update this."
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can't this object simply have-a match?  I don't see a need for wrapping it in a unique_ptr."
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Christian Andersen",
                        "email": "c.andersen@kostal.com",
                        "username": "milindur"
                    },
                    "message": "Hmm, match has no default constructor and is not copyable. If I move the complete construction of match incl. the match-string into the constructor initializer list, it would be possible to remove the unique_ptr and just use a match_t."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "sdbusplus/bus/watch.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 119,
            "sizeDeletions": 0
        }
    ]
}