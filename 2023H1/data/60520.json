{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I73e12eab8a696d369329776049e3c15bd0a94d04",
    "number": 60520,
    "subject": "Storage: Add Storage.ControllerSecurity interface",
    "owner": {
        "name": "Matt Johnston",
        "email": "matt@codeconstruct.com.au",
        "username": "mkj"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/60520",
    "hashtags": [],
    "createdOn": 1675063540,
    "lastUpdated": 1676265163,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1675063540,
            "reviewer": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1675063561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675063561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1675063822,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59811/ : FAILURE"
        },
        {
            "timestamp": 1675067745,
            "reviewer": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675067781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675067781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1675068567,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59819/ : SUCCESS"
        },
        {
            "timestamp": 1675831442,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1675834603,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1675863195,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1675864679,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1675864987,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1676265163,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "002f0eefa0edebab106eb5eaaa188b39109820b1",
            "parents": [
                "446997ddf259b020b2b347e6f9f05af950d3fcfa"
            ],
            "ref": "refs/changes/20/60520/1",
            "uploader": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "createdOn": 1675063540,
            "author": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/ControllerSecurity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 100,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "9f049e8b5ee792a22e03ef591d6944e6b25e60ea",
            "parents": [
                "46efac8c9c4002e17b83cb60e469f8d59ded4ec7"
            ],
            "ref": "refs/changes/20/60520/2",
            "uploader": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "createdOn": 1675067745,
            "author": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Need more details on this one for sure."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Adding Ed for awareness."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really don't like blackbox protocols living on dbus like this.  We effectively bleed protocol details all over the codebase this way.\n\nWho is intending to use it and for what purpose?  Is there any design we can see?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "This is to allow security protocol communication between the storage device (as a TCG trusted peripheral) and other external management infrastructure (typically: a Redfish client). For this use-case, the BMC itself does not interact with the protocol data, and is just providing a channel between the Redfish API and the  storage interface.\n\n[The \"opacity\" of this data may even be a hard requirement in some situations; the BMC may not have secrets required to perform its own protocol communication with the TPer.]\n\nWe're in the process of standardising, through the SNIA, the Redfish side of this interface, for the management infrastructure to communicate with the TPer, via a similar (protocol, protocol-specific-parameter, binary-data) API.\n\nSo, this interface is intended to be a linear mapping between the NVMe/SCSI/Flash  transport (all of which implement the security protocol channel) and the Redfish interface. At this level, we wouldn't want to be interpreting the protocol data, but this does allow us to have bmcweb interact with the transport-handling process (a dbus-sensors daemon).\n\nWe can certainly propose a design doc if that would help, but this is essentially just an implementation of a standardised interface (or two really: the existing storage transport, and the upcoming Redfish API)."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Are there other examples of opaque interfaces like this over Redfish?  I think we'd want to see DMTF being accepting of this direction and not just SNIA."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "> Are there other examples of opaque interfaces like this over Redfish?\n\nYes, there are a few. For example, the measurement and signed data values in ComponentIntegrity:\n\nhttps://redfish.dmtf.org/schemas/v1/ComponentIntegrity_v1.xml\n\n>  I think we'd want to see DMTF being accepting of this direction and not just SNIA.\n\nYep, that's part of the process. DMTF RF folks have already seen the proposal and have no objections to the binary data aspect. We'll still want formal approval though."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Just to clarify my wording there:\n\n> DMTF RF folks have already seen the proposal and have no objections to the binary data aspect. We'll still want formal approval though.\n\n*some* of the DMTF RF folks have seen the proposal in the SNIA/DMTF collaboration process; I would say we'll still want to wait on their full approval."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "+1 for this landing in standards before we move forward here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/ControllerSecurity/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerSecurity.interface.yaml",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 99,
            "sizeDeletions": 0
        }
    ]
}