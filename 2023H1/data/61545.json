{
    "project": "openbmc/phosphor-pid-control",
    "branch": "master",
    "id": "I13f591fded2563731cb5a8c3a67283b57f99f6bf",
    "number": 61545,
    "subject": "Allow indefinite retries in tryRestartControlLoops()",
    "owner": {
        "name": "Zev Weiss",
        "email": "zev@bewilderbeest.net",
        "username": "zevweiss"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-pid-control/+/61545",
    "hashtags": [],
    "createdOn": 1678266869,
    "lastUpdated": 1681543995,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1678266869,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1678266918,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678266918,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1678266966,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1678266992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678266992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1678266993,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62356/ : ABORTED"
        },
        {
            "timestamp": 1678267348,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62357/ : ABORTED"
        },
        {
            "timestamp": 1678267694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62358/ : SUCCESS"
        },
        {
            "timestamp": 1678267829,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678267842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678267842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1678268194,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62360/ : SUCCESS"
        },
        {
            "timestamp": 1678313131,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1678315577,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1678339544,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1678781599,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1678856693,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1679308742,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1679390106,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1679392472,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1679457114,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679457160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679457160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1679457398,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1679457512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63059/ : SUCCESS"
        },
        {
            "timestamp": 1679558147,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1679960702,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1680055730,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1680126539,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1680126579,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680126579,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1680126997,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63353/ : SUCCESS"
        },
        {
            "timestamp": 1680304148,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1681385256,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1681476073,
            "reviewer": {
                "name": "Josh Lehan",
                "email": "krellan@google.com",
                "username": "Krellan"
            },
            "message": "Patch Set 5: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1681543995,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "44131208e1c38064f67664ee103fb31e3d32812a",
            "parents": [
                "79cde00af75a15e60fa91a367b49421baf8530cf"
            ],
            "ref": "refs/changes/45/61545/1",
            "uploader": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "createdOn": 1678266869,
            "author": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -5
                },
                {
                    "file": "util.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 6
        },
        {
            "number": 2,
            "revision": "5b67852b85e62d4bf7f4e0b28000df126f486f07",
            "parents": [
                "79cde00af75a15e60fa91a367b49421baf8530cf"
            ],
            "ref": "refs/changes/45/61545/2",
            "uploader": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "createdOn": 1678266966,
            "author": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -5
                },
                {
                    "file": "util.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 6
        },
        {
            "number": 3,
            "revision": "ca701847bffd3a80ff59631e8675b697722292de",
            "parents": [
                "79cde00af75a15e60fa91a367b49421baf8530cf"
            ],
            "ref": "refs/changes/45/61545/3",
            "uploader": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "createdOn": 1678267829,
            "author": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Looks reasonable. I like the idea of delaying PID startup indefinitely until all the sensors are ready. I don't think the old limit of 5 retries was there for any reason. It might simplify this code to get rid of the hardcoded number 5 completely.\n\nAlso, are all the calls to tryRestartControlLoops() accounted for? There is one also in dbusconfiguration.cpp file."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> It might simplify this code to get rid of the hardcoded number 5 completely.\n\nYou mean to just allow indefinite retries in any context that function is called from?\n\n> Also, are all the calls to tryRestartControlLoops() accounted for?\n\nI set the default argument in `util.hpp` so that all other call-sites retained their existing behavior (5 retries), since the case I was concerned with was just the initial daemon start-up.  I didn't audit for other callers though; do you think the ones in dbusconfiguration.cpp's `eventHandler()` function and the `sighupHandler()` function should get the same behavioral change?  If so, then yeah I guess we might as well just get rid of the limit entirely..."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Yes. I can't think of a case where exiting out to systemd would be any better than trying again. The code in tryRestartControlLoops() is pretty messy, and it should be cleaned up, instead of being made more complicated in an effort to preserve old behavior that nobody really knows why it was done originally and seemed like a bad idea to me anyway.\n\nAs for the other calls (event handler and SIGHUP handler), yes, they too should try until they succeed. Reason is, if they fail, what happens then? Either the program exits, or it continues in some undefined state, either way is not optimal.\n\nHopefully the fans will be in failsafe mode during this retry period. If they are not, then that would be a bug in the way it was originally designed. In the absence of good sensor information, we need to be in failsafe."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Hmm. One behavior I noticed is that when a PID loop using nonexistent sensors is configured (perhaps accidentally), it becomes very difficult to send busctl commands to phosphor-pid-control, because it is in a restart loop internally. This would be a problem, if the behavior is changed to do this indefinitely. To test it, try using busctl commands to query the zone control objects (FailSafe and Manual), and see if it still works reliably when doing indefinite retries. We might need to refactor something internally, if it doesn't work."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Would this patch change anything in that regard though?  Without this change I'd expect it would spend most of its time in the same state, just punctuated by periodically disappearing from dbus (when it crashses) and reappearing (when systemd restarts it).\n\nI'm not familiar with swampd's dbus interface(s) offhand, but:\n\nWith the patch, with sensors not yet instantiated (prior to host power-on) I see:\n\n```\nroot@spc621d8hm3:~# busctl list | grep swampd \n:1.12                                            190 swampd          root             :1.12         phosphor-pid-control.service                                           -       -\n:1.13                                            190 swampd          root             :1.13         phosphor-pid-control.service                                           -       -\n:1.14                                            190 swampd          root             :1.14         phosphor-pid-control.service                                           -       -\nxyz.openbmc_project.Hwmon.external               190 swampd          root             :1.13         phosphor-pid-control.service                                           -       -\nxyz.openbmc_project.State.FanCtrl                190 swampd          root             :1.12         phosphor-pid-control.service                                           -       -\nroot@spc621d8hm3:~# busctl tree :1.12\n`-/xyz\n  `-/xyz/openbmc_project\n    `-/xyz/openbmc_project/settings\n      `-/xyz/openbmc_project/settings/fanctrl\nroot@spc621d8hm3:~# busctl tree :1.13\nFailed to introspect object / of service :1.13: Unknown object '/'.\nNo objects discovered.\nroot@spc621d8hm3:~# busctl tree :1.14\nFailed to introspect object / of service :1.14: Unknown object '/'.\nNo objects discovered.\nroot@spc621d8hm3:~# busctl introspect :1.12 /xyz/openbmc_project/settings/fanctrl\nNAME                                TYPE      SIGNATURE  RESULT/VALUE  FLAGS\norg.freedesktop.DBus.Introspectable interface -          -             -\n.Introspect                         method    -          s             -\norg.freedesktop.DBus.ObjectManager  interface -          -             -\n.GetManagedObjects                  method    -          a{oa{sa{sv}}} -\n.InterfacesAdded                    signal    oa{sa{sv}} -             -\n.InterfacesRemoved                  signal    oas        -             -\norg.freedesktop.DBus.Peer           interface -          -             -\n.GetMachineId                       method    -          s             -\n.Ping                               method    -          -             -\norg.freedesktop.DBus.Properties     interface -          -             -\n.Get                                method    ss         v             -\n.GetAll                             method    s          a{sv}         -\n.Set                                method    ssv        -             -\n.PropertiesChanged                  signal    sa{sv}as   -             -\n```\n\nIn the same scenario without the patch I see the same thing."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "The bug happens when using the thermal zones under State.FanCtrl service.\n\nHere's an example for \"zone0\" in this case:\n\nbusctl get-property xyz.openbmc_project.State.FanCtrl /xyz/openbmc_project/settings/fanctrl/zone0 xyz.openbmc_project.Control.Mode Manual\n\nThis command will work normally when swampd is stable. This command will fail to work, however, when swampd is still doing these retries."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Got it, thanks for the extra info.\n\nI still don't see how it's an issue with this change though -- if the daemon just repeatedly crashes and restarts (as is the current behavior) it still won't be progressing past the initial retry-loop phase anyway, right?  So it seems like it remaining in that retry loop instead of blowing up and starting over with an entirely new process wouldn't break anything that wasn't already failing anyway..."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "That makes sense. This bug should probably be tracked as a separate issue. Adding your change won't make the bug worse or better, because the behavior will still be the same (it will just retry indefinitely instead of exiting out and letting systemd restart it)."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -5
                },
                {
                    "file": "util.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 6
        },
        {
            "number": 4,
            "revision": "6386e56994a10906b5d0a0f1de52fa2d76d3c0fc",
            "parents": [
                "79cde00af75a15e60fa91a367b49421baf8530cf"
            ],
            "ref": "refs/changes/45/61545/4",
            "uploader": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "createdOn": 1679457114,
            "author": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Alright, patch now updated to incorporate the earlier suggestion to apply the indefinite retry globally (not just on the initial call)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Looks good. One thing is that the variable \"count\" no longer really serves a purpose, since the retries are infinite now. The code could be further simplified by removing this variable entirely, as well as the code that uses it, since it doesn't seem to have a purpose now."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "I thought about removing `count`, but the ramifications on the `if (first && count != 0)` check weren't immediately obvious to me, so I left it as it was.  Granted, looking back at it now I might be even more confused...the body of that `if` block resets it to 1, not 0, so it seems like it would only differentiate between the _very_ first call to `tryRestartControlLoops()` in the entire lifetime of the process and subsequent calls with `first == true`...the actual intent of the code isn't really clear to me.  Do you have any insight here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "It looks like the `count` logic is rather confused. If it had a purpose, it no longer does now. My preference is to remove it entirely, to simplify the behavior of the program."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 24,
            "sizeDeletions": 9
        },
        {
            "number": 5,
            "revision": "5293ec2e5750456f705b6c06dcb7a4a106e4b296",
            "parents": [
                "79cde00af75a15e60fa91a367b49421baf8530cf"
            ],
            "ref": "refs/changes/45/61545/5",
            "uploader": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "createdOn": 1680126539,
            "author": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Good simplification and removal of that obsolete \"count\" variable"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Ping...not sure if Ed does much review on this repo these days, but a +2 to proceed with this would be appreciated."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Josh Lehan",
                        "email": "krellan@google.com",
                        "username": "Krellan"
                    },
                    "message": "Thanks for ping. It's been a while, no objections received."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "main.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -23
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 23
        }
    ]
}