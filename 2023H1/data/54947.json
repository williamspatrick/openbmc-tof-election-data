{
    "project": "openbmc/phosphor-certificate-manager",
    "branch": "master",
    "id": "Ib02bd686c9bfeb6401b269af20856824647f54c5",
    "number": 54947,
    "subject": "Allow for expired certificate",
    "owner": {
        "name": "Lei YU",
        "email": "mine260309@gmail.com",
        "username": "mine260309"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-certificate-manager/+/54947",
    "hashtags": [],
    "createdOn": 1656386082,
    "lastUpdated": 1683638467,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1656386082,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1656386142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656386143,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1656386919,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45997/ : SUCCESS"
        },
        {
            "timestamp": 1656388838,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656389513,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656392319,
            "reviewer": {
                "name": "Jiaqing Zhao",
                "email": "jiaqing.zhao@intel.com",
                "username": "jiaqingz-intel"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656407782,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1656408059,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656412328,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656415446,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656416812,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656422881,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656440681,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656440987,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656449988,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656450814,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656450837,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1656481577,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1658722448,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1658726474,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1663352543,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1663354703,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1664480607,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1664866514,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665558189,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665588361,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665590728,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665658335,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665681238,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665733322,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667461797,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667502798,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667536452,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667834861,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667990881,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668029973,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668054948,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668192886,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668397685,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1668397797,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668397797,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1668397860,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668398492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55323/ : SUCCESS"
        },
        {
            "timestamp": 1668447979,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668489910,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668500836,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1668501079,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1668501132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668501137,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1668501859,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55397/ : SUCCESS"
        },
        {
            "timestamp": 1668539866,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1668539900,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1668754137,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1668806920,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1669206835,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1669206846,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1669206850,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669206850,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1669207530,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/56009/ : SUCCESS"
        },
        {
            "timestamp": 1669229478,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1669230083,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1669265078,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1669667162,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1669668312,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1669721612,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1669721621,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669721622,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1669721705,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1669722316,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/56266/ : SUCCESS"
        },
        {
            "timestamp": 1669750613,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1669751784,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1669784081,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1670306552,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1678383228,
            "reviewer": {
                "name": "Rahul Maheshwari",
                "email": "rahulmaheshwari@in.ibm.com",
                "username": "rahulmah"
            },
            "message": "Removed reviewer Rahul Maheshwari <rahulmaheshwari@in.ibm.com>."
        },
        {
            "timestamp": 1683609223,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1683624870,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683624898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683624898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1683625606,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/65910/ : SUCCESS"
        },
        {
            "timestamp": 1683627980,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1683628543,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1683632298,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1683633757,
            "reviewer": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1683638432,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1683638467,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
            "parents": [
                "78357b0a3c96678c2a8ce6de2e5d493cbc6e3d9b"
            ],
            "ref": "refs/changes/47/54947/1",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1656386082,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Can you provide more details related to this failure. are you referring generic BMC time failure issue or genesis boot path?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "For x86 systems without a RTC battery, the BMC will get such time.\nThis is just an example of how BMC could get a certificate that has expired time.\n\nIn real world, although the self-signed certificate has 10 years valid time, it will expire anyway."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Certificate manager provides infrastructure code to manage  all tyopes of certificates. certificate expiry check is one of the feature enabled here. For any feature disablement need to go through the process , by getting approval from community by sending mail to community . Here you are talking to special use case related to bmcweb consumed certificates. you can meet this requirement by introducing build level flag, ( default check is enabled) here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Yup, ideally certificate manager should reject an expired certificate.\nThe problem is really related to Redfish that it provides the \"ReplaceCertificate\" URI, that is to replace an existing certificate.\n\nIf an existing certificate expires and is rejected by certificate-manager, we won't be able to replace it because it's not on DBus anymore.\n\nI will send an email to the list to discuss this."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Thanks for initiating mail.\nTo fix this issue ,  I think we can look below option, if community agrees \n - Reject certificate upload requests for the expired certificates ( same as current behaviour)\n - During certificate manager startup, allow certificate restore  for all the valid installed certificates in the systems, including expired ones. For expired cerificates Log message and continue certificate installation. \n    This required some code restructure."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?  Right now there is a \"ValidNotAfter\" and \"ValidNotBefore\" but these push a good deal of calculation out into the dbus-client.  Ideally we'd add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "> Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n>  Ideally we'd add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires.\n\nThis is kind of off-topic. And it does not sounds good:\n1. certificate-manager will have to \"monitor\" the date and update the property at the time when it expires, e.g. if user change the time back and forth, the property will have to be updated accordingly.\n2. If a certificate expires, the BMC should not update it automatically unless it's the self-signed. If user uploads a valid certificate and it expires, it is not expected to be replaced automatically."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> This is kind of off-topic.\n\nI don't understand why you think it is off-topic.  Previous implementation didn't expose expired certificates.  Now you are proposing that we do.  We should make it easy for clients.\n\n> And it does not sounds good:\n\nDoing things right isn't always easy."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Yup, ideally certificate manager should reject an expired certificate.\n\nI don't really think we should impose that.  If a user wants to set an expired certificate, it's considerably less friction to just allow them to set it.  I say this because there might be test harnesses in the future that are testing for year 2038 compatibility, so if we ever set the date far in the future, should certs fail to load?  I think it's easier if we just do what the user asked for, regardless of if it's \"wrong\", otherwise the bmc has to speculate about what the user intended.\n\n> Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\nWho would use that property if it existed?  I agree with Lei here that it turns certificate manager from being entirely event driven (only reacts on dbus messages), to needing some kind of polling task to see if the cert has expired.  Maybe it's not that difficult to implement, but I don't really understand who would use that information over what's available."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": ">> Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n> Who would use that property if it existed?\n\nTo be honest, I don't know.  Like I said, prior to this proposal we didn't expose expired certificates so there was an implication that all Certificate objects were non-expired.  Who uses the Certificate objects?\n\nThe Certificate objects already expose information about their expiration.  Why is that?  If it was just because it was data that was already in the X509 then maybe there aren't any users of it.  If there are users of it, or there now needs to be, punting the calculation of expiration into the clients seems pretty lame.\n\nMaybe you could make an argument that you don't need a property-changed on an expired property and whenever someone calls get-property on it you use the SSL helpers to determine if it is expired in the get-property handler (ie. check for X509_V_ERR_CERT_HAS_EXPIRED)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> >> Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n> > Who would use that property if it existed?\n> \n> To be honest, I don't know.  Like I said, prior to this proposal we didn't expose expired certificates so there was an implication that all Certificate objects were non-expired.  Who uses the Certificate objects?\n\nCertificateService is the one user I know of, and we don't care if the cert is expired, we just publish the dates of validity.\n\n> \n> The Certificate objects already expose information about their expiration.  Why is that?  If it was just because it was data that was already in the X509 then maybe there aren't any users of it.\n>  If there are users of it, or there now needs to be, punting the calculation of expiration into the clients seems pretty lame.\n\n\nbmcweb publishes the expiration information because it's a field in Redfish.  Redfish publishes it because in theory someone might want to check/alarm/report the date of validity to a user, but the bmc not thinking the cert is valid doesn't really matter most of the time (the BMC RTC could be unset or wrong);  It's the users instance that cares, and that's why the onus is put on the off-the-bmc clients to calculate the expiration against the current time.  If they want to compare against the bmc time, in theory they could, but they should be comparing against their own time for a client-facing cert, because that's what the connecting client TLS sockets will compare.\n\n> \n> Maybe you could make an argument that you don't need a property-changed on an expired property and whenever someone calls get-property on it you use the SSL helpers to determine if it is expired in the get-property handler (ie. check for X509_V_ERR_CERT_HAS_EXPIRED).\n\nI'm still not sure what the use case is.  Is there something inside the bmc that cares if the cert is expired?  If there isn't, I'd say just omit it for the time being.  If there is a use case, I'm not against adding it."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This seems like a bug. Instead of exposing expired certificates. Does calling DeleteAll on the manager and then Install work?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Well, yup it could be fixed by calling cert-manager's install, but this introduces more complex logic to query/remove/install certificates.\nPreviously, it simply \"replace\" an existing one.\n\nAnd it still does not fix the Redfish's ReplaceCertificate issue, which assumes that there is an existing certificate to be replaced."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jiaqing Zhao",
                        "email": "jiaqing.zhao@intel.com",
                        "username": "jiaqingz-intel"
                    },
                    "message": "Changing the code here will also allow uploading expired certificate I think, though it will not bring problems (https traffic is still encrypted with an expired cert)..."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A couple ideas here (no strong opinions)\n1. Now that we support certificate expirations past 2038 (thank you Nan) can we just set the validity to for example, 100 years, and then this problem goes away?\n\n2. Could the bmc default to a \"time\" of something with epoch starting at the date the firmware was built?\n\n\nAs written, I'm probably ok with this patch, we should probably allow setting a certificate that has date issues for compatibility, but it seems like something there's better ways to solve in the general case."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What are next steps on this?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Good question...\n\nThere are several ideas:\n\n1. @Patrick wants an \"ExpiredBefore\" property\n2. @Jayanth wants to reject installing expired certs, but keep allowing existing exipired certs.\n3. @Jiaqing seems agree with this patch for allowing expired certs.\n4. @Nan wants to fix a bug related to installing certificate in bmcweb.\n\nFor 1, I do not see a use case of the property, and we can NOT treat the certs on DBus valid, because a certificate will expire anyway when the time reaches the expire date, and currently we don't have such timer callback to remove the DBus objects.\nFor 2, it may be a good idea, but the behavior become inconsistent for uploaded and existing certificates. It we agree to allow existing expired certificates, why can't a user upload an expired one?\nFor 3. it agrees with this patch.\nFor 4, it is more or less related to bmcweb, or at least it requires both changes in bmcweb and cert-manager, which needs further discussion and it is kinds of related to the Redfish API about `CertificateService.ReplaceCertificate`.\n\nCurrently:\n* We hit a bug related to the current behavior and this patch does fix the bug.\n* The expired certificate does NOT make BMC less secure, it's more or less the same.\nSo I think the patch could be merged.\nThe side effect is that the DBus object will be created for the expired certificate when BMC reboots and could be replaced, which is better than no DBus objects at all and there is no way to replace it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Phosphor-certificate-manager Maintainers, can you reply to the above please?\n\nFWIW, The quick description of my position is that the BMC should allow installing any certificate without checking date validity.  I don't think we need a property that exposes the time, but I'm not against it if there's a use case.\n\nI agree with Lei, as-written, I think this patchset can merge."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I thought the main concern is no. 2?\n\nInstalling an expired cert is fine IMO. Clients should do whatever check they want."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "@Jayanth?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "MARRI DEVENDER RAO",
                        "email": "devenrao@in.ibm.com",
                        "username": "devenrao"
                    },
                    "message": "jayanth is on vacation, will ask him to take a look when he is back"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Since we are debating the certificate upload policy. I think we can use build or settings level policy to control this. We can keep the current behavior as default and user can change the policy as required."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Installing an expired cert is fine IMO. Clients should do whatever check they want.\n\nShould we have a state in the dbus object that the certificate is expired?  Do we really want to have each application to have their own policy on what to do with \"bad\" certificates?  It seems like most of them would want to quickly filter out certificates they know are not going to work."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not quite following what the filtering exercise would look like in practice.  An HTTPS identity certificate might be \"bad\" because the BMC clock is incorrect, that doesn't mean it's bad to all clients, so to some extent, yeah, I think it needs to be an application specific policy, and in some cases, varied in behavior.  If a cert is invalid, bmcweb for example, still needs to use it, otherwise it would be a DOS vector.  For root certificates, clients might choose to ignore them, but that's based in OpenSSL code.\n\nI can't really think of a case where a client would want to loop over certificates, and check an expired flag, rather than just loading the cert into an OpenSSL context and checking the error code."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I can't really think of a case where a client would want to loop over certificates, and check an expired flag, rather than just loading the cert into an OpenSSL context and checking the error code.\n\nAlright.  I'm just concerned with us having N different implementations with slightly different policies when we could make it common in cert-manager.  If everyone here doesn't think that is necessary, I'm fine with it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> We can keep the current behavior as default and user can change the policy as required.\n\nDoes anyone need the current behavior?   The only thing this is doing is making it more accepting of certificates, not less, and I haven't seen anyone that absolutely needs the old behavior.  Is there someone you had in mind that needed the old behavior?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "IBM need this support @joseph can you please confirm."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "@Lei Yu. Looking at your use case the issue is triggered only on Certificate restore path right? \nIf the answer is yes, I think we can modify code to allow expired certificates in the the restore path only stop in user upload? \nChanges are minimal and reference code is available here https://gerrit.openbmc.org/c/openbmc/phosphor-certificate-manager/+/57417/6/certificate.cpp.\n\nIn summary we are going to keep same behavior user certificate upload path, Rejecting expired certificates."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> In summary we are going to keep same behavior user certificate upload path, Rejecting expired certificates.\n\nCan you justify this a bit more.  I don't see any rationale documented on why the current behavior is better from your perspective, but I could be missing it in the chain here.\n\nShould we make this a meson-option if IBM wants to continue rejecting expired certificates but nobody else is needing to?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "> > In summary we are going to keep same behavior user certificate upload path, Rejecting expired certificates.\n> \n> Can you justify this a bit more.  I don't see any rationale documented on why the current behavior is better from your perspective, but I could be missing it in the chain here.\n> \nBased on the commit message problem description, The issue is triggered , when certificate manager service restarts. Existing flow uses common code for creating certificate d-bus objects, which includes the certificate validation.  The proposed approach allows the existing installed certificates and restrict the  new user initiated certificate installation. I am trying to understand the use case related  installing expired certificates in the system. If there is valid use case we can go with initaly proposal using meson option discussed initially . \n\n> Should we make this a meson-option if IBM wants to continue rejecting expired certificates but nobody else is needing to?\nI was initially proposing same in the other thread initially."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "@LeiYU, are you able to make this a meson option that is enabled by default and contribute the recipe changes to turn it off on IBM systems?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "OK, this could be done.\nSo the default behavior will be \"disallow\" expired certs, and the new meson option will allow.\n\nWill update the code later."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> So the default behavior will be \"disallow\" expired certs, and the new meson option will allow.\n\nI would prefer the other direction become the default, unless someone has a strong security rationale why not.  It seems that most companies involved in this discussion would prefer it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "+1"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  We should allow expired certs by default."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Updated PS2 to add the option.\nBe noted that when the revision bump occurs, the bb recipe is better to be updated to add a package config for this option."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 5
        },
        {
            "number": 2,
            "revision": "dbc09bf20e3d3bbc4b9fcfd14c71dea53a5a77fb",
            "parents": [
                "6f45ce04b88117364e7452fae92565993a70df02"
            ],
            "ref": "refs/changes/47/54947/2",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1668397685,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Enable expired certificate upload , will be more approproate here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "This patch handles the existing certificate as well\uff0c see commit message for the detailed case."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "If we really want to use preprocessor, I would suggest we do something like this\n\n```\n#ifdef ALLOW_EXPIRED\nbool hasError = xxx\n#elif\nbool hasError = xxx\n#endif\n\nif (hasError)\n{\n  \n}\n```\n\nThis is more readable than changing the boolean expression in `if` statement."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Done.\n\nUse `bool isOK` so that it is more readable than `hasError`."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 193,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
            "parents": [
                "6f45ce04b88117364e7452fae92565993a70df02"
            ],
            "ref": "refs/changes/47/54947/3",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1668501079,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we use a constexpr instead of #define?"
                },
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "We could, but this is more like \"configure\" concept in autotools, and this is really a configure option, so I prefer this way."
                },
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'll let the maintainer decide, but I don't agree with this argument.  We've graduated from autotools and C.  Why keep acting like we're using them?"
                },
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "MARRI DEVENDER RAO",
                        "email": "devenrao@in.ibm.com",
                        "username": "devenrao"
                    },
                    "message": "Please correct me, if we use constexpr I assume there is no way to set this value at build time? unless we modify the code."
                },
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See line 23.  We already create with \"@authorities_list_name@\" into a constexpr.  There is no reason you can't initialize a boolean the same way."
                },
                {
                    "file": "config.h.in",
                    "line": 25,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Updated"
                },
                {
                    "file": "meson_options.txt",
                    "line": 33,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need something to default: enabled?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 33,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Done.\n\nIt's not disabled by default, so the `not get_option('allow-expired').disabled()` in meson.build is true by default.\n\nBut yup let's make it specific to enable this option."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd much prefer constexpr-if here instead of #define.  Let's use C++."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "The same as in config.h.in, I would prefer making it more \"configure\" way."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "The \"build time configuration\" of pkg-config / meson config can still be met by telling meson to adjust the initializer based on the selected config variable.\n\nThis would allow the code to read as just conditionals vs the #if{,n}def that is left aligned in this block.\n\n(This readability is also behind the Linux if(defined(VAR)) macros)"
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -3
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 59,
            "sizeDeletions": 3
        },
        {
            "number": 4,
            "revision": "6204e995d825b652e8f461b6cfab67a6426216f9",
            "parents": [
                "6f45ce04b88117364e7452fae92565993a70df02"
            ],
            "ref": "refs/changes/47/54947/4",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1669206835,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -3
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 60,
            "sizeDeletions": 3
        },
        {
            "number": 5,
            "revision": "0a60fcd55b29df715d7902e0649d62e4bcfe5b1c",
            "parents": [
                "6f45ce04b88117364e7452fae92565993a70df02"
            ],
            "ref": "refs/changes/47/54947/5",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1669721612,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "@Lei Yu any update?"
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 203,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "as allowExpired is already constexpr it doesn't need to be cast at usage and then these two ifs could be combined into one\n\n\nbut I'll let others speak if that's a merge gate."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 203,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "+1"
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 203,
                    "reviewer": {
                        "name": "MARRI DEVENDER RAO",
                        "email": "devenrao@in.ibm.com",
                        "username": "devenrao"
                    },
                    "message": "Please address Milton's review comment, looks valid."
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 203,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "mine260309@gmail.com",
                        "username": "mine260309"
                    },
                    "message": "Done"
                },
                {
                    "file": "x509_utils.cpp",
                    "line": 208,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can this logic be simplified?\n\nbool isExpired = errCode == X509_V_ERR_CERT_HAS_EXPIRED;\nbool expiredIsFatal = isExpired && !allowExpired;\n\nif (expiredIsFatal){\n    log<level::ERR>(\"Expired certificate \");\n    elog<InvalidCertificate>(Reason(\"Expired Certificate\"));\n}\n\nRest of the code remains unchanged.\n\n\nI'm not super worried about this level of code-golf, but something to consider if other changes are required anyway."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "config.h.in",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -6
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 69,
            "sizeDeletions": 6
        },
        {
            "number": 6,
            "revision": "3c4781446a43a875d6bc0eeb87a9ee5ba0709a01",
            "parents": [
                "75111af1e550ba091055bcc149fa12d97231567b"
            ],
            "ref": "refs/changes/47/54947/6",
            "uploader": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "createdOn": 1683624870,
            "author": {
                "name": "Lei YU",
                "email": "mine260309@gmail.com",
                "username": "mine260309"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "config.h.in",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "x509_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -3
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 60,
            "sizeDeletions": 3
        }
    ]
}