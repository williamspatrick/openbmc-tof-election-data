{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I57bff1ee2dbf4d542c16cd4206cb32ff01db8c57",
    "number": 39756,
    "subject": "Fix authorization rules",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/39756",
    "hashtags": [],
    "createdOn": 1610748653,
    "lastUpdated": 1679676165,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1610748653,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1610748672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610749117,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/10988/ : FAILURE"
        },
        {
            "timestamp": 1610749517,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1610749540,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610750672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/10995/ : SUCCESS"
        },
        {
            "timestamp": 1610753060,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased."
        },
        {
            "timestamp": 1610753085,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1610754291,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/11006/ : SUCCESS"
        },
        {
            "timestamp": 1613586112,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased."
        },
        {
            "timestamp": 1613586127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613587037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12561/ : SUCCESS"
        },
        {
            "timestamp": 1613588323,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1613599346,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 4:\n\n(2 comments)\n\nThe change seems mostly okay, with 2 caveats.  The nbd code seems okay, but I am not familiar with that interface.  The expired password function regressed: see my comments in the code.\n\nIt is technically difficult to track changes in the \"password expired\" state in the same way user role changes are tracked [via sessions.hpp class UserRoleMap].  (Why?  Password expiration does not generate an event and goes unnoticed until someone tries to login, and likewise there are no good hooks for when a password becomes unexpired.)\n\nCan we add code to routing.hpp like this?:\n  if (session && session->isConfigureSelfOnly) {\n    ...refresh UserPasswordExpired from D-Bus GetUserInfo...\n  }\nThis way only slows down and gums up the BMCWeb experience for users who have an expired password, and their experience is pretty shabby already.  The advantage of adding this check is it allows the WebUI application \"you must change your password\" dialog box to continue working as-is."
        },
        {
            "timestamp": 1613599852,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1613618295,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> (2 comments)\n> \n> The change seems mostly okay, with 2 caveats.  The nbd code seems okay, but I am not familiar with that interface.  The expired password function regressed: see my comments in the code.\n> \n> It is technically difficult to track changes in the \"password expired\" state in the same way user role changes are tracked [via sessions.hpp class UserRoleMap].  (Why?  Password expiration does not generate an event and goes unnoticed until someone tries to login, and likewise there are no good hooks for when a password becomes unexpired.)\n\nWhy doesn't password expiration generate an event?  That seems like a phosphor-user-manager bug in the dbus API for the feature.  I would expect users with expired passwords to have a dbus property that we can track.\n\n> \n> Can we add code to routing.hpp like this?:\n>   if (session && session->isConfigureSelfOnly) {\n>     ...refresh UserPasswordExpired from D-Bus GetUserInfo...\n>   }\n> This way only slows down and gums up the BMCWeb experience for users who have an expired password, and their experience is pretty shabby already.  The advantage of adding this check is it allows the WebUI application \"you must change your password\" dialog box to continue working as-is.\n\nI don't have problems adding that code, but I don't think it will help?"
        },
        {
            "timestamp": 1613683135,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 4:\n\n> > It is technically difficult to track changes in the \"password expired\" state in the same way user role changes are tracked [via sessions.hpp class UserRoleMap].  (Why?  Password expiration does not generate an event and goes unnoticed until someone tries to login, and likewise there are no good hooks for when a password becomes unexpired.)\n> \n> Why doesn't password expiration generate an event?  That seems like a phosphor-user-manager bug in the dbus API for the feature.  I would expect users with expired passwords to have a dbus property that we can track.\n\nExplanation: Although reading the D-Bus User.Attributes [1] UserPasswordExpired property always returns the correct status, Linux does not have reliable mechanism to learn when a local user account password expires or becomes unexpired.  As a consequence, phosphor-user-manager does not generate events for UserPasswordExpired property changes.  Should this be written up as a bug or limitation in phosphor-user-manager? \n\n[1]: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/User/Attributes.interface.yaml\n\nDeep dive: For example, this property can be affected by:\n - commands such as `chage` options -d or -M which determine the password expiration date in /etc/shadow, and\n - uses of pam_chauthtok() via commands like `passwd, use of SSH password change dialog, or POST /redfish/v1/AccountService/Accounts/USER \"Password:NEWPASSWORD\" which update the password change date fields in /etc/shadow.\nAs you can plainly see, there is no\n\nI'm not aware of any standard Linux mechanism which attempts to"
        },
        {
            "timestamp": 1613683442,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 4:\n\n(oops, I fat-fingered the send button?)\nLinux /etc/shadow files do not have a \"password is expired/unexpired\" property, but instead this must be derived from information in the /etc/shadow file.  Changes to that file come from things that happen outside of phosphor-user-manager.\n\nI suppose phosphor-user-manager could watch the /etc/shadow file, re-read it when it changes, and announce \"password expired\" changes.  But that would be more complexity."
        },
        {
            "timestamp": 1613688335,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> > > It is technically difficult to track changes in the \"password expired\" state in the same way user role changes are tracked [via sessions.hpp class UserRoleMap].  (Why?  Password expiration does not generate an event and goes unnoticed until someone tries to login, and likewise there are no good hooks for when a password becomes unexpired.)\n> > \n> > Why doesn't password expiration generate an event?  That seems like a phosphor-user-manager bug in the dbus API for the feature.  I would expect users with expired passwords to have a dbus property that we can track.\n> \n> Explanation: Although reading the D-Bus User.Attributes [1] UserPasswordExpired property always returns the correct status, Linux does not have reliable mechanism to learn when a local user account password expires or becomes unexpired.\n\nI'm not following that statement.  inotify is a thing, and even if you couldn't do that, polling on some large interval (a minute?) seems perfectly viable, and keeps the user logic in phosphor-user-manager where it belongs.\n\n>  As a consequence, phosphor-user-manager does not generate events for UserPasswordExpired property changes.  Should this be written up as a bug or limitation in phosphor-user-manager? \n\nyes.  This is a bug that needs fixed.  PropertiesChanged events are important to avoid having to do stuff like making a dbus call for every request, including requests that don't need dbus at all.\n\n> \n> [1]: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/User/Attributes.interface.yaml\n> \n> Deep dive: For example, this property can be affected by:\n>  - commands such as `chage` options -d or -M which determine the password expiration date in /etc/shadow, and\n\nThese commands would be changed by a command being issued, which could easily signal an update.  with that said, inotify really seems like the best option, as it can even cover the case of an SSH user editing the file by hand.\n\n>  - uses of pam_chauthtok() via commands like `passwd, use of SSH password change dialog, or POST /redfish/v1/AccountService/Accounts/USER \"Password:NEWPASSWORD\" which update the password change date fields in /etc/shadow.\n> As you can plainly see, there is no\n> \n> I'm not aware of any standard Linux mechanism which attempts to\n\nWith respect, I can't plainly see.  Eventing on file changes in linux is well trodden territory.\n\nhttps://man7.org/linux/man-pages/man7/inotify.7.html"
        },
        {
            "timestamp": 1613688514,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n> Patch Set 4:\n> \n> (oops, I fat-fingered the send button?)\n> Linux /etc/shadow files do not have a \"password is expired/unexpired\" property, but instead this must be derived from information in the /etc/shadow file.  Changes to that file come from things that happen outside of phosphor-user-manager.\n> \n> I suppose phosphor-user-manager could watch the /etc/shadow file, re-read it when it changes, and announce \"password expired\" changes.  But that would be more complexity.\n\nI would argue it's less complexity, as it makes the dbus interfaces correct, gives all clients the ability to signal changes the same way they'd signal anything else.  It would also mean that bmcweb isn't doing a dbus call per-request.\n\nOut of curiosity, have you also put in code to invalidate SSH sessions, ipmi sessions, KVM sessions, and SOL sessions in a similar way?  I suspect not (I'll be honest, I haven't looked) but by the time you added all the code to all those cases, I suspect it would be much less complex to just have the property to invalidate with a match expression."
        },
        {
            "timestamp": 1613753749,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 5: Patch Set 4 was rebased."
        },
        {
            "timestamp": 1613753763,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1613754664,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/12696/ : SUCCESS"
        },
        {
            "timestamp": 1613757897,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 5:\n\n> > Explanation: Although reading the D-Bus User.Attributes [1] UserPasswordExpired property always returns the correct status, Linux does not have reliable mechanism to learn when a local user account password expires or becomes unexpired.\n> I'm not following that statement.  inotify is a thing, and even if you couldn't do that, polling on some large interval (a minute?) seems perfectly viable, and keeps the user logic in phosphor-user-manager where it belongs.\n...snip...\n> yes.  This is a bug that needs fixed.  PropertiesChanged events are important to avoid having to do stuff like making a dbus call for every request, including requests that don't need dbus at all.\n...snip...\n> These commands would be changed by a command being issued, which could easily signal an update.  with that said, inotify really seems like the best option, as it can even cover the case of an SSH user editing the file by hand.\n\nAgreed.  I wrote https://github.com/openbmc/phosphor-user-manager/issues/9 to adddress this.\nTo make this work, BMCWeb include/sessions.hpp UserRoleMap.UserPropertiesChanged() would also have to extract the UserPasswordExpired D-Bus property (and use it similar to the user role).  Could this something that could be added to this commit?  Doing so would fully resolve my concern.\n\n[\"As you can plainly see...\" is a Dr. Seuss reference.  I had not completed typing when my fat fingers accidentally pushed the send button.  Sorry about that.]"
        },
        {
            "timestamp": 1613758314,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 5:\n\n> Out of curiosity, have you also put in code to invalidate SSH sessions, ipmi sessions, KVM sessions, and SOL sessions in a similar way?  I suspect not (I'll be honest, I haven't looked) but by the time you added all the code to all those cases, I suspect it would be much less complex to just have the property to invalidate with a match expression.\n\nI have not look at interfaces other than BMCWeb.  I don't even know if they are supposed to terminate when the password expires.  And given that BMCWeb is the premiere interface, I am focused on ensuring its behavior is correct."
        },
        {
            "timestamp": 1613758410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > > Explanation: Although reading the D-Bus User.Attributes [1] UserPasswordExpired property always returns the correct status, Linux does not have reliable mechanism to learn when a local user account password expires or becomes unexpired.\n> > I'm not following that statement.  inotify is a thing, and even if you couldn't do that, polling on some large interval (a minute?) seems perfectly viable, and keeps the user logic in phosphor-user-manager where it belongs.\n> ...snip...\n> > yes.  This is a bug that needs fixed.  PropertiesChanged events are important to avoid having to do stuff like making a dbus call for every request, including requests that don't need dbus at all.\n> ...snip...\n> > These commands would be changed by a command being issued, which could easily signal an update.  with that said, inotify really seems like the best option, as it can even cover the case of an SSH user editing the file by hand.\n> \n> Agreed.  I wrote https://github.com/openbmc/phosphor-user-manager/issues/9 to adddress this.\n> To make this work, BMCWeb include/sessions.hpp UserRoleMap.UserPropertiesChanged() would also have to extract the UserPasswordExpired D-Bus property (and use it similar to the user role).  Could this something that could be added to this commit?  Doing so would fully resolve my concern.\n\nYep, I can get that done.\n\n> \n> [\"As you can plainly see...\" is a Dr. Seuss reference.  I had not completed typing when my fat fingers accidentally pushed the send button.  Sorry about that.]\n\nOne fish two fish Redfish blue fish."
        },
        {
            "timestamp": 1613758827,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> > Out of curiosity, have you also put in code to invalidate SSH sessions, ipmi sessions, KVM sessions, and SOL sessions in a similar way?  I suspect not (I'll be honest, I haven't looked) but by the time you added all the code to all those cases, I suspect it would be much less complex to just have the property to invalidate with a match expression.\n> \n> I have not look at interfaces other than BMCWeb.\n\nKVM and SOL are part of bmcweb, just FYI.  If your requirement is that sessions terminate when a password expires, then those two interfaces don't meet your requirements, and really can't without user manager publishing a propertieschanged event on changes.  To do it properly, someone would need to first implement \nhttps://github.com/openbmc/bmcweb/issues/185\nTo make the session stores accessible to other route handlers in a sane way, then we could build a match expression that loops through and closes connections when the expires thing fires.\n\n>  I don't even know if they are supposed to terminate when the password expires.\n\nIMO, they should have the same behavior as redfish sessions, because they're effectively the same level of access.\n\n>  And given that BMCWeb is the premiere interface, I am focused on ensuring its behavior is correct.\n\nCool, mostly just pointing out that if we put all the complexity in bmcweb, it's going to need to be rewritten/refactored if you wanted to the same thing in IPMI.  My new goal is to make bmcweb as \"dumb\" as possible.  In a perfect world, we'd rely on dbus for all authorization, pam sessions for session management, and have no embedded logic specific to bmcweb ourselves."
        },
        {
            "timestamp": 1614010290,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614011164,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614050508,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614050666,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614050842,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614175491,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614189688,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614202996,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 5:\n\nI created https://github.com/openbmc/phosphor-user-manager/issues/9 to enhance phosphor-user-manager to use inotify to learn about /etc/shadow changes and send appropriate D-Bus PropertiesChanged signals."
        },
        {
            "timestamp": 1614263388,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614267692,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614650439,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 5:\n\n(2 comments)\n\nWould like Joseph or Ratan to sign off on this"
        },
        {
            "timestamp": 1614651410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1614656118,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1616076116,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 5:\n\nPing.\nI would be happy with this commit after the following item from the Feb 19 comment was applied:\n- include/sessions.hpp UserRoleMap.UserPropertiesChanged() would also have to extract the UserPasswordExpired D-Bus property\n\nAs a separate item I would work on the following and get it work nicely with BMCWeb:\n- https://github.com/openbmc/phosphor-user-manager/issues/9"
        },
        {
            "timestamp": 1616091673,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5:\n> \n> Ping.\n> I would be happy with this commit after the following item from the Feb 19 comment was applied:\n> - include/sessions.hpp UserRoleMap.UserPropertiesChanged() would also have to extract the UserPasswordExpired D-Bus property\n> \n> As a separate item I would work on the following and get it work nicely with BMCWeb:\n> - https://github.com/openbmc/phosphor-user-manager/issues/9\n\nI'm circling back around to this.  Been working on other stuff.\n\nIf this is a priority for you, please feel free to push new patchsets to this review.  I will check back in here when I'm back to getting this working."
        },
        {
            "timestamp": 1616149358,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 5:\n\n(13 comments)"
        },
        {
            "timestamp": 1616169662,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(13 comments)"
        },
        {
            "timestamp": 1616404358,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)\n\n> Patch Set 5:\n> \n> (1 comment)\n> \n> > Patch Set 5:\n> > \n> > Ping.\n> > I would be happy with this commit after the following item from the Feb 19 comment was applied:\n> > - include/sessions.hpp UserRoleMap.UserPropertiesChanged() would also have to extract the UserPasswordExpired D-Bus property\n> > \n> > As a separate item I would work on the following and get it work nicely with BMCWeb:\n> > - https://github.com/openbmc/phosphor-user-manager/issues/9\n> \n> I'm circling back around to this.  Been working on other stuff.\n> \n> If this is a priority for you, please feel free to push new patchsets to this review.  I will check back in here when I'm back to getting this working."
        },
        {
            "timestamp": 1616430790,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1616504387,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1616551341,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1617013497,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1617033730,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1617203818,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1619804361,
            "reviewer": {
                "name": "Derick Montague",
                "email": "derick.montague@ibm.com",
                "username": "derick-montague"
            },
            "message": "Patch Set 5:\n\nAny idea when this might be merged?"
        },
        {
            "timestamp": 1619804487,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n> Patch Set 5:\n> \n> Any idea when this might be merged?\n\nI think we have agreement on what to do here, I just haven't had time to look at it recently.  At a minimum this needs rebased, and the block of code that got missed added back."
        },
        {
            "timestamp": 1620622926,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1620622940,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620623017,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/16898/ : FAILURE"
        },
        {
            "timestamp": 1620630063,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1620630080,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1620630825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/16907/ : SUCCESS"
        },
        {
            "timestamp": 1621538246,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 7: Code-Review+1\n\n(2 comments)\n\nKeep up the good work Ed and Ravi, thank you!"
        },
        {
            "timestamp": 1623863459,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased."
        },
        {
            "timestamp": 1623863479,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1623863892,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/19894/ : SUCCESS"
        },
        {
            "timestamp": 1623974720,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph.reynolds1@ibm.com",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 8:\n\n(2 comments)\n\nLooks good to me, noting that I still don't understand the NBD code and I am still looking for code to cache the UserPasswordExpired property.  See comments in this patchset."
        },
        {
            "timestamp": 1624040889,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)\n\n> Patch Set 8:\n> \n> (2 comments)\n> \n> Looks good to me, noting that I still don't understand the NBD code and I am still looking for code to cache the UserPasswordExpired property.  See comments in this patchset.\n\nThe nbd code is effectively dead code at this point (we have no backend), so there's not a huge incentive to understand it."
        },
        {
            "timestamp": 1625697330,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9: Patch Set 8 was rebased"
        },
        {
            "timestamp": 1625697346,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625697812,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21594/ : SUCCESS"
        },
        {
            "timestamp": 1630003437,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 9:\n\n(4 comments)\n\nNeat, I added my observations. \nOverall looks reasonable"
        },
        {
            "timestamp": 1630003811,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1630004115,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1630013769,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(4 comments)\n\nThank you for answering all my questions."
        },
        {
            "timestamp": 1633602632,
            "reviewer": {
                "name": "Smriti-Ayushi",
                "email": "smriti.ayushi@linux.intel.com",
                "username": "Smriti-Ayushi"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1633720152,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1633720218,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1633945325,
            "reviewer": {
                "name": "Smriti-Ayushi",
                "email": "smriti.ayushi@linux.intel.com",
                "username": "Smriti-Ayushi"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1634128994,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 9:\n\nGunnar, Can you ask somebody to test the LDAP functionality with this commit?"
        },
        {
            "timestamp": 1634208042,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 9:\n\nGunnar, I mean to say that this commit is having +1 but if this commit goes alone then there would be regression.\nFollowing commit is also needed https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/43027/13, but seems not having enough +1."
        },
        {
            "timestamp": 1634217284,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Uploaded patch set 10: Patch Set 9 was rebased."
        },
        {
            "timestamp": 1634217301,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634217757,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28281/ : SUCCESS"
        },
        {
            "timestamp": 1634218889,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 10:\n\n> Patch Set 9:\n> \n> Gunnar, I mean to say that this commit is having +1 but if this commit goes alone then there would be regression.\n> Following commit is also needed https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/43027/13, but seems not having enough +1.\n\n\nyes Ratan LDAP Functionality break with this commit.\nwe need 43027 go along with this commit"
        },
        {
            "timestamp": 1634257754,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 10: Code-Review-1\n\n> LDAP Functionality break with this commit.\nWe should not commit this if it break LDAP Functionality.\n\nWhat parts of https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/43027/13 do we pull forward to this change? It is not obvious to me yet."
        },
        {
            "timestamp": 1659457377,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1659457426,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659457427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1659457765,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48222/ : FAILURE"
        },
        {
            "timestamp": 1679676165,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Abandoned\n\nMerged as part of other patches."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8f8308407ce4a370d0e76706b9bf868d6e586e16",
            "parents": [
                "09962e8eef8d6a08cffc938f0ce8fbdd1c8f4fc8"
            ],
            "ref": "refs/changes/56/39756/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1610748653,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -116
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 282
        },
        {
            "number": 2,
            "revision": "9909cab348a820bbb69196432a0cdfd35dac4e0c",
            "parents": [
                "49026225edfdfef2fa3a241e6961dc237278a3d3"
            ],
            "ref": "refs/changes/56/39756/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1610749517,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -116
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 282
        },
        {
            "number": 3,
            "revision": "7644f3f978101bc6fda4ed3429bb3d81e0aedc44",
            "parents": [
                "dfcaf14a0a47c7d26f55cb5a18f559f7fb960313"
            ],
            "ref": "refs/changes/56/39756/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1610753060,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -116
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 282
        },
        {
            "number": 4,
            "revision": "630abf9d41b0409b8a2bf2103dfa962e56f27dbc",
            "parents": [
                "cba4f44896bea631f409cbc9e52d4ddb7d2e86c1"
            ],
            "ref": "refs/changes/56/39756/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1613586112,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/routing.hpp",
                    "line": 1374,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph.reynolds1@ibm.com",
                        "username": "joseph-reynolds"
                    },
                    "message": "This code block was removed and not replaced.  Please mention this in the commit message.\n- Before this change, a local user's expired-password state would be refreshed for every HTTP operation.  For example, if the user's password expired during a session, the very next operation using that session would likely fail due to lack of privileges (because a user with an expired password effectively has only the ConfigureSelf privilege).\n- With this change, a local user's expired password state is established at the start of the session and cannot be changed.\n- This means a user who changes their expired password would have to login again to regain their role's privileges.\n- This also means a user whose password expires during a session will be able to continue using that session with full privileges until they log out."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1374,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This code block was removed and not replaced.  Please mention this in the commit message.\n\nI did.  I pointed out that the privileges check was replaced with the role cache we used to have.\n\n> - Before this change, a local user's expired-password state would be refreshed for every HTTP operation.  For example, if the user's password expired during a session, the very next operation using that session would likely fail due to lack of privileges (because a user with an expired password effectively has only the ConfigureSelf privilege).\n\nThat is still true today.  The role cache is operating asyncronously, and will get populated with updated data as the roles change including the password change, unless I'm missing something.\n\n> - With this change, a local user's expired password state is established at the start of the session and cannot be changed.\n> - This means a user who changes their expired password would have to login again to regain their role's privileges.\n\nI don't think this is true.  Can you come up with a curl test case that shows what's broken?  I'm not quite following what's wrong here from the code block.\n\n> - This also means a user whose password expires during a session will be able to continue using that session with full privileges until they log out.\n\nThis might be right.  I can look into this."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 283,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph.reynolds1@ibm.com",
                        "username": "joseph-reynolds"
                    },
                    "message": "This previously happened in http/routing.hpp but that code is removed in this commit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -116
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 282
        },
        {
            "number": 5,
            "revision": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
            "parents": [
                "65f7365901fad2437456f4edcdac41e03f0ca259"
            ],
            "ref": "refs/changes/56/39756/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1613753749,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "spelling"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 41,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Seems like I would expect more testing than that. \nSince you touched nbd proxy, and websockets, I would expect testing for those."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "agreed.  I mostly pushed this so we can get solidarity on all the use cases people need before going through all the testing on this.  I did test more than just logging in, I just did a mediocre job documenting it, which I will fix.\n\nwith that said, nbd is currently dead code (there's no backend for it) so I have no way to test it.  Based on the minimaly invasive code, and the shared implementation with all the other websockets, I'm pretty sure I haven't changed the behavior from before, but there's no real way to know that."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1387,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "This code is missed. So when user password is expired, They can't update the password anymore which is functional issue."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1387,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Nit: Any specific reason for not using sdbusplus API filename(). \n\nIn a way this utility API is useful for non dbs object paths."
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because this patchset was pushed before filename() existed.  Having to write this code was actually the reason I wrote filename in the first place.\n\nWill update on the next patchset."
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 265,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Move this down, after checking for ec. Lineno: 273"
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 265,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This code hasn't changed in this patchset.  This seems like a good optimization for a future patchset if you'd like to do it."
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 322,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "objects empty check should be above for for (const auto& objectPath : objects); Line no: 273"
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 322,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This code also hasn't changed in this patchset, this would be a good optimization to make in the next patchset."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "I am hoping this change is going to break the LDAP which was working before with the following call.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/39756/5/http/routing.hpp#b1405"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This change assumes that phosphor-user-manager is working properly.  If this is broken, isn't there a bug in the properties changed event for LDAP users?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, We don't list the LDAP users on the Dbus. LDAP is used on the BMC for authentication not for the user management.\n\nLDAP notification is not supported in the back-end(nss-pam-ldapd)."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How are ldap users authorized then?  SOME backend needs to hold the users privilege level on dbus."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, LDAP notification in the library isn't required to host the privilege level.\n\nThe reason most web services like this even have sessions is to avoid doing this exact thing, calling into ldap for every single request, which slows down everything.  Sessions are generally only authorized once, then that privilege level is held through the course of the session.\n\nThis is the same way your laptop works with an LDAP server.  If your privilege level on the LDAP server is changed, it's not immediately applied, you need to log out and log back in before it's applied."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> How are ldap users authorized then? \nWe use the linux API for authorization where we get the group ID by calling the getpwnam_r and then call the getgrent to get the group name of the user..\nHow does the get ent knows that they need to make the ldap call? There is a nsswitch configuration where we tells that for password, grpup search what should be called(Linux, ldap).\n\nI am not sure that internally these API makes the LDAP call for each request to get the grpup name or it caches somewhere.but I have seen most of the times that LDAP call goes to the LDAP server for the authorization but it is very fast(in mili or micro seconds) as our ldap server is in the same network."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > How are ldap users authorized then? \n> We use the linux API for authorization where we get the group ID by calling the getpwnam_r and then call the getgrent to get the group name of the user..\n> How does the get ent knows that they need to make the ldap call? There is a nsswitch configuration where we tells that for password, grpup search what should be called(Linux, ldap).\n> \n> I am not sure that internally these API makes the LDAP call for each request to get the grpup name or it caches somewhere.but I have seen most of the times that LDAP call goes to the LDAP server for the authorization but it is very fast(in mili or micro seconds) as our ldap server is in the same network.\n\nYou can't assume the LDAP server will always be fast, nor can you assume that the LDAP server can handle the load of all the bmcweb requests that might come through, also \"fast\" is relative, it's another network connection that needs polled, and significantly increases the response times.  Considering bmcweb is supposed to respond in a matter of milliseconds, adding another milliseconds hop to every request seems like an issue.\n\nConsidering that bmcweb is logging in via PAM directly, I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, at the same time we do the pam_authenticate call.  With that said, I don't have a problem authorizing through dbus, I have a problem authorizing every request.  If you have requirements around supporting removing sessions when the groups change (which is fairly unique) then phosphor-user-manager needs to set up inotify, and event on them properly."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> Considering that bmcweb is logging in via PAM directly,\nYes that will also make LDAP request for authentication via pam_ldap module.\n\n>  I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, \ngetgrent internally makes the ldap request to get the group info from the LDAP. I think I have asked this info on the nss-pam-ldapd mailing list also.\n\nI am not sure either we make the getgrent call from the bmcweb or the phophosr-user-manager does, How it is solving the problem.\n\nOnce you get the group name you need to get the privilege for the group, for the same there is Dbus application.Hence you need to make the D-bus call.\n\nNow the question is whether getgrent is making the ldap call for each authorisation request or for some x amount of time it caches and then invalidate the cache , I have to take a look or I can fire a query to the maintainer of the nss-pam-ldapd."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Considering that bmcweb is logging in via PAM directly,\n> Yes that will also make LDAP request for authentication via pam_ldap module.\n> \n> >  I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, \n> getgrent internally makes the ldap request to get the group info from the LDAP. I think I have asked this info on the nss-pam-ldapd mailing list also.\n> \n> I am not sure either we make the getgrent call from the bmcweb or the phophosr-user-manager does, How it is solving the problem.\n> \n> Once you get the group name you need to get the privilege for the group, for the same there is Dbus application.Hence you need to make the D-bus call.\n\nI'm not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n\n> \n> Now the question is whether getgrent is making the ldap call for each authorisation request or for some x amount of time it caches and then invalidate the cache , I have to take a look or I can fire a query to the maintainer of the nss-pam-ldapd.\n\nThis doesn't matter, as getgrent would only be called when a session is created, and wouldn't need to be run on every request."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> I'm not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n\nWe have two types of users.\n\n1) Local user: During creation of the local user we give the privilege to the user as admin, opertaor etc.\n   NOTE: This privilege is nothing : In linux it is the group where the user lies.\n\n2) LDAP user doesn't lie in group called priv admin, priv-opertaor which we made it for openbmc user management, we can not ask the ldap admin to create the user and tied the user with priv opertor or prive admin group.\n\n   Now in this case we need to map the LDAP grpup to the BMC privilege model. which we do it by having interface which maps the group to privilege model.There is a Dbus service for the same.\n\n   In redfish also we have the property called \"RemoteRole mapping\" for the same purpose where mapping rules that are used to convert the external account providers account information to the local Redfish role.\n\nSo we have two methods to get the privilege of a user.\n\nIf it is local user you can directly get the privilege of the user(by having Dbus call or Monitor the Dbus object) but if it is ldap user then we need to get the group id of the user from the LDAp server  and then find the privilege of the group by having Dbus call to the user manager..\n\nI agree with your point that privilege should be fetched during authentication not for each request for the same session.\n\nThis can be done if we keep the privilege in the in memory session object during authentication and each successive request will be matched against the privilege which is there in the in-memory session object."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > I'm not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n> \n> We have two types of users.\n> \n> 1) Local user: During creation of the local user we give the privilege to the user as admin, opertaor etc.\n>    NOTE: This privilege is nothing : In linux it is the group where the user lies.\n> \n> 2) LDAP user doesn't lie in group called priv admin, priv-opertaor which we made it for openbmc user management, we can not ask the ldap admin to create the user and tied the user with priv opertor or prive admin group.\n> \n>    Now in this case we need to map the LDAP grpup to the BMC privilege model. which we do it by having interface which maps the group to privilege model.There is a Dbus service for the same.\n> \n>    In redfish also we have the property called \"RemoteRole mapping\" for the same purpose where mapping rules that are used to convert the external account providers account information to the local Redfish role.\n> \n> So we have two methods to get the privilege of a user.\n> \n> If it is local user you can directly get the privilege of the user(by having Dbus call or Monitor the Dbus object) but if it is ldap user then we need to get the group id of the user from the LDAp server  and then find the privilege of the group by having Dbus call to the user manager..\n\nI was with you so far until this statement.  Why doesn't user manager just host an interface with the users group on it, then we're not changing any behavior based on whether or not the user is LDAP.\n\n> \n> I agree with your point that privilege should be fetched during authentication not for each request for the same session.\n> \n> This can be done if we keep the privilege in the in memory session object during authentication and each successive request will be matched against the privilege which is there in the in-memory session object.\n\nGreat.  We can certainly do that."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> I was with you so far until this statement.  Why doesn't user manager just host an interface with the users group on it, then we're not changing any behavior based on whether or not the user is LDAP.\n\nHoping we are on the same page,For LDAP users we don't have Dbus objects and the reason is LDAP notification is not supported so we can not update the Dbus objects regularly.\n\n\"Why doesn't user manager just host an interface with the users group on it\"\nI didn't get this.Can you explain bit more?\n\n\n> Great.  We can certainly do that.\n\nIn that case for the local user : we will be getting the privilege from the Dbus object and updating the session object with the privilege.\n\nFor the LDAP user: if we don't find the user in the Dbus objects(as the Dbus objects are there only for local users) then we would be asking LDAP server to get the info about that user and get the privilege of the LDAP user and update the session object.\n\nAre you fine with it? We can push a commit for the same."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > I was with you so far until this statement.  Why doesn't user manager just host an interface with the users group on it, then we're not changing any behavior based on whether or not the user is LDAP.\n> \n> Hoping we are on the same page,For LDAP users we don't have Dbus objects and the reason is LDAP notification is not supported so we can not update the Dbus objects regularly.\n\nI'm not sure why that would be required?  Just update it on a successful login, and that would be in line with how ldap is generally done.\n\n> \n> \"Why doesn't user manager just host an interface with the users group on it\"\n> I didn't get this.Can you explain bit more?\n> \n> \n> > Great.  We can certainly do that.\n> \n> In that case for the local user : we will be getting the privilege from the Dbus object and updating the session object with the privilege.\n> \n> For the LDAP user: if we don't find the user in the Dbus objects(as the Dbus objects are there only for local users) then we would be asking LDAP server to get the info about that user and get the privilege of the LDAP user and update the session object.\n\nif by \"we\" above, you're talking about phosphor-user-manager, then yes, that would be fine.  I wouldn't expect any difference between a local user and an LDAP user in terms of bmcweb.  Phosphor-user-manager should provide the appropriate interfaces to make them look the same.\n\n> \n> Are you fine with it? We can push a commit for the same."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> if by \"we\" above, you're talking about phosphor-user-manager, then yes, that would be fine.  I wouldn't expect any difference between a local user and an LDAP user in terms of bmcweb.  Phosphor-user-manager should provide the appropriate interfaces to make them look the same.\n\nFor the same reason phosphor-user-manager provides the following interface. \n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/User/Manager.interface.yaml#L60\n\nHope I have not misunderstood you."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > if by \"we\" above, you're talking about phosphor-user-manager, then yes, that would be fine.  I wouldn't expect any difference between a local user and an LDAP user in terms of bmcweb.  Phosphor-user-manager should provide the appropriate interfaces to make them look the same.\n> \n> For the same reason phosphor-user-manager provides the following interface. \n> \n> https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/User/Manager.interface.yaml#L60\n> \n> Hope I have not misunderstood you.\n\nThat's a method call interface, which requires a call to dbus for EVERY request.  That's a problem for performance."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "So if I am getting you correctly, you want that this interface needs to be done only at the login time not with every request.\n=> privilege should be fetched during authentication \n=> persist the privilege in the in memory session object.\n=> each successive request will be matched against the privilege which is there in the in-memory session object."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Correct, this is how most session systems pulling credentials from remote storage operate."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Thanks Ed, we will push the patch."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "instead of empty string string, Isnt it better to make return code ad std::optional and return std::nullopt here?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was already what the old code did (which was reviewed) but this request seems reasonable.\n\nWill add."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "I think this can be private method."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Any specific reason for not using latest added sdbusplus API for extracting last node from object path(object_path::filename())?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 121,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because this patchset predates filename() being added.  Having to write the utility function was actually the reason I created filename in the first place.\n\nWill fix."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "very unlikely this can happen, but better add a error log for debugging purpose."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, I will treat this as a nit.  We don't have any policy where all errors need debug logging, and like you say, this is extremely unlikely (would require the dbus interfaces themselves to produce non-dbus compliant paths)."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 156,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "sdbusplus object path, You can use objPath.filename()"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 156,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See last 2 comments.  This code predates filename() but I will update."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 192,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "I see in other places, If user is there and \"UserPrivilege\" is not found/error, we are filling roleMap with empty role. Lets be consistent."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 192,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not quite following this comment.  Can you point to the other places?\n\nEmpty roles have the potential to be attack vectors, so I'm not inclined to do that unless there's a good reason (and the code you're referring to should probably be changed)."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 201,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "If user is not found in roleMap, And see there is property changed for user(Unlikely), Why can't we add  new entry with fetched role along with username?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 201,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Because it's an error condition that has broken dbus APIs.  We should not attempt any recovery in the cases where dbus apis were not obeyed, it could lead to possible attack vectors."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "You need to check for validity of name( empty check)."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK, this came from the old code."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "We need to check for UserGroups as well before adding users to this roleMap. Users which are not associated with \"redfish\" userGroups are not applicable to Redfish at all."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "the redfish user groups are checked in other places.  I'd prefer we do that in one place."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -116
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 282
        },
        {
            "number": 6,
            "revision": "63d2f553ef87f8c6898c3ebc0262d8f775a792bb",
            "parents": [
                "ffed87b5ad1797ca966d030e7f97977028d258fa"
            ],
            "ref": "refs/changes/56/39756/6",
            "uploader": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "createdOn": 1620622926,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -113
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 442,
            "sizeDeletions": 279
        },
        {
            "number": 7,
            "revision": "fdceca23bb37804289b3650ff4cbcfece8f058f7",
            "parents": [
                "1b1be67fb8d50293d452316f51227363750a3d00"
            ],
            "ref": "refs/changes/56/39756/7",
            "uploader": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "createdOn": 1620630063,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/routing.hpp",
                    "line": 1339,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "nit:\n\nIs this clear enough that we are talking HTTP status codes of the 5xx server errors type?\nhttps://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_server_errors\n\nI just don't want in the future to think you are talking something like a 500 second timeout or wait."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "nit:\n\nIs null the best choice description for the end user, especially when shown in the Web UI?\nI understand null, but I am not sure everyone does.\n\nMaybe \"UserPrivilege property value is nonexistent\""
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -113
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 441,
            "sizeDeletions": 279
        },
        {
            "number": 8,
            "revision": "41e11d95b2acccb4e8d37864648ee989c9af2f6f",
            "parents": [
                "432a890cfca335e565b770b1604ed4e547c5a732"
            ],
            "ref": "refs/changes/56/39756/8",
            "uploader": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "createdOn": 1623863459,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/sessions.hpp",
                    "line": 198,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph.reynolds1@ibm.com",
                        "username": "joseph-reynolds"
                    },
                    "message": "What is the recovery from this?  Restart bmcweb, or re-read all the users?\nI'm just curious, not asking for a code change."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 198,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If we hit this branch, it means that the dbus signals were disobeyed (ie, we got a propertieschanged event, but never receieved an interfacesadded event).  There is no real recovery that I can think of aside from restarting phosphor-user-manager (or the whole bmc)."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph.reynolds1@ibm.com",
                        "username": "joseph-reynolds"
                    },
                    "message": "Per agreement in the Feb 19 comments, can we enhance this cache the UserPasswordExpired property?  Then in routing.cpp, change the code to test if UserPasswordExpired==true then that user's role doesn't figure into privilege calculations, and per Redfish spec DSP0266 \"Password change required handling\" BMCWeb should check authority as if the user had only the ConfigureSelf privilege.\nSee also https://github.com/openbmc/phosphor-user-manager/issues/9"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -113
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 441,
            "sizeDeletions": 279
        },
        {
            "number": 9,
            "revision": "60d44d873768d04bf6d0aa6e7aaeb3b5e90bacfd",
            "parents": [
                "ed3982131dcef2b499da36e674d2d21b2289ef29"
            ],
            "ref": "refs/changes/56/39756/9",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1625697330,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/routing.hpp",
                    "line": 1408,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "There is extra logic to prompt a user to log in. Will this be missed?"
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1408,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yeah, this was commented earlier;  It's a rebase issue (this is an old patch)  It's on my list to fix."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1408,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Okay. It sounds like you have thought about it."
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1343,
                    "reviewer": {
                        "name": "Smriti-Ayushi",
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "I have generally seen that in bmcweb we avoid using try-catch?\nJust wanted to know"
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1343,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "we do, but because we still have exceptions enabled, we do have to have some barriers in case users call methods that throw.\n\nFWIW, this check is removed in: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/46841"
                },
                {
                    "file": "http/routing.hpp",
                    "line": 1343,
                    "reviewer": {
                        "name": "Smriti-Ayushi",
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "Thanks for the info."
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 329,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit: would it be faster to iternate through sessions first? \nI would expect fewer sessions then object paths"
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 329,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think in this context they're the same size, right?  As-is, there's no backend for this code, so it's kind of hard to optimize."
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "line": 329,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "why make this a struct and not a class?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Probably not any good reason;  The only difference between struct and class is the default visibility;  This could probably be a class with an explicit public below it and be roughly the same.\n\nIn concept, yeah, this could probably be a class."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Sounds good. I just wanted to know."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Smriti-Ayushi",
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "same\ndo we prefer to use?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "sdbusplus doesn't support return codes for this usecase, so while we prefer to not use try/catch, it is the only option here to avoid throwing into a C library, which is undefined behavior."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Smriti-Ayushi",
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "Okay. Thanks!"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "why are the object being sorted? \nIt is not obvious (to me) that sorting this way adds anything."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "flat_map is a sorted vector implementation of a map.  Sorting it allows to do binary lookups on the map (like at line 67), instead of linear time lookups (ie, logN vs N), while still keeping the values relatively packed in ram.  Normally, we'd just leave this as the default comparison operator, but explicitly declaring std::less here allows us to directly compare std::string_view to a list of strings without making a std::string copy like we do on line 67.\n\nGood question."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Sounds pretty clever. Thanks for the explanation"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -113
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 441,
            "sizeDeletions": 279
        },
        {
            "number": 10,
            "revision": "cb021909e058d694eee69e4d271733a69083db5e",
            "parents": [
                "a8544a5bb3406e7f36e850a500f2dd5f5b4285c3"
            ],
            "ref": "refs/changes/56/39756/10",
            "uploader": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "createdOn": 1634217284,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -155
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -113
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -11
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 441,
            "sizeDeletions": 279
        },
        {
            "number": 11,
            "revision": "55b871931fdbbc4da90d23cba97c8aad29c7bfca",
            "parents": [
                "a1e0871d2425b3f42d0e5893d548593e5ed576bb"
            ],
            "ref": "refs/changes/56/39756/11",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659457377,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "include/nbd_proxy.hpp",
                    "type": "MODIFIED",
                    "insertions": 60,
                    "deletions": -112
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 234,
                    "deletions": 0
                },
                {
                    "file": "http/routing.hpp",
                    "type": "MODIFIED",
                    "insertions": 55,
                    "deletions": -106
                },
                {
                    "file": "http/websocket.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -12
                },
                {
                    "file": "include/dbus_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 419,
            "sizeDeletions": 230
        }
    ]
}