{
    "project": "openbmc/obmc-console",
    "branch": "master",
    "id": "I42e96af46a5893145abf27761e97fd4f1b73719d",
    "number": 62102,
    "subject": "Support systemd socket activation",
    "owner": {
        "name": "Jonathan Doman",
        "email": "jonathan.doman@intel.com",
        "username": "jonathan-doman"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/obmc-console/+/62102",
    "hashtags": [],
    "createdOn": 1680297074,
    "lastUpdated": 1681497223,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1680297074,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1680297110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680297110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1680297134,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63484/ : SUCCESS"
        },
        {
            "timestamp": 1680484874,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1680486021,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1680551954,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1680570163,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1680571252,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1680643081,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1680643173,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680643179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1680643199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63658/ : SUCCESS"
        },
        {
            "timestamp": 1680645174,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1681187218,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1681497223,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a3fbe7c5079c7f564a082b2febe85c23d9851fff",
            "parents": [
                "397fd035e3adda2f3d36bfc5f2268372847778e7"
            ],
            "ref": "refs/changes/02/62102/1",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1680297074,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hi Jonathan, thanks for the patch. This seems like a nice alternative to udev-driven instances. I think we need to fix up the socket unit though."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "I'm okay with this change, but keep in mind that the proposed setup (only starting the console service on connect) will break two things:\n\n* logging: console logs will only generated when there is a client attached, which sorta defeats the purpose of the log buffer\n* local (physical) serial ports: no mirroring to local serial ports (specified by `local-tty`) will occur where no SoL or Redfish console is attached.\n\nIs that OK for your use-case?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Yes this is exactly our desired use case for Intel platforms. By default, the host console is routed straight through the BMC (UART1->IO1) so that no BMC FW is required to interact with the host console. Only when a SOL is activated is the routing dynamically changed to go through UART1->UART3->obmc-console@ttyS2->UART4->IO1. This was done to minimize the dynamic routing changes because we found that it occasionally introduced garbage into the data stream. But then obmc-console@ttyS2 is sitting around doing nothing most of the time.\n\nBy adding unix socket activation, we avoid running obmc-console when it's not doing anything, and can add the UART routing logic into the obmc-console service file to make the whole thing cleaner."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "OK, all good.\n\nJust a clarification though:\n\n> This was done to minimize the dynamic routing changes\n\nunless I'm missing something: this has *more* dynamic routing changes than the existing (always-running) behaviour, no?\n\nThe originally-intended usage model is to not change any  routing at runtime, but just have obmc-console directly perform the mirroring to the physical UART.\n\nAlso, should we add a warning when using the systemd-provided socket in conjunction with `local-tty` or `logfile`? I suspect we're going to get some difficult support requests otherwise."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "> unless I'm missing something: this has *more* dynamic routing changes than the existing (always-running) behaviour, no?\n\nWell, no. Assuming the routing change is done as an ExecStartPre in obmc-console@.service, then it's the same, just possibly delayed. Once the service is started, it stays running.\n\nTo give more context, the problematic test case we found involved repeated AC power cycles where the BMC and host are booting in parallel. When obmc-console@.service is started during every boot, then the routing will get switched every time while the host is potentially dumping tons of text. So if we delay the routing change until it's needed, then there are no routing changes at all in this test case and no garbage text.\n\n> The originally-intended usage model is to not change any  routing at runtime, but just have obmc-console directly perform the mirroring to the physical UART.\n\nAs stated, this model doesn't work for us because we need to see the host UART before the BMC can be fully booted. So we have to rely on the default ASPEED UART1->IO1 routing and then switch it at runtime to use obmc-console.\n\n\n> Also, should we add a warning when using the systemd-provided socket in conjunction with `local-tty` or `logfile`? I suspect we're going to get some difficult support requests otherwise.\n\nI can add such a warning if you'd like. But this new obmc-console@.socket is not going to be enabled by default. If someone chooses to enable it on their platform (and disable the corresponding obmc-console@.service), then presumably they'll be aware of the consequences. It should be easy to check \"is obmc-console@ttySX.service running?\""
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Hi Jonathan,\n\n> To give more context, the problematic test case we found involved repeated AC power cycles where the BMC and host are booting in parallel. When obmc-console@.service is started during every boot, then the routing will get switched every time while the host is potentially dumping tons of text. So if we delay the routing change until it's needed, then there are no routing changes at all in this test case and no garbage text.\n\nAh, gotchya - you're covering the reboot case here, sounds good.\n\n> > Also, should we add a warning when using the systemd-provided socket in conjunction with `local-tty` or `logfile`? I suspect we're going to get some difficult support requests otherwise.\n> \n> I can add such a warning if you'd like.\n\nNo, I think you're fine as-is. As you say, it's not a default configuration, so requires an explicit change to enable (and at that point, hopfully disabling logging and local-tty)."
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "line": 5,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This needs to be templated as well in accordance with the code defining the socket name. The current pattern in the implementation is `@obmc-console.${socket-id}`. Maybe it's best if we fix the logic in [1] so that there's always a socket-id (e.g. set it to \"default\" by default) rather than conditionally appending the `.${socket-id}`."
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "line": 5,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "I'm not sure how we would template the socket name. Do you have a specific suggestion?\n\nOur Intel platforms support three different SOL options, and they all only support a hardcoded \"obmc-console\" socket name at this time:\n* bmcweb: https://github.com/openbmc/bmcweb/blob/a1cbc1920833ae7f7cf9c2e7df06e37dc7f9f530/include/obmc_console.hpp#L133\n* IPMI: https://github.com/openbmc/phosphor-net-ipmid/blob/6d206811c91cd13d75d110ad173202ebef1dc731/sol/sol_manager.hpp#L23\n* Socket-activated SSH: https://github.com/openbmc/obmc-console/blob/397fd035e3adda2f3d36bfc5f2268372847778e7/conf/obmc-console-ssh%40.service.d/use-socket.conf.in#L3\n\nNone of them have any way to differentiate or request a specific console. So at least from my perspective there is no use case for templating the socket name.\n\nI think it would be up to the specific yocto platform layer to override the ListenStream with template-instance-specific drop-in files."
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "line": 5,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ninad is looking at fixing bmcweb at the moment. phosphor-net-ipmid will also need to be fixed I guess, but I doubt Ninad has looked at that. Socket-activated SSH is a restricted case of the general applicability of the supplied units.\n\nThis blog post covers the capability in more depth:\n\nhttps://amboar.github.io/notes/2023/03/31/exploiting-obmc-console-service-units-for-multiple-host-consoles.html"
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "line": 5,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Changed to `ListenStream=@obmc-console.%i` in PS 2 - does that work?\nWe'll have to override it back to @obmc-console in the meantime for our platforms, but that's OK I guess."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -20
                },
                {
                    "file": "configure.ac",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 61,
            "sizeDeletions": 20
        },
        {
            "number": 2,
            "revision": "cc07530fdb356b7750f58c2a6b35c9cf180ed99c",
            "parents": [
                "397fd035e3adda2f3d36bfc5f2268372847778e7"
            ],
            "ref": "refs/changes/02/62102/2",
            "uploader": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "createdOn": 1680643081,
            "author": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -20
                },
                {
                    "file": "configure.ac",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "conf/obmc-console@.socket.in",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 62,
            "sizeDeletions": 20
        }
    ]
}