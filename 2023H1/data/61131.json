{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I91de6f82aadf8ad6f7bc3f58dfa0d14c0759dd47",
    "number": 61131,
    "subject": "Aggregation: Increase response read limit to 50MB",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/61131",
    "hashtags": [],
    "createdOn": 1677092272,
    "lastUpdated": 1679353982,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1677092272,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1677092301,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677092301,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1677093453,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61442/ : SUCCESS"
        },
        {
            "timestamp": 1677106983,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1677113080,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1677260380,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1677265154,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1677539230,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677539264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677539264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1677540427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61691/ : SUCCESS"
        },
        {
            "timestamp": 1677563906,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677563940,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677563940,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1677563965,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61751/ : FAILURE"
        },
        {
            "timestamp": 1677566417,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677566470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677566470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1677567627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61762/ : SUCCESS"
        },
        {
            "timestamp": 1677603211,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1677603318,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1677609184,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1677891359,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5: Patch Set 4 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677891392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1677891392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1677892553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62123/ : SUCCESS"
        },
        {
            "timestamp": 1678817666,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1678817817,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678817837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678817838,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1678819014,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62647/ : SUCCESS"
        },
        {
            "timestamp": 1678820427,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1678822556,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1678832809,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678832853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678832853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1678833024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62659/ : FAILURE"
        },
        {
            "timestamp": 1678833557,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678833596,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1678833612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678833612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1678833708,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1678833758,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1678834495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62661/ : FAILURE"
        },
        {
            "timestamp": 1678836235,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 9:\n\n(7 comments)"
        },
        {
            "timestamp": 1678836906,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678836913,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(5 comments)"
        },
        {
            "timestamp": 1678836947,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678836947,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1678836969,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1678836981,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1678837018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678837018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1678837019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62664/ : ABORTED"
        },
        {
            "timestamp": 1678837428,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1678837472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678837472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1678837473,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62665/ : ABORTED"
        },
        {
            "timestamp": 1678837508,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1678837513,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12: Code-Review+1"
        },
        {
            "timestamp": 1678838632,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62667/ : SUCCESS"
        },
        {
            "timestamp": 1678897005,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13: Published edit on patch set 12.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678897058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678897058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1678897138,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1678898339,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62711/ : SUCCESS"
        },
        {
            "timestamp": 1678905993,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1678923033,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678923054,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678923054,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1678923222,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62743/ : FAILURE"
        },
        {
            "timestamp": 1678924599,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1678924634,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1678924634,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1678925421,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1678925827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62745/ : SUCCESS"
        },
        {
            "timestamp": 1678984456,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 15: Code-Review+1"
        },
        {
            "timestamp": 1678985237,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1678989475,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1679006716,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679006756,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679006756,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1679006841,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1679006889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679006889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1679006890,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62801/ : ABORTED"
        },
        {
            "timestamp": 1679008026,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62802/ : SUCCESS"
        },
        {
            "timestamp": 1679009513,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1679009627,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 17: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1679011026,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1679083477,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1679330982,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18: Published edit on patch set 17.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679331014,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679331014,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1679331024,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1679331920,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62944/ : FAILURE"
        },
        {
            "timestamp": 1679344417,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1679344455,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679344455,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1679344663,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 20: Commit message was updated."
        },
        {
            "timestamp": 1679344679,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679344679,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1679344680,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/62955/ : ABORTED"
        },
        {
            "timestamp": 1679344800,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1679345840,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/62957/ : SUCCESS"
        },
        {
            "timestamp": 1679346102,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 20: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1679353976,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1679353979,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20: Code-Review+2"
        },
        {
            "timestamp": 1679353982,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ad151de4cbfee63b4dd2c9c73583aa6d48c5e477",
            "parents": [
                "24dadc88603693f0c21ca5f9c6d5680e89523020"
            ],
            "ref": "refs/changes/31/61131/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1677092272,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, this is changing the limits for both EventService and Aggregation, which I don't think we want to do.  Arguably, could aggregation just set no limit?  Arguably, aggregation some day could turn into a streaming response, and then the limits really don't matter;  I'd like to plan for that eventuality."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "They share connection pools so there isn't a great way to decouple this.  We already have separate pools for SSL and non-SSL.  I want to avoid further doubling the number of potential pools based on the entity sending requests.\n\nI'm fine with setting no limit for aggregation and tying that to its compiler option.  My thought was you may want to be able to set an upper bound as a weak attempt at preventing reading in a large enough response that we run out of memory."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> They share connection pools so there isn't a great way to decouple this.\n\nCan they just... not share a connection pool?  Connection pool sharing doesn't get us any performance benefits in practice.  It's unlikely a server would implement both an EventService receiver, and a redfish server, and in that case, two connections might actually be better.\n\n>  We already have separate pools for SSL and non-SSL.  I want to avoid further doubling the number of potential pools based on the entity sending requests.\n\nThey're already arguably \"doubled\" this just splits them up more precisely.  What is the worry in splitting them?  Code complexity?\n\n> \n> I'm fine with setting no limit for aggregation and tying that to its compiler option.  My thought was you may want to be able to set an upper bound as a weak attempt at preventing reading in a large enough response that we run out of memory."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Can they just... not share a connection pool? Connection pool sharing doesn't get us any performance benefits in practice. It's unlikely a server would implement both an EventService receiver, and a redfish server, and in that case, two connections might actually be better.\n\nIn my testing, connection pooling definitely improved throughput.  Increasing the pool size helped instances where the aggregator was dropping requests due to its request buffer getting filled.  \n\nI do agree though that it is unlikely you'll see overlap even if it is possible.  This is more of me trying to account for an edge case than a major concern.\n\n> They're already arguably \"doubled\" this just splits them up more precisely.\nThey'd get doubled again since you'd be able to have 4 different configurations for a single IP:PORT:\n1) non-SSL, EventService\n2) non-SSL, Aggregation\n3) SSL, EventService\n4) SSL, Aggregation\n\nIn practice the actual number of connection pools won't increase since it's unlikely you'll have multiple configurations on a single IP:PORT.\n\n> They're already arguably \"doubled\" this just splits them up more precisely. What is the worry in splitting them? Code complexity?\nProbably not that much more complex for this specific instance.  I could just add another argument to the sendData APIs which takes an enum specifying if the EventService or Aggregation connection pool should be used for the provided IP:PORT.\n\nLonger term I don't like adding new arguments to the APIs since that makes them look even more unwieldy.  That might just be something that's unavoidable."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pooling connections between EventService and Aggregation?  That makes no sense.  To clarify, we should keep the connection pooling, but each thing should have its own pool.\n\n> Longer term I don't like adding new arguments to the APIs since that makes them look even more unwieldy. That might just be something that's unavoidable.\n\nThe \"fix\" for this is generally to put everything into a struct, then pass the struct.  Something to consider."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Really?  Seems like some amount of commonality here could be achieved."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I guess it depends on how you feel about EventService being able to read in enormous responses.  EventService doesn't do anything with the responses it receives so it really shouldn't need to read in that large of responses, or at least not anything near what the aggregator may read in.\n\nI don't think it hurts anything if EventService has a limit that is orders of magnitude larger than it actually needs.  I just wanted to preserve the option of keeping the limit low."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, at some point, we should refactor this code so that we can do: https://gerrit.openbmc.org/c/openbmc/bmcweb/+/39409\n\nand we don't have to buffer the request in bmwcweb at all.  That way, it could be 4GB, and bmcweb would just happily stream it.  IMO, that's the long term answer."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Does it matter that we need to perform aggregation steps like prefix fixing on the response as well as adding satellite only links to Members arrays? \n (This third type will also be needed https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60556).\n \n We could probably get by on operating on individual json objects instead of an entire json response.  I don't know if streaming itself supports that.  Would we need some sort of intermediary where we stream to the aggregation handler and the handler buffers just enough to perform operations before streaming it on to the client?\n\nI think the short term answer is creating a separate connection pool for aggregation and having its limit be effectively infinite."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Does it matter that we need to perform aggregation steps like prefix fixing on the response as well as adding satellite only links to Members arrays? \n\nWe will still need to do that, we'd just do it on the streaming response rather than in a single batch.\n\n>  (This third type will also be needed https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60556).\n>  \n>  We could probably get by on operating on individual json objects instead of an entire json response.  I don't know if streaming itself supports that.\n\nNeeds looked into if nlohmann supports it.  I know boost::json does, but that would be a pretty invasive change.  Alternatively, maybe aggregation uses boost::json, and core uses nlohmann.  IDK, something to consider.\n\n>  Would we need some sort of intermediary where we stream to the aggregation handler and the handler buffers just enough to perform operations before streaming it on to the client?\n\nprecisely.  This is also roughly how the websocket stuff works.\n\n> \n> I think the short term answer is creating a separate connection pool for aggregation and having its limit be effectively infinite.\n\nAgreed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> We will still need to do that, we'd just do it on the streaming response rather than in a single batch.\n\nACK. And as part of that I'm assuming response handlers would need to be rewritten to process a streaming response instead of singularly complete response."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -2
                },
                {
                    "file": "config/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 49,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "6058ecd6c011fb5f50ed5cd7a99ba6a089a76a0a",
            "parents": [
                "5c3e927283e32e1633ccd409f34ee17fab626ca1"
            ],
            "ref": "refs/changes/31/61131/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1677539230,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/bmcweb_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -2
                },
                {
                    "file": "config/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 48,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "bf3b3a78919fd2e608e3b1bcf10e531eee526d22",
            "parents": [
                "5c3e927283e32e1633ccd409f34ee17fab626ca1"
            ],
            "ref": "refs/changes/31/61131/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1677563906,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -8
                },
                {
                    "file": "config/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 69,
            "sizeDeletions": 13
        },
        {
            "number": 4,
            "revision": "068a87ce96da5604395068b5489b3d8f76f33c42",
            "parents": [
                "b9d679d1ce64141342e8a845533ce6af9901aae8"
            ],
            "ref": "refs/changes/31/61131/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1677566417,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Would it make more sense to just make two ConnectionPool objects, and remove the singleton?  One would be owned directly by EventServiceManager, and the other would be a singleton in the aggregation namespace.\n\nIMO, this keeps us more RAII aware."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We effectively make two ConnectionPool objects now since the key for the ConnectPool map is now \"destIP:destPort:RequestSource\" instead of just \"IP:PORT\"."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Right, but there's nothing tying the destruction of the two to their owner."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -6
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 21
        },
        {
            "number": 5,
            "revision": "5877867e0059f79e53e19f623b6f81fd69e69acf",
            "parents": [
                "1589c08bbd84f2531713d688665c5c60fe7c143a"
            ],
            "ref": "refs/changes/31/61131/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1677891359,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 336,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pretty sure this is the default."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 336,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'll look it up and see.  Even if it is the default, is it alright to just be explicit and leave it as is?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 336,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -6
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 21
        },
        {
            "number": 6,
            "revision": "60948a9f057c610ed0d8ec92a01d641bcac33f2f",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678817817,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I really don't like that we're breaking an abstraction boundary here.  \"HttpClient\" as a class should have no knowlege of either of these use cases, it should be a generic, \"http client\"\n\nlet me see if I can put up a patchset for what I'm thinking."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "You're talking about going back to like it was before the HTTP client refactor, right?  It'd be undoing the switch to the singleton.  If reverting that portion of the refactor is the correct thing to do then it is what it is.\n\nIs your thought to give the RedfishAggregator and the EventServiceManager classes their own HttpClient members?  Then the constructor of HttpClient could in some way accept an argument for the response read limit and that will eventually propagate into the connection objects."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep.  You got it.  Current patchset does this.  I'm going to close out this comment for now, because the patchset that's up does this.  We'll treat any comments as new things."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -6
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -13
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 21
        },
        {
            "number": 7,
            "revision": "0d44909d965a54c91a50269b73859e21d901d71f",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/7",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678832809,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -140
                }
            ],
            "sizeInsertions": 114,
            "sizeDeletions": 186
        },
        {
            "number": 8,
            "revision": "51f31b0cc5c5cb507b955278630a8ad28ea69185",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/8",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678833557,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 888,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I don't think we currently use id so removing it should be fine.  However, note that if we add metric reporting to the HttpClient then we may wish to use it to differentiate if the request should be associated with a specific satellite BMC.\n\nAdd it back in the future shouldn't be that big of a deal, it's just something to consider."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 888,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> with a specific satellite BMC.\n\nLets cross that bridge when we get there.  Agree, we might want to add this back, but I was getting \"unused variable\" warnings that I needed to squelch."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Currently when we change the retry policy it only applies to requests sent after the update.  Should we be concerned that with this change any changes will retroactively apply to active or currently queued requests?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think we should be worried, and arguably this behavior is better.  When you update a policy, you expect it to be applied as soon as possible."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "SGTM"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "nit, add a comment here as well to indicate that 0 means the limit will be unlimited."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Actually, unlimited is not the default limit.  It is 1MB for requests and 8MB for responses https://1973.beastdocs.prtest.cppalliance.org/libs/beast/doc/html/beast/ref/boost__beast__http__parser/body_limit.html\n\nIf the passed value is 0 then you need to call \"parser->body_limit(boost::none)\" to actually make the limit unlimited"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 328,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "TIL.  Fixed to just use boost::optional"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 439,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We're still using strings to indicate policy actions.  I think we talked before about making these enums, but that's probably a problem for another day."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 439,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I tried to do that as part of this change.  holy hell is it a mess, because we store the persistent data as strings not enums, so you still need to write to_string and from_string methods.  We can do it at some point, but not in this commit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -140
                }
            ],
            "sizeInsertions": 116,
            "sizeDeletions": 186
        },
        {
            "number": 9,
            "revision": "62d25438c59a1d3694eba98012cf86d25ed844f1",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/9",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678833596,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "nit, update to reflect Ed's changes of removing the singleton and making HttpClient more generic"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "This will need to be updated to make sure all of the functionality is still there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Overall I'm good with the approach this is taking.  Mostly just have some minor nits and questions."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -140
                }
            ],
            "sizeInsertions": 117,
            "sizeDeletions": 186
        },
        {
            "number": 10,
            "revision": "54b4984808c4f9cc3732324f17d961f64c895465",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/10",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678836906,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 59,
                    "deletions": -139
                }
            ],
            "sizeInsertions": 121,
            "sizeDeletions": 185
        },
        {
            "number": 11,
            "revision": "7e11282c831777a6602185f59ec661ba44045205",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/11",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678836969,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 59,
                    "deletions": -139
                }
            ],
            "sizeInsertions": 121,
            "sizeDeletions": 185
        },
        {
            "number": 12,
            "revision": "a4db591f40fab0c53cb206d5421447e177a3e7a1",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/12",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678837428,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -139
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 185
        },
        {
            "number": 13,
            "revision": "d46ef01dfc8505a47c8b488df4963a91b9e53599",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/13",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678897005,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 379,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'm locally testing and I'm seeing \"webserver_main.cpp\" produce this CRITICAL error: \"Threw exception to main: bad_function_call\".  Here is the lead-up in the logs:\n\n```\nrecvMessage() Header Response Code: 200\n0x85ac88 setting completion handler\n0x858998 Connection closed, total 1\nThrew exception to main: bad_function_call\n```\n\nI think it's being caused by the commented line.  For aggregation, the function getting called here should be RedfishAggregator::aggregationRetryHandler().  \n\nThat function when called prints \"Received <respcode> response from satellite\" to the log.  I do not see its message in the debug log before the exception occurs."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 379,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "The issue was each ConnectionPool needed to be a shared_ptr.  Restoring that in the latest patch fixed the issue."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": -21
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": -139
                }
            ],
            "sizeInsertions": 118,
            "sizeDeletions": 185
        },
        {
            "number": 14,
            "revision": "86f7db9c7b6efe5fa77da4d1aff14529470756c9",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/14",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678923033,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 193
        },
        {
            "number": 15,
            "revision": "3f78b9fe952a4ffd2c78bf69dc1b9dc5aaa89509",
            "parents": [
                "5315c1b149b724d0395f42ca75d4660aaecdf351"
            ],
            "ref": "refs/changes/31/61131/15",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1678924599,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I know I am late to the game here, apologies. We would have a similar use case for aggregation, large logging or binary payloads that exceed 128 KB. I just worry about not having a limit at all.. Would 5 MB or 10 MB or even 20 or 50 MB make sense? If the payload was 200 MB could that cause bmcweb to crash ? Can we talk about an insanely large payload and how that would work?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We keep getting burned on trying to set one size fits all limits.  I suspect this will become more noticeable now that merging https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60727 means that we now correctly support offloading $expand to satellites and the resulting response can be quite large.\n\nIf a client wants to for instance try to $expand the entire tree of a satellite then I want them to be able to do so at their own risk.  Yes we will attempt to read in the entire payload even if it's enormous like 200MB.  If that is large enough to run out of memory then I think bmcweb would crash in the same way it would if it ran out of memory just from locally processing requests without using aggregation.  \n\nSetting a specific limit also won't provide the same protection when we get to multi-satellite BMC systems.  The true limit for an aggregated payload becomes N*LIMIT if the request includes a top level collection.  \n\nIf we must have some sort of limit for aggregation then my strong preference is to make it a compiler option and leave it up to users to decide what limit (if any) they want to set.  Otherwise, I think we'll keep finding use cases where we need to further increase the limit."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, the long term solution here is to stream the sattelite responses, and rewrite on the fly, but that's hard.\n\n> 50 MB make sense\n\nThat might be reasonable.  Carson, would 50MB fit all of your uses?\n\nAlternatively, maybe we could do something like \"20% of available bmc ram\"."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Streaming the responses sounds like a good long term solution.  I think 50MB will work until then."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I updated to 50MB.  I'd like to see this patchset get on master, and we can always retune."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "There was a verification failure so I made a change to fix that.  I also updated the commit message to reflect the limit being 50MB instead of being completely removed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Good point.  Forgot to update the commit message."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 193
        },
        {
            "number": 16,
            "revision": "391d581426dfe85f7552a50349d50a1188b2f6a0",
            "parents": [
                "535c760b6b039c100de6569cbad4bd8ca60bd3b0"
            ],
            "ref": "refs/changes/31/61131/16",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1679006716,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 134,
            "sizeDeletions": 193
        },
        {
            "number": 17,
            "revision": "f05c98bc1a81c87b3c07750bf736c7b8e50f6f8b",
            "parents": [
                "535c760b6b039c100de6569cbad4bd8ca60bd3b0"
            ],
            "ref": "refs/changes/31/61131/17",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1679006841,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Even though I'm listed as the Owner, I'm giving +1 because of how much the patch has deviated from the code that I actually pushed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 133,
            "sizeDeletions": 193
        },
        {
            "number": 18,
            "revision": "b3ca9f30c75a357d541ec96f1647f187e818012b",
            "parents": [
                "535c760b6b039c100de6569cbad4bd8ca60bd3b0"
            ],
            "ref": "refs/changes/31/61131/18",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1679330982,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 133,
            "sizeDeletions": 193
        },
        {
            "number": 19,
            "revision": "18cd4c95c3b6807f45b98e4c95ae1af1fcd55667",
            "parents": [
                "8b2521a5a3be479814beb316975bf3de0b4e378f"
            ],
            "ref": "refs/changes/31/61131/19",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1679344417,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 193
        },
        {
            "number": 20,
            "revision": "d14a48ff5e539633f2e3180525f3779f90ad3e78",
            "parents": [
                "8b2521a5a3be479814beb316975bf3de0b4e378f"
            ],
            "ref": "refs/changes/31/61131/20",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1679344663,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I am good with this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -21
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/lib/event_service.hpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -32
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -136
                }
            ],
            "sizeInsertions": 134,
            "sizeDeletions": 193
        }
    ]
}