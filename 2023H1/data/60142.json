{
    "project": "openbmc/phosphor-debug-collector",
    "branch": "master",
    "id": "I9c7b3f18d049b7291ee799935002aa9fb129cbf9",
    "number": 60142,
    "subject": "Remove double inheritance on faultlog entry",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/60142",
    "hashtags": [],
    "createdOn": 1673285401,
    "lastUpdated": 1673460811,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1673285401,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1673285424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1673285424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1673285482,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58773/ : SUCCESS"
        },
        {
            "timestamp": 1673286952,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673287422,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673289762,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1673290510,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673291122,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673300675,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673333851,
            "reviewer": {
                "name": "Claire Weinan",
                "email": "cweinan@google.com",
                "username": "daylight22"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673340254,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673342429,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673373446,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673380358,
            "reviewer": {
                "name": "Claire Weinan",
                "email": "cweinan@google.com",
                "username": "daylight22"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1673411562,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1673411585,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1: Code-Review+2"
        },
        {
            "timestamp": 1673460811,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5fd768d699d331418c85cd3b9762eac34c602ac2",
            "parents": [
                "9d26e4fa3d9e5e736c631c81e2981da844825b87"
            ],
            "ref": "refs/changes/42/60142/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1673285401,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "Unique interfaces for each dump were added for BMCweb to differentiate between dumps, but if the fault log is not having an interface like xyz.openbmc_project.Dump.Entry.BMC then EntryIfacs itself was not needed, right? \n\nWe can get rid of these interfaces if we have a different method to indicate the type of the dump, maybe a dump-type property to the entry."
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm having a little trouble parsing the above, and what it has to do with this patchset.  Can this patchset go forward as-written, or is there some other change that's needed?"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "It looks good to me.. but my question was why this virtual public EntryIfaces was added"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, so roughly the same question I ask in the commit message."
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "Sure, in the commit message, I read it as to why EntryIfaces are needed, so I was trying to explain why the BMC dump currently requires it."
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK."
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "I do intend to add the interface xyz.openbmc_project.Dump.Entry.FaultLog (https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml). Example usage here (WIP): https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/55934/13/faultlog_dump_entry.hpp"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Looks like this double declaration is not really required . I think we can remove this virtual inheritance also here. Discussion related to this. https://stackoverflow.com/questions/23231342/can-you-inherit-the-same-class-twice"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Thanks Claire for the inputs. Can you share the plan for getting your changes ready for reveiw?\n\nEd,\n  Are you ok to wait for Claire's merge or is it blocking your work?"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's blocking sdbusplus, which is now failing because of the double inheritence (given the destruction no longer override).  While we could back it out, I don't think this change has any ill effects, and I think can go in?"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Claire Weinan",
                        "email": "cweinan@google.com",
                        "username": "daylight22"
                    },
                    "message": "It should be fine to remove Entry's inheritance from EntryIfaces for now. I'll be able to add it back when adding the dbus interface xyz.openbmc_project.Dump.Entry.FaultLog, right? (Similar to what we have in bmc_dump_entry.hpp for BMC dump, which I assume does not generate the destructor ordering warning.)"
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "correct."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "faultlog_dump_entry.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -8
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 8
        }
    ]
}