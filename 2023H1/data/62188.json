{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Id1ab8f1765110f58f22670db18db7ed226da6b57",
    "number": 62188,
    "subject": "Add design doc about optionality",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/62188",
    "hashtags": [],
    "createdOn": 1680714160,
    "lastUpdated": 1685658946,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1680714160,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1680714203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680714203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1680714225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/63753/ : FAILURE"
        },
        {
            "timestamp": 1680718116,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1680718194,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680718194,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1680718215,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63768/ : SUCCESS"
        },
        {
            "timestamp": 1680720133,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1680720239,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1680720239,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1680720261,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63770/ : SUCCESS"
        },
        {
            "timestamp": 1682436021,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1682438360,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1682438376,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1682438415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1682438416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1682438438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64916/ : SUCCESS"
        },
        {
            "timestamp": 1682438885,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1682554430,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1682615881,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1682640167,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1682664881,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683042834,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683061145,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683129594,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683165528,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683215546,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1683255579,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1685643721,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1685658838,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Commit message was updated.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685658843,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Patch Set 5 was rebased\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1685658866,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685658867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1685658868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1685658868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1685658915,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/67877/ : SUCCESS"
        },
        {
            "timestamp": 1685658937,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1685658938,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6: Verified+1"
        },
        {
            "timestamp": 1685658946,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9d1f43a033cc7e389ec42c688436ac9d8a2ddf04",
            "parents": [
                "afdb19838adb1bc577a0f3f3b5b22fad1885150f"
            ],
            "ref": "refs/changes/88/62188/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1680714160,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "e9eb5e13bc082fcf9284b2f9e1e5ebece94ed7b9",
            "parents": [
                "1e09b3cbdb223e2885bc6ba83e84a5cd5a728776"
            ],
            "ref": "refs/changes/88/62188/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1680718116,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "process/subproject-maintainership.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "60f568886321c2acbea12d76b46b3821f8f9ebe7",
            "parents": [
                "1e09b3cbdb223e2885bc6ba83e84a5cd5a728776"
            ],
            "ref": "refs/changes/88/62188/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1680720133,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Makes sense to me"
                },
                {
                    "file": "architecture/optionality.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Not sure if a sub-note is relevant here where we say that we want all features enabled by default in the CI env? I see that as an area of confusion quite often as well."
                },
                {
                    "file": "architecture/optionality.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That probably wouldn't go in this section, given that this is USER opt-in features, and in CI we would enable all developer opt in features.\n\nAdded a sentence."
                },
                {
                    "file": "architecture/optionality.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "process/subproject-maintainership.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "0f8a802bd323acd269864b50d8b9dc9c34f8a579",
            "parents": [
                "1e09b3cbdb223e2885bc6ba83e84a5cd5a728776"
            ],
            "ref": "refs/changes/88/62188/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1682438376,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'm not sure if it fits here exactly but I wouldn't mind seeing words to discourage build-time configurable features as it blows up the CI matrix. Features that are disabled by default at build time don't tend to get test coverage and are frequently broken. Generally, effort should be made to make it possible to build all supported features for an application in a single build configuration."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I'm not sure if it fits here exactly but I wouldn't mind seeing words to discourage build-time configurable features as it blows up the CI matrix.\n\nAgreed it's something that we should tackle, but that's a can of worms I'd like to avoid in this patch.  To some extent we need to extend this to include a definition of \"features\" and \"policies\".  Policies (for example https://github.com/openbmc/bmcweb/blob/02e01b5108d46720a0b438c0d79952464320d954/meson_options.txt#L296) aren't things that can be simply enabled or disabled like a feature can, and require the developer to make a choice about how their system should respond, and we need to differentiate them before we can talk about the CI matrix, although I'm not sure the CI matrix blowup is as big of a deal as we think.  Ideally folks are committing enough CI resources and machine layers that their configs of the matrix can be tested, and if it's a configuration nobody uses, so be it.\n\n> Features that are disabled by default at build time don't tend to get test coverage and are frequently broken.\n\nAgreed.\n\n> Generally, effort should be made to make it possible to build all supported features for an application in a single build configuration.\n\nEasier said than done, and has implications for things like \"should developers wait for builds to finish for features they'll never use?\"\n\nThese are all interesting questions, but I'd like to keep this patchset on the less controversial stuff for the moment if that's ok."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> > Generally, effort should be made to make it possible to build all supported features for an application in a single build configuration.\n\n> Easier said than done, and has implications for things like \"should developers wait for builds to finish for features they'll never use?\"\n\nMaybe I needed to be a bit more explicit with what I meant here, but the intent was that:\n\n1. Any build-time options are enabled by default\n2. Design the code such that build options aren't mutually exclusive\n\nDevelopers that don't care about features can just turn them off, but on-by-default means that they get build and test coverage in CI."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "speaking of which: https://gerrit.openbmc.org/c/openbmc/pldm/+/62954"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Any build-time options are enabled by default\n\nRight, so should I have to enable IBM OEM Redfish by default?  Should IBM have to enable Google OEM by default?  Should the insecure options be the default?  I think the answer is more subtle than just enabling everything.\n\n#2 makes sense to me.\n\n> on-by-default means that they get build and test coverage in CI.\n\nBut it also means that if those patches have insecurities or stability problems, they take on that burden as well without realizing it.  I think there's some nuance in defaults that I'm not fully prepared to write down yet, because I'm still trying to work it out in my head.\n\n> https://gerrit.openbmc.org/c/openbmc/pldm/+/62954\n\nYep......   I think \"don't break the build for things that are working\" is a different statement \ud83d\ude0a"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> > Any build-time options are enabled by default\n> \n> Right, so should I have to enable IBM OEM Redfish by default?  Should IBM have to enable Google OEM by default?  Should the insecure options be the default?  I think the answer is more subtle than just enabling everything.\n\nI think you're conflating meson option defaults and distro/machine configuration here.\n\nmeson option defaults values are relevant for developers working on the repository directly, and CI.\n\n`PACKAGECONFIG`s for the distro and the machine should always be tightly scoped to the requirements of the machine and rarely accept defaults specified by the underlying repository. Relying on the repository defaults is lazy and should be addressed immediately by fully describing the configuration required for the machine via `PACKAGECONFIG`.\n \n> \n> #2 makes sense to me.\n> \n> > on-by-default means that they get build and test coverage in CI.\n> \n> But it also means that if those patches have insecurities or stability problems, they take on that burden as well without realizing it.  I think there's some nuance in defaults that I'm not fully prepared to write down yet, because I'm still trying to work it out in my head.\n\nI think it's likely addressed by my discussion above.\n\n> \n> > https://gerrit.openbmc.org/c/openbmc/pldm/+/62954\n> \n> Yep......   I think \"don't break the build for things that are working\" is a different statement \ud83d\ude0a\n\nright, but the build was only broken after I enabled the off-by-default option, which meant it wasn't caught in CI"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > Any build-time options are enabled by default\n> > \n> > Right, so should I have to enable IBM OEM Redfish by default?  Should IBM have to enable Google OEM by default?  Should the insecure options be the default?  I think the answer is more subtle than just enabling everything.\n> \n> I think you're conflating meson option defaults and distro/machine configuration here.\n> \n> meson option defaults values are relevant for developers working on the repository directly, and CI.\n> \n> `PACKAGECONFIG`s for the distro and the machine should always be tightly scoped to the requirements of the machine and rarely accept defaults specified by the underlying repository.\n> Relying on the repository defaults is lazy and should be addressed immediately by fully describing the configuration required for the machine via `PACKAGECONFIG`.\n>  \n> > \n> > #2 makes sense to me.\n> > \n> > > on-by-default means that they get build and test coverage in CI.\n> > \n> > But it also means that if those patches have insecurities or stability problems, they take on that burden as well without realizing it.  I think there's some nuance in defaults that I'm not fully prepared to write down yet, because I'm still trying to work it out in my head.\n> \n> I think it's likely addressed by my discussion above.\n> \n> > \n> > > https://gerrit.openbmc.org/c/openbmc/pldm/+/62954\n> > \n> > Yep......   I think \"don't break the build for things that are working\" is a different statement \ud83d\ude0a\n> \n> right, but the build was only broken after I enabled the off-by-default option, which meant it wasn't caught in CI\n\n\nI'm not sure I agree with everything above about machines having to know every configuration option, but that's good to know this is where the root of our disagreement is.  My understanding is that today Meson defaults and CI are identical.  I think we both agree that CI should test as many configurations as it can, including the everything-enabled build, but back to this review, I'm not sure how to add that without making statements about infrastructure that doesn't yet exist.  I don't believe we have any matrix testing capability, aside from the per-machine matrix, so I'm not sure what this doc could even say aside from something idealistic."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> > > > Any build-time options are enabled by default\n> > > \n> > > Right, so should I have to enable IBM OEM Redfish by default?  Should IBM have to enable Google OEM by default?  Should the insecure options be the default?  I think the answer is more subtle than just enabling everything.\n> > \n> > I think you're conflating meson option defaults and distro/machine configuration here.\n> > \n> > meson option defaults values are relevant for developers working on the repository directly, and CI.\n> > \n> > `PACKAGECONFIG`s for the distro and the machine should always be tightly scoped to the requirements of the machine and rarely accept defaults specified by the underlying repository.\n> > Relying on the repository defaults is lazy and should be addressed immediately by fully describing the configuration required for the machine via `PACKAGECONFIG`.\n> >  \n> > > \n> > > #2 makes sense to me.\n> > > \n> > > > on-by-default means that they get build and test coverage in CI.\n> > > \n> > > But it also means that if those patches have insecurities or stability problems, they take on that burden as well without realizing it.  I think there's some nuance in defaults that I'm not fully prepared to write down yet, because I'm still trying to work it out in my head.\n> > \n> > I think it's likely addressed by my discussion above.\n> > \n> > > \n> > > > https://gerrit.openbmc.org/c/openbmc/pldm/+/62954\n> > > \n> > > Yep......   I think \"don't break the build for things that are working\" is a different statement \ud83d\ude0a\n> > \n> > right, but the build was only broken after I enabled the off-by-default option, which meant it wasn't caught in CI\n> \n> \n> I'm not sure I agree with everything above about machines having to know every configuration option, but that's good to know this is where the root of our disagreement is.\n\nRight, we can iterate on the concepts outside of this patch.\n\nBut to try to round out the discussion, I don't think it's required that all machines know all options. Absence of an option in `PACKAGECONFIG` implies that the option is disabled, not that build system's default value is applied. Only an absence of a `PACKAGECONFIG[...]` specification for the option in the package's recipe implies the build system's default value. If the recipe specifies a `PACKAGECONFIG[...]` for each build system options then an empty `PACKAGECONFIG` explicitly disables all options. Machines therefore only need to explicitly enable what they care about.\n\n> My understanding is that today Meson defaults and CI are identical.\n\nRight. It's easiest if CI just uses the defaults for options so we don't have to specify the options in CI.\n\n> I think we both agree that CI should test as many configurations as it can, including the everything-enabled build\n\nAgree.\n\n> but back to this review, I'm not sure how to add that without making statements about infrastructure that doesn't yet exist. I don't believe we have any matrix testing capability, aside from the per-machine matrix, so I'm not sure what this doc could even say aside from something idealistic.\n\nI'm trying to argue that we don't need any further infrastructure to exist :) Rather, we should properly exploit bitbake's `PACKAGECONFIG` to control what's built by bitbake for a particular machine. From there, the only statement we need is that any build option introduced in a subproject must be enabled by default so we get CI coverage.\n\nHaving said that, I've already +1'ed the patch. I'll mark this as resolved so we can discuss it separately."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Absence of an option in PACKAGECONFIG implies that the option is disabled\n\nIf all options were simple enable/disable, I would completely agree with you, but there's things like \"should you enforce content-type?\" or \"Should you support legacy incorrect behavior?\" that doesn't cleanly fit into a feature enabled model, and for new platforms, certainly shouldn't be the default.\n\n> Rather, we should properly exploit bitbake's PACKAGECONFIG to control what's built by bitbake for a particular machine.\n\nThis is making more sense now what you're proposing, and while I wish our platform maintainers were more active, I worry that they're not going to keep their PACKAGECONFIG up to date, and asking a user of a feature that should be the default for all platforms to go update N platforms work of config seems like overkill.\n\n> Having said that, I've already +1'ed the patch.\n\nThank you for the discussion.  I really appreciate it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'll send a change proposing wording along the lines of what Patrick wrote in Discord, and we can discuss it all further on that patch:\n\nhttps://discord.com/channels/775381525260664832/867820390406422538/1103508562765938778"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "@stwx.  I think this can merge?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "process/subproject-maintainership.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 96,
            "sizeDeletions": 2
        },
        {
            "number": 5,
            "revision": "ef65b6d5a8bd6b0b269c53bec554c52ade62eea5",
            "parents": [
                "1e09b3cbdb223e2885bc6ba83e84a5cd5a728776"
            ],
            "ref": "refs/changes/88/62188/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1685658838,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "process/subproject-maintainership.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 94,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "f44abd66eca86b14b662dd5fa0b902b0a4e0af9a",
            "parents": [
                "d62d386d16b80442274cc997e8e51224af2425e1"
            ],
            "ref": "refs/changes/88/62188/6",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1685658843,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "process/subproject-maintainership.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "designs/design-template.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "architecture/optionality.md",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 94,
            "sizeDeletions": 2
        }
    ]
}