{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "nvme-mi",
    "id": "I2b8d172ed826ca0798b472a8c0bb95c8677e60bb",
    "number": 57056,
    "subject": "nvmesensor: Add NVMe-MI protocol and controller",
    "owner": {
        "name": "Hao Jiang",
        "email": "jianghao@google.com",
        "username": "drakedog2008"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57056",
    "hashtags": [],
    "createdOn": 1662749831,
    "lastUpdated": 1682554611,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1662749831,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1662749858,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1662749884,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662749884,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1662749917,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50586/ : FAILURE"
        },
        {
            "timestamp": 1663782593,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1663782629,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663782629,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1663782647,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52161/ : FAILURE"
        },
        {
            "timestamp": 1663830322,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1663830386,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663830386,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1663830623,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52215/ : FAILURE"
        },
        {
            "timestamp": 1665014759,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1676598145,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676598174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676598174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1676598189,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61163/ : FAILURE"
        },
        {
            "timestamp": 1676600242,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Topic set to nvme-mi"
        },
        {
            "timestamp": 1676651342,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676651342,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1676651381,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61221/ : FAILURE"
        },
        {
            "timestamp": 1676874895,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1676881726,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1676971460,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1677009764,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 4:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1681257256,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681257277,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681257277,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1681257487,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/63995/ : FAILURE"
        },
        {
            "timestamp": 1682548879,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1682548911,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1682548912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1682548930,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65029/ : FAILURE"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "2cb5c4e512eb384054efdb7f38ad9f07cc219fc8",
            "parents": [
                "57d2ef2e0b49c34cd93f55e533cadf494201846b"
            ],
            "ref": "refs/changes/56/57056/1",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1662749831,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -4
                },
                {
                    "file": "subprojects/stdplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 64,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 356,
            "sizeDeletions": 6
        },
        {
            "number": 2,
            "revision": "8e5ed7832831a78a17c74ecdaa157000348af699",
            "parents": [
                "a5b6491a47278ab1e5c62da731c64f7896507c70"
            ],
            "ref": "refs/changes/56/57056/2",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1663782593,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 421,
            "sizeDeletions": 8
        },
        {
            "number": 3,
            "revision": "64d043cf035229acfcebff8165bf5c91c8873b09",
            "parents": [
                "aaf7da380048c51af51116abef8377b271fe7814"
            ],
            "ref": "refs/changes/56/57056/3",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1663830322,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I don't know which change to comment on, but I was testing this (Top of the chain) with mctpd. Maybe the reactor is not working/missing (I didn't look too into the code yet)?\n\nI needed to restart the nvmesensor.service to see the things get populated."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "It is not about the reactor model, it is because of the MI over MCTP over I2C implemetation\n\nSome device links the oob implementation to inband, meaning the MCTP over I2C will not be responsive at the Entity-Manager probe time from FruDevice. You need to delay the nvmesensor or introduce another trigger for mi-mctp readiness."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 422,
            "sizeDeletions": 7
        },
        {
            "number": 4,
            "revision": "7c10e1b666f11716f60eea6d2e604c28e14350ab",
            "parents": [
                "c5d6155c796563acd2a6fd21fb1f1862f26a9750"
            ],
            "ref": "refs/changes/56/57056/4",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1676598145,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/NVMeMi.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Can we upstream this D-Bus interface(au.com.CodeConstruct.MCTP)? Would be good to have discussions around the use case."
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I believe doing MCTP EP detection inside NVMe-MI have its demerits.\nIf we follow this design, then \n1. Each daemon which supports different MCTP message type will have \"SetupEndpoint\" within it. Which will be a duplicate and results in decentralized MCTP device management.\n2. How do we handle devices which needs dynamic discovery? Hot pluggable devices?\n3. Let's say an MCTP device supports more than one MCTP message types, do we need to call \"SetupEndpoint\" from both? e.g.: NVMe drive which supports SPDM.\n4. What if the drive went for a reset? Which daemon will re-discover the device?\n\nIn short, having an mctp daemon which does centralize MCTP device management might be a better approach."
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "> In short, having an mctp daemon which does centralize MCTP device management might be a better approach\n\nThat's essentially what we have here; SetupEndpoint will not re-enumerate a device that it already knows about. The enumeration is centralised to mctpd - which collects enumeration results and publishes them to dbus.\n\n> Each daemon which supports different MCTP message type will have \"SetupEndpoint\" within it. Which will be a duplicate and hesults in decentralized MCTP device management.\n\nThe daemon only needs to call SetupEndpoint to turn a physical-layer address into a MCTP EID (and perform enumeration if necessary).\n\nDaemons can also enumerate the already-discovered endpoints if they don't need to start from a physical address. The libnvme code has provision for this (but it doesn't really fit with the dbus-sensors model, which starts discovery from an i2c address).\n\n> How do we handle devices which needs dynamic discovery? Hot pluggable devices?\n\nThe hotplug event should trigger the SetupEndpoint call, then the device will be enumerated and advertised on dbus.\n\nOther infrastructure can either react to the MCTP endpoint appearing on d-bus, or if it is notified at the i2c layer, it can call SetupEndpoint.\n\n> Let's say an MCTP device supports more than one MCTP message types, do we need to call \"SetupEndpoint\" from both? e.g.: NVMe drive which supports SPDM.\n\nyou can do, there's no harm in that.\n\nAgain, it depends what the starting point for that discovery process is.\n\n> What if the drive went for a reset? Which daemon will re-discover the device?\n\nthis really depends on the reset mechanism, and how the device is \"re-discovered\" after the reset."
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> > In short, having an mctp daemon which does centralize MCTP device management might be a better approach\n> \n> That's essentially what we have here; SetupEndpoint will not re-enumerate a device that it already knows about. The enumeration is centralised to mctpd - which collects enumeration results and publishes them to dbus.\n> \nI think the question is more about the duty of discovery/enumeration. As we discussed a while ago, the current mctpd works as passive to the caller of SetupEndpoint(), instead of generating the probe result itself. \n\n> > Each daemon which supports different MCTP message type will have \"SetupEndpoint\" within it. Which will be a duplicate and hesults in decentralized MCTP device management.\n> \n> The daemon only needs to call SetupEndpoint to turn a physical-layer address into a MCTP EID (and perform enumeration if necessary).\n> \n> Daemons can also enumerate the already-discovered endpoints if they don't need to start from a physical address. The libnvme code has provision for this (but it doesn't really fit with the dbus-sensors model, which starts discovery from an i2c address).\n> \nThey will not duplicate. Instead, they are pointing to the same mctpd object (on dbus). \n\nI proposed to use association between the mctpd path to the protocol specific client: \n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/53809/6/designs/nvmed.md#256\n> > How do we handle devices which needs dynamic discovery? Hot pluggable devices?\n> \n> The hotplug event should trigger the SetupEndpoint call, then the device will be enumerated and advertised on dbus.\n> \n> Other infrastructure can either react to the MCTP endpoint appearing on d-bus, or if it is notified at the i2c layer, it can call SetupEndpoint.\n> \n\nThe discovery for NVMe over MCTP is generated from FruDevice. The NVMe architecture is proposed with Fru Device on the i2c bus, for both storage device and enclosure. Other protocol services can have their own source of discovery (e.g. the usb event for plugging in security chip). \n\nI don't like the idea of \"Other infrastructure can either react to the MCTP endpoint appearing on d-bus\". If the protocol service is reator to mctpd object, then the only service call to mctpd `SetupEndpoint` should be EntityManager. Otherwise we will introduce a chain of dependency (probe service -> EM -> Proto service A -> mctpd -> proto service B). \n\n> > Let's say an MCTP device supports more than one MCTP message types, do we need to call \"SetupEndpoint\" from both? e.g.: NVMe drive which supports SPDM.\n> \n> you can do, there's no harm in that.\n> \n> Again, it depends what the starting point for that discovery process is.\n> \n\nBoth nvmed and spdmd can associate to the same mctp ep object. Two separate SetupEndpoint calls will return the same object. \n\nIn addition, who removes the mctp ep is more vital than who creates the ep, since the creation always points to the same ep. To the contrary, one proto service should dup the remove if the ep is still used by other proto services. \n\nIMHO, if multiple proto services detects hardware removal, they remove their own association first. When the association clears to 0, proto service will do `au.com.CodeConstruct.MCTP.Endpoint.Remove`. \n\n> > What if the drive went for a reset? Which daemon will re-discover the device?\n> \n> this really depends on the reset mechanism, and how the device is \"re-discovered\" after the reset.\n\nThe nvme daemon will be able to discover and handle the subsystem/controller level reset via `NVM Subsystem Health Status Poll`. It is purely on nvme level above mctp. \n\nif there is low level reset such as hot-removal, the \"re-discovered\" process should work the same as the initial discover process."
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Empty white space. Missed clang format?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "subprojects/libnvme.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -4
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 439,
            "sizeDeletions": 8
        },
        {
            "number": 5,
            "revision": "97ac25529c52ef27b4401505e4e23b94b8b43240",
            "parents": [
                "d17134eedf78366dcfb62361dbd5bcca4b685164"
            ],
            "ref": "refs/changes/56/57056/5",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1681257256,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "subprojects/libnvme.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -4
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 458,
            "sizeDeletions": 9
        },
        {
            "number": 6,
            "revision": "6b7d0be5cd5dc6a9627735133c4d159ac6ccd844",
            "parents": [
                "524e83fd41b72d7b092dfc146bd16983f83e79b7"
            ],
            "ref": "refs/changes/56/57056/6",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1682548879,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeMi.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "subprojects/libnvme.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeMi.cpp",
                    "type": "ADDED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -4
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -2
                },
                {
                    "file": "include/NVMeController.hpp",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 458,
            "sizeDeletions": 9
        }
    ]
}