{
    "project": "openbmc/fb-ipmi-oem",
    "branch": "master",
    "id": "Iaf8c060b1e8340280928e195c205455b88df5dfd",
    "number": 58435,
    "subject": "IPMI OEM Get 80 Port Record",
    "owner": {
        "name": "BonnieLo-wiwynn",
        "email": "Bonnie_Lo@wiwynn.com",
        "username": "BonnieLo"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/fb-ipmi-oem/+/58435",
    "hashtags": [],
    "createdOn": 1668666586,
    "lastUpdated": 1680205224,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1668666586,
            "reviewer": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1668666627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668666628,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1668666771,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55600/ : SUCCESS"
        },
        {
            "timestamp": 1668693098,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668693165,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668734412,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668737627,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1668747965,
            "reviewer": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1668747975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1"
        },
        {
            "timestamp": 1668747982,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668747982,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1668748127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55783/ : SUCCESS"
        },
        {
            "timestamp": 1668750565,
            "reviewer": {
                "name": "Kumar Thangavel",
                "email": "thangavel.k@hcl.com",
                "username": "HCL-BMC"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668758624,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1669646997,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1669670238,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1669771419,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1669773019,
            "reviewer": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1669773029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669773029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1669773075,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669773172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/56334/ : SUCCESS"
        },
        {
            "timestamp": 1669795215,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669827064,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1669959813,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669959862,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669960786,
            "reviewer": {
                "name": "Velumani Thangavel",
                "email": "velumanit@hcl.com",
                "username": "velumanit"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1670357977,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1670489181,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1670505704,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1670576641,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1670923060,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1671127166,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1671504776,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1674655709,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1675153529,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1675186038,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1675243772,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1675269939,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1675927951,
            "reviewer": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675928000,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675928000,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1675928142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60560/ : SUCCESS"
        },
        {
            "timestamp": 1676336534,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1680163684,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1680205221,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1680205224,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 4ae63e71c53db34cff1648100a6fe4559c1b7132"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "49bcca66dc9d4e179df290173498e5700985d759",
            "parents": [
                "e9baaff1437783d916e18b19d32d3b1fcb58e01a"
            ],
            "ref": "refs/changes/35/58435/1",
            "uploader": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "createdOn": 1668666586,
            "author": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "Already postcode is handled and able to read all postcodes right ? Do we need this handler ? If needed, please update in the commit message the need and use of this handler."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Exactly\n\nCurrently, all the POST codes can be saved in BMC.\n\nHowever, this handler is for user from host to get POST code sequence.\n\nWe will update commit message later."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 822,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "why the lastestPostCodeIdex = 1 ? not 0 ?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 822,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "The \"GetPostCodes\" method is implemented here.\n\nhttps://github.com/openbmc/phosphor-post-code-manager/blob/master/src/post_code.cpp#L38"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/oemcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 75,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "e1404beb0d8e324b61881696b7b1cdc86b77e92e",
            "parents": [
                "e9baaff1437783d916e18b19d32d3b1fcb58e01a"
            ],
            "ref": "refs/changes/35/58435/2",
            "uploader": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "createdOn": 1668747965,
            "author": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Kumar Thangavel",
                        "email": "thangavel.k@hcl.com",
                        "username": "HCL-BMC"
                    },
                    "message": "What will happen if postcode length is more than 230 ? will it take first(1 to 230 or n to 230)last postcodes?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "If POST code length is more than 230, it will return last 230 POST codes."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we use a more complete parsed RspType than a raw vector?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "In this handler, BMC gets POST codes and then saves in one vector and this vector will be the only response data."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Post codes are a vector of uint32 or uint64 though, right?  Not a raw buffer of uint8."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "We will check the POST code behavior."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\n\nAfter checking, we find out that if we use vector<uint64_t> to get post codes, the result is shown below.\n\nThere are many useless zeroes in the result, since BMC only save one byte post codes from BIC.\n\nAlthough we use uint64_t to save primary post codes, but BIC could only support one byte data currently.\nhttps://github.com/facebook/OpenBIC/blob/main/common/dev/snoop.c#L57\n\nroot@greatlakes:~# busctl call xyz.openbmc_project.Ipmi.Host /xyz/openbmc_project/Ipmi xyz.openbmc_project.Ipmi.Server execute yyyaya{sv} 0x30 0 0x49 0 1 \"hostId\" i 0\n(yyyyay) 49 0 73 0 1840 183 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 112 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 183 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 183 0 0 0 0 0 0 0 190 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 210 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 210 0 0 0 0 0 0 0 214 0 0 0 0 0 0 0 112 0 0 0 0 0 0 0 185 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 183 0 0 0 0 0 0 0 184 0 0 0 0 0 0 0 215 0 0 0 0 0 0 0 201 0 0 0 0 0 0 0 218 0 0 0 0 0 0 0 217 0 0 0 0 0 0 0 219 0 0 0 0 0 0 0 186 0 0 0 0 0 0 0 185 0 0 0 0 0 0 0 112 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 203 0 0 0 0 0 0 0 187 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 208 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 208 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 208 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 209 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 209 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 112 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 183 0 0 0 0 0 0 0 202 0 0 0 0 0 0 0 220 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 204 0 0 0 0 0 0 0 188 0 0 0 0 0 0 0 206 0 0 0 0 0 0 0 198 0 0 0 0 0 0 0 126 0 0 0 0 0 0 0 191 0 0 0 0 0 0 0 175 0 0 0 0 0 0 0 80 0 0 0 0 0 0 0"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The AMD systems have 4 byte post codes already.  How are we going to handle those?\n\nI don't think \"useless zeros\" is a good reason.  If we don't handle at least 4 byte post codes we're just going to be making changes to this code anyhow in the near future.  (I think there are ARM chips that use 64 byte post codes, so we should just follow what the dbus-interface is for post code sizes in the data we send here.)"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "We realized this situation as well.\n\nThus, we will discuss and provide a complete design for different CPU systems later."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\n\nAfter testing, the command results from host is below\n\n[root@OpenBIC_Refactor_Slot3 ~]# ipmitool raw 0x30 0x49\n 40 00 00 00 00 00 00 00 42 00 00 00 00 00 00 00\n 47 00 00 00 00 00 00 00 4f 00 00 00 00 00 00 00\n 61 00 00 00 00 00 00 00 68 00 00 00 00 00 00 00\n 70 00 00 00 00 00 00 00 79 00 00 00 00 00 00 00\n 91 00 00 00 00 00 00 00 92 00 00 00 00 00 00 00\n 94 00 00 00 00 00 00 00 95 00 00 00 00 00 00 00\n 96 00 00 00 00 00 00 00 ef 00 00 00 00 00 00 00\n 92 00 00 00 00 00 00 00 99 00 00 00 00 00 00 00\n 91 00 00 00 00 00 00 00 92 00 00 00 00 00 00 00\n 97 00 00 00 00 00 00 00 98 00 00 00 00 00 00 00\n 92 00 00 00 00 00 00 00 99 00 00 00 00 00 00 00\n 92 00 00 00 00 00 00 00 ad 00 00 00 00 00 00 00\n b1 00 00 00 00 00 00 00 84 00 00 00 00 00 00 00\n aa 00 00 00 00 00 00 00 e3 00 00 00 00 00 00 00\n\n\nAs we can see, due to IPMB limitation, this handler could only return some post codes from the end.\n\nIn our CPU system, post codes are one byte.\nHowever, we use uint64_t vector to return, there are 7 zeroes following our post codes.\nIn that case, the amount of post codes that BMC could return is really small.\n\nDo you agree with this design?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is getting the postcodes from the BMC over IPMI interesting?\n\nI'm trying to make sure that we don't have system-specific code for interacting with the BIC when it comes to postcodes.  How do we make this portable between systems with different processor architectures?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick,\n\nWe propose that we could add a option called \"support-post-code-byte\" in meson meaning that current CPU supports which kind of POST code for different CPU systems.\n\nIn that case, different projects could get corresponding POST codes without any meaningless zeroes."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I would prefer to avoid different meson options on different machines as much as possible because it means we don't get compile checking in CI and then things break in openbmc/openbmc.\n\nWhere are the \"extra zeros\" visible?  Is it just going across the dbus?  Is it going out the debug card?\n\nExtra stuff on the dbus doesn't matter, does it?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "After checking BIOS behavior, all the meaningful post codes should not be zero.\n\nHere we provide a design.\n\nFirst of all, we use uint64_t type vector to get all post codes so that we would not lose any post codes.\n\nSecondly, we can filter all zeroes in this uint64_t type vector and put all non-zero post codes into an uint8_t type vector.\n\nFinally, we return this uint8_t type vector as the return result.\n\nDo you agree with this idea?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Who is the \"return to\"?  I am missing the recipient of this IPMI command.  Is it going to the debug card?  Or something else?\n\nWe would need to add code to not just filter out zeros but instead... ensure all 64-bit integers have 0s in the upper N bytes, then chop out those upper N on all values.\n\nie. it is going to be a problem if you remove the 0s in one post code but not all the others."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "The recipient of this IPMI command is host.\n\nAfter entering this IPMI command in host console, it will display the POST code sequence on host console.\n\nThe design we propose is like below\n\nFor example:\n\nWith zeroes\n[root@OpenBIC_Refactor_Slot3 ~]# ipmitool raw 0x30 0x49\n40 00 00 00 00 00 00 00 42 00 00 00 00 00 00 00\n47 00 00 00 00 00 00 00 4f 00 00 00 00 00 00 00\n61 00 00 00 00 00 00 00 68 00 00 00 00 00 00 00\n70 00 00 00 00 00 00 00 79 00 00 00 00 00 00 00\n91 00 00 00 00 00 00 00 92 00 00 00 00 00 00 00\n94 00 00 00 00 00 00 00 95 00 00 00 00 00 00 00\n96 00 00 00 00 00 00 00 ef 00 00 00 00 00 00 00\n92 00 00 00 00 00 00 00 99 00 00 00 00 00 00 00\n\nFilter zeroes\n[root@OpenBIC_Refactor_Slot3 ~]# ipmitool raw 0x30 0x49\n40 42 47 4f 61 68 70 79 91 92 94 95 96 ef 92 99\n\nWe will filter all 0s in all post codes"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Understood.  Go ahead with the filtering as long as the filtering is not \"drop every 00\", as I said in my last comment."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Uploaded PS4."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 813,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Hi Patrick.\n\nWe have provided the solution for different POST code behavior.\n\nPlease review it."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 819,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this \"0\"?  Shouldn't it match the host ID?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 819,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "All the Dbus object path name is defined as\n/xyz/openbmc_project/State/Boot/PostCode0 no matter which host ID it is.\n\nReference:\nhttps://github.com/openbmc/phosphor-post-code-manager/blob/master/meson.build#L16\n\nBMC creates different Dbus services like xyz.openbmc_project.State.Boot.PostCode$host_id to save POST codes from different hosts."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 819,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please work with Velu to get the post code manager fixed.  This constant is wrong."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 819,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "We will work with Velu to try to fix this issue."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 819,
                    "reviewer": {
                        "name": "Velumani Thangavel",
                        "email": "velumanit@hcl.com",
                        "username": "velumanit"
                    },
                    "message": "Please find the fix in https://gerrit.openbmc.org/c/openbmc/phosphor-post-code-manager/+/59069. Kindly let me know if there is a question."
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 850,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is get<uint64_t> more obvious or is get<0>?"
                },
                {
                    "file": "src/oemcommands.cpp",
                    "line": 850,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/oemcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 77,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "16a9129f894d842142b63d23a77d5134af3f193d",
            "parents": [
                "e9baaff1437783d916e18b19d32d3b1fcb58e01a"
            ],
            "ref": "refs/changes/35/58435/3",
            "uploader": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "createdOn": 1669773019,
            "author": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/oemcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 77,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "f917d576e6670a4f0f04b8f0a05f4f99898b6382",
            "parents": [
                "5a4537b897c745a4e8d1214639f94cc025dccbd5"
            ],
            "ref": "refs/changes/35/58435/4",
            "uploader": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "createdOn": 1675927951,
            "author": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/oemcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "meson_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "4ae63e71c53db34cff1648100a6fe4559c1b7132",
            "parents": [
                "c0f918b57efe232bd6fcd59cb021bed8bce029c5"
            ],
            "ref": "refs/changes/35/58435/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1680205224,
            "author": {
                "name": "BonnieLo-wiwynn",
                "email": "Bonnie_Lo@wiwynn.com",
                "username": "BonnieLo"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/oemcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "meson_config.h.in",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        }
    ]
}