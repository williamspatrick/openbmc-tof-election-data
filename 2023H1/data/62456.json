{
    "project": "openbmc/libpldm",
    "branch": "main",
    "topic": "PLDM instance ID",
    "id": "Ia19870b1bcae9e614bda6e475b290faa0b327a73",
    "number": 62456,
    "subject": "requester: Add new APIs for instance ID allocation and freeing",
    "owner": {
        "name": "Rashmica K Gupta",
        "email": "rashmica@linux.ibm.com",
        "username": "RashmicaG"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/62456",
    "hashtags": [],
    "createdOn": 1681372273,
    "lastUpdated": 1682050266,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1681372273,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1681372305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681372305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1681372558,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64165/ : SUCCESS"
        },
        {
            "timestamp": 1681386886,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1681393475,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1681439052,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1681439135,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1681447088,
            "reviewer": {
                "name": "Vikash Chandola",
                "email": "vikash.chandola@intel.com",
                "username": "vikash-chandola"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1681699074,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1681800185,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681800185,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 2:\n\n(11 comments)"
        },
        {
            "timestamp": 1681800205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681800205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1681800212,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1681800240,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Topic set to PLDM instance ID"
        },
        {
            "timestamp": 1681800382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64354/ : SUCCESS"
        },
        {
            "timestamp": 1681805637,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1681860050,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1681860538,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1681877434,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681877434,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1681877447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681877448,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1681877680,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64427/ : SUCCESS"
        },
        {
            "timestamp": 1681884270,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(10 comments)"
        },
        {
            "timestamp": 1681890293,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1681950078,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681950078,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 4:\n\n(8 comments)"
        },
        {
            "timestamp": 1681950102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681950102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1681950331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64490/ : SUCCESS"
        },
        {
            "timestamp": 1681954917,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(7 comments)"
        },
        {
            "timestamp": 1681958757,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681958757,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1681958783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681958783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1681959015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64526/ : SUCCESS"
        },
        {
            "timestamp": 1681959684,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681959698,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681959698,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1681959933,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64531/ : SUCCESS"
        },
        {
            "timestamp": 1681963758,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1682045129,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1682047407,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1682048332,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1682049064,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1682049389,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1682049400,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1682050036,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1682050266,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Change has been successfully rebased and submitted as 36af84cdbb660953d73804a12dfda056c3ac9b08"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "c681299920fcf4d8c1dd8e69f65045d7fab05413",
            "parents": [
                "7992eb8415cb8d9939d8b635654b238a0848ee91"
            ],
            "ref": "refs/changes/56/62456/1",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681372273,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Not trying to promote my own work here necessarily, but I think it would be useful context to reference the blog posts I wrote in the commit message:\n\n1. https://amboar.github.io/notes/2023/03/28/motivating-a-new-scheme-for-pldm-instance-id-management-in-openbmc.html\n\n2. https://amboar.github.io/notes/2023/03/29/a-global-pldm-instance-id-allocator-for-libpldm.html"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "oh, another comment - I think the header should just go directly under `libpldm/` rather than nesting it under `libpldm/instance_id/`. What was your thought behind nesting it?"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "no reason that makes much sense! Moved."
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "pldm_iid_t and pldm_inst_id_t which is easier to read?"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "True, if you haven't spent a lot of time around instance ids, iid is not obvious \ud83d\ude0b"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 47,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "iid?"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 47,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 59,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Did you mean `pldm_instance_id_alloc`?"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 59,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 63,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "`iid`?"
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "line": 63,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 5,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Please remove all uses of the `err.h` macros (`warn{,x}()`, `err{,x}()`) and return error codes instead."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 5,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 16,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Using INSTANCE_ID or INST_ID is easy to reading than IID, I think."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 16,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 17,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I think the macro name end with `_MAX` or `_SIZE` should make more sense here."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 17,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Vikash Chandola",
                        "email": "vikash.chandola@intel.com",
                        "username": "vikash-chandola"
                    },
                    "message": "Should *ctx be freed if open failed and function returned in line 40."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Yeah I think it should. Done."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 83,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Which is initial value of ctx->prev[tid]?\nIs it 0? In that case, at line #89 the first allocated instance ID is 1 but not 0."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 83,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Changed to set initial value to 31 so the next value will be 0."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 104,
                    "reviewer": {
                        "name": "Vikash Chandola",
                        "email": "vikash.chandola@intel.com",
                        "username": "vikash-chandola"
                    },
                    "message": "If some call in warnx execution fails then errno will be missed."
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "line": 104,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/instance_id/instance_id.c",
                    "type": "ADDED",
                    "insertions": 173,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/instance_id/instance_id.h",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "src/instance_id/meson.build",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 287,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "4c033c851ca3ead67bc6b01182c356feedd8a39f",
            "parents": [
                "7992eb8415cb8d9939d8b635654b238a0848ee91"
            ],
            "ref": "refs/changes/56/62456/2",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681800185,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think there are a couple of small fixes we need. I've commented where necessary."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we need to clarify the returned error values are defined in terms of errno, for each function declared here."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we want to wrap this up in an `#if ...` like so:\n\n```\n#if defined(__STDC_HOSTED__)\n    /* Declarations above */\n#endif\n```\n\nThis way people integrating it into a freestanding environment will become aware that they're missing the implementation."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 69,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think I'd prefer we have the caller pass through the object and this function just populates it. This gives the caller control of whether the object storage is on the stack or the heap. Freestanding environments tend to want tight control of heap allocations, hence it's better if the API(s) cater to that.\n\nWhile this implementation doesn't work in a freestanding environment, we want the API itself to be applicable in both hosted and freestanding contexts.\n\nGiven this, we also should move the definition of `struct pldm_instance_id` into `include/libpldm/requester/instance-id.h` and adjust the function prototype to `int pldm_instance_id_init(struct pldm_instance_id *ctx, const char *dbpath)`"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Actually, disregard that. On reflection I think I got the trade-offs wrong. Specifically:\n\nThe struct members are implementation specific. When it comes to supporting some allocator in a freestanding environment, the content of the struct will necessarily be different. That would mean we have multiple ABIs for the one API, which isn't great for maintenance. It isn't changing one ABI to another linearly, it's maintaining multiple concurrently. Let's avoid that for now using the strategy you already have.\n\nHowever, I'd like some more stringent tests on the provided arguments:\n\n```\nif (!ctx) {\n    return -EINVAL;\n}\n\n/*\n * Make sure the provided pointer was initialised to NULL. In the future if we\n * stabilise the ABI this allows the caller to potentially pass a valid pointer to \n * a struct they've allocated\n */\nif (*ctx) {\n    return -EINVAL;\n}\n\n*ctx = calloc(1, sizeof(**ctx));\nif (!*ctx) {\n    return -ENOMEM;\n}\n```\n\nNote the switch to `-ENOMEM` for the `calloc()` error value and fixing the ordering of the parameters to `calloc()`"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We at least want to add:\n\n```\n*ctx = NULL;\n```\n\nafter the free so there's no visible pointer to an invalid object. However, it's probably better to use an internal variable and structure the code as follows:\n\n```\nstruct pldm_instance_id *lctx;\n...\n\nlctx = calloc(...);\n\n...\n\n*ctx = lctx;\n\nreturn 0;\n```"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 44,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 51,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As above regarding the function prototype."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 51,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ignore this."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "With the suggestions above we must drop the free() as well."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ignore this."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think I need convincing that removing the remaining checks in the sketch implementation is the right thing to do:\n\nhttps://gist.github.com/amboar/b8e997de57b88222d010c99ace80bf03#file-libpldm_iid-c-L154-L160\n\nIn both cases we could `return -EPROTO;`\n\nThis will signal to the caller that something is drastically wrong with the database rather than silently carrying on."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 134,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 165,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 275,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "2224745e978db7f1a4e930a4c51fc6d2c8e8287a",
            "parents": [
                "7992eb8415cb8d9939d8b635654b238a0848ee91"
            ],
            "ref": "refs/changes/56/62456/3",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681877434,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'm not sure I'm a fan of the arbitrary contraction of instance as `inst` in `pldm_inst_id_t`. Elsewhere we define `PLDM_TID_MAX` (to pick on something), and not e.g. `PLDM_TERM_ID_MAX`. Expanding it out would leave us with `typedef uint8_t pldm_instance_id_t` which then starts to look like it's directly associated with the `pldm_instance_id` symbol name for the struct.\n\nIf we can have `tid` and MCTP can have `eid`, why can't we have `iid` (and by extension e.g. `typedef uint8_t pldm_iid_t`)?\n\nHowever:\n\nI think the current naming of the API starts to blur the concept of two distinct types together:\n\n1. An instance ID (as used for framing a PLDM message)\n2. A database from which we can allocate an instance ID\n\nI think it would help cognitive load to keep them distinct."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 12,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I quite like `IID` for instance ID, but the difference between it and `TID` and `EID` are that they are both documented in the PLDM spec as an abbreviation while `IID` is not. I'm happy to go with whatever but I think if we go with `IID` we should add a comment in so it's super obvious.\n\nI agree with the struct name needing to change."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think I'd prefer we `s/Allocates/Instantiates/`.\n\n\nHowever (again):\n\nI think this sentence reinforces my point above. As it stands, `struct pldm_instance_id` represents a database, type 2 above, but the name suggests it represents type 1 above. If we renamed the API prefix to `pldm_instance_db_*` the sentence might instead read:\n\n> Instantiates an instance ID database object for a given database path\n\nIn this way `pldm_instance_db_alloc()` uses the provided database object (type 2) to allocate an instance ID (type 1), and `pldm_instance_db_free()` undoes the allocation of the instance ID and returns it to the database.\n\nWhat are your thoughts on basically doing an `s/pldm_instance_id/pldm_instance_db/` for the API's types and symbols?\n\nAlternatively, if `pldm_instance_db*` is too visually similar to `pldm_instance_id*`, how about `pldm_instance_pool*`?"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 16,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I think `pldm_instance_db` is probably a better description of the struct than `pldm_instance_pool`."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 22,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What's the relevant errno?"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 22,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 27,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "`s/Allocates/Instantiates/` as above. Also, I'd use \"instance ID database object\"."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 27,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Same question as above."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 31,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "\"instance ID database object\""
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 45,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "... from the instance ID database"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 45,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 52,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This should be in the `@return` documentation"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 52,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 54,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We should document the values implementations may return."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 54,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "instance ID database object"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 60,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Isn't the instance ID database object the struct? We aren't freeing that."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Uh, I think I highlighted the wrong thing. Disregard."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 179,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 293,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "7dc671ae5698f403e73d153fbbf1615f9dc247d8",
            "parents": [
                "6ef2aa90a7936631efff2a89ac4e1521458ea2a0"
            ],
            "ref": "refs/changes/56/62456/4",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681950078,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I have some minor documentation comments, but otherwise this looks good."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 24,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This reads as if the error values are greater than zero, but the implementation returns negative error codes.\n\nThe API must specify the behaviour, and the implementation must conform to it.\n\nGenerally the approach is to use negative error codes to align with libc APIs returning `-1` (i.e. the error check can consistently be `if (rc < 0)`).\n\nI think we should change the specification here to describe negative error codes."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 24,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 35,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This looks like a double dereference rather than specifying the type. I think it would improve clarity if we instead wrote this consistently in terms of dereference operators, so:\n\n> Returns -EINVAL if ctx is NULL or *ctx is not NULL."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 35,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 47,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Use of `close()` is an implementation detail. The API documentation is a specification of how a conforming implementation must behave. It needs to be explicit, exhaustive and independent of any possible implementation: the documentation needs to own the definition of the error codes that will be returned, and the implementation may only return those errors.\n\nConsider the case of a freestanding implementation of the API - such an implementation is unlikely to call anything that looks like close() and therefore is outside the current specification of the API. That is, the way the API is specified here makes such an implementation invalid (which is not what we want!)."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 47,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 66,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Need to properly specify the errors as per the discussion above."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 66,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 68,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I actually quite like that you haven't renamed the alloc and free functions. The result is quite satisfying, and isn't something that occurred to me. Nice!"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 68,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 82,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Need to properly specify the errors as per the discussion above."
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "line": 82,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 174,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "2af54b672c823a115aeebf54b762562cf2d7d083",
            "parents": [
                "6ef2aa90a7936631efff2a89ac4e1521458ea2a0"
            ],
            "ref": "refs/changes/56/62456/5",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681958757,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "9676485b67274ebdabfcb86c54787e3c0292fdea",
            "parents": [
                "6ef2aa90a7936631efff2a89ac4e1521458ea2a0"
            ],
            "ref": "refs/changes/56/62456/6",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681959684,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "We can add unit tests for the instance ID feature?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, I had the same thought.\n\nI'm planning to do that in a follow-up change while Rashmica pushes ahead with the AF_MCTP conversion; adding tests is easy, dealing with the many moving parts to get AF_MCTP integrated is not. So I hope she can continue to focus on the integration effort given she has all the routine and experience with testing it."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 60,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Instead of a hardcoded path, I feel this should be configurable.\n\nAlso, if each alloc/free is a write to the file, wouldn't be it preferred to have the instance ID file on tmpfs. Over a BMC reboot, it is not expected to persist the instance ID assignments."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 60,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> https://amboar.github.io/notes/2023/03/29/a-global-pldm-instance-id-allocator-for-libpldm.html\n\nRead this :-), no write operations required.\n\nA configurable lock database allows testing."
                },
                {
                    "file": "src/requester/instance-id.c",
                    "line": 60,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Never mind, pldm_instance_db_init can be used for testing."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "36af84cdbb660953d73804a12dfda056c3ac9b08",
            "parents": [
                "891781e945318290d657a621dd0ce592c0b43ddd"
            ],
            "ref": "refs/changes/56/62456/7",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1682050266,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/requester/instance-id.c",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/instance-id.h",
                    "type": "ADDED",
                    "insertions": 92,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 0
        }
    ]
}