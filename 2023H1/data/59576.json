{
    "project": "openbmc/libpldm",
    "branch": "main",
    "topic": "AF_MCTP",
    "id": "I06e602831f360bbd0efda53d410bfb5080b3100d",
    "number": 59576,
    "subject": "requester: Add new APIs to support multiple transports",
    "owner": {
        "name": "Rashmica K Gupta",
        "email": "rashmica@linux.ibm.com",
        "username": "RashmicaG"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/59576",
    "hashtags": [],
    "createdOn": 1670648962,
    "lastUpdated": 1682050266,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1670648962,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1670648986,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670648987,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1670649134,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57425/ : FAILURE"
        },
        {
            "timestamp": 1670649669,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1670649686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670649686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1670649687,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Topic set to AF_MCTP"
        },
        {
            "timestamp": 1670649937,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/57428/ : SUCCESS"
        },
        {
            "timestamp": 1670801691,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(12 comments)"
        },
        {
            "timestamp": 1670816829,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1671391648,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1671422425,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1671426029,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1671433264,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1672165082,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1673260192,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1673331199,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1673331199,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1673331226,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1673331226,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1673331496,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58820/ : SUCCESS"
        },
        {
            "timestamp": 1674103437,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674103437,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1674103450,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674103450,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1674103659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59332/ : SUCCESS"
        },
        {
            "timestamp": 1674104444,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 5: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674104455,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674104455,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1674104722,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59333/ : SUCCESS"
        },
        {
            "timestamp": 1674179979,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(21 comments)"
        },
        {
            "timestamp": 1674184650,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674184685,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674184686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1674184946,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59440/ : SUCCESS"
        },
        {
            "timestamp": 1674191675,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674191675,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 7:\n\n(16 comments)"
        },
        {
            "timestamp": 1674191716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674191716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1674191978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59442/ : SUCCESS"
        },
        {
            "timestamp": 1674205377,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1674476094,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1674547930,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674547930,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 8:\n\n(9 comments)"
        },
        {
            "timestamp": 1674547960,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674547960,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1674548223,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59602/ : SUCCESS"
        },
        {
            "timestamp": 1674606615,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674606633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674606633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1674606895,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59657/ : SUCCESS"
        },
        {
            "timestamp": 1675286716,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1675286795,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 9: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1675299255,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review-1\n\n(26 comments)"
        },
        {
            "timestamp": 1675676982,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675676982,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 10:\n\n(25 comments)"
        },
        {
            "timestamp": 1675677009,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675677009,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1675677021,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/60189/ : FAILURE"
        },
        {
            "timestamp": 1675677626,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675677626,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1675677638,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675677638,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1675677791,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/60192/ : FAILURE"
        },
        {
            "timestamp": 1675722477,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 11: Code-Review-1\n\n(18 comments)"
        },
        {
            "timestamp": 1675753314,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 11:\n\n(9 comments)"
        },
        {
            "timestamp": 1675764622,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 12.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675764622,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 12:\n\n(13 comments)"
        },
        {
            "timestamp": 1675764637,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675764638,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1675764911,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60393/ : SUCCESS"
        },
        {
            "timestamp": 1675765449,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1675793274,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1675835256,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675835256,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 13:\n\n(8 comments)"
        },
        {
            "timestamp": 1675835280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675835280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1675835557,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60459/ : SUCCESS"
        },
        {
            "timestamp": 1675987718,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 13: Code-Review-1\n\n(15 comments)"
        },
        {
            "timestamp": 1676003613,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676003613,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 14:\n\n(13 comments)"
        },
        {
            "timestamp": 1676003646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676003646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1676003837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60648/ : SUCCESS"
        },
        {
            "timestamp": 1676004078,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1676005076,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1676006022,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 14:\n\n(6 comments)"
        },
        {
            "timestamp": 1676248093,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(5 comments)"
        },
        {
            "timestamp": 1676346590,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676346590,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 15:\n\n(7 comments)"
        },
        {
            "timestamp": 1676346612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676346612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1676346885,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60863/ : SUCCESS"
        },
        {
            "timestamp": 1676349412,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676349433,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676349433,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1676349545,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1676349693,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60866/ : SUCCESS"
        },
        {
            "timestamp": 1676351987,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 16: Code-Review-1\n\n(9 comments)"
        },
        {
            "timestamp": 1676353283,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1676360216,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676360216,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 17:\n\n(9 comments)"
        },
        {
            "timestamp": 1676360234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676360234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1676360491,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/60905/ : SUCCESS"
        },
        {
            "timestamp": 1676422450,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 17: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1676442559,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1676518344,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1676564321,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1676587881,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1676591506,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1676608477,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1677001501,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 18:\n\n(10 comments)"
        },
        {
            "timestamp": 1679303743,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1679375207,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 18:\n\n(5 comments)"
        },
        {
            "timestamp": 1679520606,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1679520606,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 19:\n\n(13 comments)"
        },
        {
            "timestamp": 1679520629,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1679520630,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1679520886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/63095/ : SUCCESS"
        },
        {
            "timestamp": 1679631034,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 19: Code-Review-1\n\n(20 comments)"
        },
        {
            "timestamp": 1679880996,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1680211595,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1680283586,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1680502415,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1680850260,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1680858066,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 19:\n\n(4 comments)"
        },
        {
            "timestamp": 1681372363,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681372363,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 20:\n\n(29 comments)"
        },
        {
            "timestamp": 1681372389,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681372389,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1681372519,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/64167/ : FAILURE"
        },
        {
            "timestamp": 1681393792,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1681800185,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681800210,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681800211,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1681800442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/64355/ : FAILURE"
        },
        {
            "timestamp": 1681800913,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 22.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681800934,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681800934,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1681801193,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64360/ : SUCCESS"
        },
        {
            "timestamp": 1681806331,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 22: Code-Review-1\n\n(5 comments)"
        },
        {
            "timestamp": 1681861110,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1681865352,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1681877434,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 23.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681877434,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 23:\n\n(7 comments)"
        },
        {
            "timestamp": 1681877449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681877449,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1681877688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64428/ : SUCCESS"
        },
        {
            "timestamp": 1681885414,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 23:\n\n(4 comments)"
        },
        {
            "timestamp": 1681950078,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681950078,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Patch Set 24:\n\n(4 comments)"
        },
        {
            "timestamp": 1681950107,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681950107,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1681950346,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64492/ : SUCCESS"
        },
        {
            "timestamp": 1681955458,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 24: Code-Review+1"
        },
        {
            "timestamp": 1681958757,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 25: Patch Set 24 was rebased.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681958783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681958783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1681959027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64525/ : SUCCESS"
        },
        {
            "timestamp": 1681959684,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 26: Patch Set 25 was rebased.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681959698,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681959698,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1681959928,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64530/ : SUCCESS"
        },
        {
            "timestamp": 1681962159,
            "reviewer": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "message": "Uploaded patch set 27.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1681962183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1681962183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1681962415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64534/ : SUCCESS"
        },
        {
            "timestamp": 1681963789,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 27: Code-Review+1"
        },
        {
            "timestamp": 1682050052,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 27: Code-Review+2"
        },
        {
            "timestamp": 1682050266,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Change has been successfully rebased and submitted as c1b66f420912dd659a4159ebd176af18347958f4"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "d7232a8a9a53eff2ed2ab9458786c83ded902f65",
            "parents": [
                "6517d116dc838eaf9886a143da9ce5f18974e32d"
            ],
            "ref": "refs/changes/76/59576/1",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1670648962,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/requester/demux.c",
                    "type": "ADDED",
                    "insertions": 167,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/demux.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": -103
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 474,
            "sizeDeletions": 104
        },
        {
            "number": 2,
            "revision": "7bab80f81ae5cf4993659b975ff8072f4ea9b72a",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/2",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1670649669,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Please add few lines regarding the changes. Basically to understand the scope of the change."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Gerrit is claiming this file has been entirely rewritten. That doesn't feel right?"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I think I overwrote the symbolic link. Woops."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "It will be easy to review if this was resolved. Waiting for a patch refresh."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This isn't quite right \ud83d\ude0a\n\nI think `#pragma once` is generally accepted?"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Though it is a C code-base, openbmc generally uses `#pragma once` in its C++ code. Maybe just flip it to PLDM_H?"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we just leave maintenance of this kind of data to the specific transport implementation."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 31,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think the generic API should only deal in TIDs. We can expose transport-specific APIs for resolving e.g. an MCTP EID to a TID."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 33,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Again here."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 48,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This should be an int, right? Otherwise in the success case you're returning a value that's outside the valid enum range?"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 48,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "This is an old API function, not a new one."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "MCTP EIDs shouldn't be part of this API, this should be a PLDM TID. The (MCTP) transport implementation needs to maintain the TID-to-EID mapping internally."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think you just want to pass `struct pldm *` here, not the transport specifically. Given the existence of pldm_{,un}register_transport() to hook an instance into a `struct pldm` instance, where would we get the `struct pldm_transport` that we need to pass through here from?"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "What does it mean by (MCTP) transport implementation, in-kernel MCTP stack?\n\nIt will be a concern, since TID is a PLDM construct and mixing it with MCTP stack is probably a bad choice.\n\nIt is possible that BMC can have multiple PLDM terminus and the different PLDM apps can be assigned statically TID or dynamically assigned a TID from pldmd."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> What does it mean by (MCTP) transport implementation, in-kernel MCTP stack?\n> \n> It will be a concern, since TID is a PLDM construct and mixing it with MCTP stack is probably a bad choice.\n\nMaybe what I said was unclear. Let me try to clarify.\n\nThe DMTF are defining a set of related protocols. We're interested in PLDM and MCTP. However, it's not just a set of protocols, it's a stack of protocols. PLDM and MCTP both define a set of common behaviours (e.g. DSP0248 PLDM for Platform Monitoring and Control Specification, DSP0236 MCTP Base Specification) _and_ a means to exchange messages implementing those behaviours (e.g. DSP0241 Platform Level Data Model (PLDM) Over MCTP Binding Specification, MCTP PCIe VDM Transport Binding Specification). So:\n\n1. MCTP can use I2C, PCIe, serial and various other buses as its transport\n2. PLDM can use MCTP, NC-SI or potentially other lower level protocols as its transport\n\nTo exchange e.g. PLDM messages with some other device we need to package them for transmission via the underlying transport, and transmit it via that transport using the APIs exposed by its implementation. Consider PLDM over MCTP. Right now there are two implementations and two separate APIs libpldm can access:\n\n1. The mctp-demux-daemon, using an AF_UNIX socket with the abstract socket name '\\0mctp-demux'\n2. The in-kernel MCTP implementation, using an AF_MCTP socket\n\nThe job of the libpldm requester API is to provide an abstract API over either of these two implementations, and more. The code to implement this abstraction in libpldm is what I was referring to by \"transport implementation\" above. A transport implementation for e.g. mctp-demux-daemon AF_UNIX socket in libpldm would contain code to call `socket(AF_UNIX, ...)`, or `socket(AF_MCTP, ...)` for the in-kernel MCTP implementation. The user of the libpldm APIs mustn't need to care about these mechanics - that's the point of the abstraction. Again, this is the client code in libpldm, not the implementation of MCTP in e.g libmctp and its associated daemons, or the kernel.\n\nMCTP isn't the only transport for PLDM messages. We can use NC-SI as well. NC-SI and any future transports have no concept of the MCTP-specific EID, however they may have something similar with different representation and constraints. Thus, we can't embed the MCTP-specific EID representation in the generic API. TIDs are a PLDM concept and are relevant regardless of the underlying transport. They also uniquely identify a target address. From here, the transport implementation (client) in libpldm can maintain a mapping between TIDs and e.g. EIDs in the case of MCTP in order to encode the PLDM message for transmission via the appropriate MCTP API for the system (until now libpldm has only supported the mctp-demux-daemon as a transport).\n\n> It will be a concern, since TID is a PLDM construct and mixing it with MCTP stack is probably a bad choice.\n\nThis follow-on concern only exists under the misinterpretation of my original statement, which I've tried to clarify above. I'm not talking about the in-kernel implementation of MCTP or libmctp, I'm talking about the client code that lives in libpldm. This client code in libpldm needs to map the TID to an address appropriate for the underlying transport.\n\n> It is possible that BMC can have multiple PLDM terminus and the different PLDM apps can be assigned statically TID or dynamically assigned a TID from pldmd.\n\nI don't think this is a significant concern."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "@arj\n> MCTP EIDs shouldn't be part of this API, this should be a PLDM TID. The (MCTP) transport implementation needs to maintain the TID-to-EID mapping internally.\nThis makes sense, as EIDs are an MCTP specific detail.\n\nI'm not clear on how we should get the mapping between a given TID and it's associated EID. We could have the user set up this mapping via an MCTP transport only API call - all current users have the EID so this would be straightforward using the GetTID PLDM command. But that would be going against what you said:\n> The user of the libpldm APIs mustn't need to care about these mechanics - that's the point of the abstraction\n\nDoes it make sense for the user to know the TID they want to communicate with and over which transport (mctp-demux-daemon, in-kernel mctp, nc-si), and (if that transport is MCTP) libpldm finds the right EID to use when we init the transport?\n\nThe PLDM spec mentions a type of PDR called Terminus Locater that contains information including a TID and an associate EID (if the terminus type is MCTP). Could we use these? I think I need to give the PLDM Platform Spec a thorough read."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> and (if that transport is MCTP) libpldm finds the right EID to use when we init the transport?\n\nRight - basically we divide the code into two distinct groups - areas of the code that know about the transport specifics, and areas of the code that do not. The latter should be the bulk of it and only deal in TIDs and the core APIs. The former deals with instantiating the specific transport implementations, registering them with the requester core, and setting up the TID mappings by whatever mechanisms necessary (e.g. reading a configuration file containing static TID-to-EID mappings, enumerating and querying the MCTP devices exposed on DBus by mctpd during initialisation of the MCTP backend, or in the implementation of a handler registered to listen for DBus signals emitted by mctpd for dynamically discovered devices).\n\nSo we need APIs like:\n\n /* Asks an PLDM-capable MCTP device for its TID(s) */\n int pldm_transport_mctp_query_tid(struct pldm_transport_mctp *ctx, mctp_eid_t eid);\n \n /* Inserts a TID-to-EID mapping into the transport's device map */\n int pldm_transport_mctp_map_tid(struct pldm_transport_mctp *ctx, pldm_tid_t tid, mctp_eid_t eid);\n \n /* Removes a TID-to-EID mapping from the transport's device map */\n int pldm_transport_mctp_unmap_tid(struct pldm_transport_mctp *ctx, pldm_tid_t tid, mctp_eid_t eid);\n \n /* Assigns a PLDM TID to the device addressed by the provided MCTP EID and updates the TID-to-EID mapping in the transport's device map */\n int pldm_transport_mctp_assign_tid(struct pldm_transport_mctp *ctx, pldm_tid_t tid, mctp_eid_t eid);\n\netc, and similar APIs for the needs of NC-SI when we get around to it."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> This follow-on concern only exists under the misinterpretation of my original statement, which I've tried to clarify above.\n\nI was carried away a bit by the original statement, the explanation clarifies the intent. It makes sense that the PLDM Tx/Rx core APIs uses the TID as the key.\n\nIn terms of flow, pldmd discovers (dynamically/statically discovers the MCTP endpoints and if the endpoint supports PLDM, then the discovery agent kicks in. The discovery agent is responsible for discovering termini and assigning them unique TID values. Even though there can be multiple pldm requester apps on BMC, the role of discovery agent has to be assumed by one. The TID-to-EID APIs needs to rely on completion of discovery agent for validity."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Given that, inserting and removing TID-to-EID mappings directly in the implementation is enough to maintain the current behaviour, we can defer work on the discovery flow until later.\n\nThe main purpose of the API rework is to \n- create a new API so libpldm supports multiple transports and a consumer of libpldm can choose a transport to send PLDM messages over\n- rewrite the old API in terms of the new API (once all the consumers are moved over to the new API, we can delete the old API)."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 159,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 176,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "PLDM TID again."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 176,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 197,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Drop this."
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 197,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 217,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Drop this"
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "line": 217,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Oh. I think my comments on the other header are actually applicable here? And the changes to the other header should be dropped?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/requester/demux.c",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/demux.h",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 181,
                    "deletions": -110
                },
                {
                    "file": "include/libpldm/pldm.h",
                    "type": "REWRITE",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 112,
                    "deletions": 0
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 706,
            "sizeDeletions": 111
        },
        {
            "number": 3,
            "revision": "453c2223e243c38207eeb238b3a1f507649c1a3b",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/3",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1673331199,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 246,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 189,
                    "deletions": -109
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 119,
                    "deletions": -3
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 615,
            "sizeDeletions": 113
        },
        {
            "number": 4,
            "revision": "010dbd7323881660e2c539f453205cfd87a2d571",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/4",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674103437,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 278,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 249,
                    "deletions": -108
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 119,
                    "deletions": -3
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 714,
            "sizeDeletions": 112
        },
        {
            "number": 5,
            "revision": "2ad23a7d60bb28eb9fe10fbc3e0dcdec64568312",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/5",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674104444,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hi Rashmica,\n\nOverall, nice work. I think this is coming along great. I have a bunch of comments, hopefully their resolution leads to improvements. Given this is still marked WIP I haven't left a score as I don't expect it to be submitted."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 8,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Please include 'mctp' in the symbol name for consistency (and specify `void` for the parameter list if we have no arguments):\n\n```\nstruct pldm_transport_mctp_demux *pldm_transport_mctp_demux_init(void);\n```\n\nAlso please audit the rest of the function symbols for this issue."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 8,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "e.g. this one too \ud83d\ude0a"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "And this one."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 15,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Need to include the configuration header to pick this up?"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 17,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "You don't strictly need the include here as we don't use the definition. IMO just add a forward-declaration:\n\n```\nstruct pollfd;\nint pldm_transport_mctp_demux_init_pollfd(..., struct pollfd *pollfd)\n```"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 18,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Maybe this API should take an intermediate type, `struct pldm_transport_mctp`. Bare in mind that we have two MCTP implementations to cater to, and only one of them is the libmctp demux daemon implementation. How would we pass the kernel (AF_MCTP) implementation through this API?\n\nAlternatively, maybe we could leave the type and make this symbol to be truly backend specific, in which case I'd rename it to `pldm_transport_mctp_demux_map_tid(...)`"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 25,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Originally I was thinking we would probably have some generic MCTP api, and I was going to pull these into separate `mctp.<c/h>` files in the next patch that adds AF_MCTP. But then this should either have an intermediate type like you said, or possibly just use `struct pldm_transport`. \n\nI don't love the idea of an intermediate type as I think it's another layer of confusion, but I also don't love using the generic pldm_transport struct either.\n\nAre we eventually going to move everything to use AF_MCTP over the mctp-demux daemon? If so, I think we keep them as backend specific functions. It's looking like we don't need many MCTP specific functions, so not too much duplication."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Are we eventually going to move everything to use AF_MCTP over the mctp-demux daemon? If so, I think we keep them as backend specific functions. It's looking like we don't need many MCTP specific functions, so not too much duplication.\n\nI agree!"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As above."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Do we need to expose them in the header? Or can they be static functions in the implementation that only serve the reimplementation of the old API?"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I've removed them from the header, but I don't think they can easily be made static."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 40,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think this has the same intermediate-type-or-rename-symbol query as above."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 40,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This one too.\n\nA random personal preference is `s/from/by/`, saves a couple of characters in the symbol name \ud83d\ude0a"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 43,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 145,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we could future-proof this by taking the transport instance as an argument (`int pldm_unregister_transport(struct pldm *pldm, struct pldm_transport *transport)`). Or rename it to be plural and indicate that all transports will be unregistered (`int pldm_unregister_transports(struct pldm *pldm)`)"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 145,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Good idea. Renaming to `pldm_unregister_transports`."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 172,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Should have consistent indentation?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 172,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 221,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Maybe drop the _inst suffix? I think 'any' provides enough information and we avoid an arbitrary abbreviation \ud83d\ude0a"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 221,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "meson.build",
                    "line": 51,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Are we writing this configuration file out anywhere? The fact that we're defining the conf variable here and I can't see it written out is why I ask.\n\nhttps://mesonbuild.com/Configuration.html"
                },
                {
                    "file": "meson.build",
                    "line": 51,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "No we are not! I have never touched meson and don't really know what I'm doing yet. I'll look at that."
                },
                {
                    "file": "meson.build",
                    "line": 51,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can we add a `transport` directory and put the implementations there? Or prefix the file name with `transport-`? I just want to make it obvious that what we're doing in this file from its path."
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's try to make this a bit more friendly :)\n\nWithout addressing the network concern I think I'd prefer this as\n\n```\n...\nstruct tid_eid_map {\n    uint8_t tid;\n    uint8_t eid;\n};\n\nstruct pldm_transport_mctp_demux {\n    ...\n    size_t num_mappings;\n    struct tid_eid_map[256];\n    ...\n};\n...\n```"
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 75,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Yeah it was pretty gross \ud83d\ude04"
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 109,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Given that we can only have 256 EIDs per network, I think we can simplify this as above."
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 109,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 232,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This leaks demux."
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "line": 232,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Good catch."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 183,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think if we need the `struct pldm` instance just to get the socket FD out the APIs aren't quite right? I don't think we should need to initialise and then destroy it just for that when we're already instantiating the backend directly. We should have an API that fetches the socket FD straight out of the `struct pldm_transport_mctp_demux` instance directly, right?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 183,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "You're right, we don't actually need to create the `struct pldm` here."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 219,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Will this close mctp_fd? Because that will affect global state \ud83d\ude0a\n\nRather than creating / destroying the transport instance unconditionally, should we compare mctp_fd to the fd in open_transport and use that directly if we can?\n\nIf we don't recognise the fd that way, we could dup() the one passed in to avoid closing it prematurely.\n\nAlso, we probably want to pldm_unregister_transport() before we destroy the transport.\n\nThese comments applies to the other reimplementations as well"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 219,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": ">Will this close mctp_fd? Because that will affect global state \ud83d\ude0a\n\nIt won't at the moment. I had avoided closing the socket in `pldm_transport_demux_destroy` because I didn't want to be closing other people's sockets. dup() could be a good way forward here.\n\n\n> Rather than creating / destroying the transport instance unconditionally, should we compare mctp_fd to the fd in open_transport and use that directly if we can?\n\nI didn't do this because it would be more code (and more bugs for me to fix \ud83d\ude04) just to still essentially use the fd passed in. But logically it does make sense to not create and destroy a whole bunch of stuff if we don't need to."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 219,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 278,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 249,
                    "deletions": -108
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 119,
                    "deletions": -3
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 714,
            "sizeDeletions": 112
        },
        {
            "number": 6,
            "revision": "a95e83fa471eb7b0400073e0301cc953d23ea645",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/6",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674184650,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Thanks for the review Andrew. I'll get to your other comments and fix up the meson stuff on Monday."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 292,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 265,
                    "deletions": -108
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 119,
                    "deletions": -3
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 744,
            "sizeDeletions": 112
        },
        {
            "number": 7,
            "revision": "f57188e19d6dbdc7cb35144e4c0bb14de84f6c90",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/7",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674191675,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/requester/pldm.c",
                    "line": 55,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I believe this should move down the function(may be to L73). Basically to have a minimal input message validation before passing it to deamon."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 55,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I'm not sure I understand. Are you possibly getting the directions of send and recv mixed up?  `pldm->transport->recv` gets a message from the daemon, and then the checks below are checking that the message makes sense to pass back to the consumer."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 55,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 183,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Are we expecting only say PLDM messages from this MCTP socket? Like what if the same device support NVMe-MI also? We will have a different socket and fd for that?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 183,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "This socket is used for the mctp-demux daemon. As you can see here https://github.com/openbmc/libmctp/blob/master/utils/mctp-demux-daemon.c#L140 we will only get messages of the one type. So yes only PLDM messages. \n\nWe should be able to get rid of this check and tidy up this code, but I wanted to minimise changes in the existing code so any bugs were easier to bisect. It also wasn't high on my list of things to do, considering this code path will likely be used less and less over time as consumers move to AF_MCTP."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 183,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 283,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 287,
                    "deletions": -110
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 759,
            "sizeDeletions": 115
        },
        {
            "number": 8,
            "revision": "ebbb40d675685538641c0c18a23b6d2814e3def2",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/8",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674547930,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 291,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 345,
                    "deletions": -109
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 817,
            "sizeDeletions": 114
        },
        {
            "number": 9,
            "revision": "87e7395911c2da54e0df0cdc61086031b5119ae2",
            "parents": [
                "46d7db2fb29ae7f86849cc2ea08162bd9d59f6fe"
            ],
            "ref": "refs/changes/76/59576/9",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1674606615,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Need to finish testing this. But would like feedback if anyone has thoughts."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Starting to look pretty good. Some comments inline."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we want to call this file `transport-mctp-demux.h` in line with the implementation."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 3,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We should probably remove the leading underscore here to get away from C's reserved namespace. Also fix the guard name to match the new path."
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 3,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "line": 3,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Not done in PS11"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Do we need to expose this in the public API? I don't think we do? We can do this in an internal header?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 29,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 149,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Maybe given my comment below rephrasing the asynchronous send we rephrase this too:\n\n> Synchronously send a PLDM request and receive the response. Control is returned to the caller once the response is received."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 149,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Yeah that sounds better."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 151,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "We probably want to state a precondition here, e.g. that a transport has been registered with the `struct pldm` instance. With that, we can also be explicit about the error returned if that precondition doesn't hold.\n\nThis also implies that the parameter must not be NULL. Please audit the rest of the added documentation for whether NULL is an acceptable value for pointers."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 151,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 153,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What's the behaviour if the value is zero? Once we decide, please audit the rest of the added documentation for this issue and describe the behaviour."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 153,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 155,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Will `*pldm_resp_msg` ever be NULL? If so we should be explicit about that case. Audit the rest of the added APIs for this as well."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 155,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 164,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think this might be better if we use `const void *pldm_req_msg` as `void` aliases with all types. This means we don't force the caller to cast; we can do the cast to `unsigned char *` in the implementation if needed."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 164,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 166,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Here too. Please audit the remainder of the APIs"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 166,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 170,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'd phrase this as\n\n> Asynchronously send a PLDM message. Control is immediately returned to the caller."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 170,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 172,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think this statement should either be removed, or moved out of this paragraph. libpldm is targeted at freestanding environments as well as hosted environments where we might have POSIX behaviour. Freestanding environments probably aren't doing file descriptors."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 172,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Does this block? I think we want this to be async as it means we have an implicit polling function as well, which provides a path for e.g. freestanding users to do async where they don't have file descriptor events. For example, we could return something like -ENODATA here indicating there was no message available to receive."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Yeah it's async, updated the comment to indicate that. As we are returning pldm requester return codes everywhere else, should we set errno to -ENODATA? Or we could add in a new requester return code."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think I'd leave errno to libc. Let's not write it."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 193,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What happens if it isn't an instance ID that's previously been requested? What about if it was previously used but the response has already been received?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 193,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Is it fine to say \"if there is no message available that has this instance id an error is returned\"? That captures both of those without being overly specific."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 193,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yes, I think that's fair"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 201,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can we talk more about the positive behaviour here? Can the message that was read that didn't match the IID criteria be retrieved later by a call where it does match?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 201,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 209,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think this indicates async but perhaps we could use that word explicitly."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 209,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 24,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "calloc(3)?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 24,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "`free(3)` works even if the pointer is NULL, so no need to check here.\n\n> If ptr is NULL, no operation is performed.\n\nhttps://man7.org/linux/man-pages/man3/free.3.html#DESCRIPTION"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "`pldm` is a local so no need to set it to NULL here"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 43,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 235,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Maybe we could use an internal helper macro to deal with the setup/teardown pattern used across the reimplementations of the old APIs."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 235,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 130,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Probably want to add check `ctx->num_mappings != 0` before this \ud83d\ude0a\n\nThat said, this is kinda ugly. What if we instead ditch the struct and index into the array by EID given we have a bounded number of them (256). Then the TID-to-EID lookup would turn into a search over the array to find the TID and returning the corresponding index. That gets rid of the jank problem of keeping the mappings contiguous like we're trying to do here.\n\nApologies for suggesting yet another approach; I probably should have thought about it more before I commented last time."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 130,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "No VLAs please."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 166,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Again let's not do a VLA here."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 166,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 170,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "NULL check?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 170,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 229,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "calloc(3)?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 229,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 258,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "calloc(3)?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 258,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 278,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 322,
                    "deletions": -109
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 781,
            "sizeDeletions": 114
        },
        {
            "number": 10,
            "revision": "076ef076c7ff52ecb766cc402bc321231cabb252",
            "parents": [
                "7c2da9975664fc9a7747bd72fa6399cbb3a508b6"
            ],
            "ref": "refs/changes/76/59576/10",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1675676982,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Tested on p10bmc"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 242,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.h",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": -113
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 154,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 635,
            "sizeDeletions": 119
        },
        {
            "number": 11,
            "revision": "e3ae76ef82d6cdcc8738f0ff4acbb9bf1e761d46",
            "parents": [
                "7c2da9975664fc9a7747bd72fa6399cbb3a508b6"
            ],
            "ref": "refs/changes/76/59576/11",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1675677626,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Fewer comments this time, looks like we're converging on something we can merge!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Half-way through the review, will post any more comments by EOD."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Thanks Tom. I didn't see this before I posted my changes so I'll address your feedback tomorrow."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 26,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "These response codes don't have documentation around them, consider adding them?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 26,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Documenting response codes should probably be in a separate patch from this one - there is enough going on here."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 127,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "How is the error handled if there any registered transports, since the return is void?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 127,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "At this stage it isn't. I guess we could change the return type, check for registered transports and fail if there are any."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 127,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's take the forward-looking approach and make it return an int."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 127,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 134,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Better to call this parameter core or pldm_core, variable name pldm seemed vague over here."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think you're right, and that we should actually generalise your point. I think we change the function names to all be prefixed with `pldm_requester`. From there I think we can switch the parameter name to `ctx` (context) to keep things brief:\n\n```\nstruct pldm_requester *pldm_requester_init(void);\nint pldm_requester_destroy(struct pldm_requester *ctx);\npldm_requester_rc_t pldm_requester_register_transport(struct pldm_requester *ctx, struct pldm_transport *transport);\n...\n```\n\netc.\n\nAudit the rest of the API to address this.\n\nPS: Also I'd `s/core/instance/` in the documentation."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 134,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 146,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Use cases like dynamic device discovery, means removing unregistering individual transports, is it in the scope?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 146,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "It would be straightforward to add a function to unregister individual transports, so this can be added if and when we need it? \n\nWhile this is a trivial example, I'd rather not add in code paths now that we don't use just because we might need it later. Then we run the risk of defining an API now that is not suitable or buggy in some way (as it's not used now) and having to redefine/change/fix it later when we do need it."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 146,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I agree with Rashmica here. We can add that API when we have a specific use for it. For now we just need to convince ourselves that it's possible to implement in the future, and I can't see any reason why it wouldn't be."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 146,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 164,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "What is async msg, in the scope of sync API?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 164,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Right, I see how this is confusing. I wanted to make it clear that we accept not just PLDM request messages but any PLDM message if the Rq bit is one, which are called 'asynchronous notifications' in the PLDM spec. \n\nSo it's async in terms of the PLDM spec rather than how the consumer uses the API.\n\nDoes my change - \"PLDM request msg or async notification\" - make that clearer? Or do you think we need to be even more explicit and mention the Rq bit?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 164,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "That's fair given that messages can be a variable length, but they do have a fixed-length component - the PLDM header. That's 3 bytes, so what's the behaviour if req_msg_len is less than 3? Can we instead state that we'll return an error in that case?\n\nAdjust the remainder of the documentation based on the decision here."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "+1 \n\nI guess we should return PLDM_REQUESTER_NOT_REQ_MSG = -4, if it is less than 3+ bytes. \n\nIn the scope of this function, we need to call out when we will have behavior undefined, otherwise appropriate pldm_requester_codes will be returned."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "That seems like a reasonable check to add in. \n\n>  Can we instead state that we'll return an error in that case?\nI'm not sure it's an instead of situation here though. The behaviour is still undefined in the case where the size given is bigger than the pldm message?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "> I guess we should return PLDM_REQUESTER_NOT_REQ_MSG = -4, if it is less than 3+ bytes.\n\nGood point. Done.\n\n> In the scope of this function, we need to call out when we will have behavior undefined, otherwise appropriate pldm_requester_codes will be returned.\n\nCan you clarify what you mean? Haven't I done that?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 225,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Why return PLDM_REQUESTER_INSTANCE_ID_MISMATCH, since the expectation is only for a matching TID and InstanceId?\n\nThe value this API provides is instance_id check compared to pldm_recv_msg_any?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 225,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "> Why return PLDM_REQUESTER_INSTANCE_ID_MISMATCH, since the expectation is only for a matching TID and InstanceId?\n\nGood catch. \n\n> The value this API provides is instance_id check compared to pldm_recv_msg_any?\n\nYep. An app that sends a singular request and waits for the response would likely use pldm_recv_msg. An app that sends multiple requests off before getting responses might want to use pldm_recv_msg_any."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 225,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The key point of this API is the pushing the responsibility of maintaining a queue of unprocessed messages into the library. If the caller wishes to maintain the queue themselves they can use `pldm_recv_msg_any()` as `@Rashmica Gupta` pointed out.\n\nThe current behaviour does not implement this queue and simply discards the message on IID mismatch. `@Rashmica Gupta` has written the documentation such that we can define a useful behaviour in the future (retaining and queuing the messages) while still allowing for the current behaviour of discarding mismatching messages."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 225,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Still need to remove the underscore."
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The function prototype needs to declare its arguments as `void`, i.e.\n\n```\nstruct pldm_requester *pldm_init(void)\n{\n...\n```"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 22,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "A trick you can use here is that `sizeof()` can infer the type from a variable, so instead of passing the type directly and having the same on both the left and right of the assignment, we can rewrite this as:\n\n```\nstruct pldm_requester *pldm = calloc(sizeof(*pldm), 1);\n```\n\nThe other part of the trick is that `sizeof()` is guaranteed not to evaluate the expression, only its type, which means we're not actually dereferencing an undefined pointer value there.\n\nThe other benefit is that if the type of `pldm` changes you don't have a memory safety hazard, the allocation will always be the right size of the type of the variable (i.e. deals with the case where you somehow end up with different types on the left and right of the assignment operator).\n\nHOWEVER:\n\n(see next comment)"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 22,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "The final trick is that this is redundant, as if `!pldm` holds then it's inferred that `pldm == NULL`, in which case we can also write `return pldm`. With that we can collapse the implementation to:\n\n```\nstruct pldm_requester *pldm_init(void)\n{\n    return calloc(sizeof(struct pldm_requester), 1);\n}\n```"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 25,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Thanks for explaining that. This is much easier to read as well."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Need to be careful here as this becomes a tight loop if `pldm_recv_msg()` doesn't block.\n\nI expect we actually need to introduce a `pldm_wait()` analogous to e.g. `sd_bus_wait()`: https://www.man7.org/linux/man-pages/man3/sd_bus_wait.3.html"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 178,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "why is this not a function?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 178,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "This takes in a function with arbitrary type so it has to be a macro.\n\nOr did you mean 'why does this macro exist'? It exists because the setup and teardown required to implement the old API in terms of the new API was the same for the four send/recv functions. This makes it clear that we're doing the same thing in each function as well as reduces the code you need to read to understand what is happening."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 178,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can you please add this explanation in the source comment above the `#define`?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 178,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 220,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Add another newline below this one just to separate the comment below from the macro body"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 220,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This should match the file path"
                },
                {
                    "file": "src/requester/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Compilers will warn about assignment vs comparison these days, so let's avoid yoda conditions and use the more natural formulation:\n\n```\nif (fd == -1)\n{\n...\n```\n\nAudit the rest of the file for this also."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 62,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Given the commentary about `pldm_wait()` elsewhere, I wonder if we make this more generic and take a `struct pldm_transport *` here and hoist ourselves out in the implementation with `transport_to_demux()`.\n\nThis would allow us to have a generic implementation of `pldm_wait()` by having backends optionally supply an `init_pollfd()` function pointer in `struct pldm_transport`."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 62,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Thoughts on what I've added (pldm_wait_for_message)?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 62,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "`pldm_transport_mctp_demux_get_eid()` (currently missing `_demux`)"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 70,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 211,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Unnecessary assignment, `ctx` is a local."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 211,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 227,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Maybe add a comment here that the `dup()` is so we can unconditionally close the fd in `pldm_transport_mctp_demux_destroy()` as the held fd is then always managed by the implementation."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 227,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 241,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Is `-1` reasonable here?"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 241,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I thought so given that other functions that return fds (eg open, socket) return -1 on error. Or we could change the return type to pldm_requester_rc_t and return the new error code I was thinking we could have (PLDM_REQUESTER_INVALID_SETUP) which I accidentally pushed in my last patch."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 241,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 242,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.h",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": -113
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 154,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 669,
            "sizeDeletions": 119
        },
        {
            "number": 12,
            "revision": "6f034c8a2b71138c7c0a67a1f9a50aeff9b6696d",
            "parents": [
                "0dd5d257d94ef1e191ed96b43cf6cf3beb4a31c4"
            ],
            "ref": "refs/changes/76/59576/12",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1675764622,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "If this is for MCTP kernel socket, why call it `demux`?"
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "It's not. This is the existing MCTP transport. The idea with this patch is to maintain the behaviour for all consumers of the requester API, while providing the mechanisms to add and use other transports.\n\nThe patch for adding in-kernel MCTP is the next one (https://gerrit.openbmc.org/c/openbmc/libpldm/+/59577/7). It's still marked as WIP because I haven't been able to test it with the new api yet."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 58,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "How will this work for apps that wants to use sd_event loop?https://0pointer.net/blog/introducing-sd-event.html"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 58,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "It doesn't right now. You can use the transport-specific `init_pollfd()` function e.g. `pldm_transport_mctp_demux_init_pollfd()` to get you a `struct pollfd` with the data you need to hook it up to `sd_event`.\n\nWe can add a generic `int pldm_requester_init_pollfds(struct pldm_requester *ctx, struct pollfd **pollfds, unsigned int *len)` later to abstract over multiple transports once we need it."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 58,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 248,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 215,
                    "deletions": -112
                },
                {
                    "file": "src/requester/pldm_internal.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 720,
            "sizeDeletions": 118
        },
        {
            "number": 13,
            "revision": "38b339464a5639c7237cd914566bc3472498602b",
            "parents": [
                "0dd5d257d94ef1e191ed96b43cf6cf3beb4a31c4"
            ],
            "ref": "refs/changes/76/59576/13",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1675835256,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Are these being installed in the correct location? That is, I think we want people to write:\n\n```\n#include <pldm/requester/transport-mctp-demux.h>\n```"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I think that makes sense. \n\nDo we also want pldm.h to be under the requester path? If so, would we get away with installing pldm.h at both `<libpldm/pldm.h>` and `<libpldm/requester/pldm.h>` (so we don't break current consumers of the API). Then when we delete the old API we delete the install path at `<libpldm/pldm.h>`?"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hmm. Thinking about taking a different tack entirely. What about:\n\n```\n#include <pldm/requester.h>\n#include <pldm/transport/mctp-demux.h>\n```\n\n?\n\nAnd we move the transport stuff out to `src/transport/` and drop the `transport-` prefix?\n\nWe would need some symlinks to maintain compatiblity.\n\nI think we could do the transport move right now, but maybe we can defer the `requester/pldm.h` / `requester.h` thing til later?"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "+1 for renaming pldm.h to requester.h at some point.\n\n+1 for moving transport to a separate directory. I think it is cleaner."
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Should probably be `#ifndef REQUESTER_PLDM_H` for consistency."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 1,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 151,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we should have this return int too. We can just unconditionally return 0 for now. I don't think we want to make it a pre-condition that the transport registered and force an error if there isn't, rather we should consider the post-condition of no transports being registered once the call completes."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 151,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 157,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Starting a sentence with \"Otherwise...\" feels odd. I think you just need to delete the full-stop here and it will be fixed.\n\nMaybe audit the rest of the documentation added in this patch as well."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 157,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 162,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "By the renaming suggestion above this would become:\n\n```\npldm_requester_rc_t pldm_requester_wait_for_message(...)\n```\n\nThat's starting to become a bit of a mouthful. Further, I think \"wait for message\" is slightly misleading. Really we're waiting for an event to occur that needs to be addressed by the API; we may not strictly be waiting for a message. Leaning on POSIX and libmctp we've called things that do this `poll`. How about:\n\n```\npldm_requester_rc_t pldm_requester_poll(...)\n```\n\n?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 162,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm_internal.h",
                    "line": 24,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't think we need to ifdef this, we just leave it NULL if we don't assign to it. I prefer not to change structure sizes this way."
                },
                {
                    "file": "src/requester/pldm_internal.h",
                    "line": 24,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 248,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 213,
                    "deletions": -112
                },
                {
                    "file": "src/requester/pldm_internal.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 173,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 730,
            "sizeDeletions": 118
        },
        {
            "number": 14,
            "revision": "b080edebecd22f1e4072b838ea321f92df5ce8a6",
            "parents": [
                "0dd5d257d94ef1e191ed96b43cf6cf3beb4a31c4"
            ],
            "ref": "refs/changes/76/59576/14",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1676003613,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 123,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Missed this one? `pldm_requester_init()`"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 123,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 161,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hmm, probably should rephrase this. Maybe:\n\n> Waits for a PLDM event."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 161,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 6,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Without further effort this will to compile if the environment doesn't set `PLDM_HAS_POLL`. This needs to be:\n\n```\n#ifdef PLDM_HAS_POLL\n#include <poll.h>\n#endif\n```"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 6,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 59,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Similarly we need a fixup for this. How about this above the definition of `pldm_requester_poll(...)`:\n\n```\n#ifndef PLDM_HAS_POLL\nstruct pollfd {\n    int   fd;         /* file descriptor */\n    short events;     /* requested events */\n    short revents;    /* returned events */\n};\n\nstatic inline int poll(struct pollfd *fds, int nfds, int timeout)\n{\n    int i;\n    \n    for (i = 0; i < nfds; i++) {\n        fds[i].revents = 0;\n    }\n    \n    return 0;\n}\n#endif\n```"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 59,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think returning an error here is leaking an implementation detail. You have to know that the registered transport supports polling before calling `pldm_requester_poll()`. If the transport doesn't support polling I think we can return success, because we would then want the caller to call back into the API to keep ticking things along."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 77,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't think this is right - a timeout shouldn't alias to an actual error (see line 71 above). I think for now we just ignore `pollfd.revents` and return `PLDM_REQUESTER_SUCCESS` unless `poll()` returns `-1`. This means it's a requirement on the transport `recv()` callback that it returns e.g. `PLDM_REQUESTER_RECV_FAIL` when no message is present. This way we can at least try a `recv()` as long as `poll()` doesn't return an error."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 77,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we should sanity-check `length` before we call `malloc()`, otherwise we're trying to `malloc()` something pretty arbitrary."
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "line": 121,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/transport-mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 248,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 231,
                    "deletions": -112
                },
                {
                    "file": "src/requester/pldm_internal.h",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/transport-mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 755,
            "sizeDeletions": 118
        },
        {
            "number": 15,
            "revision": "711b8867e0d7d16023de8874e6f1478911ba0490",
            "parents": [
                "3855554fa880fa1feabe9d8602f6538ff5a57432"
            ],
            "ref": "refs/changes/76/59576/15",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1676346590,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 249,
                    "deletions": -112
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 249,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport_internal.h",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "fileOld": "src/requester/container_of.h",
                    "type": "RENAMED",
                    "insertions": 0,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 118
        },
        {
            "number": 16,
            "revision": "815f1bb23e28d78cef3efe77a0ba7a1343896652",
            "parents": [
                "3855554fa880fa1feabe9d8602f6538ff5a57432"
            ],
            "ref": "refs/changes/76/59576/16",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1676349412,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Patchset 16 is just reordering functions in the header and source file to be in the same order."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "A few remaining nitpicks :)"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Where does this instance ID come from? There's no provision in `pldm_requester_send_msg()` to provide it or for it to be returned. Is that something we need to consider?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "It's in the PLDM header of the PLDM messages. So the caller is responsible for making sure something sensible is in the header of the msg given to `pldm_requester_send_msg` and passed in here. Do you think this needs to be clearer?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Do you think this needs to be clearer?\n\nI suspect we need to change it.\n\nLooking forward, I expect we're going to have to implement PLDM instance ID tagging in the kernel via specifying the `protocol` parameter to `socket(2)`. This means when we encode the message we will not know the ultimate value for the instance ID field until the message is sent via `sendto(2)`. As such, we need a way for the API to pass the value back out.\n\nI suspect what we should do is change the prototype of `pldm_requester_send_msg(...)` to:\n\n```\npldm_requester_rc_t pldm_requester_send_msg(struct pldm_requester *ctx,\n\t\t\t\t\t    pldm_tid_t tid,\n\t\t\t\t\t    uint8_t *instance_id,\n\t\t\t\t\t    const void *pldm_req_msg,\n\t\t\t\t\t    size_t req_msg_len)\n```\n\n`instance_id` is an `out` parameter only, not in. `instance_id` must not be `NULL`. if `instance_id` is `NULL` then we can return `PLDM_REQUESTER_INVALID_SETUP`. If the call is successful then the value pointed to by `instance_id` is the value of the instance ID the message was sent with.\n\nWith this definition we can maintain the current behaviour of externally requesting an instance ID from pldmd prior to encoding the message. For the implementation of `pldm_requester_send_msg()` we simply extract the encoded instance ID from the message and assign the value to `*instance_id`.\n\nWhen/if we move instance ID allocation into the kernel via `socket()`'s `protocol` parameter we use the metadata returned by `sendto()` to populate `*instance_id`.\n\nThis feels like the API with the fewest sharp edges: We can continue to use `uint8_t` as the fundamental type for `*instance_id` as we don't need out-of-bounds values like `-1` to indicate a different behaviour, we don't need a `flags` parameter to control alternative behaviours, and `instance_id` never needs to be `NULL`."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Why do we need to have PLDM instance ID tagging in the kernel? How about instance id expiration? will that be handled also by the kernel. \n\nI think we will need more clarity on all the aspects of the PLDM requester behavior (what is handled in the userspace vs kernel). Instance ID management is currently done in the userspace. https://github.com/openbmc/pldm/blob/master/requester/handler.hpp\n\nSeeing the scope of the changes in the patch, it seems we are missing on a design document."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Seeing the scope of the changes in the patch, it seems we are missing on a design document.\n\nCan you unpack what you mean by this? Can you be more specific about what your scope concerns are?\n\nFrom my perspective, this change is just about introducing a new, more flexible API for implementing PLDM transport bindings, and nothing more.\n\nTo that end, it adds the new API and implements the existing transport - the MCTP demux daemon UNIX domain socket - in terms of the new API. Further, it reimplements the old API in terms of the new API so we're not maintaining two separate implementations of the MCTP demux daemon socket transport. That is the full scope of this change.\n\nThis scope is a subset of Naveen's design proposal that's been in review for over a year:\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/47519\n\nBy introducing this new API we give ourselves the building blocks to implement the NC-SI/RBT PLDM transport - this just becomes yet another transport implementation that exposes a `struct pldm_transport`, which hooks into the generic portion of the new API provided in this patch. Further, the new API gives us the ability to implement the transition away from the MCTP demux daemon to the kernel's `AF_MCTP` sockets. libmctp is deprecated for use in OpenBMC, all future MCTP needs in OpenBMC must be met through `AF_MCTP` sockets.\n\nGiven we're introducing a new API it's worth considering what changes might occur in the future that could impact how the API is used. That said, I've put effort into the proposal above to make sure that while it's forwards looking to other possibilities for instance ID management, the API continues to work for the current method as well. As such I'm struggling to grasp the concern about scope and the prototype of `pldm_requester_send_msg()` above. Perhaps the concern is just the identification of the future possibility of changing the approach to instance ID management? That seems likely, so let me discuss that for a moment:\n\nThe current method of instance ID management is centralised in `pldmd` as you mentioned. `pldmd` uses this instance ID allocator for its own purposes when sending messages, but also exposes a DBus API. The DBus API enables multiple processes communicating via PLDM to collectively allocate unique instance IDs for their exchanges. `pldmd` is the central resource that controls the allocation.\n\nThere are problems with this: An application may request an instance ID, perform a message exchange with a device, but fail to return the instance ID to `pldmd`. It may fail to do this because of a logic error in the application that means that the instance ID is simply never released, or that the application crashes before having an opportunity to return the instance ID. A new instance of the process won't know that the prior process had allocated the ID and so at that point there is nothing that can be returned. There's a risk of an instance ID resource leak.\n\nAnother concern is that a PLDM endpoint might be unresponsive. Without further intervention, there's a risk that the instance ID pool might be exhausted by the lack of replies. To protect against such failure modes, PLDM specifies timeout and retry intervals that returns ID to the pool if a response does not arrive. `pldmd` implements these timers and releases the ID back to the pool without consulting the application to which it was allocated. The resource leak in the previous paragraph can be bounded by these timeouts.\n\nHowever, another way to exhaust the instance ID pool is by uncoordinated applications exchanging a large number of of PLDM messages in a short period of time. This problem is particularly bad for `pldmd` itself, which may get wedged by not having an instance ID available to send a request. `pldmd` reduces this risk by freeing instances IDs prior to timer expiry. Its approach does so without requiring interaction from the requesting application (some evidence of this is that the DBus API provides a `GetInstanceId` method, but does not provide a `PutInstanceId` method: https://github.com/openbmc/phosphor-dbus-interfaces/blob/d99cca374b57c65e770899fdf8b1ff381d580b3c/yaml/xyz/openbmc_project/PLDM/Requester.interface.yaml)\n\nThis mitigation is entirely built around an implementation detail of mctp-demux-daemon, which broadcasts a given MCTP response message to all clients connected via its UNIX domain socket. This means for a request sent by e.g. `openpower-occ-control`, the response will be seen by both `openpower-occ-control` and `pldmd`. `pldmd` snoops these responses to free instance IDs prior to timer expiry:\n\nhttps://github.com/openbmc/pldm/blob/d99cca374b57c65e770899fdf8b1ff381d580b3c/pldmd/pldmd.cpp#L139\n\nIt was never a promise of the mctp-demux-daemon socket ABI that `mctp-demux-daemon` would behave that way.\n\nReturning to an earlier point, `libmctp` for use in OpenBMC is deprecated. We need to use `AF_MCTP` sockets going forward.\n\n`AF_MCTP` sockets do not allow `pldmd` to snoop on traffic in the same fashion as `mctp-demux-daemon`:\n\n> Like the send calls, sockets will only receive responses to requests they have sent (TO=1) and may only respond (TO=0) to requests they have received.\n\nhttps://github.com/openbmc/docs/blob/master/designs/mctp/mctp-kernel.md#recvfrom-recvmsg-recv--read-receive-an-mctp-message\n\nGiven all of these concerns, it's likely that at some point in the future we want to migrate instance ID management into the kernel where we do have global visibility of PLDM traffic. There's a precedent for this too: MCTP tags are fundamentally similar, and we can manage instance IDs using the same techniques. That said there's no concrete proposal on the table for this yet, but hopefully the discussion above provides enough context for why we need to think about the future with the new requester API."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "> Can you unpack what you mean by this? Can you be more specific about what your scope concerns are?\n\nI thought libpldm was a userspace library and moving instance ID management to kernel came as a surprise. But I see that it is a future topic. Do we want to impact the libpldm APIs with the future items or make changes as we have more clarity?\n\n> By introducing this new API we give ourselves the building blocks to implement the NC-SI/RBT PLDM transport - this just becomes yet another transport implementation that exposes a struct pldm_transport, which hooks into the generic portion of the new API provided in this patch. Further, the new API gives us the ability to implement the transition away from the MCTP demux daemon to the kernel's AF_MCTP sockets. libmctp is deprecated for use in OpenBMC, all future MCTP needs in OpenBMC must be met through AF_MCTP sockets.\n\nI am aligned with these goals, based on the earlier discussions.\n\nI am visualizing that with more adoption of standards (Redfish/PLDM/MCTP) from DMTF, there will be multiple PLDM apps implementing different PLDM types covering FRU management, BIOS, Monitoring & Control & firmware update areas. So pldmd(or a single app) being the arbitrator of instance ID and dealing it on D-Bus can be a cause of bottleneck. So, I like the idea of moving instance ID management to kernel. if there is an underlying assumption that all the PLDM apps share the same terminus as source (BMC is a single PLDM terminus).\n\nWe should also have a flexibility where PLDM apps could act as an independent PLDM terminus in which case instance ID management can be contained within app and need not be coordinated across apps. Also need clarity on instance ID expiry, PLDM request retry if we are going ahead with moving instance ID management to kernel."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Do we want to impact the libpldm APIs with the future items or make changes as we have more clarity?\n\nIn general we don't want to influence the public API for use-cases that aren't yet material because we don't want to introduce function prototypes or objects that doesn't actually work for that use-case.\n\nHowever, in this specific case, there's a fairly concrete understanding of what we might have to do to completely support `AF_MCTP`-based communication, and so I think it's reasonable that we try to accommodate that now to avoid breaking the API in the future. If we don't include the parameter now and then implement the in-kernel suggestion, then we already know we *will* have to break the API when we do. So I think the fore-thought here is justified. The insurance is the forward-looking behaviour can be met even with the current implementation, so there's no penalty for doing it.\n\nAs to whether the parameter is the right way to go about it, maybe we just return it instead? People have to inspect the return value for the failure code, but the only confusing bit about that is we're kinda introducing a derived type that's the union of `pldm_requester_rc_t` and `uint8_t`, and sorta have to just mash that into an `int`?\n\n> I thought libpldm was a userspace library and moving instance ID management to kernel came as a surprise. \n\nWe need to be careful here because libpldm isn't just a hosted (userspace) library. We can't assume it will be running on OpenBMC, or even under Linux. It should be usable in freestanding (e.g. firmware, kernel) environments also.\n\n> if there is an underlying assumption that all the PLDM apps share the same terminus as source (BMC is a single PLDM terminus).\n\nI don't think this is a limitation that exists (see below):\n\n> We should also have a flexibility where PLDM apps could act as an independent PLDM terminus\n\nYep. I can't see this being a problem for in-kernel handling, given it already supports participating in e.g. multiple MCTP networks, using multiple MCTP EIDs in the same way that it supports multiple IP addresses.\n\n> Also need clarity on instance ID expiry, PLDM request retry if we are going ahead with moving instance ID management to kernel.\n\nYep, this is something that needs to be written down and hashed out in a design document, for sure. I think given the implementation of e.g. TCP in the kernel there should be ways we can accommodate PLDM reliable delivery requirements."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Oh, as another consideration for the out-parameter approach, this makes the function prototype of `pldm_requester_send_msg()` align with the prototype of `pldm_requester_recv_msg()`"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": ">As to whether the parameter is the right way to go about it, maybe we just return it instead? People have to inspect the return value for the failure code, but the only confusing bit about that is we're kinda introducing a derived type that's the union of pldm_requester_rc_t and uint8_t, and sorta have to just mash that into an int?\n\nThe current signature of the function looks better than mixing the rc and the generated instance id."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 212,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "With the new approach we can get away from the instance id needing to be passed out here."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 247,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Missing indent?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 247,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 280,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Missing indent?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 280,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/meson.build",
                    "line": 3,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's instead add a meson file in the transport directory and append `mctp-demux.c` there. Will need to add `subdir('transport')` to `src/meson.build`."
                },
                {
                    "file": "src/requester/meson.build",
                    "line": 3,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Given we're no-longer even looking at `.revents` in `pldm_requester_poll()` I think we can drop this, they're dead stores and are meaningless."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 72,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 76,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Add another newline here to help with visual separation to the function prototype below."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 76,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/transport/container_of.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Do we squash the prior patch into this one? If not we should fix this move there rather than in this patch.\n\nIMO this is trivial enough to just squash in."
                },
                {
                    "file": "src/transport/container_of.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 191,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "void"
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 191,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/transport/transport_internal.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "How about we place this at `src/transport.h`? Any header in `src/` is internal by definition and so I think we can drop that part of the path and include guard symbol name."
                },
                {
                    "file": "src/transport/transport_internal.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 265,
                    "deletions": -128
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 249,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport_internal.h",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "fileOld": "src/requester/container_of.h",
                    "type": "RENAMED",
                    "insertions": 0,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 798,
            "sizeDeletions": 134
        },
        {
            "number": 17,
            "revision": "ba5293107be3a0c0af7fbf5ad6dbea06a8eac74f",
            "parents": [
                "0970e332b46a3096267e15686c0972404205ae96"
            ],
            "ref": "refs/changes/76/59576/17",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1676360216,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/requester/meson.build",
                    "line": 3,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can probably drop this change \ud83d\ude0a"
                },
                {
                    "file": "src/requester/meson.build",
                    "line": 3,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "still relevant :)"
                },
                {
                    "file": "src/requester/meson.build",
                    "line": 3,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "it's a nice comma though"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 261,
                    "deletions": -128
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 249,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 187,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 815,
            "sizeDeletions": 134
        },
        {
            "number": 18,
            "revision": "2c132a0f62db5483b2e9a7472fefa2a01a0c9015",
            "parents": [
                "0970e332b46a3096267e15686c0972404205ae96"
            ],
            "ref": "refs/changes/76/59576/18",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1676608477,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 128,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Can destroy of the requester instance, destroy the transports implicitly? Since pldm_requester is a higher-level concept compared to pldm_transport."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 128,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "It could. I'm not fussed either way. Do you think there is a good reason to do it one way over another? I went with this way as the consumer of the api has to manually set up the transport separate from  `pldm_requester` so it felt natural to keep the destruction of the transport separate too."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's require explicit over implicit behaviour for now. If we feel that explicit is too annoying as we get used to the API we can always add implicit behaviour. It's usually hard to do the reverse.\n\nI'd be surprised if explicit is annoying in practice because I don't think we should be doing transport setup / teardown in many places."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 128,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 165,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "nit: pldm_send_msg -> pldm_requester_send_msg"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 165,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 173,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "We should clarify `Asynchronously send a PLDM message`"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 173,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "How do you think this could be better clarified? Adding in \"non-blocking\"?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 173,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, I think you need to clarify what needs clarification here Tom."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 183,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I prefer to keep [out] parameters after the [in] parameters."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 183,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "n/a"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 187,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Why is the behavior undefined? The implementation returns PLDM_REQUESTER_NOT_REQ_MSG"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 187,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "My intent with this comment was to make it clear that we don't verify the contents of the PLDM message. In hindsight, I'm not sure that is something that would be expected. I'll delete this bit."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 221,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "`made to point`?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 221,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "if request is invalid, we donde need to free ctx ?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Currently, the intended usage of this function is to be called after `pldm_requester_unregister_transports`, hence returning an error if there are still registered transports."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 40,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "check transport is null or not"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 40,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 45,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "nit: instead of return 0, maybe we can use the macros ike in line 41"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 45,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Good spot."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 99,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "null check for pldm_req_msg"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 99,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 149,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "check resp_msg_len anf pld_resp_msg is ull or not and in ohter section of the code as well"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 149,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "What if the requester is interested to receive a PLDM command (I believe PLDM FWUP has some commands which terminus can send back)? Which libpldm API should the daemon use?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "If a terminus wants to receive commands, it probably wants to act as a responder (it can act as both a receiver and a responder). This API is for requester functionality. There is `libpldmresponder` in the pldm repo. I don't know what the plan for that code is - Manoj or Andrew might know."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yes, I think this a problem for later, with the patch written by someone who needs the functionality. Nothing we're doing here prevents us from adding such a set of APIs. That's the important bit."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/transport/transport.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Documentation missing for this."
                },
                {
                    "file": "src/transport/transport.h",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 270,
                    "deletions": -129
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 249,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 828,
            "sizeDeletions": 135
        },
        {
            "number": 19,
            "revision": "5ddf3e4ae99399f34ee2d8ad9961cd4d501fc0b9",
            "parents": [
                "0970e332b46a3096267e15686c0972404205ae96"
            ],
            "ref": "refs/changes/76/59576/19",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1679520606,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Need to re-wrap the line."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: NC-SI is an acronym (Network Controller - Sideband Interface) so we should capitalise it"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Also re-wrap this one."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: plural for later grammar, so \"APIs\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: As a guide I tend to use markdown in my commit messages. I think it's nice to highlight specific concepts like the prefix value here, and so tend to enclose them in an inline code block (single backticks)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Again with the single backticks here if you think that's a useful idea"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we either drop the colon, or if we keep it, make the list below an explicit numbered list"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 57,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Can you add a blank line above this first bullet, for clarity?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 57,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 57,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Partial review for now, but I have to run and wanted to publish the comment on the range locking."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Update commit messages to give some details about \"current API\".\nAPI and APIs which is corrected?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Correct the type in the commit message also,"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I've fixed a few, but not sure if it's the one you're referring to. There might be more :)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 32,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "why this?"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 32,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "indentation"
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 33,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Let's drop 'being' and just state that it's deprecated."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 32,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 141,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: inconsistent capitalisation of acronyms? Should probably go with uppercase throughout."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 141,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I was trying to use capitalisation to differentiate between concepts directly from the PLDM spec (`PLDM`) and implementation based things `pldm`. Do you think it's fine to just use `PLDM` for both of those cases?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 141,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Yep, fine with capitalised PLDM everywhere. I don't think that distinction is obvious."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 141,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 163,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: If we're capitalising TID then we should capitalise \"ID\" here?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 163,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "PLDM instance ID *object*"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 167,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 177,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "So I was thinking about this a bit more over the weekend. I think we might want to separate the instance ID allocation API from the `pldm_requester_*` set of APIs. I think we want to do that because as a user of the `pldm_requester_*` APIs, I shouldn't have to care about details such as instance IDs. Instance IDs are required to handle timeout/retry scenarios, which are details that should be abstracted over by `pldm_requester_*` APIs.\n\nNow, unfortunately, libpldm doesn't currently separate message serialisation from message framing. That is, the encode APIs require the caller pass in an allocated instance ID. Hopefully we can rework the APIs to remove that requirement, at which point the concept of an instance ID would be entirely contained within the implementation of the `pldm_requester_*` APIs.\n\nSo we separate the instance ID database API out. We bless it with its own object:\n\n```\ntypedef ... pldm_tid_t;\ntypedef ... pldm_iid_t;\nstruct pldm_instance_db;\nint pldm_instance_db_init(struct pldm_instance_db *ctx, const char *dbpath);\nstatic inline int pldm_instance_db_init_default(struct pldm_instance_db *ctx)\n{\n    return pldm_instance_db_init(ctx, \"/usr/share/libpldm/instance-db/default\");\n}\nint pldm_instance_db_destroy(struct pldm_instance_db *ctx);\nint pldm_instance_db_alloc(struct pldm_instance_db *ctx, pldm_tid_t tid, pldm_iid_t *iid);\nint pldm_instance_db_free(struct pldm_instance_db *ctx, pldm_tid_t tid, pldm_iid_t iid);\n```\n\nAnother problem solved in the proposal above is that it seems feasible for a system to contain separate TID domains, e.g. if you talk PLDM to devices over MCTP, these might be in a separate TID domain to devices on an NC-SI transport (i.e. devices on each transport may take the same TID). It's not clear whether this is something allowed for by the PLDM spec. In the event that it is allowed then the suggested API (of providing the db path to `pldm_instance_db_init()`) yields a correct implementation. We make life easy for those who don't care for the detail with the `pldm_instance_db_init_default()` function which just provides a path to a default database\n\nFrom here the `pldm_requester_*` object is implemented by the composition of the transport and instance db objects:\n\n```\n+---------------------------------------+\n|                                       |\n|           pldm_requester_*            |\n|                                       |\n+------------------+--------------------+\n|                  |                    |\n| pldm_transport_* | pldm_instance_db_* |\n|                  |                    |\n+------------------+--------------------+\n```\n\nThe prototype for `pldm_requester_init()` would look like:\n\n```\nint pldm_requester_init(struct pldm_requester *ctx,\n                        struct pldm_instance_db *instancedb);\n```\n\nAgain, for those that don't care about the details, we can do:\n\n```\nstatic inline pldm_requester_init_default(struct pldm_requester *ctx)\n{\n    struct pldm_instance_db idb;\n    int rc;\n    \n    rc = pldm_instance_db_init_default(&idb);\n    if (rc < 0)\n        return rc;\n    \n    return pldm_requester_init(ctx, &idb);\n}\n```\n\nThoughts?"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 177,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "> Another problem solved in the proposal above is that it seems feasible for a system to contain separate TID domains, e.g. if you talk PLDM to devices over MCTP, these might be in a separate TID domain to devices on an NC-SI transport (i.e. devices on each transport may take the same TID). It's not clear whether this is something allowed for by the PLDM spec.\n\nI believe it is possible, but it can be same device reachable on 2 different transports.  In other words, from BMC perspective, A TID X on 2 different transport indicate same Terminus/Device. If we don't follow that logic, we will end up tracking PLDM UUIDs/transport specifier in other applications which consumes PLDM data.\n\nIf we take a PCIe add in card example, it could be reachable via PCIe and SMBus(not an ideal example though). And it will have different network id/EID. In that case, let's say card likes to use smbus interface at first and pcie transport later, then having same TID would help in managing PDRs, sensors, FRU, FW inventory etc.\n\n\nOn the other hand, if we provide same TID for 2 different devices then, TID alone will not be sufficient to identify a Terminus. I don't think this will be a feasible design."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 177,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Surely we can detect this case and return an error? I further, I think we want an error over success as we want to be able to detect logic bugs like double frees."
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "line": 188,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "nit: Again, inconsistent capitalisation across the documentation. Please audit all the added doxygen and make it consistent :)"
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "line": 36,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "I think I've addressed this by deferring the addition of these `pldm_requester` APIs until we actually need them"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I know we brainstormed this quickly elsewhere, but I think I lost track of my own train of thought.\n\nWe need some care as this becomes an internal ABI. If we merge this and then change the paths or behaviour down the track then things will break at runtime.\n\nWith the current implementation we need to make sure that these paths can be created when the loading process' EUID/EGID isn't e.g. root. We might need the build system to install the directory tree with the required permissions to allow that. However, configuring permissions for all EUID/EGIDs to create the files could lead to issues where a malicious process unlinks the files instead. Things are going to go south pretty hard at that point.\n\nOn a related point, no mutable state should need to persist across reboots. Having these files present after a reboot is not meaningful (no locks would be held) and we have to assume they don't exist anyway. Essentially they are ephemeral and probably belong in `/run` instead. However, `/run` suffers from the \"need something to set up the directories and permissions problem\" even more than `/var/lib` as we can't exploit the build system to initialise a directory in `/run`. Further, we certainly don't want to go down the path of requiring all applications that link against libpldm to use `ExecStartPre` directives in their service units to force the existence of the directory for the instance ID files. The other option would be to have a unit dedicated to libpldm to set it up before any dependent applications ran, but that still seems annoying and fragile to orchestrate.\n\nRegardless, moving things to `/run` doesn't solve the integrity problems outlined above. Same problem, different location.\n\nSo, is there something we can do that can solve both issues? I think there is. Essentially, we:\n\n1. Have one database file that caters to all instance IDs for all terminus IDs. The file size is thus `TERMINUS_ID_COUNT * INSTANCE_ID_COUNT = 256 * 32 = 8192` bytes\n2. Store that file in read-only storage, say /usr/share/libpldm/instance-ids\n3. Use the Open File Descriptor advisory locking to contain locks to file descriptors rather than processes (`F_OFD_*LCK` symbols rather than `F_*LCK` symbols)\n4. Exploit the lock escalation behaviour (converting a read lock to a write lock if there isn't another conflicting read lock) provided by `F_OFD_SETLCK`, where `F_OFD_GETLCK` will report `F_UNLCK` for a `F_WRLCK` request if the file descriptor already holds an `F_RDLCK` for the range.\n5. Exploit the fact that an `F_OFD_GETLCK` operation with an `F_WRLCK` lock type on a read-only file descriptor yields an `F_RDLCK` result on conflict and not an error due to the file descriptor being read-only\n\nWith this we eliminate all our problems. I will post a demo of the behaviour in a blog post and a sketch of the algorithm a bit later."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Blog post!\n\nhttps://amboar.github.io/notes/2023/03/29/a-global-pldm-instance-id-allocator-for-libpldm.html"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Some good points, I think I've included everything you've suggested."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "`pldm_requester_init_iid_file` How about iid(instance id), instead of just id?\nFor other APIs as well."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 65,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "thoughts on the new instance id API name?"
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 187,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "With this instanceID allocation mechanism the instanceID will continue increasing until it hits 32 then back to 0.\nThis is difference with current mechanism which will priority the smallest free instanceID.\nI think the old mechanism have better performance because we will do less comparing than the new one."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 187,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Hi, I'm not convinced that this change  will result in a noticeable performance degradation considering the environment this code is running in. If it is something you are concerned about, we can work together to measure it?\n\n>With this instanceID allocation mechanism the instanceID will continue increasing until it hits 32 then back to 0.\n\nThis is intended. The PLDM spec specifies that:\n> \"the Instance ID field is used to identify a new instance of a PLDM request to differentiate new PLDM requests that are sent to the same PLDM terminus\"\n\nwhich means the current approach of always using the first available ID (from 0) can lead to incorrect behaviour, as two successive PLDM requests to the same TID could have the same instance ID. The proposed approach means this scenario is a lot less likely to occur."
                },
                {
                    "file": "src/requester/pldm.c",
                    "line": 187,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "New patch the next free instance ID of the latest allocated instance ID will be used. So there is no difference with the current pldm code."
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "It is unnecessary, but should we add the default return of function?"
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 160,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 199,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Add constant definition instead of hardcode."
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 199,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 286,
                    "deletions": -138
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 250,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -4
                },
                {
                    "file": "src/requester/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1065,
            "sizeDeletions": 144
        },
        {
            "number": 20,
            "revision": "3c749cf497df1742bfb9e0ce319c6c91ed64d617",
            "parents": [
                "c681299920fcf4d8c1dd8e69f65045d7fab05413"
            ],
            "ref": "refs/changes/76/59576/20",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681372363,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 155,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 251,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -2
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 64,
                    "deletions": -3
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 895,
            "sizeDeletions": 141
        },
        {
            "number": 21,
            "revision": "fe0d3bf72920b8efa651da736d145498cb72f01d",
            "parents": [
                "4c033c851ca3ead67bc6b01182c356feedd8a39f"
            ],
            "ref": "refs/changes/76/59576/21",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681800185,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 251,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 768,
            "sizeDeletions": 136
        },
        {
            "number": 22,
            "revision": "dfa9b91929e38b61b340fb47f66a2c71e769fea3",
            "parents": [
                "4c033c851ca3ead67bc6b01182c356feedd8a39f"
            ],
            "ref": "refs/changes/76/59576/22",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681800913,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "One small comment in the API / ABI, but otherwise this looks good to me."
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 191,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think we do the same with the transport implementations as I suggested with the instance ID API: Have the caller pass through the `struct pldm_transport_mctp_demux *` object and we just populate it. This requires moving the struct definition to the header and making it part of the ABI, but it does help with memory management in freestanding environments."
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 191,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Actually, disregard exposing the struct definition in the header and making it part of the ABI for now. As mentioned on the previous patch, on reflection I think I got the trade-offs wrong, and we should try use a consistent approach.\n\nHowever, we probably want to consider this function signature rhyme with the `pldm_instance_id_init()` signature where it returns an error value and takes a double-pointer as an argument. Then do the same initial checks:\n\n```\nint pldm_transport_mctp_demux_init(struct pldm_transport_mctp_demux **ctx)\n{\n    struct pldm_transport_mctp_demux *lctx;\n    \n    if (!ctx) {\n        return -EINVAL;\n    }\n    \n    if (*ctx) {\n        return -EINVAL;\n    }\n    \n    lctx = calloc(...);\n    if (!lctx) {\n        return -ENOMEM;\n    }\n    \n    ...\n    \n    *ctx = lctx;\n    \n    return 0;\n}\n```"
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "line": 191,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 251,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container_of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 769,
            "sizeDeletions": 136
        },
        {
            "number": 23,
            "revision": "c09d0c1b7370e638a0ca9ba2bb3b7ad26672c373",
            "parents": [
                "2224745e978db7f1a4e930a4c51fc6d2c8e8287a"
            ],
            "ref": "refs/changes/76/59576/23",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681877434,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/meson.build",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "IMO we should put `transport.h` immediately under `libpldm/` (i.e. `libpldm/transport.h`) to avoid the redundancy (but leave the transport *implementation* headers under the `libpldm/transport/` directory)."
                },
                {
                    "file": "include/libpldm/meson.build",
                    "line": 37,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Please move this header up one level (so it's immediately under `libpldm/`) as suggested earlier."
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/transport/transport.c",
                    "line": 67,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Cast is unnecessary here, however `hdr` needs to be declared `const` (`const struct pldm_msg_hdr *hdr`)"
                },
                {
                    "file": "src/transport/transport.c",
                    "line": 67,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/transport/transport.c",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Cast is unnecessary."
                },
                {
                    "file": "src/transport/transport.c",
                    "line": 91,
                    "reviewer": {
                        "name": "Rashmica K Gupta",
                        "email": "rashmica@linux.ibm.com",
                        "username": "RashmicaG"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 88,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 255,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 789,
            "sizeDeletions": 136
        },
        {
            "number": 24,
            "revision": "d4234ecaef2903677069c81374fdc14672100229",
            "parents": [
                "7dc671ae5698f403e73d153fbbf1615f9dc247d8"
            ],
            "ref": "refs/changes/76/59576/24",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681950078,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 136
        },
        {
            "number": 25,
            "revision": "c3c68569e9848e5a6163419de2d416ecc8dac02a",
            "parents": [
                "2af54b672c823a115aeebf54b762562cf2d7d083"
            ],
            "ref": "refs/changes/76/59576/25",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681958757,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 136
        },
        {
            "number": 26,
            "revision": "b9c53e610f211e86c54fbdfed1749c489329f861",
            "parents": [
                "9676485b67274ebdabfcb86c54787e3c0292fdea"
            ],
            "ref": "refs/changes/76/59576/26",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681959684,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 136
        },
        {
            "number": 27,
            "revision": "535fbc28100cc4bb563c15adec8e0d3c1c3efccf",
            "parents": [
                "9676485b67274ebdabfcb86c54787e3c0292fdea"
            ],
            "ref": "refs/changes/76/59576/27",
            "uploader": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "createdOn": 1681962159,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 136
        },
        {
            "number": 28,
            "revision": "c1b66f420912dd659a4159ebd176af18347958f4",
            "parents": [
                "36af84cdbb660953d73804a12dfda056c3ac9b08"
            ],
            "ref": "refs/changes/76/59576/28",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "createdOn": 1682050266,
            "author": {
                "name": "Rashmica K Gupta",
                "email": "rashmica@linux.ibm.com",
                "username": "RashmicaG"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/mctp-defines.h",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/requester/pldm.c",
                    "type": "MODIFIED",
                    "insertions": 84,
                    "deletions": -136
                },
                {
                    "file": "src/transport/mctp-demux.c",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                },
                {
                    "file": "src/transport/meson.build",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport.h",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.c",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/transport/transport.h",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/requester/pldm.h",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/transport/container-of.h",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/transport/mctp-demux.h",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/base.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 782,
            "sizeDeletions": 136
        }
    ]
}