{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I09e9dcd142eb87a3641fe19557d61207ae1542e8",
    "number": 60518,
    "subject": "Inventory: Add Storage Management",
    "owner": {
        "name": "Matt Johnston",
        "email": "matt@codeconstruct.com.au",
        "username": "mkj"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/60518",
    "hashtags": [],
    "createdOn": 1675063540,
    "lastUpdated": 1676254622,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1675063540,
            "reviewer": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1675063556,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675063556,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1675063980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59810/ : SUCCESS"
        },
        {
            "timestamp": 1675831138,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1675845398,
            "reviewer": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1676254257,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1676254622,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "04baa9ca2812abd55457cf9da134c2925dc870b2",
            "parents": [
                "d1d7824e1768073337e28bac78cf7462a8d8c1e7"
            ],
            "ref": "refs/changes/18/60518/1",
            "uploader": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "createdOn": 1675063540,
            "author": {
                "name": "Matt Johnston",
                "email": "matt@codeconstruct.com.au",
                "username": "mkj"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Who are the intended domain experts for review here?  Do we have a repository this support is intended to land into?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Johnston",
                        "email": "matt@codeconstruct.com.au",
                        "username": "mkj"
                    },
                    "message": "The server is intended to be implemented in dbus-sensors, nvmesensor binary. It is used by bmcweb to expose Redfish (Swordfish) interfaces for NVMe management. (copying from the other patch's comment)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't have any opposition to this as-is, other than the InternalError discussion."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Storage.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please see 'requirements.md' for association naming requirements."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Storage.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Matt Johnston",
                        "email": "matt@codeconstruct.com.au",
                        "username": "mkj"
                    },
                    "message": "Ok, I will use Inventory.Item's containing/contained_by."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/StorageController.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is the difference between \"attached\" and \"contained\"?  I'd tend to prefer consistent naming if there is not significant value-add to \"attach\"."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/StorageController.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Matt Johnston",
                        "email": "matt@codeconstruct.com.au",
                        "username": "mkj"
                    },
                    "message": "A Volume can be attached to multiple StorageControllers, so \"contained\" doesn't seem to fit this case."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Volume.interface.yaml",
                    "line": 72,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See Object.Delete instead of writing a new method."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Volume.interface.yaml",
                    "line": 72,
                    "reviewer": {
                        "name": "Matt Johnston",
                        "email": "matt@codeconstruct.com.au",
                        "username": "mkj"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerManagement.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We've been trying to refrain from adding new InternalFailure errors because they're not particularly helpful from an API perspective.  What is the caller expected to do as a result of it?  Retry?  Silently drop the request?  It is too ambiguous.  ResourceNotFound at least implies a bug on the part of the caller (likely)."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerManagement.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Matt Johnston",
                        "email": "matt@codeconstruct.com.au",
                        "username": "mkj"
                    },
                    "message": "I can add a more specific Self.Errors.DeviceError as a catch-all for failures from the device if that helps? The list of NVMe generic error status codes is fairly long, some of them like Write Fault could map to Common.Device.WriteFailure, but others are opaque, including NVMe's own \"Internal Error\" status code.\n\nhttps://manpages.debian.org/testing/libnvme-dev/nvme_status_field.2.en.html#Constants"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerManagement.interface.yaml",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I think at least narrowing it to a device-specific error type is an improvement on `Common.Error.InternalFailure`."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/ControllerManagement/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/StorageController.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Storage/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Storage/ControllerManagement.interface.yaml",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Storage.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Inventory/Item/Volume.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 117,
            "sizeDeletions": 0
        }
    ]
}