{
    "project": "openbmc/jsnbd",
    "branch": "master",
    "id": "Ic4578c5863dc196628cdcfa9e453803c4d749751",
    "number": 49944,
    "subject": "Replace old base - new service added",
    "owner": {
        "name": "Przemyslaw Czarnowski",
        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
        "username": "phawryle"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944",
    "hashtags": [],
    "createdOn": 1640221074,
    "lastUpdated": 1676541790,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1640221074,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640353288,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(34 comments)"
        },
        {
            "timestamp": 1640358560,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1641382688,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1641384315,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(36 comments)"
        },
        {
            "timestamp": 1641801630,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1641802393,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641870496,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1641887198,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641887769,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641890640,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641890806,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641893302,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641894212,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1642170470,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1642233546,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643382588,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1643382881,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1643665191,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1644077225,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1665134534,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1667950882,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1667950923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1667950923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1667950944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/55056/ : FAILURE"
        },
        {
            "timestamp": 1667952465,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1668411733,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1668425308,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1670846309,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1670846331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670846331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1670846404,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57496/ : FAILURE"
        },
        {
            "timestamp": 1670849148,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1670934664,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1670934683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670934683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1670934702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57602/ : FAILURE"
        },
        {
            "timestamp": 1670937118,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1670937138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670937138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1670937205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57615/ : FAILURE"
        },
        {
            "timestamp": 1670939788,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1670939813,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670939814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1670939889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57618/ : FAILURE"
        },
        {
            "timestamp": 1670940671,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1670941721,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1670941744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670941744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1670941837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57624/ : FAILURE"
        },
        {
            "timestamp": 1670942998,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1670943024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670943024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1670943173,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57629/ : FAILURE"
        },
        {
            "timestamp": 1670943989,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1670946721,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1670946749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670946749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1670946848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57642/ : FAILURE"
        },
        {
            "timestamp": 1671198847,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1671198879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671198879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1671199002,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57951/ : FAILURE"
        },
        {
            "timestamp": 1671200282,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1671200294,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671200294,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1671200414,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57966/ : FAILURE"
        },
        {
            "timestamp": 1671202654,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1671202690,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671202690,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1671202806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57971/ : FAILURE"
        },
        {
            "timestamp": 1671729014,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 15: Commit message was updated."
        },
        {
            "timestamp": 1671729025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1"
        },
        {
            "timestamp": 1671729032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671729032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1671729382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58238/ : SUCCESS"
        },
        {
            "timestamp": 1674049717,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674049742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674049742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1674049759,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59295/ : FAILURE"
        },
        {
            "timestamp": 1674053314,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674053347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674053347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1674053366,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59304/ : FAILURE"
        },
        {
            "timestamp": 1674053646,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674053672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674053672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1674053791,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59305/ : SUCCESS"
        },
        {
            "timestamp": 1674137496,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674137522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674137522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1674137666,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59400/ : SUCCESS"
        },
        {
            "timestamp": 1675093660,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675145913,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175593,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675175612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675175612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1675175656,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175750,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59906/ : SUCCESS"
        },
        {
            "timestamp": 1675204463,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1675270691,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1675271697,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676483861,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676483900,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676541790,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1c9a6f9bc9eb4d9cacfaa585f3135f816c1603d7",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/1",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1640221074,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "CMakeLists.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we do Meson please?  New code is expected to be in meson."
                },
                {
                    "file": "CMakeLists.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Meson will be added in the next patchset."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I would prefer we do this as a separate commit at the end, once the review of this new feature is complete.  I don't want this repository to simply turn into another playground without review."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ok, sounds reasonable."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "(and at that point, feel free to remove me from owners; this will be almost all your code :) )"
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "I guess if the `jsnbd` feature is totally removed the appropriate capability should be also removed from webui-vue and bmcweb together.\nAdditionally, I guess there are manufactures that are still using nbd-proxy and I don't understand why this feature is removing.\nIf nbd-proxy is totally removing, then the repository name was confusing and brings implicit meaning. I guess after the current patch the repository will nether provide `jsnbd` and seems to me will be better to have a new separate repository like 'virtual-media' and the current repository might be removed when the nbp-proxy will be marked as obsolete and each manufacturer will give up of that feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This one has been discussed in the group conversation. The main reason is that:\n- this repo alrady exist\n- some of the code will remain\n- repo is already configured (CI).\n\nI don't like it, but I am not the one to decide."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "> - some of the code will remain\n\nDid you plan to save the nbd-proxy feature by the next-time patchsets? I still don't understand how new feature that introduced by current patchset is concerned with the jsnbd(nbd-proxy) feature.\nI totally preferred to have a new separate repository for the virtual media, or we should include nbd-proxy in the current implementation (perhaps it should be built by a configure compile flag)"
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Now I saw the conversation on the maillist. \nOk, if the community remained of that view, I don't give any questions. But it seems to me that several manufacturers will be very surprised when they can't find the nbd-proxy feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Just to clarify my input on the mailing list: I have no preference on whether we keep using this repository or replace it with a different one. If it makes more sense to completely replace the 'jsnbd' name with your new server code, that's totally fine with me.\n\nMy main point is that we don't just add a whole new virtual media implementation *alongside* the exiting one - we want a complete replacement.\n\nIn terms of your \"some of the code will remain\" reference, I understand that to be just the javascript parts, which is a very small amount of code; if you copy that into a new repo and lose the history, that's fine by me too.\n\nIgor: there's no real \"proxy\" feature that will be missing by this change; the nbd-proxy.c file is just named for the service that proxies data between the websocket and the nbd device - it is not related to the proxy VM feature mentioned elsewhere, but implements the entire js-websocket-to-nbd channel."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Jeremy,\nThanks for the explanation. \n\nYes, I understand that current changes are implemented the approved new VM-design that includes Proxying nbd-server from the browser(that is brought up to the bmcweb by the websocket) to the nbd device endpoint. \nMy point is the new implementation has a new API in relation to bmcweb, which is directly called the `nbd-proxy` application with specific flags. \nThe incoming implementation also has the described feature, but it works on the unix-sockets, which will be served by a stand-alone dbus-service. That is incompatible with the bmcweb VM-WebSocket feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Yep, that just means we'll need to synchronise these changes with the other components (like bmcweb) that consume the modified interfaces. That's a fairly standard approach in OpenBMC though."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Don't take me the wrong way, the current case is required a little bit more than simple synchronization. \nCurrently, bmcweb has a two ways to communicate with NBD-endpoints:\n* By the nbd-proxy application(old-base jsnbd), in the bmcweb terms that is called vm-weboscket which is provided `/vm/0/X` ws-resource\n* By the vm-nbdproxy (works on the unix-sockets), which is provided `/nbd/X` ws resource.\n\nIf jsnbd old-base will be removed that does mean the bmcweb vm-websocket feature never be worked and all appropriate frontend WebUI application can't be used/vm/0/X resource. \n\nI guess a lot of WebUI implementations are still based on the old-base VM-feature and the total rejection of old-base implementation will incapacitate virtual-media on a frontend. My opinion here is that it might be more gradual, by introducing a new virtual-media implementation and after markin old-base implementation as obsolete, the jsnbd(nbd-proxy) might be subsequently removed."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Actually that was my intention creating new repository and what I mentioned in the last post in the group - now, as new service is submitted we will lost the old one. \nThat means all upper layers has to be switched shortly.\n\nIf we want to stick to keep both services for transition period, new VM could go to branch so they won't collide."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't see anything here that uses boost/chrono.  Did I miss something?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "nice catch. Will use <chrono>."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You could make this simply:\n\nreturn { \"-t\", timeout, \"-u\", ... };\n\nDRY it up by avoiding repeating yourself on the return type and more likely for the compiler to use RVO to avoid a copy."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want this or std::optional<const MountPoint&>?  Having to deal with the nullptr is more error prone than something which is obviously nullable."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we just use std::map or std::unordered_map?  I really don't think there is as much advantage of using boost::..::flat_map as often as people attempt to use it."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This it just the pattern we use. This could be changed to unordered_map."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want to simply catch all exceptions?  Why these two specifically?  Seems error prone in maintenance. \n\nShouldn't you log e.what() somewhere?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This can be changed to catch generic exception and print reason added to current message."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you simplify all this with:\n\nauto value = nbdDeviceIter->get_ref<const std::string&>();\n\n1. Prefer references over pointers.\n2. The typename of value is obvious from get_ref, so DRY."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is the easiest and exceptionless getting of json values of given type.\nPointer in this case could be validated in opposite to reference. In case of type mismatch, get_ref<>() will throw nlohmann::type_error exception, so we must use try/catch block; get_ptr<>() will just return null pointer then. \n\nWe use this pattern very often in bmcweb while parsing redfish input."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think this is possible, is it?\n\nOr, should you be checking nbdDeviceIter->is_string() somewhere?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "see above"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are you having the constructor take a C-string if the only caller of it has a 'const std::string&'?  Defer conversion to C-strings as late as possible in C++ code."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is fairly non-obvious to me.  Having a struct cast to bool to indicate \"invalid parsing\"."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Added dedicated method on the object"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 144,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really dislike this nested logic pattern.  There is simply too much logic in this code and it will only get worse as people add new configuration parameters.  Can you, at a minimum, decrease the nesting on all of these using something like:\n\n  if (!value)\n  {\n      LogMsg(...);\n      continue;\n  }\n\n  // real logic."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 144,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It looks like you have this pattern a LOT in the configuration.  Can you simplify with a function to do it?\n\ntemplate<typename T, bool required = true>\nbool getConfig(const std::string_view key, T& value);\n\nif (!getConfig(\"UnixSocket\", mp.unixSocket))\n{\n   LogMsg(...);\n   continue;\n}"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Made a getConfig wrapper but left required/not required to the code flow. \nIt looks better now."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "switch-case?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "mountPoints.emplace(mountpoint.key(), std::move(mp));"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use phosphor-logging::lg2 and not make up your own logger."
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Is this really necessary? I consider phosphor logging heavy and not easy in use (with limitations)."
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "The stdout way to write log entries has a big issue that is the level of their. All lines that you are writing by the current engine will be included into journald with INFO level, that are independent of your specified  level. It seems to me this will bring to excess entries in the journald and mixing logs with different levels"
                },
                {
                    "file": "src/main.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In what contexts is this used?  I would have guessed test cases, but this is main.cpp."
                },
                {
                    "file": "src/main.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "It is a part to simplify debugging. Removed."
                },
                {
                    "file": "src/main.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "server::manager_t"
                },
                {
                    "file": "src/main.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I prefer /etc/virtual-media/config.json instead of more files cluttering the root."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Why virtual-media.conf stored in the /etc that is rwfs? Does we desire the VM-endpoints might be configured at runtime on the field mode? I'd prefer to store that config at the /usr/share/virtual-media/"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I would prefer to make it configurable on the fly. Modification of eg. timeout could be beneficial for some use cases."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "seems reasonable."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "I believe for the described case the config should be split into modifiable fields and persistent configuration. Changing a set of the virtual-media endpoints that is used to attach usb-gadget might incapacitate the rest features, e.g. kvm-hid devices(virtual keyboard and mouse)."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Generally OpenBMC store \"on the fly configurations\" in phosphor-settings, why you decide to bring your own mechanism? How is it supposed to change configuration, stored in json config??"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "By \"on the fly\" I mean the situations where you want to change eg. inactivity timeout for, let's say, debugging an issue on the platform.\nI thin it is not worth making it setting for such purposes."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "This kind of debugging is a part of developing and, IMHO, can be done by changing parameter in the image and reflashing BMC. Alternatively for testing on live machine you can mount ramfs overlay on top of /usr/share and temporary change parameters you want.\nIt is definitely not worth to break configuration on two files in different locations just because of this.\nAlso you can make this path configurable with meson build options."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ok, /usr/share/virtual-media seems reasonable, and yes breaking it down seems too much complication."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This doesn't seem obviously connected to virtual-media.  Someone's just going to see a random /tmp/sock directory?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "+1. \nI'd prefer to store the virtual-media-specific stuff at the (/var)/run/virtual-media/ directory."
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Yes, this has been changed recently. Will backport that."
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In what contexts is this used?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "The use case is by running it on x86 platform natively (for debugging eg.) but with dbus tunneled to bmc platform.\nI will remove it in favor of DBUS_STARTER_BUS_TYPE=\"x\" and DBUS_STARTER_ADDRESS=\"unix:abstract=/tmp/socket\" what does the same, actually."
                },
                {
                    "file": "src/main.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Any reason you're not using the sdbusplus code here?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is just for making remote dbus possible. Not needed anymore."
                },
                {
                    "file": "src/system.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\"I want to type less\" is kind of a lousy reason to avoid C++ features."
                },
                {
                    "file": "src/system.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Removed according to another suggestion"
                },
                {
                    "file": "src/system.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It isn't obvious to me when a static (compile-time) reference to a particular nbd name is useful.  Can you elaborate?  It seems like this class should always take a string-like and check it against /dev for presence.  Why should we need to modify anything if we wanted to support more or less nbd channels?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This class has been prepared to handler different nbd nodes on request. There was a problem with kernel implementation when device sometimes (rather rarely) couldn't be reused for some reason. We end up with this ready for future expansions when the problem will occur more often. In the end, the bug hasn't recurred (for >1year).\n\nThe mitigation for the problem was when requesting for some node it could return the other one that is free at the moment (that's why \"isReady\" function exists but is not used). This will be easier to manage with internal enum representation.\n\nI would recommend to leave some of this functionality (may be used), but indeed I will probably resign from using enum inside as it seems redundant at this moment."
                },
                {
                    "file": "src/system.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "As mentioned above, it isn't obvious to me why we want to do this search operation."
                },
                {
                    "file": "src/system.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "see above"
                },
                {
                    "file": "src/system.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Prefer to use range-find whenever possible now.\n\nstd::range:find(nameMatching, nbdName);"
                },
                {
                    "file": "src/system.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/system.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "std::end(nameMatching) \n\n(or cend if you really prefer, but generally the compiler will simply do the right thing anyhow)"
                },
                {
                    "file": "src/system.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use spaceship operator."
                },
                {
                    "file": "src/system.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This sounds expensive.  Can we simply check for dev node presence?  Maybe we're doing it infrequently enough that it doesn't matter."
                },
                {
                    "file": "src/system.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "For the reason I mentioned above, this could help determine if device could be used."
                },
                {
                    "file": "src/system.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is all the more reason why I don't understand why you want to store as an enum and do this conversion back and forth all the time."
                },
                {
                    "file": "src/system.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Changed the internal representation to std::string."
                },
                {
                    "file": "src/system.hpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If you're going to have this it should probably be a 'static constexpr std::array'?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ack"
                },
                {
                    "file": "virtual-media.json",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems kind of silly.  Can we DRY up this configuration?  You've had to repeat yourself 4 times for a \"default\" configuration: Slot_0, /nbd/0, nbd0, nbd0.sock."
                },
                {
                    "file": "virtual-media.json",
                    "line": 8,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Those names are chosen arbitrarily this way to show how to define such configs. They could (and should) be replaced to something more meaningful. \n\nI don't see anything wrong to have everything customizable."
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We've been moving a lot of executables we don't intend users to run into /usr/libexec.  See https://github.com/openbmc/docs/blob/master/anti-patterns.md#incorrect-placement-of-executables-in-sbin-usrsbin-or-bin-usrbin"
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "line": 6,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "cmake/Findudev.cmake",
                    "type": "ADDED",
                    "insertions": 77,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 254,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "ADDED",
                    "insertions": 145,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "OWNERS",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1107,
            "sizeDeletions": 1520
        },
        {
            "number": 2,
            "revision": "cfef539f8bdbb267f1e18070c95e72806045e99b",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/2",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1641382688,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "I'm more on the kernel interface side of things here, I'll leave the service implementation reviews to others.\n\nLooks decent, and nice work on the change to meson. A couple of comments inline, mostly around the configuration structure. Like some of the other reviews, +1 on the structure of having most of the configuration can be fixed, and we can store any dynamic configuration in existing infrastructure.\n\nOne overall thing though: you make several mentions to \"mount point\" in this (and subsequent) changes; this term has a specific meaning of where a device is attached to the local filesystem.\n\nHowever, I assume you're not actually \"mounting\" these devices into the BMC filesystem - is that correct? Could we clarify this a bit in the code?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Sorry, I missed this one previously.\nMount point here is a high level idea of an slot that could be used to connect an external resource of some kind and virtually attach it to an emulated USB device. \"Connect\" used here is exchangeable with \"mount\" as general idea is similar to local mount.\nThis slot (aka. mount point) exposed in d-bus, Redfish, and UI, is identified by name and characterized by a bunch of parameters ie. mode (legacy/proxy), device, socket etc. \n\nActually, we do mount external share only for CIFS in order to access ISO/img located there."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "What's the definition of a \"slot\" here? Could this just be an index?\n\nAnd if so, most of the keys (EndPointId, NBDDevice, UnixSocket) seem to be derived from that index, so you could imply those values rather than requiring mostly boilerplate config values."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is propagated as name to dbus/rf/UI interface. There are four possible slots with USB Gadget, each one can have specific name."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to Jeremys comment.  Most of these could just be replaced by an index."
                },
                {
                    "file": "src/system.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Why does this need to be one of the fixed nbd names from nameMatching? Is there any issue with allowing arbitrary paths here?\n\nOr, given you're requiring the 'nbd' prefix in call cases, just make this an index instead?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I have changed it, as previously enum was internal representation for this class. \nThis class may do more in the future as I wrote in this comment:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/jsnbd/+/49944/comment/f4ece81e_e25bd73b/"
                },
                {
                    "file": "src/system.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "It looks like you're just checking whether the device node exists, is that correct? if so, an `access()` would work, or a `stat()` if you want to check that it's a proper nbd device (chardev, with major NBD_MAJOR).\n\nIs there a reason this needs to be an O_EXCL, but the main open() below does not?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This exclusive open was needed in order to check if the device is still available to use. \nThere are cases where previously used device is held by linux kernel for some reason (I haven't seen such behavior for some time) and can't be used."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 248,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1396,
            "sizeDeletions": 1520
        },
        {
            "number": 3,
            "revision": "3c06849cb3e5a3725e2e3062a587c079c254fbd1",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/3",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1643382588,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "UT are still on the way, pushed rebased patches."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Is the work still in-progress?"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "What is the reason for introducing a new logging way? Might we use the `phosphor-logging` instead of directly printing to the stdout? \nI guess it might be included in the current point with the appropriate log level.\nAdditionally, the logging way might be switching between phosphor-logging and stdout by meson build env-var"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "It has been for historical reasons. I have prepared single commit changing all logging to phosphor-logging. But due to some dependency problems in local builds it is not ready yet."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 217,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1356,
            "sizeDeletions": 1520
        },
        {
            "number": 4,
            "revision": "28b427a4de4325f1fff2995ddc230001cd673942",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/4",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1667950882,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Hi again.\n\nAfter (rather long) break I'd like to return to upstream work.\nI have refreshed 4 patches with UT added, I will submit the rest of patches shortly.\n\nI have left old jsnbd files this time. They will be removed at the end as last commit - this will allow for an easier transition I believe, but I see adding .clang-format made CI failure on nbd-proxy.c...\n\nTODO: change logging to phosphor-logging. I have prepared separate commit adding that. \n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Hi Przemyslaw,\n\nGiven this is a fairly comprehensive rewrite of the NBD infrastructure, I'll recuse myself from the review of the new code here: i'll assume it's working for your use case, and those with hardware to test can do so.\n\nHowever, I'm not clear on why you're doing the work in this repo; it's a complete replacement, the name 'jsnbd' no longer applies, and you don't seem to be removing the old code.\n\nMy only concern earlier was:\n\n> My main point is that we don't just add a whole new virtual media implementation \n> *alongside* the exiting one - we want a complete replacement.\n\nThat doesn't necessarily mean you need to work within this repository, just that we deprecate the existing code when adding your new implementation."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I started the first attempt to upstream with a request to create a brand-new repository. But this has been changed as suggested by Ed and Patrick as js part of nbd server is still used \"as is\". If you don't feel good with it, please bring old VM topic alive to open the discussion again."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1907,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "89147eb0917d212bf521a609c42dcc3665d51cb8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/5",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670846309,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "In terms of process for this - since you're replacing the existing code wholesale, I don't see any requirement for a review from me; feel free to merge as you see fit, but you'll probably want to update OWNERS to suit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2575,
            "sizeDeletions": 615
        },
        {
            "number": 6,
            "revision": "e1c60bb428d7e842db3c06563b6e0f2aa664dbaa",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/6",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670934664,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2580,
            "sizeDeletions": 615
        },
        {
            "number": 7,
            "revision": "a137d10cd06ade8e3cf9716822364874c56c19f1",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/7",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670937118,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2581,
            "sizeDeletions": 615
        },
        {
            "number": 8,
            "revision": "688c123bb17b8cb469bcc5a019a304597e8e5f52",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/8",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670939788,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 9,
            "revision": "7f97f58f175df792aba156ccc7e3bc91ecb01073",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/9",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670941721,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 10,
            "revision": "980374ad37963b25644f54bcc89b04752109aa77",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/10",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670942998,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Still have a problems with unit test part of the build system...\n"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 11,
            "revision": "6ed943ab80ffae240abb787ee4891273960658bd",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/11",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670946721,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2588,
            "sizeDeletions": 615
        },
        {
            "number": 12,
            "revision": "facd3702ab75065859af8862229f0a21199bf1b8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/12",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671198847,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2588,
            "sizeDeletions": 615
        },
        {
            "number": 13,
            "revision": "1ba292a221bc0ddde6b5abb239e401bdde977ead",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/13",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671200282,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2328,
            "sizeDeletions": 615
        },
        {
            "number": 14,
            "revision": "3648ba7e346f0f97806d103b92d7d42b8dfe44f9",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/14",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671202654,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2347,
            "sizeDeletions": 615
        },
        {
            "number": 15,
            "revision": "f5805cfa926bb7e2662839326de1ef22b3211b2e",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/15",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671729014,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2349,
            "sizeDeletions": 615
        },
        {
            "number": 16,
            "revision": "764c526744d8a83a8e1116c9159e2262d067b1db",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/16",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674049717,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2393,
            "sizeDeletions": 615
        },
        {
            "number": 17,
            "revision": "5cfe347fd42604b4a68663972644e83bf8948fbe",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/17",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674053314,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2393,
            "sizeDeletions": 615
        },
        {
            "number": 18,
            "revision": "1778179a5a49e877524de885cbc9a42e09d160b6",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/18",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674053646,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        },
        {
            "number": 19,
            "revision": "5593ce802b5bc009ec7839530050aec8a21c76eb",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/19",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674137496,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Hi,\nCould you please take a look at the updated patches? \n- logger switched to phosphor-logging (but with wrapper)\n- UT added"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Hi Przemyslaw,\n\nThanks for the continued work on this. As I mentioned above, I'm okay with switching over to  new infrastructure, as long as you're okay with taking on maintenance.\n\nA couple of overall notes:\n\n - I'm a little confused to the references to \"legacy mode\"; why is this legacy? Users may not have the context about what is legacy and what isn't, and the existing nbd code doesn't implement it anyway (what is it a legacy from?). Perhaps something more descriptive would be useful here, like \"client mode\" vs \"browser mode\" ?\n \n - There seems to be a bit of confusion around build infrastructure: you're using meson, but the bootstrap.sh references an autotools build, and the README references a CMake build."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Sure, I will take the maintenance after those patches will be accepted. \n\nRegarding the naming scheme, those are proposed just to distinguish. Legacy means that it follows assumptions of Virtual Media schema of redfish. This could be named as URL based (or similarly). For me Legacy sounds OK, origin is also covered by the design papers. \nFor proxy, the name is self-descriptive as BMC works as proxy between nbd server provided by user and host.\n\nFor the bootstrap.sh file (and other autotool files) - for the time by all patches defining a new service will be accepted, both implementations must co-exist. That's why I left all old files. They will be removed by the last patch in the series, right after OpenBMC Yocto recipes will enable the new solution. This is a consequence of the decision to reuse jsnbd repository.\n\nAnd last (but no least) - references to CMake are leftovers from the transition to meson from CMake used initially by the project. I have removed them in the next version of patches."
                },
                {
                    "file": "meson.build",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, tabs.\n\nNon nit.  Most of these boost modules are explicitly disallowed by the coding standard due to impacts they have on the quality of the output binary.  coroutine is allowed, but there are c++ std replacements for the other ones.\n\niostreams -> use std::iostreams, or ideally avoid streams altogether.\nfilesystem -> use std::filesystem\nprogram_options -> use CLI11\nregex -> use std::regex, or replace with basic state machines\nsystem -> Set BOOST_SYSTEM_NO_DEPRECATED"
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't seem like a script we would want here?"
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "The purpose of this script is to copy different configuration files to '/tmp' for unit test purposes. If You take a look at 'configuration_test.cpp', You'll notice that tests load different configuration variants from '/tmp' directory."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        },
        {
            "number": 20,
            "revision": "86db8588074c4cb49c972316a8b4f43535baecb8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/20",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1675175593,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Design for reference:\nhttps://github.com/openbmc/docs/blob/master/designs/virtual-media.md"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generalized comments here:\nThe formatting across the board is a problem.  Tabs are injected into files that should be space delimited.  Formatting changes are applied in the same commit as non-formatting changes.  At the very least those could be broken out.\n\nLots of odd design patterns.  There appears to be a subproject patch to sdbusplus that needs merged to get this on master.  There's a script to copy things to /tmp that it's not clear why it's there.\n\nThe config file needs some work.  There are things in it (like the path) that should not be configured per platform.  Most things in the config file could go away in leui of a simple \"number of slots\" setting in meson_options."
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "line": 19,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not sure why this is needed but if it is, meson uses `dependency('threads')` for it, not a direct linker argument.\n\nIn my view, I'm not using anything out of pthread directly, but rather indirectly via std, so the libstd should already link against pthread if needed.  What was the issue you were seeing without this and what version of compiler were you seeing it on?"
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "line": 26,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've added a fix for this one:\n\nremote:   https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/60564 event: add unistd header [NEW]"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        }
    ]
}