{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "nvme-mi",
    "id": "Ib99f3c1ab6d65533cb80804abd119f0d4a9f0f8a",
    "number": 56851,
    "subject": "nvme sensor: refactor the code",
    "owner": {
        "name": "Hao Jiang",
        "email": "jianghao@google.com",
        "username": "drakedog2008"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851",
    "hashtags": [],
    "createdOn": 1661797300,
    "lastUpdated": 1684130214,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1661797300,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1661797330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661797330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1661797478,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50040/ : FAILURE"
        },
        {
            "timestamp": 1661804301,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1661814701,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1661816489,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1661816590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661816590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1661816609,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50055/ : FAILURE"
        },
        {
            "timestamp": 1661816652,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1661816778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661816788,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1661816928,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1661816939,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50056/ : FAILURE"
        },
        {
            "timestamp": 1661817010,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661817015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1661817166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50058/ : FAILURE"
        },
        {
            "timestamp": 1662049279,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1662128551,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50307/ : FAILURE"
        },
        {
            "timestamp": 1662509094,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1662509151,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662509151,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1662509320,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50398/ : FAILURE"
        },
        {
            "timestamp": 1662509836,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 7: Commit message was updated."
        },
        {
            "timestamp": 1662571982,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 7:\n\n(6 comments)"
        },
        {
            "timestamp": 1662682354,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1662682416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662682416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1662682574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50531/ : FAILURE"
        },
        {
            "timestamp": 1662740546,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 8:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1662749831,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1662749903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662749903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1662750081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50588/ : FAILURE"
        },
        {
            "timestamp": 1662760693,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 9:\n\n(16 comments)"
        },
        {
            "timestamp": 1662912528,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(28 comments)"
        },
        {
            "timestamp": 1663300226,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1663349860,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1663606601,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1663606683,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1663807436,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 9:\n\n(7 comments)"
        },
        {
            "timestamp": 1663828185,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 9:\n\n(24 comments)"
        },
        {
            "timestamp": 1663828259,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1663830322,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1663830362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663830362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1663830539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52212/ : FAILURE"
        },
        {
            "timestamp": 1663849764,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1663908370,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1663908447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663908447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1663908484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52329/ : FAILURE"
        },
        {
            "timestamp": 1663908668,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1663909114,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1663909177,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663909177,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1663909225,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1663909345,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52330/ : FAILURE"
        },
        {
            "timestamp": 1664554677,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1664560629,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1664839802,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1676598145,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676598174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676598175,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1676598192,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61164/ : FAILURE"
        },
        {
            "timestamp": 1676600227,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Topic set to nvme-mi"
        },
        {
            "timestamp": 1676683288,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676683337,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676683337,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1676683353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61255/ : FAILURE"
        },
        {
            "timestamp": 1676683811,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676683827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676683827,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1676683843,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61256/ : FAILURE"
        },
        {
            "timestamp": 1676684161,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1681259279,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 15:\n\n(5 comments)"
        },
        {
            "timestamp": 1682548879,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 16: Patch Set 15 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1682548907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1682548907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1682548923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65027/ : FAILURE"
        },
        {
            "timestamp": 1683657347,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683657380,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683657380,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1683657397,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65935/ : FAILURE"
        },
        {
            "timestamp": 1683657815,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683657845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683657845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1683657868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65937/ : FAILURE"
        },
        {
            "timestamp": 1683664862,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683664911,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683664911,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1683665227,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65943/ : FAILURE"
        },
        {
            "timestamp": 1683667641,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683667701,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683667701,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1683668413,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/65946/ : FAILURE"
        },
        {
            "timestamp": 1683669818,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683669881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683669881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1683670179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/65947/ : SUCCESS"
        },
        {
            "timestamp": 1683671516,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 21:\n\n(10 comments)"
        },
        {
            "timestamp": 1683677823,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1683679626,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 21:\n\n(8 comments)"
        },
        {
            "timestamp": 1683736813,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 22: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683736837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683736837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1683737148,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/66095/ : FAILURE"
        },
        {
            "timestamp": 1683744121,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 23: New patch set was added with same tree, parent tree, and commit message as Patch Set 22.\n\nCopied Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683744146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683744146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1683744166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/66101/ : FAILURE"
        },
        {
            "timestamp": 1683754093,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 23:\n\n(9 comments)"
        },
        {
            "timestamp": 1683754416,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1683758191,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1683758225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683758225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1683758581,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/66140/ : FAILURE"
        },
        {
            "timestamp": 1683772997,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 24:\n\n(6 comments)"
        },
        {
            "timestamp": 1683843148,
            "reviewer": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "message": "Patch Set 24:\n\n(5 comments)"
        },
        {
            "timestamp": 1683859401,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1683859401,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1683859845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/66313/ : SUCCESS"
        },
        {
            "timestamp": 1684130214,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "376c91654ba05300b4e3d381ed018e69dc822935",
            "parents": [
                "e1a18f3ee0513d9925b3e1946b63ecc9ec70659c"
            ],
            "ref": "refs/changes/51/56851/1",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1661797300,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -30
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 130,
                    "deletions": -168
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -125
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 197,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 578,
            "sizeDeletions": 443
        },
        {
            "number": 2,
            "revision": "83d8b0d23b8ba01585704f5e990a651f03338a98",
            "parents": [
                "e1a18f3ee0513d9925b3e1946b63ecc9ec70659c"
            ],
            "ref": "refs/changes/51/56851/2",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1661814701,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -30
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 86,
                    "deletions": -106
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -125
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 381
        },
        {
            "number": 3,
            "revision": "db632345f0bcc1f1d1d571f1ff06467f7447f4b7",
            "parents": [
                "6c106d66e390352a6914e8dc5ddad20943eceaa6"
            ],
            "ref": "refs/changes/51/56851/3",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1661816489,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 89,
                    "deletions": -111
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 541,
            "sizeDeletions": 403
        },
        {
            "number": 4,
            "revision": "3dc289f5a6a3eb0a8a9d6a5b60d725ff2255fc56",
            "parents": [
                "6c106d66e390352a6914e8dc5ddad20943eceaa6"
            ],
            "ref": "refs/changes/51/56851/4",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1661816652,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 539,
            "sizeDeletions": 400
        },
        {
            "number": 5,
            "revision": "d47a7853424cfd4e89c11af824b9e886e3787293",
            "parents": [
                "6c106d66e390352a6914e8dc5ddad20943eceaa6"
            ],
            "ref": "refs/changes/51/56851/5",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1661816928,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "were you able to test on an existing system that uses this daemon?\n\nI believe gbs uses it to see if it work with existing sensors."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Tested in the recent patch."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "explicitly declare the enum type."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Any reason?"
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I thought the type might be different depending on the system and might cause some issues down the line."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"Because the coding standard says to\" is the easy answer here, which namespaces enums in enum class to avoid conflicts and type safety issues between enum values."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nice."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "unordered_map?"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "What is the benefit? The software will do more search than modification and sort for int will be fairly quick."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "isn't lookup on unordered_map faster (on average)?"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "map is log(n) and unordered_map could be O(n)? \n\nBut I don't really think it matters here, given we have only ten-ish i2c buses \ud83d\ude0a"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "no need the {}?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "new line."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "just combine into an array?"
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Will do."
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 539,
            "sizeDeletions": 400
        },
        {
            "number": 6,
            "revision": "71b4384f46810b451c43d25224050e135a8f478f",
            "parents": [
                "4b0b1bbd263d469d7a19d01bef1b62109d65485f"
            ],
            "ref": "refs/changes/51/56851/6",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1662509094,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 206,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 561,
            "sizeDeletions": 400
        },
        {
            "number": 7,
            "revision": "50010d9cf56b1431be49f8903e780c3541e35c2e",
            "parents": [
                "4b0b1bbd263d469d7a19d01bef1b62109d65485f"
            ],
            "ref": "refs/changes/51/56851/7",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1662509836,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 206,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 658,
            "sizeDeletions": 400
        },
        {
            "number": 8,
            "revision": "f84c7410f8347521a44eca47d32b3270b544aea5",
            "parents": [
                "4b0b1bbd263d469d7a19d01bef1b62109d65485f"
            ],
            "ref": "refs/changes/51/56851/8",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1662682354,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 206,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 663,
            "sizeDeletions": 402
        },
        {
            "number": 9,
            "revision": "53d2bfb5c1cc0b6600876de7dda744f5dc2e024f",
            "parents": [
                "344b77fbaf751de7a1594dc4f5e9b70c01e2ba9c"
            ],
            "ref": "refs/changes/51/56851/9",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1662749831,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just so you're aware, as a general rule, these kinds of abstractions tend to conflict directly with the OpenBMC core principals, namely:\n- Code should be clear and concise.\n- Code should be performant.\n\nWith that said, I'm happy and open to have a discussion if this MVC pattern can meet those requirements when compared to a simpler approach.  Keep in mind, in the cases where we've tried this pattern before, binary size became a problem given the compilers inability to optimize across virtualized boundaries, but again.... happy to have a discussion and find something that meets the requirements."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Sound good. It will pleasure to chat about the design pattern. I am available on discord (Haoj#1417) at pacific times."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "An excellent start.  Keep up the good work!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hi Hao Jiang, thanks for your work here. I'd like to see the clang-tidy issues addressed (some of them suggested some restructuring might be required) and then I'll take a closer look."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Hi Ed and Willy, \n\nThanks for the informative reply. I am going through all of them and will reply in place. "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Hi Andrew, \n\nSure I will fix the the minor issues. Suggestion are welcome. Thanks in advance."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "There are couple of questions related to using rtti for NVMeIntf. I am trying to explain it in a concentrated place. We can continue the chat in this thread or via the concord. \n\nLet's started with the MVC model. So NVMeIntf is the Model(M) here and the NVMeSubsys is the Control(C). \n\nM and C are independent components in this model and C should not be the factory class of M. which means we should not do inside of NVMeSubsys smt like: \n\n```\nNVMeSubsys{\n  if (NVMe_Basic)\n    create M1_NVMeBasicIntf\n  else \n    create M2_NVMeMiIntf\n}\n```\n\nThus we need a unified way to describe M to C. There are couple of ways I thought about: \n1. A data coupling model, such as SQL query, XML layout, data sequentializer(like protobuf/rpc).\n2. C++ vtable/runtime type info\n3. C++ template / compile time type info \n\nI went to (2) because: \n* (1) is over killing for the light weight program of openbmc daemon. \n* (3) Makes the readability issue of template-everywhere and code size expansion.\n\nI am not sure how much rtti will impact the performance or stability. I assume dynamic_cast and smart ptr cast will be secure enough from exception? "
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "uint32_t? since won't be negative?\n\num... seems like it was int before the chanage."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"wont be negative\" isn't always the best way to determine uint versus int.  in certain cases, the native type can be transformed to processor specific code more easily and with less code, because it essentially represents the processors native type.  When compared to uint, the compiler has more freedom on what to do in overflow behavior, so generally the rule is \"use int as a default, unless you have a good reason not to\" of which there are numerous reasons not to, STL container usage (which many have argued should've used int as size_t for performance reasons, but obviously can't be changed now)\n\nIn this case, because bus is an arbitrary index, we use what the kernel uses, which is int, which is why this code uses int.\n\nhttps://gitlab.brokenpipe.de/bricolage/libi2c/-/blob/master/libsmbus.h#L29"
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "oh interesting. Thanks for the info."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nit: newline."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More specific advice..... just use clang-format.  If clang-format decides there needs to be a newline here or not, it is the right answer."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm a little confused why this is necessary.  This is a virtual interface with only a constructor and a destructor?  Maybe this will make more sense in later patches in the series, but as written, it's not clear why it's needed."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "This is the entry point for the vtable. So inheritance and virtualization converge to this base interface. \n\nPlease redirect to the thread of the NVMeIntf design. We can continue the topic there. \n\n> Maybe this will make more sense in later patches in the series, but as written, it's not clear why it's needed.\n\nThe refactor is all targeting at extensibility to multiple protocol. I have done the NVMeMi part so you can use as a reference. \nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57056/2/include/NVMeIntf.hpp#47"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should this class be final?"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit on naming, the term \"Interface\" (which ideally we should spell out instead of abbreviating) is overloaded here.  There's the virtual class interface, then the physical nvme interface (mctp/basic).  I think we should just call this class NVMeBasic to avoid the confusion."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "No. This is interface class, not the implementation."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "No, this is the interface class. The inherence rationale is: \n\nNVMeIntf (base class for NVMe Model) \n  |-NVMeBasicIntf (interface for NVMe basic protocol)\n  |  |-NVMeBasic (implementation for NVMe basic over I2C)\n  |  |-NVMeBasicMock (Mockup for NVMe basic)\n  |-NVMeMiIntf (interface for NVMe Mi protocol)\n  |  |-NVMeMi (implementation for NVMe Mi over I2C)\n  |  |-NVMeMiVdm (implementation for NVMe Mi over VDM)\n  |  |-NVMeMiMock (Mockup for NVMe Mi)\n  \n The NVMeMi is available at: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57056/2/include/NVMeMi.hpp#8"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "3 levels of inheritance seems quite complex for something that will likely only have two available transports, but I'm open to the possibility it's better.\n\nMy preference would've been for some simple flags\n\nif (type == NVMEBasic){\n   do_nvme_basic_transport()\n} else {\n   do_mctp_transport();\n}"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "NVMe basic and NVMe MI (mctp) have the different functionalities so they abstract to different interfaces. The interface is an abstraction of NVMe functionality, not the physical transportation. \n\n* the daemon will not directly talk to mctp socket or i2c fd, libnvme/libmctp will do the message construction on protocol level. \n* It is how NVMe controller aggregate the data on their internal storage. \n* It will be much easier for the daemon to optimize the performance, e.g. data, aggregation, priority scheduling, etc."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I am getting rid of dynamic_cast by using composition instead of inherence for the two interfaces."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to \"this should be an enum class\".  Also, please ensure that when you do that, the underlying type of the enum class matches the field for which this object enum is being compared (I think uint8_t)"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Thanks for the advise. \n\nThe enum class adds a force scope and removes the implicit type conversion (even with defining underlayer type). It is kind of against the usage for flags? since the flags is used to mask the flag bit"
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Both of those behaviors are intentional in the coding standard.  Implicit conversions can cause bugs."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "The goal of enum class of forbidding the implicit conversion is not to cast its **index** to the underlying type, which could be buggy. As it is argued in the article(https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0138r2.pdf): \" For all practical purposes, Index acts like a \"strong typedef\" in C++11\". \n\nI agree if the enum is used as an index for `switch`, or a template type. However, in my case, we are using the actual **value** of the flags, instead of the index/type. e.g. \n\n```\nbool notRdy = message & NVME_MI_BASIC_SFLGS_DRIVE_NOT_READY;\n```\n\nIf we insist on forcing enum class in the above use case, we need either: \n* static_cast to the underlying type, which is also semantically wrong. \n* use a operator overload, which over-complex the code\n\nThe real question is, if we know the usage of the enum is to use it underlying type. And every type cast is the correct way to use it, why should we forbid the implicit cast at the very beginning? \n\nMaybe I can use a nested class as the namespace: \n\n```\nclass\n{\nstatic constexpr unit8_t NVME_MI_BASIC_SFLGS_DRIVE_NOT_READY = 0x40;\nstatic constexpr unit8_t NVME_MI_BASIC_SFLGS_DRIVE_FUNCTIONAL = 0x20;\n}\n```\nBut it is basically the same thing as a non-class enum."
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Just reusing the original definition for the enum. If we want to change it to constexpr, it should belong to a seperate cl."
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm a little confused.......   Don't all NVMe devices have a bus number?  Why are we removing it from teh constructor?"
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Let start with the MVC model. \n\nThe NVMeSensor is the View(V), it is just the dbus representation. It doesn't have any physical connection to where the data retrieved from, whether it is a i2c device or pcie, a NVMe basic protocol or NVMe MI. \n\nThe NVMeIntf is the Model(M). All data comes from Model and it is the abrastration of the physical transportation. \n\nNVMesubsys is the Controller(C). It routes the data from M to V and schedules when M should update V. \n\nThat is how I decoupled the daemon to its protocol. And given i2c is the physical layer, it belongs to M instead of V."
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, probably another place where we shouldn't abbreviate."
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Is there a change for adding this to `phosphor-dbus-interface`."
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Entity-manager configuration interfaces are not stored in phosphor-dbus-interfaces, and while that's non-ideal, there's complications with doing it that I don't want to impose on this patchset, as it's a greater question \"how do reactor interface contracts work?\""
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "ACK.\n\nOh right. that make sense."
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "const string?\n\nsince I guess we don't expect to update it after the constructor?"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I would like not to use const member variables, given it will be really bothersome for move constructor/assignment if I need them"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I would like not to use const member variables, given it will be really bothersome for move constructor/assignment if I need them."
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Double click \ud83d\ude2e"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "rm?"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Oh sure. was Marking for future job"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given that the \"int\" type of the key here is relatively ambiguous, can you add a comment about what the mapping represents?"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why shared_ptr here?  I don't see any shared ownership.  Can this just be a value?  Also, technically breaks the coding standard \n\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-global"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> Why shared_ptr here?  I don't see any shared ownership.  Can this just be a value?  \n\nBecause a NVMeBasicIO is shared by multiple NVMeBasic instances which are on the same i2c bus. \n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/9/include/NVMeBasic.hpp#48\n\nthe smart ptr is used to release the IO resource after the last device on the i2c bus is closed. \n\n> Also, technically breaks the coding standard \n> \n> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-global\n\nI saw a couple of examples using the same style (e.g. https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/9/src/NVMeSensorMain.cpp#b25), though it should be defined as static to make it constrained in this modular. \n\nI can make it static private member variable but I was thinking it was not necessary. \n\nPlease feel free to reopen if you have further concern about it."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "The map is <rootBusNumber, NVMeBasicIO>. It makes sure all i2c devices behind the mux will share the same IO and no concurrent transaction happens across these devices. \n\nAdded a comment for the map."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just so you're aware, now that we have uring turned on, this whole class can probably cease to exist.  uring gives us the ability to async read/write from file handles that wouldn't normally be that way, so\n\n- NVMe Basic doesn't need this class for non-blocking IO.\n- MCTP in the kernel uses the sockets API, which never needed this class, as we can already do non-blocking IO on sockets."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 183,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> NVMe Basic doesn't need this class for non-blocking IO.\nYes. We can use uring in the future patches. We may still need the schedule the io of concurrent transfer to devices on the same i2c bus? The kernel will not do the scheduling for us, I believe. \n\n> MCTP in the kernel uses the sockets API, which never needed this class, as we can already do non-blocking IO on sockets.\n\nNVMe daemon will not directly talk to mctp socket. instead the libnvme-mi will. And all libnvme/libnvme-mi functions will do blocking reading/write on IO."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Single character variable names are rarely descriptive enough."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 263,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Is there a better way to determine the root bus?"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 263,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Since this is a refactor and this part of code is part of previous implementation, I don't want to touch the logic here. Maybe we can have a fix patch individually."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 268,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "http://en.cppreference.com/w/cpp/utility/from_chars instead?"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 268,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I would like not to change the logic from previous implementation, given this is a refactor patch."
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "add error message"
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "line": 279,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Note, this is exactly the kind of comment we'd like to see on the other map."
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "cleanup?"
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Woops, forgot to delete the debug code. Thanks."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The fact that we're needing to call dynamic_cast so much makes me feel like virtualization isn't the right approach here long term, as it's basically creating an abstraction, then breaking it to the point where we might be better off with no abstraction at all, aka\n\nif (type == Nvme::Basic){\n   // call basic routine\n} else {\n   // call mctp routine\n}"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Created a separate thread for this topic. We can continue the talk there. But the short answer is: \n\nWe need a unified entry for the different routines. The vtable of the virtualization helps to converge to that entry."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "flip the logic\n\n```\nif (!dynamic_cast<NVMeBasicIntf*>(nvmeIntf.get())){\n  throw std::runtime_error(\"Unsupported NVMe interface\");\n}\n...\n```"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "this is a pattern of: \n```\nif (NVMeBasic)\n  ...\nelse if (NVMeMi)\n  ...\nelse \n  wrong! \n```\n\nReserve for future usage \ud83d\ude0a"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is probably why you needed to enable RTTI?  Generally this is the kind of thing that would be encapsulated as part of the virtualized class, to prevent needing to do a dynamic cast at this level.  It might require adding some methods onto NVMeBasic that do nothing.  That is fine."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> This is probably why you needed to enable RTTI?  \n\nYes. It is. \n\n> Generally this is the kind of thing that would be encapsulated as part of the virtualized class, to prevent needing to do a dynamic cast at this level.  It might require adding some methods onto NVMeBasic that do nothing.  That is fine.\n\nCan you be more specific what and how to encapsulate?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Same of removing rtti."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "same here. flip the logic to save horizontal space."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Same as previous answer."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This kind of code is exactly why we disable rtti.  I'm pretty ok at c++, and I'm having trouble reviewing this code block for both correctness and exception safety.  Lets see if we can get this following cpp core guidelines a little close, and I\"ll bet this will get cleaned up a lot."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I have to admit it is a bit messy to review since the nested template and definitions. And it seems I was trying to replicate what the std lib did here (https://en.cppreference.com/w/cpp/memory/shared_ptr/pointer_cast, Second version)\n\nLet me clean it up a bit. Let's see if you are still worry about this part."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "New implementation fully get rid of rtti. PTAL"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is currently the only place where we set up a data parser, and there's only one behavior at the moment.  There's no need to pass in a callback if there's only one type of callback.  Just make this routine a method, and have pollCtemp call it directly."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Going to reuse the templated pollCtemp for NVMeMi. \n\nRefer to https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57322/1/src/NVMeSubsys.cpp#205"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Another one letter template variable name."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I was always used to use a single `T` for Template. Saw other files use the same convention. e.g. https://github.com/openbmc/dbus-sensors/blob/53d2bfb5c1cc0b6600876de7dda744f5dc2e024f/include/Utils.hpp#L132\n\nAny suggestions of name convention? like Ttype, template_type_t, or so?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This method is far too long to be an inline lambda.  Please break it out into it's own method with std::bind_front."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Ok, I created a nested class for these implementation helpers. \n\nIt works the similar way as a 'detail' namespace inside the source file. Since the function need to access to the private field, we need to declare them in the header for accessibility."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We are now 2 lambda scopes deep here, which makes the readability of this stuff very difficult.  The same as the higher scoped lambda, please roll this into a method."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Abstract the lambda to a detail method as well."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "make this into a separate function"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 205,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nit: rm."
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1\n\nAlso please keep your lists like this alphabetical.\n\nAlso, while we're making this a list anyway, \"files\" isn't really appropriate here, we should be making an array of paths, similar to the below\n\nhttps://github.com/openbmc/bmcweb/blob/188cb6294105a045a445619415d01843de8c3732/meson.build#L372"
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Sure I am glad to make the change.\n\nBTW, I know each module built individually, but do you thing chronological order make more sense? Given we are actively adding more files to the project."
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> do you thing chronological order make more sense?\n\nAs a general rule we rely on alphabetical over chronological because:\nA. It has fewer merge conflicts when multiple people add items to the list.\nB. The chronological order is captured in git if it's needed.\nC. The chronological order files were added to the repo is far less important than being able to look up files quickly."
                },
                {
                    "file": "src/meson.build",
                    "line": 148,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Make sense. Will modify. Thanks for the explanation."
                },
                {
                    "file": "src/meson.build",
                    "line": 158,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Patchsets can't just override compiler flags for a single target like this, especially for things that are explicit design patterns to avoid misuse of virtualization.  Please remove, and lets talk through the pattern that necessitated this compiler flag."
                },
                {
                    "file": "src/meson.build",
                    "line": 158,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Sure. Let's talk in the single thread of the interface design."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 206,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 663,
            "sizeDeletions": 402
        },
        {
            "number": 10,
            "revision": "2bf769ccb56a2360d8206be5f5302d8f03a1dd33",
            "parents": [
                "344b77fbaf751de7a1594dc4f5e9b70c01e2ba9c"
            ],
            "ref": "refs/changes/51/56851/10",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1663830322,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Hao, maybe it's worth running clang-tidy before pushing? There are still a lot of errors. More info on that here:\n\nhttps://github.com/openbmc/docs/blob/master/testing/local-ci-build.md"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Thanks Andrew for the advice. Ran the clang-tidy for the fixes."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Interesting. The redundant semicolons of patch 11 were added by clang tide itself."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The suggestions clang-tidy makes are imperfect.  They generally need reviewed for correctness, but generally give you a good starting point."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 214,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 697,
            "sizeDeletions": 402
        },
        {
            "number": 11,
            "revision": "d6f5a44c2b96c5da22e699bfe9507b4dba4e2eac",
            "parents": [
                "344b77fbaf751de7a1594dc4f5e9b70c01e2ba9c"
            ],
            "ref": "refs/changes/51/56851/11",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1663908370,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 215,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 700,
            "sizeDeletions": 402
        },
        {
            "number": 12,
            "revision": "08a7f1b7163610f3405ae51803110b7c4fb57622",
            "parents": [
                "344b77fbaf751de7a1594dc4f5e9b70c01e2ba9c"
            ],
            "ref": "refs/changes/51/56851/12",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1663909114,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": -124
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 215,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 697,
            "sizeDeletions": 402
        },
        {
            "number": 13,
            "revision": "60cb1360bbf1afd4f6d76d4bcfc75480522347a6",
            "parents": [
                "ece5c86a1260185f5fffd469ea8e994f8b39655c"
            ],
            "ref": "refs/changes/51/56851/13",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1676598145,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Look, this is a bit disingenuous. Github currently warns:\n\n> This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.\n\nPlease link to the repo where the document is actually hosted, not try to inject it sideways from a fork into upstream through questionable github behaviour.\n\nBetter yet, let's work to get the document reviewed and merged into openbmc/docs proper."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I could link to gerrit if you want. But it is in review, and gerrit preview doesn't support html styled table. That was why I linked to the blob view from github. \n\nWe can close the refactor first then turn to the design doc review. since this refactor doesn't have any new NVMe-MI implementation."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Ah, I see. You can use Gerrit's gitiles support to render the documents, which also makes them much easier to review because you can ignore all the comment noise. Basically you click the link titled with the shortened commit ID immediately below the `Comments` tab in the patch review screen. That takes you to the gitiles page for the patch, and from there you can navigate to the document where the markdown gets rendered as HTML: \n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/10f2d00fbcfb97cfb02a1ee4005d82f237783668/designs/nvmed.md"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Good suggestion! I didn't know that before."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This header doesn't belong in `include/`. See https://github.com/openbmc/docs/blob/master/anti-patterns.md#placing-internal-headers-in-a-parallel-subtree"
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I rebased the patch so the header files moved to their new home."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Please just use `getAddress`"
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As above."
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Quite a few places used this abbreviation. e.g \nhttps://github.com/openbmc/dbus-sensors/blob/06433269e052b46c2b2a7ad1ecda23a76629407e/src/NVMeBasic.cpp#L59\n\nand https://github.com/openbmc/dbus-sensors/blob/06433269e052b46c2b2a7ad1ecda23a76629407e/src/HwmonTempMain.cpp#L165\n\nWould like to keep the way it is for consistency for the following patches."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -126
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 215,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 697,
            "sizeDeletions": 404
        },
        {
            "number": 14,
            "revision": "5a17dfb3599aa7c534f358b9e15480a8f4fd8eb3",
            "parents": [
                "ece5c86a1260185f5fffd469ea8e994f8b39655c"
            ],
            "ref": "refs/changes/51/56851/14",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1676683288,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -126
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 742,
            "sizeDeletions": 404
        },
        {
            "number": 15,
            "revision": "fbcf15247f2fd4fbaef33b969b801878a7d88f57",
            "parents": [
                "ece5c86a1260185f5fffd469ea8e994f8b39655c"
            ],
            "ref": "refs/changes/51/56851/15",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1676683811,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Use composition instead of inherentance for NVMeIntf. \n\nNVMeIntf is used as a container for both NVMe basic and NVMe Mi interfaces. \n\nThe originally implementation required downcast to derived protocol interface, which needs rtti. \n\nThe new implementation uses composition and the variant<> which switch between protocols at compile time."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can you please break this refactor up into smaller changes that are more easily consumable? For instance, from what I can gather ,there's a bunch of code motion moving functions between files and such. It would be nice if that kind of problem were separated out so that the patch re-architecting the functionality has minimal noise."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Sure. I created a separate patch for the file renaming."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -126
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 750,
            "sizeDeletions": 404
        },
        {
            "number": 16,
            "revision": "e48062113fa4d3557dca95ec0a0101b7f6c11b98",
            "parents": [
                "3746c55368b5731053d64e512d1c20e799669ad9"
            ],
            "ref": "refs/changes/51/56851/16",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1682548879,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeBasicContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -48
                },
                {
                    "file": "include/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "include/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -3
                },
                {
                    "file": "include/NVMeBasic.hpp",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "fileOld": "src/NVMeBasicContext.cpp",
                    "type": "RENAMED",
                    "insertions": 87,
                    "deletions": -108
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -126
                },
                {
                    "file": "include/NVMeContext.hpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -109
                },
                {
                    "file": "include/NVMeIntf.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 750,
            "sizeDeletions": 404
        },
        {
            "number": 17,
            "revision": "47c2baebfb76f054f5fa2f97c5f0e8b0b0089981",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/17",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683657347,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -125
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 68,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 708,
            "sizeDeletions": 366
        },
        {
            "number": 18,
            "revision": "06433269e052b46c2b2a7ad1ecda23a76629407e",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/18",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683657815,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 707,
            "sizeDeletions": 365
        },
        {
            "number": 19,
            "revision": "705929fe8fc763130d6c26c648ad601ec77a4a3e",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/19",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683664862,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 706,
            "sizeDeletions": 365
        },
        {
            "number": 20,
            "revision": "7ed41f0ab70ddab4c2a6d8b4a882e54d386bdbeb",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/20",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683667641,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 706,
            "sizeDeletions": 365
        },
        {
            "number": 21,
            "revision": "c00f5ab5100c6905528e6a4e5ea6641badfaee6b",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/21",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683669818,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/NVMeIntf.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This feels inside-out. Can we instead instantiate an object of the required type directly?"
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "This is more like a factory function to instantiate the different implementation but returning the common interface object. Please take a looks at some examples: \n\n1. https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/22/src/NVMeSensorMain.cpp#138\n\n2. https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57056/6/src/NVMeSensorMain.cpp#164\n\n3. https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/63048/1/tests/test_nvme_mi.cpp#16"
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can't that be achieved by regular inheritance and dependency injection without requiring a factory function?"
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Actually I did Constructor Injection between NVMeIntf and NVMeSubsystem. \n\nWe can continue the topic [here](https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/comment/d203c502_4c978003/)since they are relevant."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can we instead use `filename` and `parent_path` from `std::filesystem`? Or do you feel that's slightly abusive of use of `std::filesystem`?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I guess originally I didn't use the std::filesystem to avoid the ending '/' or '..' issue."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "okay. The implementation feels a bit ugly but it doesn't matter so much."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Where is it specified that the object path will be of this form?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "It is trying to deal with the dbus path differentiation between nvme subsystem(Drive) and sensors. \n\nThe subsystem is allocated under `/xyz/openbmc_project/inventory/system/board/$Chassis/$Drive` to model both the normal M.2/U.2 NVMe and NVMe PCIe expansion card (which has dedicated Fru EEPROM). \n\nBut all sensors are grouped under `/xyz/openbmc_project/sensors/temperature/` \n\nSo we need this \"structural\" sensor name to flatten the $Chassis/$Drive hierarchy."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Right, so something that threw me is that you've interchanged `prod` with `chassis` in your explanation. `prod` didn't immediately have any meaning to me so it was hard to understand what the intent was. `chassis` has more obvious intent.\n\nHaving said that, what I was really looking for was a canonical link to the place where this path structure expectation is defined."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "My bad here. Typically we are using the product name for chassis so I used them interchangeable. I will update the comment\n\nAhh, I just realized gitiles still didn't render the table correctly. That is why you didn't see the dbus obj structure. \n\nhttps://github.com/openbmc/docs/blob/10f2d00fbcfb97cfb02a1ee4005d82f237783668/designs/nvmed.md#nvme-subsystem-structure\n\nGiven we have the working system right now, I can show you the output on real machines:\n\n```\n# busctl tree xyz.openbmc_project.NVMe\n`-/xyz\n  `-/xyz/openbmc_project\n    |-/xyz/openbmc_project/inventory\n    | `-/xyz/openbmc_project/inventory/system\n    |   `-/xyz/openbmc_project/inventory/system/board\n    |     `-/xyz/openbmc_project/inventory/system/board/{prod}_1\n    |       |-/xyz/openbmc_project/inventory/system/board/{prod}_1/NVMe_1\n    |       | `-/xyz/openbmc_project/inventory/system/board/{prod}_1/NVMe_1/controllers\n    |       |   `-/xyz/openbmc_project/inventory/system/board/{prod}_1/NVMe_1/controllers/0\n    `-/xyz/openbmc_project/sensors\n      `-/xyz/openbmc_project/sensors/temperature\n        |-/xyz/openbmc_project/sensors/temperature/{prod}_1_NVMe_1\n```"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This also seems like fallout from a failure to exploit inheritance?"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "The new implement is using composition. \n\nI was trying to avoid dynamic downcast with using inheritance. \n\nTake a look at the original inheritance implementation: \nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/13..22/src/NVMeSubsys.cpp#b87"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I'm struggling to understand what we're composing together. We're not planning to concurrently talk both protocols to the one drive instance are we?\n\nWhy would a dynamic downcast be required? We could just call a virtual method and have it dispatched to the appropriate transport implementation."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 92,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> I'm struggling to understand what we're composing together. We're not planning to concurrently talk both protocols to the one drive instance are we?\n\nNo, one drive instance will only have one type of communication connection. \n\n> Why would a dynamic downcast be required? We could just call a virtual method and have it dispatched to the appropriate transport implementation.\n\nThe the Controller will handle both protocols so it requires a downcast or de-compose at runtime to tell which protocol the node(device) supports. \n\nWe can continue the topic in https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/comment/d203c502_4c978003/"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As above"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 122,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Replied above."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This would go away with regular inheritance."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "We still need it because the NVMe-MI implementation will use different dataFether/dataParser functions. \n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57322/5/src/NVMeSubsys.cpp#209"
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "In my mind that's still solved by inheritance and I'm still missing the motivation. \"Using composition\" isn't a motivation in its own right. Tools for the job and all."
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Let's aggregate the topic in a single thread: \n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56851/comment/d203c502_4c978003/"
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "encapsulated?"
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "I don't yet appreciate the motivation for this design, but I have a nagging feeling that it's more complex than necessary. Whilst separating the concerns of fetching and parsing is reasonable, I'm yet to convince myself that we need this segregated abstraction on top.\n\nFor instance, why not solve the problem with regular inheritance instead of trying to assemble all these pieces that have been stripped of coherence? Maybe my query coloured by my educational background in traditional inheritance-based approaches, but the benefit of avoiding it isn't obvious to me, and I feel exploiting it would tidy the code up.\n\nI will continue to try improve my understanding and either substantiate or dismiss that feeling."
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "I think your feeling of confusion with from several design choices. Let me try to detangle it. \n\nA. Why decoupling the the NVMeIntf from NVMeSubsystem. \nThe thermal sensor is not only the dbus object we are managing now. In the current patches and future, thare are Drives, Storages, StorageControllers, Namespaces and more. We need to manage their life time according to the device status, as well as the dbus properties and methods attached to them. So my proposal is to split the functions into 3 independent classes, inspired by the MVC model. \n\nThe NVMeIntf is now a pure data provider(Model). It is completely passive w/o any life time management ability for NVMe subsystem layers nore the dbus representation. What it does is the physically layer presentation for the connection, encapsulating the message transport mangling, and scheduling for data transaction, etc. So it make you feel like you are reading from local database for these data structures with concurrency. Some examples:\n \n1. transportation handling for log pages: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61026/3/src/NVMeMi.cpp#391; \n2. scheduling for i2c topology: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/62699/2/src/NVMeMi.cpp#25\n\nThe generated dbus server or dbus interfaces created by sdbusplus::asio is of course the View, similar to these UI classes in Android programming.\n\nThe NVMeSubsystem (and the StorageController and Namespace) classes are the Controller. It controls: \n1. The lifetime of the components. e.g. \n\n * Binding Drive and Storage life time to NVMeSubsystem: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/57034/7/include/NVMeSubsys.hpp#57\n * Binding StorageController interface to enabled NVMe controller: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/62304/2/include/NVMeController.hpp#99\n * Removing all NVMe controllers when the NSS.DF = 0: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/63049/1/src/NVMeSubsys.cpp#99 \n2. When to poll the data, e.g. every 1 sec for the ctemp_poll for temperature sensor. \n3. What properties to update in the View(dbus properties). e.g. the Value of the sensor.\n\nB. Why NVMeIntf doesn't use inherence. \n\nThe Model and Controller is fully decoupled in the the design so I need a unified class for NVMeIntf passing into Controller, given I don't want the Controller to be templated. And the NVMeIntf will support both NVMe basic and NVMe-MI (w/ the real implementation and fake/mock). \n\nI have two ways to implement such common Model interface: \n\n* inherence from the common base interface. But the Controller has to downcast to each protocol using rtti. \n* composition which makes the command interface works like a union class. \n\nI turned from the first options to the second based on the discussion with Ed."
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> The NVMeIntf is now a pure data provider(Model). It is completely passive w/o any life time management ability for NVMe subsystem layers nore the dbus representation. What it does is the physically layer presentation for the connection, encapsulating the message transport mangling, and scheduling for data transaction, etc.\n\nSo trying to put that in my own words, is it the case that `NVMeIntf` is specifically an abstraction over the mechanics of the chosen communication protocol (basic vs MCTP)?\n\n> B. Why NVMeIntf doesn't use inherence. \n> \n> The Model and Controller is fully decoupled in the the design so I need a unified class for NVMeIntf passing into Controller, given I don't want the Controller to be templated. And the NVMeIntf will support both NVMe basic and NVMe-MI (w/ the real implementation and fake/mock).\n\nSure. You need both transports to expose a common set of behaviours, abstracting the details from the Controller. Is that a reasonable statement?\n\n> \n> I have two ways to implement such common Model interface: \n> \n> * inherence from the common base interface. But the Controller has to downcast to each protocol using rtti. \n\nIf my understanding is correct, this is the opposite of the statement above. You seem to be saying the controller requires knowledge of the implementation held by NVMeIntf, which violates the abstraction that NVMeIntf is trying to represent. In my mind, that suggests a breakdown in the design's separation of concerns.\n\n> * composition which makes the command interface works like a union class. \n\nIs it possible for us to work together to get a class diagram drawn of the design? I'd find it easier to comprehend at least, and maybe we could establish a shared understanding by trading diagrams. Can we try with [mermaid][] or [plantuml][]?\n\n[mermaid]: https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams\n[plantuml]: https://plantuml.com/"
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "> So trying to put that in my own words, is it the case that NVMeIntf is specifically an abstraction over the mechanics of the chosen communication protocol (basic vs MCTP)?\n\nYes\n\n> Sure. You need both transports to expose a common set of behaviours, abstracting the details from the Controller. Is that a reasonable statement?\n\nThat is correct. The Controller(NVMeSubsystem) will determine from runtime which protocol the node is running against based on the common interface of NVMeIntf. \n\n> If my understanding is correct, this is the opposite of the statement above. You seem to be saying the controller requires knowledge of the implementation held by NVMeIntf, which violates the abstraction that NVMeIntf is trying to represent. In my mind, that suggests a breakdown in the design's separation of concerns.\n\nThe Controller need the runtime information against the protocol. Saying we have a data set of A for NVMeBasic and another data set for NVMeMi. The client(Controller) will know which data set it can retrieve from Model so it can behave differently. But the interface to retrieve these two data set should be common. Thinking about SQL language or xml data binding, and in our case the NVMeIntf. \n\nThe only difference against reading data from normal datasheet is that the NVMeSubsystem is using the function name at compile time instead of the \"key\" of the column to locate the data. That is because both protocol is well defined w/ the meaning of the column (e.g. the LID of a logpage) so the programmer should know such definition b4/at the compile time. \n\n> Is it possible for us to work together to get a class diagram drawn of the design? I'd find it easier to comprehend at least, and maybe we could establish a shared understanding by trading diagrams. Can we try with mermaid or plantuml?\n\nSure. I posted the diagram [here](https://mermaid.ink/img/pako:eNrFVdFu2jAU_RXL2gN0hL5HCGltaBdpYUiR-rCmDxf7krokNrIdporx73MIOAkr7GXSeAB8zsk9x9f4sqNMcaQhZQUYEwnINZSEkEwS_z5_SjCWdkVuguCwuAMjWI1c4BPRJ72eTH51S7SK5omWTsQ17gHWeI1PFFtf45-i5ECfxZ8cBWm1NO_GYhmSyqD5QBXFIRHSWJBWgD1miWIyHk_PKwj5hswa59WoDn321XYNWL8ClFVJNlpZxVTRwbeghTOaTF0ti3oFDFv2M9PoEgyGn3zNDpmjXRwLDoZ9PJarptaJ2P-Z0J-bjzmZ-AzT6Qmsy91VpnWogS-c6z6SWrA91Xg8HgyJd-97N6f2d-N5HPVtZj2gFCkDeW910QdPB_QVobCvTbSFKroq4KWQj2i_qXwBOZ4Hv5D70DMfO1hW5hZcKzzwU-k16n_Suoudu2IvBb9Fwdv1tsTZ4kq6_9_f7ihqd-kdulfIX9L6x9K_KIEVZbszt94UVS5kB-CuWd-Xb88pSqP0KNJii6PUKu3CvXx4R6L4OaOzICFMyZXICYOiWIKbPfRld_ZAnexeSatdD1CTILjp76JVzaFEs3HZL4mabtARdfspQXA3vA9uGbWvWGJGQ_eVg3YxMrl3OqisSt8lo6HVFY5oteFuZBxnPQ1XUBiHIhdur8nx36D-GNENyB9KnTT73xuF1pw?type=png)\n\n[editable](https://mermaid.live/edit#pako:eNrFVdFu2jAU_RXL2gN0hL5HCGltaBdpYUiR-rCmDxf7krokNrIdporx73MIOAkr7GXSeAB8zsk9x9f4sqNMcaQhZQUYEwnINZSEkEwS_z5_SjCWdkVuguCwuAMjWI1c4BPRJ72eTH51S7SK5omWTsQ17gHWeI1PFFtf45-i5ECfxZ8cBWm1NO_GYhmSyqD5QBXFIRHSWJBWgD1miWIyHk_PKwj5hswa59WoDn321XYNWL8ClFVJNlpZxVTRwbeghTOaTF0ti3oFDFv2M9PoEgyGn3zNDpmjXRwLDoZ9PJarptaJ2P-Z0J-bjzmZ-AzT6Qmsy91VpnWogS-c6z6SWrA91Xg8HgyJd-97N6f2d-N5HPVtZj2gFCkDeW910QdPB_QVobCvTbSFKroq4KWQj2i_qXwBOZ4Hv5D70DMfO1hW5hZcKzzwU-k16n_Suoudu2IvBb9Fwdv1tsTZ4kq6_9_f7ihqd-kdulfIX9L6x9K_KIEVZbszt94UVS5kB-CuWd-Xb88pSqP0KNJii6PUKu3CvXx4R6L4OaOzICFMyZXICYOiWIKbPfRld_ZAnexeSatdD1CTILjp76JVzaFEs3HZL4mabtARdfspQXA3vA9uGbWvWGJGQ_eVg3YxMrl3OqisSt8lo6HVFY5oteFuZBxnPQ1XUBiHIhdur8nx36D-GNENyB9KnTT73xuF1pw)"
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "> Sure. I posted the diagram here\n\nThanks for accommodating me, that's very useful. I'm mulling it over."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 707,
            "sizeDeletions": 365
        },
        {
            "number": 22,
            "revision": "0c133fc8e9ef3cf4a1dd206cae46bcc03341e9a0",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/22",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683736813,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 707,
            "sizeDeletions": 365
        },
        {
            "number": 23,
            "revision": "073c96c7bbcced707ffae6326a8dfc4ba1739f71",
            "parents": [
                "1f64313331d2c5274743854761f163db0268716b"
            ],
            "ref": "refs/changes/51/56851/23",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683744121,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Hao Jiang",
                        "email": "jianghao@google.com",
                        "username": "drakedog2008"
                    },
                    "message": "Can we make the CL Lint check only the files(blocks) get modified. \n\nI am not comfortable to reformat the doc that I didn't touch."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 707,
            "sizeDeletions": 365
        },
        {
            "number": 24,
            "revision": "ddab8a7f321791627e5f8ef222d57462b7976d3a",
            "parents": [
                "f2cba4eb83b6e8d211d1ecfadb298904e9314c07"
            ],
            "ref": "refs/changes/51/56851/24",
            "uploader": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "createdOn": 1683758191,
            "author": {
                "name": "Hao Jiang",
                "email": "jianghao@google.com",
                "username": "drakedog2008"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSubsys.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeBasic.hpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -33
                },
                {
                    "file": "src/NVMeBasic.cpp",
                    "type": "MODIFIED",
                    "insertions": 87,
                    "deletions": -107
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": -124
                },
                {
                    "file": "src/NVMeSubsys.cpp",
                    "type": "ADDED",
                    "insertions": 223,
                    "deletions": 0
                },
                {
                    "file": "src/NVMeSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -7
                },
                {
                    "file": "src/NVMeSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -3
                },
                {
                    "file": "src/NVMeIntf.hpp",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": -88
                }
            ],
            "sizeInsertions": 707,
            "sizeDeletions": 365
        }
    ]
}