{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I20838adcc613757bec0640473d63d27e2deef2c3",
    "number": 55532,
    "subject": "Add audit events support in bmcweb",
    "owner": {
        "name": "ManojKiran Eda",
        "email": "manojkiran.eda@gmail.com",
        "username": "manojkiraneda"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55532",
    "hashtags": [],
    "createdOn": 1658342421,
    "lastUpdated": 1678772486,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1658342421,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1658342445,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1658343246,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1659242907,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1659242974,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659242974,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1659243018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48057/ : FAILURE"
        },
        {
            "timestamp": 1659247361,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1659247409,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659247409,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1659247454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48058/ : FAILURE"
        },
        {
            "timestamp": 1659247476,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5: Commit message was updated."
        },
        {
            "timestamp": 1659247554,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1659247629,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1659329414,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(4 comments)"
        },
        {
            "timestamp": 1659378344,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1659451722,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1659459722,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1662820967,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1662821037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662821037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1662821059,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50605/ : FAILURE"
        },
        {
            "timestamp": 1662821570,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1663003457,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1663103801,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1663317151,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1663317239,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663317239,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1663317256,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50822/ : FAILURE"
        },
        {
            "timestamp": 1663317818,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 7:\n\n(8 comments)"
        },
        {
            "timestamp": 1663317938,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Uploaded patch set 8: Commit message was updated."
        },
        {
            "timestamp": 1663562994,
            "reviewer": {
                "name": "Anjali Ray",
                "email": "anjali.ray@intel.com",
                "username": "Anjaliintel-21"
            },
            "message": "Patch Set 8:\n\n(6 comments)"
        },
        {
            "timestamp": 1663568119,
            "reviewer": {
                "name": "Anjali Ray",
                "email": "anjali.ray@intel.com",
                "username": "Anjaliintel-21"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1666020332,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1675717228,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1678772486,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "425093a3d1c0c7420df19501e16c03ba0f1581a2",
            "parents": [
                "07c8c20d371aae85611738ca61015fc6a8caa16a"
            ],
            "ref": "refs/changes/32/55532/1",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1658342421,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "9e7391d877d795e7b2a05a7ff16b5489313ec429",
            "parents": [
                "07c8c20d371aae85611738ca61015fc6a8caa16a"
            ],
            "ref": "refs/changes/32/55532/2",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1658343246,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "85ac98aba98ff0ab6c31bfe66d6b1b6e3d780660",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/32/55532/3",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1659242907,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "85bf3cdc93b41e4281578b92714e94a2899c21de",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/32/55532/4",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1659247361,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 132,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "c569d8b23d46eee454b5cdc67d86b228a9e60b76",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/32/55532/5",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1659247476,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please wrap your commits properly."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "How many of these audit::audit_acct_event would we add to bmcweb?\n \nYou mentioned \"Actions with accounts and privileges\", do those traces go in user managmenet or bmcweb?\n\nWould we ever just log every request ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 22,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> How many of these audit::audit_acct_event would we add to bmcweb?\n\nI don't have anything else in mind as of now, but audit frame work could be used log various type of events [not just login type].\n\nVarious user space audit record types that are supported as of today are at :  https://github.com/linux-audit/audit-userspace/blob/94efd7da510bf58aed15f82652b3f481e0d5cc61/lib/libaudit.h#L48\n\nWe could just start with login events for now - and could add various other events if required [in that sense it is pretty scalable]."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How do other distros manage it?  Surely things like nginx don't link in auditd as a required module as you've done here (or does it, I don't really know).  Is there recommendations from libaudit on how it should be integrated?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "As i said above, my intent was to only depend on the libaudit & kernel netlink socket support for pushing the events.\n\nAuditd is sort of additional toppings that would help regulate these events to its own file , with a great set of configuration options. We don't necessarily need this, as per the audit documentation without a listener on the netlink socket, the logs should by default be routed to syslog daemon (journal)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Spelling on auditd."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Any webservers?  All of those are login daemons, which arguably we should be using on openbmc, but I never got there and we currently have evolved to not having shared session infrastructure."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Any webservers?  \nI have not found any opensource webservers that use this (at least in my research), I found reference to libaudit in projects like sshd, sssd, clevis(pluggable framework for automated decryption), usbguard(software framework for implementing USB device authorization policies).\n\n\n> All of those are login daemons, which arguably we should be using on openbmc, but I never got there and we currently have evolved to not having shared session infrastructure.\n\nAck"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "CI would fail - as we don't have libaudit-dev package installed in the CI docker image."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Cool to see progress, and happy to help you work through getting it merged.\n\nSome initial thoughts that come to mind:\n1. Presumably this library is doing blocking filesystem calls, which could lock up all of bmcweb (given that it's a single-threaded reactor).  Do we need to evict this audit logging to another process where it can be done at a lower priority soas not to impact the performance?\n2. This patch is proposing auditd be a required dependency.  Surely there are users that would opt out of it?  If so, how do we manage that complexity?  Runtime selection?  Compile time?\n3. Overall, my eventual goal was to completely remove session collections out of bmcweb, and make use of one of the existing login daemons (probably systemd logind) through pam.  This would get us more standard login/logout procedures, and we could easily hook in whatever plugins we wanted, including this one, because users would be logging in \"normally\".  This is similar to what the cockpit project (another webserver for remote managing linux systems) does.  If that were to happen, would that make using this plugin easier?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Cool to see progress, and happy to help you work through getting it merged.\n> \n> Some initial thoughts that come to mind:\n> 1. Presumably this library is doing blocking filesystem calls, which could lock up all of bmcweb (given that it's a single-threaded reactor).  Do we need to evict this audit logging to another process where it can be done at a lower priority soas not to impact the performance?\n\nPer my understanding about audit framework, this library would only send messages over netlink_audit socket (this is just a sender) to the kernel part of the linux audit subsystem, these don't actually touch the filesystem. There is another listening daemon \"audid\" that would be responsible for writing records onto the disk, so in that sense it is already separated ? \n\nAnd also auditd has a configuration option where we could tell it to not flush the data into the file immediately - rather we could also tell at what frequency we should flush things to the log.\n\n> 2. This patch is proposing auditd be a required dependency.  Surely there are users that would opt out of it?  If so, how do we manage that complexity?  Runtime selection?  Compile time?\nMy intent in this patch is to not have auditd daemon as a required dependency , rather have kernel support for audit + libaudit shared library as runtime + compile time dependency, and per audit RFC  \"All messages are logged via the netlink socket if a user-space daemon is listening(auditd). If not, the messages are logged via printk to the syslog daemon (by default). So I am guessing if we don't have auditd, but just have libaudit & kernel support for audit enabled, we can at-least see the audit events in the journal(although I have not tested this myself).\n\n\n> 3. Overall, my eventual goal was to completely remove session collections out of bmcweb, and make use of one of the existing login daemons (probably systemd logind) through pam.  This would get us more standard login/logout procedures, and we could easily hook in whatever plugins we wanted, including this one, because users would be logging in \"normally\".  This is similar to what the cockpit project (another webserver for remote managing linux systems) does.  If that were to happen, would that make using this plugin easier?\n\nI see that systemd,dbus & journal already have audit support (https://github.com/systemd/systemd/blob/e0a12b96344b1d7ee499df1d0447b14ced62c1b4/meson.build#L1218), i think that we would probably not need this change if we use systemd logind , probably we need to tweak some options of systemd , but that should work out of the box and should give us the audit events(if it is compiled with audit support & have kernel support for audit events)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> this library would only send messages over netlink_audit socket\n> so in that sense it is already separated ? \n\nSockets can block the same as the filesystem can.  In this case the daemon on the other end is writing to the filesystem, so it's quite possible to lock up and backpressure the socket.\n\n\n> And also auditd has a configuration option where we could tell it to not flush the data into the file immediately\n\nI'm not sure this solves it, and I don't really understand what we're avoiding here.  We have mechanisms for pushing to a socket async that we use every day.  We should use them.\n\n\n>  think that we would probably not need this change if we use systemd logind , \n\nFWIW, I think that's the intent of this library.  I don't see openSSH directly pulling this in, but the fact that openssh relies on pam/logind to manage sessions means that it doesn't have to, and logind/pam can have the auditd hooks.  That seems like the direction to pursue IMO."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> > this library would only send messages over netlink_audit socket\n> > so in that sense it is already separated ? \n> \n> Sockets can block the same as the filesystem can.  In this case the daemon on the other end is writing to the filesystem, so it's quite possible to lock up and backpressure the socket.\n\nwell, so my understanding is that when bmcweb sends the message to kernel audit subsystem - it gets netlink-ack response back immediately, the ack is used to let user know if there was a problem such as lack of permissions e.t.c and bmcweb will be blocked till then. Is this what you are concerned about ? \n\nThe design principle for audit events is that - user should not be able to the operation that they are doing if we fail to log an error.we cannot let the operation continue & also in parallel keep logging audit events.\n\nBut bmcweb will not be blocked until some [another user space daemon - like audid] pulls out the message from kernel & writes into the file system - I think auditd polls on the fd & based on events..it parses things out to put in readable form on the file system. So there is no back pressure as such to bmcweb.\n\nI am not really much concerned about waiting for the ACK form the kernel audit system. kernel audit subsystem is there since kernel 2.6 and pretty mature at this stage to hit nasty bugs where bmcweb can be blocked for very long time[milli seconds]. But if think of it in other way let me know.\n\n> \n> \n> > And also auditd has a configuration option where we could tell it to not flush the data into the file immediately\n> \n> I'm not sure this solves it, and I don't really understand what we're avoiding here.  We have mechanisms for pushing to a socket async that we use every day.  We should use them.\n> \n> \n> >  think that we would probably not need this change if we use systemd logind , \n> \n> FWIW, I think that's the intent of this library.  I don't see openSSH directly pulling this in, but the fact that openssh relies on pam/logind to manage sessions means that it doesn't have to, and logind/pam can have the auditd hooks.  That seems like the direction to pursue IMO.\n\nlogin deamon - sure, but pam I am not 100 percent sure that the pluggable modules can have all the necessary information needed for audit events."
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please respect the OpenBMC naming convention"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 9,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "does this mean we create a fd every time this function gets called? What's the trade-off between this and keeping a single fd?"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 16,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "well, I have not thought about this when I was working for the proof of concept.\n\naudit_open creates a NETLINK_AUDIT socket for communication with the kernel part of the Linux Audit Subsystem. If it is just an event or two this might not be any problem , but if we are okay & agree to use this framework for the audit events & probably for much more events than just login events, then definitely opening and closing is an overhead that could be avoided if we could - open the fd and pass it across from the main app ...or may be some sort of single ton that always returns the same fd instance ?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 125,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Can you add a bit more here."
                },
                {
                    "file": "meson_options.txt",
                    "line": 125,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "can you give me pointers as to what additional information would you like to see here ? I believe I have added good amount of information in commit message but if you like anything else to be added ..I can definitely add that here as well."
                },
                {
                    "file": "meson_options.txt",
                    "line": 125,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Just a little more from the commit msg here. E.g.\n\n'''Enable audit events support for bmcweb. This uses libaudit. security-relevant events are wrote as entries in /var/log/audit/audit.log. Tools such as aureport  can be used to produce reports. '''\n\nLooking for more than 6 words here."
                },
                {
                    "file": "meson_options.txt",
                    "line": 125,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "ah , makes sense. thank you for the words :), added."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 132,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "54d23051bd2b034d8ca6472f4542230e962e4247",
            "parents": [
                "188cb6294105a045a445619415d01843de8c3732"
            ],
            "ref": "refs/changes/32/55532/6",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1662820967,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Causing the CI fail: \n-: UC1 Line exceeds max length (75>72).\n    It's possible you intended to use one of the following exceptions:\n    1. Put logs or shell script in a quoted section with triple quotes (''') before and after the section\n    2. Put a long link at the bottom in a footnote.  example: [1] https://my_long_link.com\n    Line that was too long:\n: \"The way that user space daemons can generate audit events is by using API's\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done\n\n@Gunnar just to re-iterate - I have couple of patches in meta-* and also openbmc-build-scripts that enables getting the audit package, required headers e.t.c,which we would want for the CI & clang to work on this commit.I was just waiting to see if we agree we should take this path rather than any home cooked solution."
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I believe the style guide says these should be on separate lines"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Even one line conditional and loop statements should have brackets.\nhttps://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#bracket-style"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Typically we don't use the ternary operator  (?)"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 25,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I have not seem this rule anywhere, I guess ternary operator does not seem to be an intuitive thing to understand, which is probably why we don't use it much [I think]. But this is a simple condition which I though ternary operator could make sense , rather than coming up with 5-7 lines of if-else block. I can definitely change it if needed though if you think otherwise."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "6d44727f7b5a582d33552d089977d38e82e67340",
            "parents": [
                "6169de2c39d2b08451a64fbf45798ae8cb5624fb"
            ],
            "ref": "refs/changes/32/55532/7",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1663317151,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 141,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "a0f2b40ea0f2d23507eb51ea434bc71ffd045dc8",
            "parents": [
                "6169de2c39d2b08451a64fbf45798ae8cb5624fb"
            ],
            "ref": "refs/changes/32/55532/8",
            "uploader": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "createdOn": 1663317938,
            "author": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "*it has"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 30,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "*tons"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "What does this number 5 denotes after libaudit ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 38,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "Typo Error- Capital I"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 52,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "*Tested:"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "@ed - can you summarise on what do you think is needed to get this commit merged ? I saw a lot of discussion about this in discord & I sort a got mixed reviews on this - while every one seems to accept that this is probably the right way to go about logging login events, this is not the right solution for logging all audit events ? and there was some discussion on moving this to pam. By pam did you mean pam modules? (Afaik libaudit is not used inside pam modules, it is used by login deamons what consumes the pam API's.) or the header file in bmcweb that uses pam API's to do the authentication ? \n\n\nIf this direction is not something you like - I can probably abandon this commit.\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sorry, I missed this;  Code that doesn't build doesn't pop up in my list by default.\n\nFrom my perspective, what's needed is:\nSome indication that we're using auditd here in the way we intend.  Showing other web servers directly pulling in auditd would be a good example of this, but I was unable to find that.\nGeneralized consensus that this feature is needed for all systems, and that the overhead and failure modes are manageable.  Alternatively, to make it optional.\nSome level of documentation that this has been tested beyond just an example."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "You can use some meaningful variable name instead of op"
                },
                {
                    "file": "include/audit_events.hpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "If you are using ternary operator you should keep condition inside bracket ()."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 77,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "include/audit_events.hpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 143,
            "sizeDeletions": 0
        }
    ]
}