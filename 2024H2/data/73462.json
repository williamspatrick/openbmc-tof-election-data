{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I4d84c8b6b9b3d65ce97e010b875ea49b3e1fc9d0",
    "number": 73462,
    "subject": "http_body: Implement static bmcweb::HttpBody::size() function",
    "owner": {
        "name": "PL",
        "email": "potin.lai@quantatw.com",
        "username": "potinlai"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/73462",
    "hashtags": [],
    "createdOn": 1722929035,
    "lastUpdated": 1723562253,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1722929035,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1722929070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1722929070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1722930387,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/89262/ : SUCCESS"
        },
        {
            "timestamp": 1722930737,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Patch Set 1:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1722963514,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(3 comments)"
        },
        {
            "timestamp": 1722974893,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1723138796,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1723140782,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1723217778,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1723223596,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723223652,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723223652,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1723225034,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/89515/ : SUCCESS"
        },
        {
            "timestamp": 1723225089,
            "reviewer": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1723227855,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Published edit on patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723227874,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1723227913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723227913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1723227913,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1723228595,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1723229116,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1723229232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/89518/ : SUCCESS"
        },
        {
            "timestamp": 1723230115,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Commit message was updated.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR **changekind:NO_CODE_CHANGE** OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723230143,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Published edit on patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1723230172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723230173,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1723231453,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/89521/ : SUCCESS"
        },
        {
            "timestamp": 1723233668,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1723562251,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1723562253,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 608fb7b7526f1b803db40acf97ad0961df111dc7"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7e5604b6d80a28b236d3216ae827fa501e86313f",
            "parents": [
                "ced552a9affb3930c495124078f28af94e2f93c7"
            ],
            "ref": "refs/changes/62/73462/1",
            "uploader": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "createdOn": 1722929035,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you please write up better what the root cause is here, and how to reproduce?   \n Because we're commenting out a boost function, please include the links to the line of code within boost beast that's the problem.  The fix in the patch doesn't make any sense, although we have replaced prepare_payload in Request::preparePayload, I suspect we might need to do something similar here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FOr reference, this is the function we have:\nhttps://github.com/openbmc/bmcweb/blob/d5c0172e0335df05db2eaae3dae2c7d3def56089/http/http_response.hpp#L171"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "PL",
                        "email": "potin.lai@quantatw.com",
                        "username": "potinlai"
                    },
                    "message": "Hi Ed,\nWe was testing on redfish aggregation feature and notice that http client has 50% failed rate to send request to satellite controller (1 success then follow 1 fail).\n\nWe check the request data send from BMC (client side) by Wireshark, and find out the end of request data repeated final chunk [0x00 0x0d 0x0a 0x0d 0x0a] twice, and satellite controller (server side) close the socket due to the extra final chunk sent form BMC.\n\nThe test flow as below:\nBMC --- RF AGGR Req (v) --> SAT \nBMC <-- RF AGGR Res (v) --- SAT (response success)\nBMC <-- Close Socket ------ SAT (extra final chunk)\nBMC --- RF AGGR Req (x) --> SAT (BMC send failed, broken pipe)\n\n\nSo far we have tested two methods that can avoid the this problem.\n\n1. don't assign body and call prepare_payload() when data is empty.\n[Patchset 1]\nSo far we not sure why calling prepare_payload() with empty body will causing extra final chunk, this may require digging deeper into the `chunked(true)` function of the boost easter library.\n\n2. add into bmcweb::HttpBody\nPlease have a check with link here [https://github.com/boostorg/beast/blob/848e20680fb374532a0c5816b79b38532e6da775/include/boost/beast/http/impl/message.hpp#L362-L375]\nWith static bmcweb:HttpBosy::size() implementation, the `n` will not be null, and then `chunked(false)` will be called.\nAnd we check the request data with this method, it doesn't contains extra final chunk, and redfish aggregation works successfully.\n\n\n\n\nI'm wondering which approach seems more appropriate?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Hi Ed,\n> We was testing on redfish aggregation feature and notice that http client has 50% failed rate to send request to satellite controller (1 success then follow 1 fail).\n> \n> We check the request data send from BMC (client side) by Wireshark, and find out the end of request data repeated final chunk [0x00 0x0d 0x0a 0x0d 0x0a] twice, and satellite controller (server side) close the socket due to the extra final chunk sent form BMC.\n> \n> The test flow as below:\n> BMC --- RF AGGR Req (v) --> SAT \n> BMC <-- RF AGGR Res (v) --- SAT (response success)\n> BMC <-- Close Socket ------ SAT (extra final chunk)\n> BMC --- RF AGGR Req (x) --> SAT (BMC send failed, broken pipe)\n> \n> \n> So far we have tested two methods that can avoid the this problem.\n> \n> 1. don't assign body and call prepare_payload() when data is empty.\n> [Patchset 1]\n> So far we not sure why calling prepare_payload() with empty body will causing extra final chunk, this may require digging deeper into the `chunked(true)` function of the boost easter library.\n\nFor reference, this is the code.\nhttps://github.com/boostorg/beast/blob/fee9be0be10c9c9a22ac1505a710d1d8ed5a3dfb/include/boost/beast/http/impl/message.hpp#L360\n\nNote that the current http client does not explicitly support HTTP chunking.  Is your satellite sending a chunked response?\n\n> \n> 2. add into bmcweb::HttpBody\n\nThis function is already added to bmcweb Response object.  Please just use the one we have.\n\n> Please have a check with link here [https://github.com/boostorg/beast/blob/848e20680fb374532a0c5816b79b38532e6da775/include/boost/beast/http/impl/message.hpp#L362-L375]\n> With static bmcweb:HttpBosy::size() implementation, the `n` will not be null, and then `chunked(false)` will be called.\n> And we check the request data with this method, it doesn't contains extra final chunk, and redfish aggregation works successfully.\n> \n> \n> \n> \n> I'm wondering which approach seems more appropriate?\n\nThe second.  we should be calling prepare_payload in all cases;  If we need a custom version, we should use a custom version.  We shouldn't just void calling it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "PL",
                        "email": "potin.lai@quantatw.com",
                        "username": "potinlai"
                    },
                    "message": "> For reference, this is the code.\n> https://github.com/boostorg/beast/blob/fee9be0be10c9c9a22ac1505a710d1d8ed5a3dfb/include/boost/beast/http/impl/message.hpp#L360\n> Note that the current http client does not explicitly support HTTP chunking. Is your satellite sending a chunked response?\n\nI think the problem is from client side request message.\n\nWhen request sends without data, current client request message is looks like below:\n[headers][final chunk][final chunk]\n\nsatellite controller (server) take \"[headers][final chunk]\" as a normal request message and response, and then follow up an unexpected \"[final chunk]\", so server close the socket.\n\nCurrent http_client will expected socket remain if server side supports \"keep-alive\". when server close socket unexpectedly, it cause next request failed (broken pipe).\n\n> This function is already added to bmcweb Response object. Please just use the one we have.\n\nI was trying adding a static function bmcweb::HttpBody::size() into struct bmcweb::HttpBody.\n\nThis is a example from exist basic_dynamic_body in boost beast library.\nhttps://github.com/boostorg/beast/blob/fee9be0be10c9c9a22ac1505a710d1d8ed5a3dfb/include/boost/beast/http/basic_dynamic_body.hpp#L48-L59\n\n> The second. we should be calling prepare_payload in all cases; If we need a custom version, we should use a custom version. We shouldn't just void calling it.\n\nWe are not trying to adding new custom version of HttpBody.\n\nIn patchset2, we want to ensure that prepare_payload() goes into the section below, and this will need bmcweb::HttpBody::size() implemented.\nhttps://github.com/boostorg/beast/blob/fee9be0be10c9c9a22ac1505a710d1d8ed5a3dfb/include/boost/beast/http/impl/message.hpp#L364-L374\n```\n        if(*n > 0 ||\n            this->method() == verb::options ||\n            this->method() == verb::put ||\n            this->method() == verb::post)\n        {\n            this->content_length(n);\n        }\n        else\n        {\n            this->chunked(false);\n        }\n```\n\nin this section, the empty data request will call `this->chunked(false)`, so that the request data will not contains unexpected final chunk."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Understood.  This conclusion makes a lot more sense."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 742,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If data.empty() is true, this line will have no effect, right?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 742,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why does prepare_payload send the wrong response if body().str() is empty?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 743,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "350e52f4b65c30a47fa8d0b162a17a499e2d5855",
            "parents": [
                "ab34422df9614c520dc12688a6df84c311341294"
            ],
            "ref": "refs/changes/62/73462/2",
            "uploader": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "createdOn": 1723223596,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_body.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 39,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "ebc4a06052322a94c496e749c85d1406e170b886",
            "parents": [
                "ab34422df9614c520dc12688a6df84c311341294"
            ],
            "ref": "refs/changes/62/73462/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1723227855,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "Seems reasonable to me. minor comments"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 272,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "#include <cstdint>"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 272,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "include optional"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 276,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've changed the two preceeding lines to simplify and follow the coding standard, removing auto, and changing the ternary for \"value_or\" which does the same thing."
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 276,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "It would good to add your name to the signed-off"
                },
                {
                    "file": "http/http_body.hpp",
                    "line": 276,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Added."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "http/http_body.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 39,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "0c963c867c039e7198c6f1aaf392387c5a01f3d8",
            "parents": [
                "ab34422df9614c520dc12688a6df84c311341294"
            ],
            "ref": "refs/changes/62/73462/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1723230115,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "http/http_body.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "0f64304954402c644bae9f27e89ce37a881c310a",
            "parents": [
                "ab34422df9614c520dc12688a6df84c311341294"
            ],
            "ref": "refs/changes/62/73462/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1723230143,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "http/http_body.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "608fb7b7526f1b803db40acf97ad0961df111dc7",
            "parents": [
                "b729096d0a787abe2a7e8a9a2d1ea12b5e1540fb"
            ],
            "ref": "refs/changes/62/73462/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1723562253,
            "author": {
                "name": "PL",
                "email": "potin.lai@quantatw.com",
                "username": "potinlai"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "http/http_body.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 0
        }
    ]
}