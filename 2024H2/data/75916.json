{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "I2a56390022fce7a974ed75ed6a72ad3fffed9bb6",
    "number": 75916,
    "subject": "Support IPMI Serial Transport",
    "owner": {
        "name": "John Chung",
        "email": "john.chung@arm.com",
        "username": "gtossk2"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-host-ipmid/+/75916",
    "hashtags": [],
    "createdOn": 1732049132,
    "lastUpdated": 1733432479,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1732049132,
            "reviewer": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1732049154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732049154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1732049464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94775/ : SUCCESS"
        },
        {
            "timestamp": 1733255463,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(12 comments)"
        },
        {
            "timestamp": 1733297058,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@ieisystem.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1733431723,
            "reviewer": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733431773,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733431773,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1733431985,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95948/ : SUCCESS"
        },
        {
            "timestamp": 1733432479,
            "reviewer": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "message": "Patch Set 2:\n\n(18 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "bdc327e5c1f99c12ceed6ff4b4f321db10e27c9d",
            "parents": [
                "af4a77503366722a0c15cab12b421d9cbafba012"
            ],
            "ref": "refs/changes/16/75916/1",
            "uploader": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "createdOn": 1732049132,
            "author": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meson.build",
                    "line": 319,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "I don't think this is necessary."
                },
                {
                    "file": "meson.build",
                    "line": 319,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "It used to build `serialbridge` and its unit test since the default transport is null. So it will not build in CI test."
                },
                {
                    "file": "transport/serialbridge/meson.build",
                    "line": 4,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "meson.build has been declared and can be used directly"
                },
                {
                    "file": "transport/serialbridge/meson.build",
                    "line": 4,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Your interface doesn't have any methods, why create it at all?"
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acked. I thought it was needed for `ipmid`, but actually it doesnot. Removed."
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "Hard-code is not a good choice. If the device parameter does not exist, we can exit directly."
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "lg2::error?"
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "line": 97,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Rather than having this file as a loose association of variables and functions, held together with a namespace, make it more c++-like and use a class."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "rather than a uint8_t* and length, it might be more appropriate to use a std::span<uint8_t>"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "This is more of a coding for fun and learning new things, but the escaped/unescaped streams seem to be begging to be implemented with std::ranges transformations and/or filters."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "It needs to add extra byte before the escaped byte. Transform might not be able to handle. Move to use `for_each` to iterate byte stream."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "unescapedDataBytes.reserve(escapedDataBytes.size());"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 190,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "before pushing things into the buffer, make a call to buffer.reserve(data.size() + encoding_extras_size) where encoding_extras_size is the size of all the extra bytes added to frame the packet (this includes the escape chars). This will eliminate the need for a realloc and copy. Instead of looping through buffer twice to determine the number of characters that need to be escaped, it is reasonable to just use buffer.size() * 2 plus the other header/trailer bytes."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 190,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 225,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "don't format the string and then log it, use lg2 as intended so it can log useful metadata as well:\n\n```\nlg2::info(\"Write serial request message with len={LEN}, netfn={NETFN}, \"\n          \"lun={LUN}, cmd={CMD}, seq={SEQ}\",\n          \"LEN\", requestBuffer.size(), \"NETFN\", netfn, \"LUN\", lun,\n          \"CMD\", cmd, \"SEQ\", seq);\n```"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 225,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 232,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "No need for c_str() at all."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 232,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "It seems need to use `c_str()`. Otherwise, it got a compiler error."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 237,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "use lg2 for all output to make sure stuff gets appropriately logged."
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 237,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "serial"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 274,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "don't format the string and then log it, use lg2 as intended so it can log useful metadata as well:\n\n```\nlg2::info(\"Read serial request message with len={LEN}, netfn={NETFN}, \"\n          \"lun={LUN}, cmd={CMD}, seq={SEQ}\",\n          \"LEN\", requestBuffer.size(), \"NETFN\", netfn, \"LUN\", lun,\n          \"CMD\", cmd, \"SEQ\", seq);\n```"
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "line": 331,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "please use static constexpr for values like this in a header file instead of c-style #define"
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@ieisystem.com",
                        "username": "lxwinspur"
                    },
                    "message": "+1"
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "data should not be part of the 'header' struct.\n\nAlso, to ensure that your struct doesn't get word or dword aligned by the compiler, you might want to use ```__attribute__((packed))```"
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "line": 33,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "transport/meson.build",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/test/serial_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "type": "ADDED",
                    "insertions": 360,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialbridge@.service.in",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/meson.build",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/test/meson.build",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 758,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "10231f876f2d4595e57ab2b02332acf06ae31394",
            "parents": [
                "af4a77503366722a0c15cab12b421d9cbafba012"
            ],
            "ref": "refs/changes/16/75916/2",
            "uploader": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "createdOn": 1733431723,
            "author": {
                "name": "John Chung",
                "email": "john.chung@arm.com",
                "username": "gtossk2"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Chung",
                        "email": "john.chung@arm.com",
                        "username": "gtossk2"
                    },
                    "message": "Update patchset per review feedback."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "transport/meson.build",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/test/serial_unittest.cpp",
                    "type": "ADDED",
                    "insertions": 84,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialcmd.hpp",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialcmd.cpp",
                    "type": "ADDED",
                    "insertions": 334,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialbridge@.service.in",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/serialbridged.cpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/meson.build",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "transport/serialbridge/test/meson.build",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 718,
            "sizeDeletions": 0
        }
    ]
}