{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ie451ffcdcf3d5541b5314f52d2ece39b20b03f12",
    "number": 75858,
    "subject": "Enable basic unity builds",
    "owner": {
        "name": "Myung Bae",
        "email": "myungbae@us.ibm.com",
        "username": "baemyung"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/75858",
    "hashtags": [],
    "createdOn": 1731718760,
    "lastUpdated": 1732292038,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1731718760,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1731718803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731718803,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1731718833,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94551/ : FAILURE"
        },
        {
            "timestamp": 1731719670,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1731719695,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731719718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731719718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1731720313,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1731720327,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94553/ : FAILURE"
        },
        {
            "timestamp": 1731720354,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1731720540,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731720608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731720608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1731721225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94554/ : FAILURE"
        },
        {
            "timestamp": 1731723723,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731723777,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731723778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1731724561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94555/ : SUCCESS"
        },
        {
            "timestamp": 1731724752,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1731724909,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731726204,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731728168,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731880867,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731881462,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731924976,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1731943670,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731943712,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 5:\n\n(4 comments)"
        },
        {
            "timestamp": 1731943728,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731943728,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1731944369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94706/ : SUCCESS"
        },
        {
            "timestamp": 1731946896,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1731947565,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1731954878,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1732286317,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1732290935,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 6: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732290967,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732290967,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1732291020,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1732291046,
            "reviewer": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1732292038,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95008/ : SUCCESS"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "a56d4177a5a101ebfdb45c11fe3b1048389ce38b",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/1",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1731718760,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Is it really the size of the binary on the target? \nThat would have to be smaller."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "Size is one of the points.\nMy key point is that the compiler optimization is effectively disabled unless it is inlined."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> My key point is that the compiler optimization is effectively disabled unless it is inlined.\n\nEven if as the result of my changes, none of these functions could be inlined anymore (which i'm not sure about), a function call in c++ has extremely small amount of overhead, like maybe 10 machine instructions, depending on the function.\n\nThe main benefits i want to achive with these refactorings is\n\n## readability\nThe programmer can see in the .hpp what is the interface and does not need to go through all the code in many cases.\n\n## compilation time\nSince the .cpp can be compiled independently, it enables greater parallelization.\nThe .hpp becomes smaller, which is good since it may be included in a lot of places.\n\n## compile-testing small changes\nninja can also compile the ```subscription.o``` file by itself, so if someone\nwants to make changes in the file, the entire bmcwebd does not have to be compiled\neach time to check for compilation errors.\n\n## opinion\n\nIn my opinion, the possibility of a few extra instructions is well worth it to\nhave better compilation time and readability.\nI have experienced OOM before when compiling bmcweb on my laptop. It is not normal to have these kinds of overhead for a medium size c++ project. Had to add a swapfile to overcome this, even though i have 32 GB of memory.\n\n## link time inlining of c++ functions\n\nIn the following reference there is an example by Ciro Santilli for how functions may be inlined at link time.\nhttps://stackoverflow.com/questions/7046547/link-time-optimization-and-inline\n\n## meaning of the 'inline' keyword\n\nThe compiler and linker usually decide for themselves if they want to inline or not, depending on optimization flags. What makes us know better?\n\nYou can check this on compiler explorer.\nhttps://godbolt.org/z/G86aczWGW\n\nFor example this code\n```\ninline int f(int a, int b){\n    return a+b+3;\n}\n\nint main(){\n    return f(3, 5);\n}\n```\ndoes not result in inlining of function 'f' when compiling with x86-64 gcc 13.2.\n\nSo the inline keyword does not guarantee inlining.\n\nHave you checked if there is any difference in functions inlined vs not inlined before and after my patch?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "Thanks for clarifying things.\n\nWhat I meant about 'inline' is not about the keyword of 'inline', but about the cases whether compiler can do the inline optimization or not.\n\nIf a body of a function is a separate compilation unit, the function may not be inlined even if the other function is using it. I'm not sure whether Link-time optimization can do as much as the compile time optimization can do?\n\nI think this concern may be resolved by `unity builds` (?)."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/src/subscription.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -177
                },
                {
                    "file": "redfish-core/include/subscription.hpp",
                    "type": "MODIFIED",
                    "insertions": 192,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 223,
            "sizeDeletions": 189
        },
        {
            "number": 2,
            "revision": "9ef781c0374bacf97920245fb83794dcf9eaa2ab",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/2",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1731719695,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "even if my change were to reduce the size of the binary on the target \n(which will be less than 32MB)\n\nyou are doing a tradeoff with compilation time.\nSince every translation unit including this header now has to process more code.\n\nWhich then leads to increased compilation time."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "*increase the size"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/src/subscription.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -177
                },
                {
                    "file": "redfish-core/include/subscription.hpp",
                    "type": "MODIFIED",
                    "insertions": 192,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 224,
            "sizeDeletions": 189
        },
        {
            "number": 3,
            "revision": "4934e7eaf81aa2f434c92281de020f8d0ea63cd1",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/3",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1731720540,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/src/subscription.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -177
                },
                {
                    "file": "redfish-core/include/subscription.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 223,
            "sizeDeletions": 189
        },
        {
            "number": 4,
            "revision": "e32eb335e4dec0246b5b38ab8c8210532b69aed9",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/4",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1731723723,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you please check your numbers?  When I did the compressed arm binary size I got\n\nbefore: 889140\nafter: 889300\n\n\nWe're talking about an inconsequential amount of code difference.\n\n\nUncompressed I get\nBefore: 3477336\nAfter: 3477320\n\n\nKeep in mind, arm linux is running LTO, so saying that functions wont' inline between compile boundaries isn't really true.  It's possibly harder, but considering we're looking at a 16 BYTE difference in generated code, I'm assuming one of the functions was just ever so slightly different, rather than optimization being done differently.\n\nIf you're still getting different numbers, please share how you got them.  Based on the size (170 MB?) I'm assuming you were building debug binaries?  we don't really optimize for those, especially unstripped."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "Thanks.\n\nI may have used the wrong bmcwebd for measurement after the build.\nI've re-read the build files.  I think the right one is `/rootfs/usr/libexec/bmcwebd`?\n\nAs you showed, the size difference of `rootfs/usr/libexec/bmcwebd` seems not increased much. So, size seems not an issue.\n\nHowever, I'm still wondering about the compiler optimization, as I'm not sure whether Link-time optimization can do as much as the compile time optimization can do(?).\n\nSo, perhaps, would \"unity builds\" still be useful (after the breaking up header & body of the classes)?\n\nI've done a quick experiment -- by simply enabling `unity builds`, I got this result (rootfs/usr/libexec/bmcwebd)\n- 3393668 (before unity build)\n- 3332196 (with unity build) <-- This reduces the size of `61472`\n\nI submit the quick experimental unity build enablement by the next patchset of this change."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "on this patchset I'd like to see:\n\n1. The xz compressed binary size.  This is what we measure.  The 1.7MB reported value is about double what I'd expect.\n2. Some discussion of these compiler optimizations we're worried about?  Do they matter in practice?\n\nIs this problem better solved by enabling unity builds in meson?\n\nThere's currently lots of things that are compile units, including in a bunch of our dependencies.  If this is truly a problem, it's a much bigger problem than just subscription.cpp."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "The xz compressed sizes of bmcwebd.xz are:\n- 18184684 (before)\n- 17748332 (after this)\n\nThe file `subscription.hpp` is included by `event_service_manager.hpp`, and the member functions of Subscription are used in many places (e.g. `event_service.hpp`, etc).\n\nI think this implies that the compiler may loose the opportunities like inline of the short funcs, and/or size or speed optimizations.\n\nI also think this issue could be addressed or may be loosened via unity builds."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The xz compressed sizes of bmcwebd.xz are:\n> - 18184684 (before)\n> - 17748332 (after this)\n\n18MB would be HUGE, and take up 1/3rd of the flash.  Are you sure you're building optmized?  See my other comment for the numbers I'm seeing, which are in the <1MB compressed and <3MB uncompressed.\n\n> \n> The file `subscription.hpp` is included by `event_service_manager.hpp`, and the member functions of Subscription are used in many places (e.g. `event_service.hpp`, etc).\n> \n> I think this implies that the compiler may loose the opportunities like inline of the short funcs, and/or size or speed optimizations.\n\nI'm not seeing that in my testing.  See other comment."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "ACK"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/src/subscription.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -194
                },
                {
                    "file": "redfish-core/include/subscription.hpp",
                    "type": "MODIFIED",
                    "insertions": 191,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 223,
            "sizeDeletions": 206
        },
        {
            "number": 5,
            "revision": "7cec91760cd6860bb9783dafa291f065b42841dc",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/5",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1731943670,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you please post the XZ compressed numbers?\n\n\nThe command I use for this is below.\n\nxz -c $BBPATH/tmp/work/s7106-openbmc-linux-gnueabi/obmc-phosphor-image/1.0/rootfs/usr/libexec/bmcwebd | wc -c\n\n\nThose are the ones that matter."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "I use p10bmc build and I run `\nxz -c $BBPATH/tmp/work/p10bmc-openbmc-linux-gnueabi/obmc-phosphor-image/1.0/rootfs/usr/libexec/bmcwebd | wc -c`\n\n- 874664 (before this)\n- 868032 (with this - 6632 smaller)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that's fairly different than what's in the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "The commit message shows the before compress.\nI'll update the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please also measure clean compile times and incremental compile times.  The last time we did this experiment (see HEADERS.md) it made compile times significantly worse."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "I would agree that the unity build may take longer, for incremental builds.\n\n---- \n\nI measure this like -  date; time  MACHINE=p10bmc bitbake  bmcweb; date`\n\n1) clean compile:\n\nnormal (before):\n```\ndo_compile 1m38s <-- by eyes\nreal    2m3.016s\nuser    0m1.637s\nsys     0m0.476s\n```\nunity (with this):\n```\ndo_compile 1m40s\nreal    2m10.312s\nuser    0m1.426s\nsys     0m0.445s\n```\n\n2) Incremental.  (after touch a file `subscription.cpp`)\n\nnormal incremental build: 40s\nunity incremental build : 1m40s      <== This is longer as expected"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> unity incremental build : 1m40s <== This is longer as expected\n\nYep.  Everything is about tradeoffs,\na 0.7% decrease in binary size doesn't seem worth it to me for a 3X longer incremental build.\n\nFor a lot less same time \"cost\" we could probably save about the same or more by just optimizing existing code."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "Agreed.\nI'll mark this submission as WIP for now and then later I may abandon it (if determined not needed)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "looks like a 1.8% improvement size has been achieved.\n\nWhen optimizing for size, do you have any target?\n\nThe change is meaningless if other people are going to add features over time\nand they will exceed your change again.\n\nIf do you have a size target, can you achieve it with meson options and conditional compilation?\n\nMaybe disabling individual features and guarding them with meson options if you are not using them on your target bmc.\n\nI would assume that may give much greater savings."
                },
                {
                    "file": "src/webserver_run_unity.cpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "???? The whole point of meson enabling unity builds is so you don't have to do this."
                },
                {
                    "file": "src/webserver_run_unity.cpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Myung Bae",
                        "email": "myungbae@us.ibm.com",
                        "username": "baemyung"
                    },
                    "message": "This commit is just an experiment to show the unity build.\nI think - to utilize the unity build, a source file would need to contain a jumbo compile unit file to include all sources - https://mesonbuild.com/Unity-builds.html"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -18
                },
                {
                    "file": "src/webserver_run_unity.cpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 43,
            "sizeDeletions": 18
        },
        {
            "number": 6,
            "revision": "9f9d61a4d31ec5913ee6e3257221451e31b127bd",
            "parents": [
                "02c1e29fceae14aa5cb7a1b3d6bcaa4c0a256f2e"
            ],
            "ref": "refs/changes/58/75858/6",
            "uploader": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "createdOn": 1732290935,
            "author": {
                "name": "Myung Bae",
                "email": "myungbae@us.ibm.com",
                "username": "baemyung"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -18
                },
                {
                    "file": "src/webserver_run_unity.cpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 18
        }
    ]
}