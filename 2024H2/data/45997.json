{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Ie1a1730a63b615754297a5332cd63676f3d04b83",
    "number": 45997,
    "subject": "gpiosensor: a dedicated daemon to report gpio status to dbus",
    "owner": {
        "name": "linchuyuan",
        "email": "linchuyuan@google.com",
        "username": "linchuyuan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/45997",
    "hashtags": [],
    "createdOn": 1629301670,
    "lastUpdated": 1731019231,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1629301670,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1629301685,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1629303647,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1629303802,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1629303930,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Removed reviewer Andrew Jeffery."
        },
        {
            "timestamp": 1629303936,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Removed reviewer Vernon Mauery."
        },
        {
            "timestamp": 1629303940,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Removed reviewer Jae Hyun Yoo."
        },
        {
            "timestamp": 1629303942,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Removed reviewer Zhikui Ren."
        },
        {
            "timestamp": 1629407212,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1629407234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1629849492,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1629849506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1629910998,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5:\n\n(7 comments)"
        },
        {
            "timestamp": 1630603793,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1630603808,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1630614464,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1630614843,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1632162019,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1632162032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632162032,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 7:\n\n(11 comments)"
        },
        {
            "timestamp": 1632162212,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1632162225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632178061,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 8:\n\n(8 comments)"
        },
        {
            "timestamp": 1632178423,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1632213359,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1632220029,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 8:\n\n(23 comments)"
        },
        {
            "timestamp": 1632246245,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1632346264,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1632346278,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632346357,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1632346368,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632347050,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1632347063,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632347068,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 11:\n\n(30 comments)"
        },
        {
            "timestamp": 1632347919,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1632348143,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1632429872,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1632429887,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632431032,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1632431048,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632487471,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 13: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1632778259,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 14: Patch Set 13 was rebased"
        },
        {
            "timestamp": 1632778274,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632780001,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 14:\n\n(2 comments)"
        },
        {
            "timestamp": 1632864506,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1632864524,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1632864728,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 15:\n\n(2 comments)"
        },
        {
            "timestamp": 1632911424,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 15:\n\n(7 comments)"
        },
        {
            "timestamp": 1633639750,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1633639760,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633639785,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 16:\n\n(5 comments)"
        },
        {
            "timestamp": 1633639790,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27780/ : FAILURE"
        },
        {
            "timestamp": 1633639891,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1633639901,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633639906,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1633640154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27781/ : FAILURE"
        },
        {
            "timestamp": 1633640598,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1633640606,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633640760,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/27782/ : FAILURE"
        },
        {
            "timestamp": 1633646246,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1633646261,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1634026742,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 19:\n\n(3 comments)"
        },
        {
            "timestamp": 1634250243,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1634250255,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 20:\n\n(3 comments)"
        },
        {
            "timestamp": 1634250275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1634814778,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1634860084,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1634860639,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1634884713,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1635284237,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1635284249,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1635284282,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1635770578,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 21:\n\n(2 comments)"
        },
        {
            "timestamp": 1635791997,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 21:\n\n(2 comments)"
        },
        {
            "timestamp": 1635794681,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1635804342,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1635965707,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1635965720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1635965848,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 23."
        },
        {
            "timestamp": 1635965859,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1635965931,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 23:\n\n(3 comments)"
        },
        {
            "timestamp": 1637003128,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 24: Patch Set 23 was rebased"
        },
        {
            "timestamp": 1637003141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1637189010,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 24:\n\n(6 comments)"
        },
        {
            "timestamp": 1637620510,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1637620525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1637620528,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 25:\n\n(5 comments)"
        },
        {
            "timestamp": 1637620632,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1637620645,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1638160487,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 26:\n\nfriendly ping."
        },
        {
            "timestamp": 1638172908,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 26:\n\n(5 comments)"
        },
        {
            "timestamp": 1638208600,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1638212311,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 26:\n\n(2 comments)"
        },
        {
            "timestamp": 1638246881,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 27."
        },
        {
            "timestamp": 1638246894,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1638246971,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 28: Commit message was updated."
        },
        {
            "timestamp": 1638246982,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 28:\n\n(5 comments)"
        },
        {
            "timestamp": 1638256609,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 28:\n\n(1 comment)\n\nThanks"
        },
        {
            "timestamp": 1638295886,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1638296968,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1638297115,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 29."
        },
        {
            "timestamp": 1638297128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1638471114,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 29:\n\n(1 comment)"
        },
        {
            "timestamp": 1638574725,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 29:\n\n(1 comment)"
        },
        {
            "timestamp": 1638778416,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 29:\n\n(1 comment)"
        },
        {
            "timestamp": 1638782151,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 29:\n\n(2 comments)"
        },
        {
            "timestamp": 1638826094,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 30."
        },
        {
            "timestamp": 1638826108,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1638826232,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 30:\n\n(2 comments)"
        },
        {
            "timestamp": 1638826678,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 30:\n\n(1 comment)"
        },
        {
            "timestamp": 1638918036,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 31."
        },
        {
            "timestamp": 1638918050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1638996349,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(10 comments)"
        },
        {
            "timestamp": 1638998139,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1638998563,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1639157896,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(20 comments)\n\nPartial comments.  This is looking like a good start!"
        },
        {
            "timestamp": 1639158206,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1639586304,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 31:\n\n(2 comments)"
        },
        {
            "timestamp": 1639606311,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 31:\n\n(1 comment)"
        },
        {
            "timestamp": 1639634015,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 31:\n\n(3 comments)"
        },
        {
            "timestamp": 1640022628,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 31:\n\n(3 comments)"
        },
        {
            "timestamp": 1640137320,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 32: Patch Set 31 was rebased."
        },
        {
            "timestamp": 1640137336,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1640220406,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 32:\n\n(1 comment)"
        },
        {
            "timestamp": 1640281378,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 32:\n\n(1 comment)"
        },
        {
            "timestamp": 1640464135,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 32:\n\n(3 comments)"
        },
        {
            "timestamp": 1642551211,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 33."
        },
        {
            "timestamp": 1642551225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642551225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: -Ok-To-Test"
        },
        {
            "timestamp": 1642551268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/35702/ : FAILURE"
        },
        {
            "timestamp": 1642551357,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 34."
        },
        {
            "timestamp": 1642551369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642551370,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: -Ok-To-Test"
        },
        {
            "timestamp": 1642551697,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/35703/ : FAILURE"
        },
        {
            "timestamp": 1642552415,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 35."
        },
        {
            "timestamp": 1642552424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642552424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: -Ok-To-Test"
        },
        {
            "timestamp": 1642552793,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/35713/ : FAILURE"
        },
        {
            "timestamp": 1642566392,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 36."
        },
        {
            "timestamp": 1642566411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1642566411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: -Ok-To-Test"
        },
        {
            "timestamp": 1642566668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/35723/ : SUCCESS"
        },
        {
            "timestamp": 1642607102,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 36:\n\n(1 comment)"
        },
        {
            "timestamp": 1642619280,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 36: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1642631283,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 36:\n\n(43 comments)"
        },
        {
            "timestamp": 1642672304,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 36:\n\n(6 comments)"
        },
        {
            "timestamp": 1642798053,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 36:\n\n(2 comments)"
        },
        {
            "timestamp": 1643406261,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 37."
        },
        {
            "timestamp": 1643406272,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 37:\n\n(5 comments)"
        },
        {
            "timestamp": 1643406330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643406330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: -Ok-To-Test"
        },
        {
            "timestamp": 1643406579,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36274/ : SUCCESS"
        },
        {
            "timestamp": 1644076772,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1645649953,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1645847382,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1646246605,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 37:\n\n(2 comments)"
        },
        {
            "timestamp": 1646324832,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1646332758,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1646333457,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1649657349,
            "reviewer": {
                "name": "Naveen Moses ",
                "email": "naveen.mosess@hcl.com",
                "username": "naveenmosess"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1650488196,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1650515214,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1650855674,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 37:\n\n(11 comments)"
        },
        {
            "timestamp": 1671659698,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 38: Patch Set 37 was rebased"
        },
        {
            "timestamp": 1672091351,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 39."
        },
        {
            "timestamp": 1672091373,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 39:\n\n(10 comments)"
        },
        {
            "timestamp": 1672091380,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672091381,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: -Ok-To-Test"
        },
        {
            "timestamp": 1672091892,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/58272/ : FAILURE"
        },
        {
            "timestamp": 1672096590,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 39:\n\n(3 comments)"
        },
        {
            "timestamp": 1672162006,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 39:\n\n(1 comment)"
        },
        {
            "timestamp": 1672202866,
            "reviewer": {
                "name": "Meghan Saitwal",
                "email": "meghan.saitwal@intel.com",
                "username": "msaitwal"
            },
            "message": "Patch Set 39:\n\n(2 comments)"
        },
        {
            "timestamp": 1672270176,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 40.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1672270186,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 41: Patch Set 40 was rebased"
        },
        {
            "timestamp": 1672270216,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672270216,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: -Ok-To-Test"
        },
        {
            "timestamp": 1672270231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/58366/ : FAILURE"
        },
        {
            "timestamp": 1672461374,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 42.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1672461427,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672461428,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: -Ok-To-Test"
        },
        {
            "timestamp": 1672461653,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58409/ : SUCCESS"
        },
        {
            "timestamp": 1672491472,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 42:\n\n(21 comments)"
        },
        {
            "timestamp": 1672611694,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 42:\n\n(5 comments)"
        },
        {
            "timestamp": 1673485616,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 43.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1673485637,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 43:\n\n(22 comments)"
        },
        {
            "timestamp": 1673485646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1673485646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: -Ok-To-Test"
        },
        {
            "timestamp": 1673485702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/58961/ : FAILURE"
        },
        {
            "timestamp": 1673563314,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 44.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1673563349,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1673563350,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: -Ok-To-Test"
        },
        {
            "timestamp": 1673563584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59002/ : SUCCESS"
        },
        {
            "timestamp": 1673613978,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1673615267,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1674068978,
            "reviewer": {
                "name": "Justin Ledford",
                "email": "justinledford@google.com",
                "username": "justinledford"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1675013862,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1675051314,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 44:\n\n(4 comments)"
        },
        {
            "timestamp": 1675088895,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1675806440,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 45.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675806468,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675806468,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: -Ok-To-Test"
        },
        {
            "timestamp": 1675806472,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 45:\n\n(6 comments)"
        },
        {
            "timestamp": 1675806505,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/60421/ : FAILURE"
        },
        {
            "timestamp": 1675830502,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 45: Code-Review-1"
        },
        {
            "timestamp": 1675832668,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 45:\n\n(1 comment)"
        },
        {
            "timestamp": 1676617587,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 46.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676651284,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676651284,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: -Ok-To-Test"
        },
        {
            "timestamp": 1676651553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61212/ : FAILURE"
        },
        {
            "timestamp": 1676658286,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 46:\n\n(2 comments)"
        },
        {
            "timestamp": 1676658463,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 47.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676658495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676658496,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: -Ok-To-Test"
        },
        {
            "timestamp": 1676658511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61240/ : FAILURE"
        },
        {
            "timestamp": 1676659381,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 48.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676659401,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676659401,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: -Ok-To-Test"
        },
        {
            "timestamp": 1676659655,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/61242/ : FAILURE"
        },
        {
            "timestamp": 1676664698,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 49: Patch Set 48 was rebased\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1676664721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1676664721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: -Ok-To-Test"
        },
        {
            "timestamp": 1676665010,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/61248/ : SUCCESS"
        },
        {
            "timestamp": 1677180774,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1677182343,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1677184095,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1677200863,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 49: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1677605675,
            "reviewer": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1677615112,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1677810543,
            "reviewer": {
                "name": "Jeff Lin",
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 49:\n\n(2 comments)"
        },
        {
            "timestamp": 1679096869,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1679127584,
            "reviewer": {
                "name": "Ankita Gawade",
                "email": "ankita.gawade@intel.com",
                "username": "ankitagawade23"
            },
            "message": "Patch Set 49:\n\n(4 comments)"
        },
        {
            "timestamp": 1679276508,
            "reviewer": {
                "name": "Yung-sheng",
                "email": "yung-sheng.huang@fii-na.com",
                "username": "Yung-sheng"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1679276765,
            "reviewer": {
                "name": "Yung-sheng",
                "email": "yung-sheng.huang@fii-na.com",
                "username": "Yung-sheng"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1679291316,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 49:\n\n(8 comments)"
        },
        {
            "timestamp": 1679373311,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        },
        {
            "timestamp": 1679973916,
            "reviewer": {
                "name": "Yung-sheng",
                "email": "yung-sheng.huang@fii-na.com",
                "username": "Yung-sheng"
            },
            "message": "Patch Set 49:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5af4ef2cd1d07b2c8db59e815921c200a65ebc37",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/1",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629301670,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 431,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "1fd00c3db499401880afde3a79bba0b16e12e54c",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/2",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629303647,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 431,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "8f6872dbd081e5f830c62416123d9f6da5942e4f",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/3",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629303802,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 1,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nit: can you add a Hashtags between your changes to make it easier to group them together?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 434,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "efb4378bcf1ecdfb446b7a503c37bf8b8246a2eb",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/4",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629407212,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 385,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "65340a893985b21c925310b08a02d74019a36d3e",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/5",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629849492,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "shouldn't the name space be in lower case only?"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 12,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "just activeLow here is fine."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "const std::string&"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 9,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Does this have to be defined in here? Move to main?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 9,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "rm"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "just pass in io in here instead of making it global?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 65,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 385,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "6e495a5db1f30b17dd2020354f8f787ac593d534",
            "parents": [
                "f1ace50bbb781c0febd15387110d1a03b11391f9"
            ],
            "ref": "refs/changes/97/45997/6",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1630603793,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "variables should be lowerCamelCase, https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "is there a reason why we can't pack the relevant information of Config directly into the ObjIfaces object (and name that struct something different, or better yet make it a class that handles its own interface registeration and destruction)?\n\nThis would make the code a lot more readable to me."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "debatable but should this just throw?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I think if we just end the program like this we will end with a crash loop."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "What I'm getting at is, \"Should the caller be informed that gpioLineRead was not successful in a more descriptive way than returning -1?\" , obmc prefers using exceptions for error handling see https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#exceptions\n\nThe caller would need to be aware that this function throws and wrap it in a try catch."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Updated"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 79,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "structured binding here would make the code a lot more readable."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 79,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "can we consider making unique interfaces? seems cleaner than a shared_ptr..\nand then creating in-place?\n\nhttps://github.com/openbmc/sdbusplus/blob/0ade192c8f8f30128ccdd3daea5cfe41a1cec8e9/include/sdbusplus/asio/object_server.hpp#L832"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "I assume we've tested to make sure that the destruction of these interface objects actually tears down the associated dbus object?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Tested with `EM restart`"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 144,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 384,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "82c0bcc2735953ee544e562be369c5504e30fb4b",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/7",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632162019,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "a3023757479f2ec89353681cf9e9fc9ef84a7df9",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/8",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632162212,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "So, is it more \"Cable Sensor\" or \"GPIO sensor\"? Is it something generic, like phosphor-gpio-monitor?\nThis commit catastrophically lack of any documentation. I know, dbus-sensors lack of docs at all, but we should start fixing this.\nI propose you to add \"docs\" subdirectory and put there description of the daemon: purpose, expected configuration options, exported dbus objects, emitted events, etc."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "For reference,\n\nhttps://github.com/openbmc/docs/blob/master/designs/gpio-based-cable-presence.md\n\nWhat do you think about adding a reference to the design doc in the root README.md?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I added the link to the doc in the commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Design doc is for top-level overview (design), but I talking about implementation documentation. The doc, you referenced to contains configuration example, but I prefer to have more detailed description here.\n\nBTW, no one will found link to documentation in commit message when he will try to understand what is this daemon for, lets say, in one year ;)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Will add one."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\nis get property from dbus a better name?"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "so what happens when the key isn't found? Shouldn't the caller be informed that `fromDbusProperty` failed? \nShould an exception be thrown?\n(this function already throws an exception if std::get fails)"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 81,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I changed the implementation to handle the exception from the caller function."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Add check for std::get, use std::get_if or use the code below\n\nif(std::holds_alternative<T>(found->second))\n{\n  ret = std::get<T>(found->second);\n}\n\nalso log error for this failure too, as Jason Ling has mentioned in that previous comment."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 83,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I changed the implementation to handle the exception from the caller function."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nI would suggest to make the function bool to indicate if the function has failed. \nSo the caller can use if condition to check success before using ret value."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I changed the implementation to handle the exception from the caller function."
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "doesn't look like properties is mutated so use const qualifier?"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nis get config a better name?"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nWhat if found == ifcAndProperties.end()? \nShouldn't we handle this situation?"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "It should be ok. That means the config is for other daemon, not for this daemon."
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "this can throw, is that OK?"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 18,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nif conn is null will this crash?"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I don't think conn can be none. See below\n\n149     boost::asio::io_context io;\n150     auto systemBus = std::make_shared<sdbusplus::asio::connection>(io);\n151     systemBus->request_name(gpiopresencesensing::service);\n\nconn is systemBus.get()."
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "is this used? if not, remove this."
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Out of these lines, which is expected to throw an error? \nCan keep only the required statements in try and move everything outside the try statement? \nLike the for loop and it's contents."
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 40,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nHow are we achieving this? we are still going ahead and making ifcAdded in line 55 rt?"
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "use lower camel case"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nCan we use boost flat map?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 17,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\ndo you think it will be a cleaner code if we use bool return type and passed value as argument? \nSo all failure path can return false.\n\nyou can use std::tuple<bool, int> as return type too."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I converted to exception for error handling."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "forceUpdate, coding standards."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Unless there are multiple io contexts you should be able to just call bus.get_io_context()\n(And if there are multiple IO contexts I'd be very surprised)\n\nsee\nhttps://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/asio/connection.hpp#L321"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "??"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 88,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "changed it to 1 second polling interval."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "a bit more descriptive? mention that the timer is canceled, print the stringified EC and something to identify which GPIO object it corresponds to. Maybe the dbus path is a good starter point?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 95,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "There is only one timer for all dbus objects but I changed it to include the error message."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "This should be an impossible scenario according to Boost documentation.\nhttps://www.boost.org/doc/libs/1_66_0/doc/html/boost_asio/reference/basic_waitable_timer/async_wait.html\n\n Can we be a bit more loud with the error message?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 100,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\n\nCan we use boost flat map?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Can't we use force_update itself? why do we need new variable?\nforce_update is passed by value and not by reference rt?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 105,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "currently this can be -1 under error conditions but this isn't checked.\nSo it looks like a GPIO line that can't be read\nIf changed to throw exceptions then this should then be wrapped in try catch."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 109,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "What are we trying to do here?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 110,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "is this line supposed to be error? or just a info message?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 116,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "const auto&?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Can you use the actual type instead of auto?\nSo that line 125 becomes more readable."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 123,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "needChange, coding standards."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Also it looks like you can completely eliminate need_change and place this code in the conditional surrounding line 115.\nThat appears to be the only place where you would update the LED right?\n(either the functional state has changed or you're forcing an update)"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 129,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 129,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I was trying to minimize calling the same dbus object too many times. For example, if two cables are associated to the same fault led group, it might call to the same led dbus object to turn it on/off. We can still eliminate this clause and place it in the line you suggested but I thought the code is more readable in this way."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "ack, I'm OK with this then."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "nit:\nhave you tested to see if this will in-turn throw error? \nname suggest we will assert, that is why I am curious."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "ah, \"assert on fault led group\" means turn the led group if the corresponding cable is not properly seated. I have changed the to driverFaultLedGroup to be more descriptive."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Can we use boost flat map?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "what if cableIfc is null?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 174,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "yes it is empty in the case. The reason why we want a such empty interface is to give the searching ability for ipmid. For example, if ipmid wants to list all the cables from the system, it can call to dbus GetSubTree with interface equal to the cable interface. This will give a list of objects that has the cable interface."
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "what if connectorIfc is null?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "yes, see the explanation from cableifc"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "what if statusIfc is null?"
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "line": 184,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "yes, see the explanation from cableifc"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 195,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 442,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "d65ea946ebf60f7aa6c93325903bc1acbf8f0884",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/9",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632346264,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 457,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "1613720940e1231b216b5cfc8462127352578c7c",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/10",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632346357,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 457,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "38e72cac50066a017b5d2f65fdb6a6bab0fd7b55",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/11",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632347050,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 457,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "90d243851382f8f3e2ea77a913bc74e3aafc117a",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/12",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632429872,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 457,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "2cda49f4a25a58d84c5063274843cdaa2d440e07",
            "parents": [
                "0c42f40e55fd4fe6274962ea17e804f49f5de19e"
            ],
            "ref": "refs/changes/97/45997/13",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632431032,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I still ask you to be more consistent:\n* If this is intended to be some generic solution, remove mention \"cable\" from name and, probably, interfaces. Let it be just \"GPIOSensor\" or \"PresenceSensor\".\n* If this is just about Cables, don't name source files like \"GPIOSensor.cpp\"\n\nAccording to design doc it more like exactly \"CableDetectionSensor\" but I still don't see, why this so specific: why can't we same way detect presence of e.g. risers, storage drives, etc."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I am agree with that this doesn't need to be that specific. However, I am not sure what the interface should be for other components like risers and drivers. I named it cable to point out it populates the cable interface on dbus for search purpose (so ipmid can find it). Once there is use case for risers/drivers, perhaps, it becomes more clear of what the interfaces should be and we can add the support for additional devices at that time. What do you think?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 476,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "de5e19277588cde055963210b076f8add2877d02",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/97/45997/14",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632778259,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOSensor.hpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 476,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "5af8cb4e522ce9878f041adc5930fe9602aa36bf",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/97/45997/15",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1632864506,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Thank you so much for adding this doc, it is brilliant!\n\nBut I still little bit confused: you rename source files to \"GPIOCableSensor.*\" according to my request, but here you mention this as generic Presence Detection again..."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "How IPMI spec affects this gpiocablesensor daemon design? For me looks like this reference excess."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 16,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Looks like something happens with formatting?.."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Pseudographics still looks broken. Are you sure it is okey?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "It should be fixed in patch20."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "no changes here"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Um. let me check. My IDE looks fine. Not sure what happen."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 31,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Can you see if https://gerrit.openbmc-project.xyz/plugins/gitiles/openbmc/dbus-sensors/+/ffd24fdf78c50d970835d627e5131787d03df201/docs/gpio-based-presence-detection.md looks ok to you?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 73,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Saying about to make it generic: I propose to transform this to something like\n\"Type\": \"GPIOPresenceSensing\",\n\"Class\": \"Cable\",\n\nand then in the code you can have a map of interfaces lists to implement depending on class."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 73,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "If this intended to represent Inventory Item, then, please, add also `xyz.openbmc_project.Inventory.Item` interface. Not all services now follow this rule, but lets not make this practice common.\nAnd, BTW, I believe, presence should be represented by xyz.openbmc_project.Inventory.Item->Present or  xyz.openbmc_project.State.Decorator.Availability->Available, but not by  xyz.openbmc_project.State.Decorator.OperationalStatus->Functional\n\nActually, I don't like the idea that dbus-sensors will expose inventory items, but this is another story... Did you look how same thing implemented by PSUSensor, CPUSensor, FanSensor?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Yes, PSUSensor implements both xyz.openbmc_project.State.Decorator.Availability and xyz.openbmc_project.State.Decorator.OperationalStatus. However, for a presence signal, do we need two indicators for the same signal?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Well, I agree that having several interfaces here may be excess.\nWhat is the idea of the sensing? \nIs it expected to have or have no the cables and intention is to detect Presence, or it expected the cables would always present and intention is to detect it they are damaged/undesirable unpluged?\nIn first case I prefer to use Present, in second - Functional should fit well."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 117,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "drives, not drivers"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 117,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Hm... Generally all other daemons in dbus-sensors have actual logic here and configration/detection/EM-communication in \"xxxMain.cpp\". Why did you decide to change the pattern?"
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "So, as I see, you don't have intentions to make this more in line with other services, right?"
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "No, I will make the change. Sorry, for some reason, I missed this comment. Sorry about that."
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "thank you"
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOCableSensor.hpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOCableSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOCableSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 605,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "fa7a0e3a7866b7c5c055a128b1cabb0e27ba6e9d",
            "parents": [
                "26601e8919552a52bd8b23aa85fac30088f03303"
            ],
            "ref": "refs/changes/97/45997/16",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1633639750,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "include/HwmonTempSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 642,
            "sizeDeletions": 1
        },
        {
            "number": 17,
            "revision": "9de4306b7ccaf9cdf2cb2e464b769923cc0eb872",
            "parents": [
                "26601e8919552a52bd8b23aa85fac30088f03303"
            ],
            "ref": "refs/changes/97/45997/17",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1633639891,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "include/HwmonTempSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 198,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 650,
            "sizeDeletions": 1
        },
        {
            "number": 18,
            "revision": "273975a3702a298bf505037a7557856f1723b4cf",
            "parents": [
                "26601e8919552a52bd8b23aa85fac30088f03303"
            ],
            "ref": "refs/changes/97/45997/18",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1633640598,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 198,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 632,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "5660e51db19a5cf232b2001b13f6026e294e9c1a",
            "parents": [
                "26601e8919552a52bd8b23aa85fac30088f03303"
            ],
            "ref": "refs/changes/97/45997/19",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1633646246,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "GPIOPresence?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 627,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "36d349a3a0f99a6463013ce06c62fece75c94a81",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/97/45997/20",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1634250243,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "is  <string_view> header required for this or its part of <string> header ..?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "It builds fine so I didn't add it. Should I add it?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "yes, in general try to include what you use."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "+1, better to add necessary header required but I'm wondering  how code is compiled without it."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 61,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 133,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 626,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "579949ba46df621c5a7fb8272d0ab4a984e8ed4b",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/97/45997/21",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1635284237,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This suggests its cable specific, as does the linked design document, but the build option, the source files and the resulting executable don't have 'cable' in their name. I'd prefer the intended use case was more obvious at first glance."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 627,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "0f62031b8c38bc0be8a9fa58f2fa74bd3f820fae",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/97/45997/22",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1635965707,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 654,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "ffd24fdf78c50d970835d627e5131787d03df201",
            "parents": [
                "3fed6742dcfe30fe2fa5182dd37c3e1a0e337a43"
            ],
            "ref": "refs/changes/97/45997/23",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1635965848,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 655,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "facd703eb43747ba350c6623f017f87d93050e6f",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/24",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1637003128,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "extra space"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 83,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 89,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Will this be better: /cable/osfp0 or item/gpiopresence/osfp0 ?\nI don't know what else can show up under item."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 89,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Per discussion, I don't think we are adding more interface for gpiopresence. In addition, we want to use the present attribute in the item interface."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 89,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "ACK"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 89,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "const char* service \n\nOther places also"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "missing?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 53,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "move before use"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Value is the actual return value. I think we should define it here."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "define a pollRate as other sensor service"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "what to know significance of  using static with unique pointer."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 655,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "1dd751876af56136fd4ad01c12681ae1b92ab29c",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/25",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1637620510,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 168,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 232,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 719,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "fe577aaabc1f67cc57ad08a38e793a14a785032d",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/26",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1637620632,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "sensor"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "why not to use C++ version? (gpiod.hpp)\nYou can refer e.g. x86-power-control as an example."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I prefer to do this once on initialization and then keep presence line used by the service."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "+1 on this preference.\nAcquiring and releasing the line repeatedly could lead to some infuriating bugs later on.\n\nExample:\nAnother service or script needs to acquire this line and we end up with intermittent failures. Then you go to debug the problem with gpioinfo /gpiofind and most of the time you see that the line isn't reserved.\n\nBy reserving this line for the lifetime of the service these types of bugs are much easier to hunt down and characterize."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Are you sure, we should manage LEDs from the daemon? The generic way to handle this is to define rules in led-manager, why do you need to move this functionality here?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Do you have a better example of how to setup rules?\nFrom what I have read from phosphor-led-manager, I thought I need to setup the led-groups in phosphor-led-manager and set the dbus property to assert/deassert the led-group."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "If we're talking about the `operational-status-monitor` then that service, as is, doesn't seem to work for us. We're still controlling LED groups via phosphor-led-manager here but we're explicitly triggering an assert condition via a dbus-method call vs having phosphor-led-manager react to a properties change.\n\nFew reasons I see as to why we can't transfer even more control to phosphor-led-manager without significant changes to that repo. Chu, please feel free to correct me if I get any of these wrong.\n\n(1) Fairly certain we don't use `xyz.openbmc_project.Inventory.Manager` and instead we use EM to manager inventories for us. Chu's approach removes the dependency on Inventory manager at the cost of extra dbus calls.\n(2) We're trying to detect the absence of a cable here and the monitor looks like it's keying off \"OperationalStatus\" instead.\n\nMaybe we can save this as a future enhancement? \nThe only rationale I can see behind adding more logic to phosphor-led-manager is to make sure LEDs continue to blink correctly even if phosphor-led-manager is restarted for whatever reason. (This service only calls the dbus-method LED assert on state change)."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Thanks Jason for the explanation."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "(1) Can't get, why do you refer to PIM? We currently don't use PIM either, but AFAIK LED manager do nothing with PIM.\n(2) Sorry, can you explain more? Can't see what's wrong here. The 'GPIOPresence' service changes OperationalStatus anyway, so dbus event would be sent anyway. Then you can trigger led manager by matching this event using either PIM itself or phosphor-dbus-monitor. The only problem I can see it in static nature of this tools - both require compile-time YAML configurations. Is it real problem for you?\n\nI really don't like to see unrelated functionality here. Same as for beeper in PSU manager (https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/45649): if I want to blowup my server on presence loss, should I also hardcode call to \"self-desctruction-manager\" here?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Let me study a little more about operational-status-monitor"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "It looks like operational-status-monitor only processes messages from inventory-manager. See here, https://github.com/openbmc/phosphor-led-manager/blob/master/fault-monitor/operational-status-monitor.hpp#L47. Would explain a little bit more on how should we make it work with a new service other than xyz.openbmc_project.Inventory.Manager?\n\nIn addition, per code review, we are using `xyz.openbmc_project.Inventory.Item.Present` instaed of `xyz.openbmc_project.State.Decorator.OperationalStatus`."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Thoughts Andrei?\n\nShould we be extending phosphor-led-control to support keying off present=false and drop this code from review in the interim?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Sorry, for long answer.\nI took a look how is it implemented in our setup: we use phosphor-dbus-monitor to catch the events and change LED mode, you can grep openbmc repo by \"inherit phosphor-dbus-monitor\" to find exampled, but looks like it is not a common way to control LEDs by this mechanism, so now I not sure, what to do here."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The best approach should be operation-status-monitor from \nhttps://github.com/openbmc/phosphor-led-manager/blob/master/fault-monitor/operational-status-monitor.hpp#L47\n\nHowever, it only monitors operational-status. It doesn't not monitor inventory Presents attribute. I propose we stay with current implementation and take action to improve operation-status-monitor in the future."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "I think Andrei has a good point and the sentiment is echoed by Ed. The idea being that gpio presence only cares about the presence of something and that blinking LEDs is something that is done by the LED daemon.\n\nI think the right thing to do here is to remove the assertion code from this review. If we want to have a band-aid solution in the short term we can carry a patch locally until we have the time to add presence monitoring to the LED daemon.\n\nRationale: If we submit code that uses the LED assert interface then a precedence is created for future contributors to do the same.\n\nAndrei, Chu - thoughts?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Removed the management of led."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What is this for? Looks like it do nothing."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 93,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Removed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 170,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 238,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 731,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "5139eb2439333dba0d583758a6bb8c67826d716d",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/27",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1638246881,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 237,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 717,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "c83490683f958ac63ccf9b03c24a4ca8fb41c253",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/28",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1638246971,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 237,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 717,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "f3c6fadebdc7bd2ca9bcdee74392bc2f09091b15",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/29",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1638297115,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's no need to separate Type and class in this way.  Type: CablePresence, PCIePresence, ect is generally how we'd solve this problem.  One daemon can support multiple types."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 74,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I realize this was pasted, but please avoid tabs."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 104,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "both const and constexpr necessary here ..?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 237,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 717,
            "sizeDeletions": 0
        },
        {
            "number": 30,
            "revision": "12f90da6c432a82a5a15a8d5ebe452f8e88c1bbd",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/30",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1638826094,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 237,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 717,
            "sizeDeletions": 0
        },
        {
            "number": 31,
            "revision": "04a3775352fa78a0e6952ae99b807c09bb3d7ba3",
            "parents": [
                "cb5af73f5ddf48c5f9455f41a39b44517089352f"
            ],
            "ref": "refs/changes/97/45997/31",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1638918036,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Seems like an odd place to link. I feel like it would be more reliable to point to the actual git repo?\n\nhttps://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git/"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This daemon should not be part of asserting LEDs.  There's already an LED daemon."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generaly we don't separate \"Class\" and \"Type\".  There's a couple cases where we do it for devices that support the same protocol, but need different read modes, but that's not this case.\n\nIn this case, \"Type\" should be \"GpioCablePresence\" and Class should be deleted."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 71,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please check and verify that this is the same way (name and casing) we represent polarity in other places."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 73,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generally this daemon wouldn't be responsible for publishing the item interface itself, it would only publish the manufacturer and part nubmer interfaces that entity-manager would then expose.  Your EM config file would likely not have any exposes in it at this point."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "So EM publishes the config for this daemon to consume (gpio line, name, etc) then this daemon in turns publishes mfg/PN..\nand then EM in turn probes off this and publishes another inventory item decorated with the item interface (specified via json config)..\n\nand then this daemon mutates present via d-bus?\n\nIf I understand correctly : that seems really complex in comparison to this daemon just owning the item interface. All in the name of having a single daemon manage inventories?\n\nIf I am mis-interpreting your comment: can you elaborate please?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> So EM publishes the config for this daemon to consume (gpio line, name, etc) then this daemon in turns publishes mfg/PN..\n> and then EM in turn probes off this and publishes another inventory item decorated with the item interface (specified via json config)..\n\nYou got it.\n\n> \n> and then this daemon mutates present via d-bus?\n\nToday, present isn't really implemented in entity-manager (all things are implicitly present by existing).  A \"Not present\" thing would be an unfilled slot, which we don't really have an abstraction for today, but vijay is looking at it for PCIe.\n\n> \n> If I understand correctly : that seems really complex in comparison to this daemon just owning the item interface. All in the name of having a single daemon manage inventories?\n\nIt's not about having a single daemon manage inventory (although that's a byproduct).  It's about being able to enable model-specific hacks across hardware in one place, as well as being able to publish the containedby and connected associations (and the equivalent Redfish links).\n\n3 weeks from now, when we figure out that manufacturer XYZ module has some crazy behavior we need to workaround, we have one place where we can enable that workaround.\n\n> \n> If I am mis-interpreting your comment: can you elaborate please?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Okay, let's assume EM is responsible for the creation of the item interface.\n\nWouldn't it be better for EM to unconditionally publish a cable object with an item interface based on a FRU associated with the board?\n\nThen gpio sensing daemon can mutate present based on the config provided by EM.\n\nThe point being, we need it explicitly stated that a cable is absent ..e.g via the Present property in the Item interface.\n\nOne motivating use case for this is that this is how the discrete events in a cable presence entry in IPMI figures out which bits to set.\n\nAnother motivating use case is that the LED daemon needs to look at a specific property to determine whether it should blink or not (could be done by searching for the presence or absence of a dbus-object but I find that approach very clunky)"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Today, present isn't really implemented in entity-manager (all things are implicitly present by existing)\n\nThe refactor that I did where I pulled out PerformProbe and PerformScan was the start of me trying to understand how to make EM pay attention to the Present property, so I have some desire to see it implemented.\n\n> A \"Not present\" thing would be an unfilled slot, which we don't really have an abstraction for today, but vijay is looking at it for PCIe.\n\nThis is also something I've concerned myself with: I modeled this kind of thing with Connectors and PolledDevicePresence classes in platform-fru-detect:\n\n* https://github.com/ibm-openbmc/platform-fru-detect/blob/5e83e98f9a8476e61ad464b51dac3d4120de47b7/src/platform.hpp#L27-L62\n* https://github.com/ibm-openbmc/platform-fru-detect/blob/5e83e98f9a8476e61ad464b51dac3d4120de47b7/src/platform.hpp#L91-L223\n\nIt'd be great to see support in EM for the concept.\n\nI'd like to delete all the code in platform-fru-detect by having equivalent functionality in EM. platform-fru-detect is my executable mental model of how our hardware works and I hope to use that to help translate some of the concepts into something EM can represent."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "So there were some offline discussions with Ed on how to get EM to publish a dbus object corresponding and then mutate present based on what gpio-presence does.\n\nChu, can you summarize what was discussed in this thread and then update the documentation based on this?\nI think it's pretty important for users of gpio-presence to understand exactly what is going on: The approach is not obvious.\nAlso it'd be nice to touch on the motivating use case - otherwise others will likely ask the same question I asked, \"Why such a complicated approach?\""
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Per our offline discussion, we need to alter the design to publish a dbus object corresponding and then mutate present based on what gpio-presence does.\n\nThe idea is the following:\n1). There should a config file for the presence daemon to consume. An example looks the following.\n```\n    {\n      \"Name\": \"cable0_config\",\n      \"GpioLine\": \"cable0_prsnt_l\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"CablePresence\", # differentiate using the type\n    },\n    \"Probe\": \"xyz.openbmc_project.FruDevice({'BOARD_PRODUCT_NAME': 'myboard'})\",\n```\n\n2). The presence daemon will pick the above config and populate a private interface. For example, xyz.openbmc_project.cablepresence.\n\n3). Then, EM can probe interface and create the actual dbus object with public interface.\n```\n  Exposes: [],\n    \u201cName\u201d: \u201ccable0\u201d,\n    \"xyz.openbmc_project.Inventory.Item\": {\n        \"Present\u201d: \u201c$present\u201d\n    },\n    \"xyz.openbmc_project.Inventory.Cable\": {\n    },\n     \"Probe\": \"Found(\u201cmyboard\u201d) AND \"xyz.openbmc_project.cablepresence({Index: 4})\u201d\n```\n\nI will update the design doc with the above new design."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like this got done."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should not be a direct translation.  entity-manager configs should own the class of the device and be limited to use cases we know are real Item.* interfaces."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 91,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 109,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I see no mention of associations that would show what this is connected to.  That will be required."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 109,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 119,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets leave this off until we have use cases.  Riser cards and drives already have support in other applications, and while this might be a good use of it, lets evaluate it when the time comes.  Riser cards and drives have the complexity that they might have both a FRU and a Gpio, so another design is somewhat needed to figure out how to do the \"merge\""
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 119,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I want to get rid of my pile of hacks here:\n\nhttps://github.com/ibm-openbmc/platform-fru-detect\n\nThe drive presence is exposed by GPIOs that are connected to PCA9552s that are are on pluggable cards. There's no way for this arrangement to have a statically declared configuration. This sounds like a step in the direction of enabling my use case in EM?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 119,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Remove."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 129,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Most of these variables are only used in one place.  Please inline them when there's only one use."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 47,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please define your variables in the scope where they're used.  I don't see any of these used in this file, which means they're not really in the interfaces for this translation unit, and could easily be in the"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 33,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this necessary?  Doesn't the RAII objects call this automatically?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 33,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Just for completeness. It would be a no-op."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please remove."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 53,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These kinds of generic things should be done in generic places, not specific to presence daemon."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Use the visitor pattern here."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "there are no dbus interfaces that use int.  This will break when compiled for 64 bit.  Use the visitor pattern we use elsewhere."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering this case isn't exceptional, and expected, should we not use exceptions here?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a blocking IO call, which you shouldn't be doing in an async daemon.  Use async_method_call like others do."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 99,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This name kind of implies that this will be called when an interface is removed, when in reality its registering the onInterfaceRemoved callback.  Maybe setupInterfaceRemoved?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There's only one use of this, can we just inline this callback to call the method that needs called?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 139,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "There are actually two use of this callback. The first is the async_method_call(\"xyz.openbmc_project.EntityManager\", \"/\", \"org.freedesktop.DBus.ObjectManager\", \"GetManagedObjects\"); and the second time is the matcher. Therefore, I think it is better to factor out the callback function definition to avoid duplicated code."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can this just be rolled into the primary callback (inline once the previous comment is done)  Having two levels of lambda is really tough to read, when this is doing something relatively simple."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 148,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 156,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we do this in one construction, instead of a construct and move?  Basically, move the constructor arguments into the make_unique call."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 156,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a little odd that this is reentrant.  That means that when configurations change at runtime, this isn't going to restart."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 163,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 172,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, take error_code by value."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 172,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 202,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "use sdbusplus::message::object_path with operator/ to construct this path."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 202,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't look right.  Any new changes made should REPLACE the old config, so I would expect something like\n\ncontroller->removeObject(objectPath);\n\nThen construct the new one.\n\nInterfacesAdded can happen multiple times on a startup."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 204,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't generally something that dbus-sensors daemons publish."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 220,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "want to clarify: your objection here is the publishing of the item interface and not the \"PrettyName\" property.. right?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 220,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Changed to a private interface."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  Shouldn't this be true?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 222,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Chu, correct me if I'm wrong..\n\nbut default state of present is false until the daemon reads a GPIO pin and confirms that the cable (or whatever) is actually present. Then this gets updated to true."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 222,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "That is correct."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I thought the design doc called for this to be interrupts?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "If we're going to support interrupts please make it an option to force polling in the EM config and update the design doc appropriately.\n\nSometimes interrupt support isn't feasible (gpio expander without the interrupt pin connected)"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> If we're going to support interrupts please make it an option to force polling in the EM config and update the design doc appropriately.\n> \n> Sometimes interrupt support isn't feasible (gpio expander without the interrupt pin connected)\n\n\nInterrupt vs polling should not be system specific.  I'm fine if this wants to poll, I was just asking because the requirements explicitly stated interrupts, so maybe that doc is out of date now?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Okay, Chu - can we see if the gpio subsystem (libgpio) can determine whether a pin supports interrupts or not? \n\nPerhaps - best effort to configure interrupts and if that fails then fall-back to polling?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "libgpiod provides api for event wait. However, it doesn't support event wait from multiple lines from different chip. Therefore, using a simple pooling loop here to avoid complexity. I added a comment in the code to explain the pooling loop."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> However, it doesn't support event wait from multiple lines from different chip.\n\nThis isn't correct to my understanding.  take a look at x86-power-control for an example of a async daemon eventing on multiple GPIO lines at once."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 226,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Added a TODO for future improvement."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 240,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 720,
            "sizeDeletions": 0
        },
        {
            "number": 32,
            "revision": "a0ac2b71bd72179e40220bbca4349ae28a0ee110",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/32",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1640137320,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Give more details about the objective of the sensor in commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Mention what are the dbus objects in commit message."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 229,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "This does not look like a good design. To wait for a fixed time to get configuration. \nCan't we detect it as an event? as we do in other sensor classes in repo?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 229,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "IIRC this is detecting new configs for an event. onInterfaceAdded looks like it grabs all the configs via GetManagedObjects then registers a match expression afterwards.\n\nThe delay is effectively waiting for the deluge of configs to stop before proceeding with business logic. \nstartMain(delay....) cancels and restarts a timer with a delay for 10 seconds. On expiration that timer calls the main logic.\nIf a new config is received before 10 seconds the timer is reset.\n\nI personally don't see anything particularly heinous about this approach as it has the effect of spreading out dbus events."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 229,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "We saw a case where there is lag when EM try to push new configs to gpio daemon. I updated the comment with a TODO. I will fix this once I figured out why this is happening."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 131,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 148,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 240,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 720,
            "sizeDeletions": 0
        },
        {
            "number": 33,
            "revision": "e90ddab5816878610f68d261daf5817254912e77",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/33",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1642551211,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 579,
            "sizeDeletions": 0
        },
        {
            "number": 34,
            "revision": "9c1628c0e5064602fb0faf0c13c9ae66abb4e119",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/34",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1642551357,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 187,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 576,
            "sizeDeletions": 0
        },
        {
            "number": 35,
            "revision": "a1f07e226dd61bdde375255985d7b0d339742d0d",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/35",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1642552415,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 577,
            "sizeDeletions": 0
        },
        {
            "number": 36,
            "revision": "072cbd346d345867dfa048a6ee54c11d6897834b",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/36",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1642566392,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this not in the docs repo?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "There is a separate document for design in common (https://github.com/openbmc/docs/blob/master/designs/gpio-based-cable-presence.md) in docs repo. I asked authors to add here documentations for the daemon itself here to show purpose and configuration options.\nProbably that top level design now should be reviewed and some information from this file could be moved there, but I prefer to keep some basics about the daemon here."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 1,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "This doc is more updated compare to the one in the doc repo. I am planing merge this one and update the one in doc."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "This two are not relevant here anymore, but please put the link to docs/designs/gpio-based-cable-presence.md instead."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 15,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You've invented a new interface here without documenting it in phosphor-dbus-interfaces.  Please don't do that.\n\nIf this is really about presence, maybe we should have a separate interface for Inventory.Present?  Right now it appears to be embedded in the Item.\n\n\"GPIOStatus\" doesn't seem appropriate."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I don't like this approach, proposed by Ed too: it seems to be over-complicated and adds lot of unnecessary dbus traffic."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "This approach gives us the ability to expand and support more interfaces in the future. We now uses EM to create the objects with the correct public interfaces. The private interface is hidden under the EM. Ed, would you comment on this as well?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I spoke with Ed offline. We agreed that individual is ok to create private interfaces. However, the interfaces that are used for ipmi needs to be the public interfaces. I like this approach because it gives more flexibility. Please reopen if you think otherwise."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I totally agree with Patrick: there is no such thing as \"private interface\". Especially if you use it in such common repo as dbus-sensors. Any interface should be documented n PDI.\nAnyway, I prefer you to use previous design, where gpio-sensor expose xyz.openbmc_project.Inventory.Item by itself."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I agree that it is better to not use private interface. However, I like this approach because it gives better compatibility for the future project. The original design limits the scope to cable presence. Now, the daemon just reports GPIO status and it is up to EM to Interpret the meaning of the signal. For example, in the future, we might not only report the cable presence but also the device presence via GPIO. Therefore, there is no need to write a \"devicepresence\" daemon. The only thing we need to do will be modifying the EM's config to include that change. Therefore, I think this approach is better. What do you think?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd prefer we create a well-documented phosphor-dbus-interfaces schema then, rather than a private one only known to EM.\n\nWe need to be fairly careful about this because in the past there was a proposal to expose all GPIOs onto dbus and there are significant performance concerns about that.  Generally exposing GPIOs is not a proper abstraction.\n\nIf you're intention is to use this to show presence, why aren't you exposing an Inventory interface already designed to show presence?  Specifically xyz.openbmc_project.Inventory.Item.\n\nIt is fine to me to have an Inventory.Item representing some abstract entity which is not explicitly the full cable and then have EM present the full Inventory.Item (with all the appropriate decorators) for the real cable.  It just means we have different paths and PrettyNames for the two entities."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "If I am getting this correctly, I should be using a public interface to show the gpio state and have EM present the full inventory.item (with all the appropriate decorators). I think that is better. Which public interface do you think is appropriate for the gpio states? By the way, we are only querying the desired gpio stated not all of them. So the performance impact should be minimum."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I should be using a public interface to show the gpio state and have EM present the full inventory.item (with all the appropriate decorators).\n\nYes, mostly.\n\n> Which public interface do you think is appropriate for the gpio states?\n\nI gave one option already.  I'd be open to other proposals.\n\nMy preference is that we do NOT have an interface to express GPIO state.  I think we should be able to encode abstractly what you are representing from this GPIO (ie. presence).\n\n> By the way, we are only querying the desired gpio stated not all of them. So the performance impact should be minimum.\n\nMy concern isn't in your implementation.  I don't expect your cable-presence GPIO to change state very often.  My concern is that we define a xyz.openbmc_project.GPIOPin interface and someone gets the bright idea to represent all their GPIOs over it, since it exists.  I'm not worried about your problem domain being a performance issue; I'm worried about the precedent of exposing GPIOs on DBus getting us into trouble in the future."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Naveen Moses ",
                        "email": "naveen.mosess@hcl.com",
                        "username": "naveenmosess"
                    },
                    "message": "Agree. Exposing all the direct access GPIOS on a DBUS object is not a good idea. but still we might need a GPIO interface to represent special GPIO cases on DBUS. There are some use cases where a GPIO lines cannot be directly accessed. we are working on such use case : https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47952. Here, the BMC needs to access some host GPIO lines via IPMB; Direct access of these GPIOs are not possible. currently there is no accurate or similar dbus interface to represent such GPIOs. So we may need to introduce a new dbus interface for represent GPIO states."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "So Ed, since you are the repo maintainer are you okay with reverting the code back to the original design where this daemon will expose an inventory item with a presence attribute to explicitly indicate whether the cable is present or not?\n\nI'm fine with either approach, looking for direction from the maintainer."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> \"GPIOStatus\" doesn't seem appropriate.\n\nI agreed with this before I read this comment.  \"GPIOStatus\" is something that we can come up with a better name for.\n\n\n> I'd prefer we create a well-documented phosphor-dbus-interfaces schema then, rather than a private one only known to EM.\n--------------\n> Ed, would you comment on this as well?\n\nConsidering that the entire point of this interface is to do entity-manager detection, I guess we could document it, but if there's no users besides entity-manager and dbus-sensors, I'm not super interested in holding up on another review.  FWIW, the difficulty of phosphor-dbus-interfaces reviews being disconnected from code is why EM has so-called \"private\" interfaces in the first place.  If Patrick is ok with the interface in the implementation, I'm sure someone is happy to open the PDI review, but I'm not interested in a PDI review that can't be implemented, as has happened in the past with PDI reviews;  With that said, I'd be happy to be surprised.\n\n> So Ed, since you are the repo maintainer are you okay with reverting the code back to the original design where this daemon will expose an inventory item with a presence attribute to explicitly indicate whether the cable is present or not?\n\n> \n\nI don't see how that can work with the design that we have.  The important parts for me are:\n\n1. Entity-manager has generic interfaces, and doesn't hardcode anything\n2. Entity-manager exposes the devices for all devices managed by the bmc.\n3. dbus-sensors has interfaces that a different implementation could reasonably implement.  Specifically in this example, the device presence could potentially be exposed by say, a sata controller sideband API, so it's not necessarily \"GPIO\" from the bmc perspective, but in theory, a (insert raid controller vendor name here) card could implement the \"presence\" of a device that EM could detect.\n\n> I'm fine with either approach, looking for direction from the maintainer.\n\n\n\n\nMy advice: Change the name.  \"GPIO Status\" just needs changed in a find-replace fashion with \"SlotStatus\".  After that, I htink the design principals I mention above, and patricks concerns of exposing GPIO directly to dbus will be addressed."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "This part is already out of scope of your gpiosensor and should be somewhere in docs/designs."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 51,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I think it is ok to have it documented in both places for completeness."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 64,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "\"PrettyName\" should also present for \"xyz.openbmc_project.Inventory.Item\" interface, unlike of PIM, EM will not add it by itself."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 64,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 93,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "What is \"ipmi obj\"? AFAIK EM do nothing with IPMI."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 93,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 577,
            "sizeDeletions": 0
        },
        {
            "number": 37,
            "revision": "ba76665f6158f8e421bec61c6788edcd0bdf5c0b",
            "parents": [
                "0b207a624f925460797a51974b77b275d4c05e30"
            ],
            "ref": "refs/changes/97/45997/37",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1643406261,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "ed@tanous.net Do you think should we not use private interfaces?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "change the commit title.\n\ngpiopresencesensor: a daemon to detect presence based on GPIO\n\nWant to make it clear that we're not reporting GPIO status but rather we're reporting the presence of something based on GPIO pins."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "In fact, we are reporting the GPIO status. In the new design, its EM's responsibility to take the GPIO status from the private interface and translate that into presence defined signal. This flow gives a better compatibility because it is up to the EM to decide what to do with the signal."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Haven't reviewed the code yet;  I suspect just a simple renaming will make everyone happy, and this can go forward.\n\nSorry for the long lag in replies.  I'm getting many many patches these days, and this fell between the cracks."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: Please add more details here.  The intent is not to expose gpio information.  The intent is to use GPIO information to instantiate knowledge of devices to make entity-manager aware of them, and expose the appropirate user interfaces.\n\nDbus itself is an implementation detail."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 11,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we call this \"GPIOBasedSlotPresence\"?  GPIOStatus is way too generic in this case, and while this daemon might support new interfaces in the future, they need to explicitly be different interfaces, so that if we need to transition the logic from generic daemons to implementation aware daemons, we can do that without effecting every GPIO interface in the system."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See above.  This needs to have the word \"presence\" in it somewhere.\n\nSaid another way, a GPIO based button at configuration level should have nothing in similar with a GPIO based presence signal."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 29,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, this probably doesn't need said in this doc.  This is explicitly documented in the EM config."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 35,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, please include that this is the name in the kernel devicetree.  gpioinfo is just an application for viewing the dt names."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 36,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should be $index."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 60,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, please mention (or at least think about in the design) debounce.  Slot  GPIOS that are expected to have both electrical bounce and mechanical bounce.  Software will need to handle that, and we should at least mention the word \"debounce\" in either the flow or in prose (the details can be hammered out in code)."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 80,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "query : Just wanted to understand significance of inline here ."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 577,
            "sizeDeletions": 0
        },
        {
            "number": 38,
            "revision": "9d8ecec810334c6d6a131c91181982c81a356224",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/38",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1671659698,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 577,
            "sizeDeletions": 0
        },
        {
            "number": 39,
            "revision": "941acb2ea5bbe5fd3944796ba5e18f4640d769bb",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/39",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1672091351,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Meghan Saitwal",
                        "email": "meghan.saitwal@intel.com",
                        "username": "msaitwal"
                    },
                    "message": "nit: \"appropriate\""
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 12,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we reference real, documented interfaces instead of non-documented ones?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 42,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The intent of the GPIO-based Presence Detection daemon design is to use GPIO\ninformation to instantiate knowledge of devices to make entity-manager aware of\nthem, and expose the appropriate user interfaces.\n\nxyz.openbmc_project.SlotStatus is not meant to be public for ipmid."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't know what \"public for ipmid\" means.  There are lots of dbus objects that are unrelated to IPMI.\n\nHow do we make it obvious that this is only to be consumed by entity-manager?  We generally don't allow undocumented interfaces to be exposed between repositories."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "My suggestion would be that we take a look at the connector interfaces in Inventory and add an interface that can be used to represent the \u201cOccupied\u201d state of the connector (you don\u2019t need to use that word)."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 42,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I converted it to https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Item.interface.yaml"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 51,
                    "reviewer": {
                        "name": "Meghan Saitwal",
                        "email": "meghan.saitwal@intel.com",
                        "username": "msaitwal"
                    },
                    "message": "nit: \"mechanical\""
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 51,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this the service name or the interface or both?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Using the same name for both the service and the interface. Please advise if this is acceptable"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 23,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don\u2019t understand your choice of types here. pointer-pointer?\n\nWhy not just auto?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I think it is a typo. Sorry. Will correct."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 581,
            "sizeDeletions": 0
        },
        {
            "number": 40,
            "revision": "146cb89d50323b4d106bb923e8c083015b8861fe",
            "parents": [
                "ece5c86a1260185f5fffd469ea8e994f8b39655c"
            ],
            "ref": "refs/changes/97/45997/40",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1672270176,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 187,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 579,
            "sizeDeletions": 0
        },
        {
            "number": 41,
            "revision": "53be87875649817c254a086d7bf7d4d181eaa3fe",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/41",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1672270186,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 187,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 579,
            "sizeDeletions": 0
        },
        {
            "number": 42,
            "revision": "f5414ef43b885d8b5a56e3bf4196cca93149e408",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/42",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1672461374,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "likelihood"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 54,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "remove one the"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 58,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 85,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "one"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 85,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "namespace should be lower snake case"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "move to cpp file"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 87,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "see comment on line 20"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 8,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "magic number"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "it was easier to do readLine(const std::string& lineLabel) as everywhere it is getting converted into string."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "are you passing statusIfc by value in fn so that you can use std::move here?\nWhy is the approach like this? do we want two std::unique_ptr copies? or can this be solved by shared pointer?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 32,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "see comment in line 20"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "see comment in line 20"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "??"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "what is the purpose of this?\n\nstartUpdateLoop is called from completion handler of timer. Which means timer won't be running when it comes to fn startUpdateLoop."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 52,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "do not pass this pointer to lambdas\nUse weak pointer"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "suggestion \ncan we add more details to log than just printing e?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "so one of the obj in objIfaces fail and we redo the update loop again?\nso if there are 5 obj in objIfaces and 3rd fails we start from 1st again?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 81,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 86,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Question\nwhat exactly is force update's purpose? I am bit confused on the logic."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 86,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "in fn check if pointer is null before using it"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 101,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "why in some places like line 41 and 64 std::move is not used and here std::move is used?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 106,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "is this condition correct?\nremove object if there is no object?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 162,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "??"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 176,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 187,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 589,
            "sizeDeletions": 0
        },
        {
            "number": 43,
            "revision": "2abf08190ec25a97b1b9368da316928485d2e8ca",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/43",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1673485616,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 195,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 606,
            "sizeDeletions": 0
        },
        {
            "number": 44,
            "revision": "c1e7c62e9fb7b72dfc0a534846d73e822328784a",
            "parents": [
                "ead7e927675d28e0e1b7bbc5d47e9bbcdda4da2e"
            ],
            "ref": "refs/changes/97/45997/44",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1673563314,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "There is no mentioning of FaultLedGroup earlier in the doc. Can you explain how this would work?"
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 131,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : Can pollRateDefault be -ve here ..?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What does \"-ve\" mean?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "What do you mean by -ve?"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "I believe -ve is an abbreviation for negative, and the request is what would that mean.   probably better it should be unsigned"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "same as line number 20."
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 52,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "same as line number 20"
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query = can NewRate be -ve here ..?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 8,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Justin Ledford",
                        "email": "justinledford@google.com",
                        "username": "justinledford"
                    },
                    "message": "please use the new path: `/xyz/openbmc_project/inventory`"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 95,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 605,
            "sizeDeletions": 0
        },
        {
            "number": 45,
            "revision": "28ed74a6dcdcb12f1604bbe877dcb6998d85ee07",
            "parents": [
                "6747eba5e06ce8f7b407193410aa7d04eb5b833c"
            ],
            "ref": "refs/changes/97/45997/45",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1675806440,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 610,
            "sizeDeletions": 0
        },
        {
            "number": 46,
            "revision": "e95161fe4502bf4dd0b30d4dd913189c5ca45cd0",
            "parents": [
                "6747eba5e06ce8f7b407193410aa7d04eb5b833c"
            ],
            "ref": "refs/changes/97/45997/46",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1676617587,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 606,
            "sizeDeletions": 0
        },
        {
            "number": 47,
            "revision": "26daf20d02e2a15a24eb616ad1b85b28865a0cc7",
            "parents": [
                "6747eba5e06ce8f7b407193410aa7d04eb5b833c"
            ],
            "ref": "refs/changes/97/45997/47",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1676658463,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 605,
            "sizeDeletions": 0
        },
        {
            "number": 48,
            "revision": "1ae977b6959f88a8f8f4c57776b29f6e7db2d27f",
            "parents": [
                "6747eba5e06ce8f7b407193410aa7d04eb5b833c"
            ],
            "ref": "refs/changes/97/45997/48",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1676659381,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 604,
            "sizeDeletions": 0
        },
        {
            "number": 49,
            "revision": "7633abfcfc1dfa0fffea7715b212431d01389e74",
            "parents": [
                "ec77caa457b5474ab530f4b8b051a9f3dea545a2"
            ],
            "ref": "refs/changes/97/45997/49",
            "uploader": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1676664698,
            "author": {
                "name": "linchuyuan",
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "friendly ping"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "From looking at this, it still hasn't addressed the documented problem of GPIO not being an appropriate abstraction for dbus.  The title of this commit still states \"to report gpio status to dbus\" which is something that is documented as a no-go design pattern in the docs repo.  If you disagree with that, the first step would be to get the docs repo updated, and get general agreement on that.  More likely would be that this needs to be changed into a slot presence daemon.\n\nPlease note, in openbmc vernacular, GPIO is not a sensor, so the name \"gpiosensor\" also needs corrected everywhere.  I commented this earlier.\n\nThis is likely why you haven't seen replies here, because the underlying design problems still haven't been addressed, and fall counter to documented anti patterns, without any discussion of those documented anti-patterns, or why this should be accepted in opposition to them."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please drop \"GPIO\" from the name of the daemon? \"presencesensor\" is enough. Let's not give overly constrained impressions about what are implementation details."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems like a poor overloading of Inventory.Item.  A GPIO isn't an Inventory-Item.  Your GPIO is always \"present\" so the Present property is describing something different than what everyone would naturally expect.  I strongly suggest not trying to overload an existing interface into something more generic than it was intended to be.  This either:\n\n1. Forces everyone to start coding up special behavior to understand your free-form PrettyName strings (which is an anti-pattern).\n\n2. Causes unforeseen side-effects, such as users pondering why they have \"Not Present\" hardware when they interrogate Redfish and get an automatically generated Redfish item from your Inventory.Item."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 45,
                    "reviewer": {
                        "name": "linchuyuan",
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "After reading about https://github.com/openbmc/docs/blob/master/anti-patterns.md#dbus-interface-representing-gpios I think what I need to do is redo this as slot presence daemon instead of gpio presence daemon. For the interfaces, it looks like I am using the Inventory.Item interface incorrectly. Would you suggest what are the correct interface and variables to implement for slot presence? For example, does the follow combination looks correct?\n```\nxyz.openbmc_project.state.decorator.Availability\nxyz.openbmc_project.Inventory.Decorator.UniqueIdentifier\nxyz.openbmc_project.Inventory.Connector.Slot\n```\n\nAvailability is boolean. UniqueIdentifier is the name for the cable (e.g. cdfp). Slot is empty interface indicating this is slot inventory."
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "UniqueIdentifier appears to be intended for UUID/GUID-type information, based on the commit message history, but I don't know why they didn't leverage Common.UUID for that.  You might want to look at LocationCode?\n\nConnector.Slot seems reasonable.\n\nI don't know if Availability or OperationalStatus is more appropriate here.  You'll probably want to look into other usages of both of these if you go that route."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 3,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "where this header is used ...?"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Jeff Lin",
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "If the gpioline is not exist, this daemon will crash with the following message:\n```\nJan 01 00:05:33 qbmc gpiosensor[3995]: terminate called after throwing an instance of 'std::logic_error'\nJan 01 00:05:33 qbmc gpiosensor[3995]:   what():  object not holding a GPIO line handle\n```\n\nCan we check the gpioline is exist or not before request like ADCSensor?\n\nRefer to: https://github.com/openbmc/dbus-sensors/blob/master/src/ADCSensor.hpp#L24"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Ankita Gawade",
                        "email": "ankita.gawade@intel.com",
                        "username": "ankitagawade23"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "also add some error log incase of missing GPIO line"
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "query : wanted to understand in which scenarios this function will return negative values ."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : Wanted to understand why return type is signed int ..?\n        As per my understanding it will return ACTIVE_HIGH ,ACTIVE_LOW etc ..\n        so just wanted understand if any negative return value its returns ."
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Jeff Lin",
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "If this is duplicate check with line 15 in function addInputLine?"
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "is this Header used anywhere ...?"
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "is this Header used anywhere ...?"
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ankita Gawade",
                        "email": "ankita.gawade@intel.com",
                        "username": "ankitagawade23"
                    },
                    "message": "NIT: A simple comment about time unit will be helpful"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "remove this header As Its already included GPIOPresenceSensor.hpp."
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Remove this header as this already inlcuded in \"GPIOPresenceSensor.hpp\""
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ankita Gawade",
                        "email": "ankita.gawade@intel.com",
                        "username": "ankitagawade23"
                    },
                    "message": "extra semicolon ?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Ankita Gawade",
                        "email": "ankita.gawade@intel.com",
                        "username": "ankitagawade23"
                    },
                    "message": "Here also ? is it intentional ?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "is delay can hold negative value ...?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Yung-sheng",
                        "email": "yung-sheng.huang@fii-na.com",
                        "username": "Yung-sheng"
                    },
                    "message": "Is this if statement section to prevent reciving same confg from EM?\nDo you see any chance that EM sned same config twice?"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Yung-sheng",
                        "email": "yung-sheng.huang@fii-na.com",
                        "username": "Yung-sheng"
                    },
                    "message": "In my case, there's possibility gpiosensor reviced same config when AC cycle. \n\nMar 11 00:09:27 roux gpiosensor[677]: New config received /xyz/openbmc_project/inventory/item/PE0_PCIeCard\n.\n.\n.\nMar 11 00:09:30 roux gpiosensor[677]: New config received /xyz/openbmc_project/inventory/item/PE0_Cable\nMar 11 00:09:30 roux gpiosensor[677]: Incomplete config found: sd_bus_add_object_vtable: org.freedesktop.DBus.Error.FileExists: File exists obj = /xyz/openbmc_project/inventory/system/board/astoria/PE0_Cable"
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "line": 169,
                    "reviewer": {
                        "name": "Yung-sheng",
                        "email": "yung-sheng.huang@fii-na.com",
                        "username": "Yung-sheng"
                    },
                    "message": "Done. No question."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "docs/gpio-based-presence-detection.md",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.hpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.gpiosensor.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensor.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOPresenceSensorMain.cpp",
                    "type": "ADDED",
                    "insertions": 194,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 604,
            "sizeDeletions": 0
        }
    ]
}