{
    "project": "openbmc/docs",
    "branch": "master",
    "topic": "rbmc_data_sync",
    "id": "Ic3751c4cd26b75288df25e251549a8194ff2f06c",
    "number": 71039,
    "subject": "design: Add redundant BMC Data Synchronization",
    "owner": {
        "name": "Ramesh Iyyar",
        "email": "rameshi1@in.ibm.com",
        "username": "RameshIyyar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/71039",
    "hashtags": [],
    "createdOn": 1713962031,
    "lastUpdated": 1730077495,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1713962031,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1713962049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713962050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1713962071,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83345/ : FAILURE"
        },
        {
            "timestamp": 1713962138,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1713962596,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713962639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713962639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1713962660,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83346/ : FAILURE"
        },
        {
            "timestamp": 1713967683,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713967720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713967720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1713967741,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/83356/ : SUCCESS"
        },
        {
            "timestamp": 1714017495,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Topic rbmc_data_sync removed"
        },
        {
            "timestamp": 1714017500,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Topic set to rbmc"
        },
        {
            "timestamp": 1714019312,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Topic rbmc removed"
        },
        {
            "timestamp": 1714019316,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Topic set to rbmc_data_sync"
        },
        {
            "timestamp": 1714019751,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1714022160,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1714051597,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1714051782,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1714053069,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1714054118,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1714054147,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1714054147,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1714054148,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1714054319,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/83434/ : SUCCESS"
        },
        {
            "timestamp": 1714095571,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(11 comments)"
        },
        {
            "timestamp": 1714163568,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1714380757,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4:\n\n(14 comments)"
        },
        {
            "timestamp": 1714426284,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1714437416,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(10 comments)"
        },
        {
            "timestamp": 1714447660,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1725334742,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729818321,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729821986,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8530f68941d25a6a16c6399b1ad0970f08dce638",
            "parents": [
                "44f3de929bbee0dbacd024b9724fe72817fd1f48"
            ],
            "ref": "refs/changes/39/71039/1",
            "uploader": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "createdOn": 1713962031,
            "author": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Please review the design proposal data synchronisation for the redundant BMC."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant_bmc_data_synchronisation.md",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 244,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "6262fa19c212fc74bdc50778e3fbafb7f0cc3c31",
            "parents": [
                "44f3de929bbee0dbacd024b9724fe72817fd1f48"
            ],
            "ref": "refs/changes/39/71039/2",
            "uploader": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "createdOn": 1713962596,
            "author": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 244,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "c9ef074570cb0f8c2343ac6af5ac0db85f469983",
            "parents": [
                "44f3de929bbee0dbacd024b9724fe72817fd1f48"
            ],
            "ref": "refs/changes/39/71039/3",
            "uploader": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "createdOn": 1713967683,
            "author": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "nit: access to"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "backup BMC also able to pause redundancy if active goes for reboot?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Either BMC will have the capability to pause synchronization/redundancy, as both the rbmc and data_sync daemon operate on both BMCs. Each BMC will be equipped to retrieve the status of the sibling BMC via heartbeat signals, as detailed in the redundant BMC design documentation."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "is there any way to know if all the data b/w active and passive in sync already\nso that full sync can be skipped during failover?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "The full sync is triggered from the new Active BMC to the old Active BMC, which means there's a possibility of data alteration during failover.\n\nRegarding your initial inquiry, rsync utilizes modification date/size or checksum-based synchronization, ensuring it refrains from syncing data if it's already consistent."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "ok"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Maybe worth mentioning if an app on the passive cares that it had data synced from the active it would need to be restarted or have inotify watches on its data.  Maybe phosphor-logging is the only one?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Yeah I Agree, Its good to mention for awareness. \n\nI would like to have design to address this impact with some solution but, it would be enhanced in the future."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "type": "ADDED",
                    "insertions": 231,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 244,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "de644f90a5f06631413059c9efc68fc2bae97b02",
            "parents": [
                "44f3de929bbee0dbacd024b9724fe72817fd1f48"
            ],
            "ref": "refs/changes/39/71039/4",
            "uploader": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "createdOn": 1714054118,
            "author": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Thanks Andrew's :) \n\nI attempted to convey my perspective on your comments. Please inform me if any part is unclear, and I'll be glad to refine the statements in the document accordingly."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Ramesh - the general gist of my comments is far more detail is required for this document to be useful to the community. Without the detail there is no way to establish whether what your proposing is something other community members can leverage, as there's no way to establish whether your set of constraints is disjoint from anyone else's.\n\nYou seem to have your own reasoning happening behind the scenes that's not yet unpacked in the text - please make sure to provide the details for all the concerns that your proposal rests on."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Hi Andrew,\n\nThank you for your feedback and detailed comments. I'll ensure to incorporate all the necessary details into the design document."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I apologize for not making much progress on the documentation yet, as I've been focused on the POC for the design. I'll add more details and share references in the coming months."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What errors are we considering here? And when?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "There might be a few scenarios where external network or host communication could fail, prompting an attempt to initiate a failover and switch roles.\n\nDoes it helps you? I will rephrase it with some more details."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "More details please. Enumerating the list of error conditions under consideration would be helpful."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack what is intended by 'as needed'?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I believe I duplicated my statement with \"when necessary\" and \"as needed\"; I'll rephrase it. Essentially, I aimed to clarify that a full sync should occur only when required.\n\nare you looking for some more details?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What are the conditions for when a full sync is required?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack what you mean by 'immediate sync'?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Whenever an application operating on the Active BMC updates its data and requires immediate synchronization with the Passive BMC, we can employ the \"immediate sync\" type. I'll include definitions for these terms in the glossary."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 87,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So you have some slack in the proposal - ultimately you require consistency of state between the active and passive BMCs at the point that the passive BMC transitions to active. However, that's likely also the most inconvenient point in time to finalise the consistency, mainly because the transitions is presumably occurring because the active BMC has failed in some manner. At that point if there are any inconsistencies, chances are they cannot be resolved. So there's the happy case, where consistency has been achieved prior to the active BMC failing, but then there are a couple of unhappy cases:\n\n1. The passive BMC configuration is self-consistent but outdated relative to the state of (what was) the active BMC\n2. The passive BMC configuration is not self-consistent, due to a failure of the active BMC during a synchronisation to the passive BMC.\n\nThe second is essentially not possible to recover from automatically without a more drastic action to roll it back in some way that at least makes the configuration self-consistent but outdated (1). A problem I see is that there's not really discussion of checkpoints/transactions to provide 1 in order to recover from 2. The proposal mostly considers the happy cases."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Here be bugs \ud83d\ude0a"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Sorry, I could not get your points, could you please elaborate."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 92,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "There's no discussion of what you're doing to avoid conflicts or ABA races. You really should unpack what constraints your leaning on to avoid them, if you're going to claim that they're not something you will need to deal with."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Had some questions on this one too."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Yeah noticed. I would to prefer track this comment in the respective doc."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "How are you handling transaction-style updates where multiple files must be updated together? Is this a problem you are concerned about?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "If multiple applications update their data simultaneously, I considered initiating multiple transactions by utilizing inotify and rsync. \n\nHowever, I'm unsure if you're referring to a scenario where multiple files are updated together for the same process and need to be synchronized in the same order. If this is what you mean, we haven't encountered such a use case yet. In that case, we could enhance this design to sync in order if necessary by specifying the order details in the configuration.\n\nDifferent thoughts?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> However, I'm unsure if you're referring to a scenario where multiple files are updated together for the same process and need to be synchronized in the same order. If this is what you mean, we haven't encountered such a use case yet.\n\nWhat use-cases are you considering? You need to enumerate them in this document if you're going to rely on that argument.\n\nPlease be specific, don't write in the abstract. Details are important in distributed systems."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What happens if a failure occurs half-way through synchronisation? Does the system need to be resilient to this (I would suggest yes)?\n\nTLA+ and TLC would be quite helpful here."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "> What happens if a failure occurs half-way through synchronisation? Does the system need to be resilient to this (I would suggest yes)?\n\nIf our retry attempts continue to fail, we must disable redundancy as indicated in line 120.\n\nI think rsync stores its data in a temporary file until the transfer is complete, after which it moves it to the original file. Do you see it differently?\n\n> TLA+ and TLC would be quite helpful here. \n\nI'm not familiar with this topic either, but I'm happy to add it. Could you provide more context or details about what you're referring to?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> If our retry attempts continue to fail, we must disable redundancy as indicated in line 120.\n\nWho's retrying and why? How are they retrying? Worked examples would be helpful (though a TLA+ specification would be better :) )\n\n> > TLA+ and TLC would be quite helpful here. \n>\n> I'm not familiar with this topic either, but I'm happy to add it. Could you provide more context or details about what you're referring to?\n\nSure. The best way to learn TLA+ that I've found is this website:\n\nhttps://www.learntla.com/\n\nA good entry-point to understand how it helps is the [Conceptual Overview](https://www.learntla.com/intro/conceptual-overview.html#chapter-overview)"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "rsync only uses a temporary file for the transfer of one file.  If multiple files need to remain consistent with each other some other (higher level) mechanism is required.\n\nAlso not mentioned is how you avoid starting synchronization in the middle of a local update (inotify can tell you a file that was open for write was closed (possibly modified) but not snapshot/keep consistent contents from a future write until you have read it)"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Hi Milton,\n\nThank you for your review.\n\nWe are currently working on a proof of concept for this design, and addressing this issue is one of the key objectives. We will provide further updates to the design accordingly."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What's the behaviour if data syncronisation is disabled part-way through a sync?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I'd vote we don't allow redundancy to ever be enabled until a full synch is first done. So in this case, the passive BMC can not be available as a redundant resource until we do a full synch."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Yes, it's advisable to perform a full sync and then enable redundancy if a failover is triggered during the sync process and fails due to a reset or reboot of the old Active BMC.\n\nFailover could manifest as either a normal or forced occurrence. During a normal failover, we could allow the ongoing sync to finalize. However, if it's a forced failover, conducting a full sync becomes imperative.\n\n@Matt, Adding you to share your thoughts as well."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "if a sync were in progress, then then it would corrupt data used by the active bmc.   however, if we require the sync to complete before becoming redundant then the issue is avoided by rejecting the rsync when transitioning to active."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "The failover will be initiated via the passive BMC, and in some cases the Active BMC will no longer be available. I don't think we can guarantee a full synch will be available, unless this is more the AFO path (where both BMC's are in a good state)?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 129,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "You're correct; we can't ensure that a full sync will succeed in the presence of network issues between BMCs. Let me rephrase that."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I'm hoping in most cases everyone can just use a default of some sort for this."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 149,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I've introduced the option for separate RetryAttempts per data point, but we can further refine this feature if necessary.\n\nI'll modify it to use a common RetryAttempts setting, and I also think incorporating a RetryInterval would be beneficial to prevent immediate retries."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 155,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If you need to sync both ways this suggests that BMCs in each role are updating the files concurrently. How do you deal with conflicts?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 155,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "What I'm attempting to explain here is that when an application running on both BMCs updates its data in separate files (e.g., error logs), we label it as \"Bidirectional\" for monitoring purposes.\n\nActually, I need to find some different terms rather than specifying \"Bidirectional\". It confusing I guess :)\n\nAny suggestion?\n\n> How do you deal with conflicts?\n\nWe haven't encountered any scenarios where the same file is updated on both sides, so this design doesn't propose a solution for that situation.\n\nI believe rsync lacks support for handling conflicts, so we'll require a locking mechanism such as DLM (Distributed Lock Manager) or something similar."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 155,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> We haven't encountered any scenarios where the same file is updated on both sides, so this design doesn't propose a solution for that situation.\n\nYou must enumerate all scenarios you're considering otherwise there's no way for the community to establish whether or not your set of constraints is appropriate for any other member's own problems. Without that information it's not a benefit to the community, and you might as well keep this all downstream?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 207,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you elaborate on this? What specific problems lead to this conclusion?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 207,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "All OpenBMC application persisted files and directories are stored in /var, which is persisted and has a separate logical volume (/dev/mmcblk0p6 on /var type ext4 (rw,relatime)). However, we only need to sync specific persisted files and directories.\n\nIf we aim to synchronize these chosen persisted files and directories, we must relocate them to a separate logical volume to replicate them through DRBD, as DRBD replicates the entire volume.\n\nPlease let me know if require additional details on this aspect in the design document."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 207,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> However, we only need to sync specific persisted files and directories.\n\nWhich files? Which directories? Can you please enumerate them?\n\n> we must relocate them to a separate logical volume to replicate them through DRBD\n\nWhy is this not feasible? You can symlink them into the right places?\n\nRegardless, please make sure to elaborate in the document itself, not only in replies to my comments."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack this? What specific problem did you encounter?"
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "DRBD offers two modes: Single Primary mode, where only one node can access the filesystem at any given time, even for reading; and Dual Primary mode, where both nodes can access the filesystem concurrently. However, for Dual Primary mode, a clustered filesystem like GFS/OCFS is necessary, as it employs DLM (Distributed Lock Manager) for locking. Therefore, we'll need to use GFS/OCFS filesystem instead of ext4.\n\nPlease let me know if require additional details on this aspect in the design document."
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Please let me know if require additional details on this aspect in the design document.\n\nYes, I need additional details. Please enumerate what applications violate the constraint you have here (that you can't simulataneously read on both DRDB volumes) and why this is required."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant_bmc_data_synchronization.md",
                    "type": "ADDED",
                    "insertions": 237,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 250,
            "sizeDeletions": 0
        }
    ]
}