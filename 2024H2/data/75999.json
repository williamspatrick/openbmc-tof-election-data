{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "topic": "LeakDetection",
    "id": "I366700a523620b8f891298f544ad46ba175a1d14",
    "number": 75999,
    "subject": "add EM configuration for GPIOLeakDetector",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/75999",
    "hashtags": [],
    "createdOn": 1732260694,
    "lastUpdated": 1734462459,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1732260694,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1732260727,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732260727,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1732260834,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94978/ : FAILURE"
        },
        {
            "timestamp": 1732292906,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1732301321,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1732302018,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732302037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732302037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1732302474,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95022/ : SUCCESS"
        },
        {
            "timestamp": 1732303587,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732303622,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732303622,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1732304023,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95025/ : SUCCESS"
        },
        {
            "timestamp": 1732487153,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732487195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732487196,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1732487597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95108/ : SUCCESS"
        },
        {
            "timestamp": 1732581120,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(4 comments)"
        },
        {
            "timestamp": 1732587189,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1732588527,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1732641558,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1733336687,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1733385662,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733385670,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1733385700,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733385700,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1733385744,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 6: Commit message was updated."
        },
        {
            "timestamp": 1733385770,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733385770,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1733385773,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95876/ : ABORTED"
        },
        {
            "timestamp": 1733385961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95878/ : FAILURE"
        },
        {
            "timestamp": 1733420351,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Topic set to LeakDetection"
        },
        {
            "timestamp": 1733445016,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 7: Patch Set 6 was rebased on behalf of Jagpal S Gill <paligill@gmail.com>\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733445039,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733445039,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1733445561,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95971/ : SUCCESS"
        },
        {
            "timestamp": 1733953390,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1734028839,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734028853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734028853,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1734029261,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96506/ : SUCCESS"
        },
        {
            "timestamp": 1734117888,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734117921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734117921,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1734118325,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96635/ : SUCCESS"
        },
        {
            "timestamp": 1734135684,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734136315,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734136535,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734136953,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734137038,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734137109,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1734338875,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734338905,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734338906,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1734339308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96719/ : SUCCESS"
        },
        {
            "timestamp": 1734375065,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 10:\n\n(4 comments)"
        },
        {
            "timestamp": 1734375484,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1734462041,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734462055,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734462055,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1734462459,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96844/ : SUCCESS"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "4eddb113268b10fc2ae8152a08b401e48ec21dcc",
            "parents": [
                "9d01e5ea679050cec1e38d5349ff5e63e39b35eb"
            ],
            "ref": "refs/changes/99/75999/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732260694,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please name the file `GPIOLeakDetector`"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do the entity-manager schema files actually expose these as proper enumerations or are they going to use the short strings (eg. \"ActiveLow\" or \"xyz.openbmc_project.Configuration.GPIOLeakDetector.PinPolarity.ActiveLow\")?  If they're going to use short-strings, you shouldn't specify them as enums but as strings because anyone using the generated client-bindings will get enum-parsing exceptions if they try to use this code."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "1. Initially, I defined the schema using an enum with ShortStrings, for example:\n\"enum\": [\"RackPowerOff\", \"ChassisPowerOff\"]\n2. However, after defining configuration in PDI, I updated the enum to use the PDI namespace long string, for example:\n\"enum\": [\"xyz.openbmc\\_project.Configuration.GpioLeakDetector.DetectorDefaultAction.RackPowerOff\", \"xyz.openbmc\\_project.Configuration.GpioLeakDetector.DetectorDefaultAction.ChassisPowerOff\"]\n\nI agree that if we choose option #1, the PDI type should be string rather than enum. I considered the following pros and cons of using #2.\nProbable Pros:\n* Using PDI namespace enum values in the schema can help implicitly keep EM schema and PDI in sync, especially if someone is not using generated bindings.\n* If one uses generated bindings for getting EM configuration, they will get enum values rather than arbitrary strings.\n\nProbable Cons:\n* One could reason that strong coupling between components is not desirable and defining PDI as a string is a better approach, for example, to avoid updating PDI/Configuration/* every time there is a new enum value in EM.\n\nUltimately, it's a choice we have to make. For now, I'm going with option #2 unless there are any strong objections or specific feedback on https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75734."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 18,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Based on the discussion on discord https://discord.com/channels/775381525260664832/867820390406422538/1317305700271263816, changing this enum type to string."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "`self.PinPolarity`."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GpioLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GpioLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 124,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "bb45e5f420e0a5d89c00de436a1b704f176efce2",
            "parents": [
                "9d01e5ea679050cec1e38d5349ff5e63e39b35eb"
            ],
            "ref": "refs/changes/99/75999/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732302018,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 125,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "f482c79147456f701fd82054755d636e3e8c92fa",
            "parents": [
                "9d01e5ea679050cec1e38d5349ff5e63e39b35eb"
            ],
            "ref": "refs/changes/99/75999/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732303587,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "0d609b9a5a2cf9a7c9d4180e1a38139e12d080dc",
            "parents": [
                "9d01e5ea679050cec1e38d5349ff5e63e39b35eb"
            ],
            "ref": "refs/changes/99/75999/4",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732487153,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "New features seem like the wrong place to start broaching the \"EM config should use\" PDI architectural thing.  For leak detection, lets just add it similar to how every other new feature as been handled (including intrusion detection, which is darn close to identical to this) and get it merged.  If we want to then AFTER or treat this patch as aspirational to go chase the PDI stuff down and sort out all the consistency issues, we can, but we shouldn't treat concrete interfaces as blocking for leak detection.\n\nThe reality is that today the EM codebase can't produce concrete types for a given interface, and can't produce typed enums.  Until it can, we should avoid checking in things like this."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> New features seem like the wrong place to start broaching the \"EM config should use\" PDI architectural thing\n\nI think this is the opposite (and this isn't the first one that has been proposed in the last few weeks).  This was to allow other daemons to consume EM configs in a type-safe way, not for EM to publish configs.\n\n> The reality is that today the EM codebase can't produce concrete types for a given interface, and can't produce typed enums. Until it can, we should avoid checking in things like this.\n\nI fully expected this to be a concern here and hoped the EM maintainers would weigh in.  EM _can_ create typed enums like this, because a dbus enum is just a string, but it requires the strings to be fully qualified strings and EM typically makes \"short names\"."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > New features seem like the wrong place to start broaching the \"EM config should use\" PDI architectural thing\n> \n> I think this is the opposite (and this isn't the first one that has been proposed in the last few weeks).  This was to allow other daemons to consume EM configs in a type-safe way, not for EM to publish configs.\n> \n> > The reality is that today the EM codebase can't produce concrete types for a given interface, and can't produce typed enums. Until it can, we should avoid checking in things like this.\n> \n> I fully expected this to be a concern here and hoped the EM maintainers would weigh in.  EM _can_ create typed enums like this, because a dbus enum is just a string, but it requires the strings to be fully qualified strings and EM typically makes \"short names\".\n\nEnums is one concern.  For that neither of my immediate ideas to fix this seem like a good idea.\n1. Break all existing configs, and require a type be assigned to every string entry representing an enum.  This requires config writers to be dbus experts, which we should avoid if we can.\n2. Add a static entry->type map of all possible types.  Considering even just getting a concrete accounting of the json configs has been difficult, this seems hard and would make forked-development more difficult, as every new type would require a code change.\n\nAny other options for enums I'm not thinking of?\n\n\nThe other larger concern is integer/string types.  EM will happily publish a string, a float, and a uint64 from the same interface, property name.  It loads everything through a variant to coerce to the type the reactor is looking for.  I'm not really sure how to handle that in a reactor if this file defines things as concrete types.  FWIW, in Jagpals leak detector daemon I see he found the same problem.\n\nYes... this design is insane.  If we have ideas on how to make it better absolutely, I'm in (will probably help), but i haven't had an idea that didn't break the world or require a mapping of all possible types."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Any other options for enums I'm not thinking of?\n\nYou can use the schema to specify valid values for the strings.  I thought that is what Jagpal attempted to do in the EM repository.\n\njson-schema also supports `enum` so you can just list the allowed values.\nhttps://github.com/openbmc/sdbusplus/blob/2a12ae12455bfa1cdf92dff21c16757b1f126c8f/tools/sdbusplus/schemas/events.schema.yaml#L72\nhttps://json-schema.org/understanding-json-schema/reference/enum\n\n> Break all existing configs, and require a type be assigned to every string entry representing an enum. \n\nI don't know why we have to break existing configs if we do this for new configs (and backed by the schema in EM).  Existing configs / schemas can be refactored over time.\n\n> This requires config writers to be dbus experts, which we should avoid if we can.\n\nWe already require dbus interface names sprinkled through the configs.  I'm not sure how much of an \"expert\" we need them to be if we use the json-schema to specify \"this property must be one of these values\".  The errors from json-schema are fairly straight-forward.\n\n> The other larger concern is integer/string types. EM will happily publish a string, a float, and a uint64 from the same interface, property name. It loads everything through a variant to coerce to the type the reactor is looking for. I'm not really sure how to handle that in a reactor if this file defines things as concrete types. FWIW, in Jagpals leak detector daemon I see he found the same problem.\n\nYes, I recognize this problem.  What I've been trying to do here is to make the dbus type the expected type from entity-manager, but I know that isn't a solid requirement and can easily be changed by someone slipping in a \".0\" into their config.  I think those configs can just be fixed as we find them until we get a better solution.\n\nI wrote this already in the README under Configuration to make it clear that what is found here is just for EM compatibility and shouldn't be taken as a best-practices.  https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/Configuration"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "The proposed schema definition for GPIOLeakDetector uses the fully qualified enum names from PDI. Please refer to https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75734.\n\nAlso, i am updating the PR for LeakDetector to use the PDI auto-generated code for EM configuration get/updates. Change has been pushed, pending testing."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "LeakDetector latest patch uses PDI generated bindings to get EM configuration now."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> You can use the schema to specify valid values for the strings.\n\nThis doesn't solve the problem.   It just forces the EM config files to include the DBus namespace, which given the design goal of \"Config file authors aren't DBus experts\" somewhat defeats the point as the patchset is written."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> New features seem like the wrong place to start broaching the \"EM config should use\" PDI architectural thing.\n\nDidn't see this answered anywhere."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> LeakDetector latest patch uses PDI generated bindings to get EM configuration now.\n\n\n\nTo be clear, this is great progress, now just need to figure out how to get those EM interfaces created properly in EM (not by injecting PDI stuff into config files)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Based on the discussion on discord https://discord.com/channels/775381525260664832/867820390406422538/1317305700271263816, changing this enum type to string.\n\nMarking this comment as resolved because now EM config schema for GPIOLeakDetector doesn't use fully qualified (with PDI namespace) enum values. They are defined as regular enum values and PDI have type defined as string."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "EM is not currently capable of producing these style of enums with a namespace.  Not really sure what to do here, but if we're really going to start modeling the EM configuration namespace here, we shouldn't start with a new feature, we should start with something that exists."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I have used fully qualified enum values (with namespace) in the json schema https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75734."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Based on the discussion on discord https://discord.com/channels/775381525260664832/867820390406422538/1317305700271263816, changed this enum type to string."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same here."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I have used fully qualified enum values (with namespace) in the json schema https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75734."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Which is incorrect.  Config files are written by humans not familiar with DBus or PDI, they should not include PDI internals in the config file itself."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Based on the discussion on discord https://discord.com/channels/775381525260664832/867820390406422538/1317305700271263816, changing this enum type to string."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This could use some more description."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 40,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 77,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "66712920918fa4a11920b6c316f31a51cd75756f",
            "parents": [
                "199c6c3dd27df14c9884086c025c767ff2efc3b1"
            ],
            "ref": "refs/changes/99/75999/5",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733385662,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 168,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "7d679db726290aeeba257219b3995697ce631308",
            "parents": [
                "199c6c3dd27df14c9884086c025c767ff2efc3b1"
            ],
            "ref": "refs/changes/99/75999/6",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733385744,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "533afefbf8c9c1cac85e0db0dc57b33a99634105",
            "parents": [
                "18b5dd4757b8c96e028e80efc5843d635ef095da"
            ],
            "ref": "refs/changes/99/75999/7",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733445016,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "@Ed @Matt @Zhikui I have addressed and replied to your comments. Can you please let me know if you have any other comments?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "0cdd5a903d4e6ff5d94cc5e25861961135a72f61",
            "parents": [
                "3eb0180161fc42a91fd2197f60695da1541e8083"
            ],
            "ref": "refs/changes/99/75999/8",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734028839,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "bd7a6fb93299087a67b4ed87b84f6a2bb35e5a12",
            "parents": [
                "3eb0180161fc42a91fd2197f60695da1541e8083"
            ],
            "ref": "refs/changes/99/75999/9",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734117888,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 51,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  This isn't in your other patchset, and seems really odd to describe hardware?  Can we change this to describe what the behavior is, rather than describing systemd internals?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "line": 51,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "My patch-set on Dec 13th (in EM and dbus-sensors) was changed to reflect this. The intent is to have two generic services based on severity level which can accept parameterized detector name (https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/31/src/leakdetector/LeakDetector.cpp#18).\nThis change was made in response to @Patrick's comment \"Why do we have static targets here? Don't we need them to have some kind of position identifier?\"\nfrom https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/34150a60_aa2379d9/"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/Common/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/Common.interface.yaml",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 152,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "9447418561c2d6e05fb2b3dd580fa9dfa6602e62",
            "parents": [
                "3eb0180161fc42a91fd2197f60695da1541e8083"
            ],
            "ref": "refs/changes/99/75999/10",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734338875,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 96,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "9a09dc3e3e3a3a576a6c4fda47a340d1dae00a44",
            "parents": [
                "3eb0180161fc42a91fd2197f60695da1541e8083"
            ],
            "ref": "refs/changes/99/75999/11",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734462041,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/GPIOLeakDetector/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Configuration/GPIOLeakDetector.interface.yaml",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Configuration/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 95,
            "sizeDeletions": 0
        }
    ]
}