{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "topic": "LeakDetection",
    "id": "I1b4f16963e6096f30484c4a6df471e64ed24448b",
    "number": 75461,
    "subject": "add async fd sender receiver for coroutines",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/75461",
    "hashtags": [],
    "createdOn": 1729707845,
    "lastUpdated": 1732645906,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1729707845,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729707865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729707865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729708390,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93612/ : SUCCESS"
        },
        {
            "timestamp": 1729708551,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Topic set to LeakDetection"
        },
        {
            "timestamp": 1730708670,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1730946517,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 2: Patch Set 1 was rebased on behalf of Jagpal S Gill <paligill@gmail.com>\n\nCopied Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR **changekind:TRIVIAL_REBASE** OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730946538,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730946538,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1730947063,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94158/ : SUCCESS"
        },
        {
            "timestamp": 1731433265,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased\n\nCopied Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR **changekind:TRIVIAL_REBASE** OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731433292,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731433292,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1731433847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94374/ : SUCCESS"
        },
        {
            "timestamp": 1731448986,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(7 comments)"
        },
        {
            "timestamp": 1731782830,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731782885,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731782886,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1731782926,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94559/ : FAILURE"
        },
        {
            "timestamp": 1731783283,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 5: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731783321,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731783321,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1731783360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94561/ : FAILURE"
        },
        {
            "timestamp": 1731783365,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 6: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731783405,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731783406,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1731783447,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/94562/ : FAILURE"
        },
        {
            "timestamp": 1731783600,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 7: Patch Set 6 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731783631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731783631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1731783633,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 7:\n\n(7 comments)"
        },
        {
            "timestamp": 1731784166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94563/ : SUCCESS"
        },
        {
            "timestamp": 1732551782,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(7 comments)"
        },
        {
            "timestamp": 1732564653,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732564663,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 7:\n\n(7 comments)"
        },
        {
            "timestamp": 1732564695,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732564695,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1732565233,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95192/ : SUCCESS"
        },
        {
            "timestamp": 1732567101,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8: Code-Review+2"
        },
        {
            "timestamp": 1732567156,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as 2a12ae12455bfa1cdf92dff21c16757b1f126c8f"
        },
        {
            "timestamp": 1732568398,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732569744,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732582842,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732586996,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732588014,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732641806,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732643888,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732644291,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1732645906,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "38c1755013646cf5559126dc29b99d036d02e7ec",
            "parents": [
                "578b9733d30bb03015715932e9f64d11416655ca"
            ],
            "ref": "refs/changes/61/75461/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729707845,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "a dbus library doesn't seem like the right place for this, given that we already have code for dealing with dbus fds that don't require exposing raw apis like this.\n\nThis commit message is also once sentence, so I'm not really going to try to guess why you're adding it.  Lets get written down what you're trying to accomplish, and we can go from there, but I really suspect that this isn't the right place for this generic, non dbus specific code."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ideally either:\n   1. stdexec would handle sd_events\n   2. we would have a separate library to make sd_events async.\n\n(1) isn't the case today and isn't likely to be the case.\n(2) would require we split out a bunch of stuff around stdexec into a separate library that sdbusplus could build on top of, since sdbusplus also needs to handle some sd_events async code.\n\nI know there is sdeventplus; maybe this could live there.  We already have some existing sd_event and timer support in this library, so I don't think leveraging that was a big stretch.  It seems like fairly minor code that I'm relatively ok with it living here for the time being until this space matures more."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> This commit message is also once sentence, so I'm not really going to try to guess why you're adding it.\n\nAdded some more details to the description."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Could this have been addressed before merge?  I find it unlikely that we'll ever clean this up, and doing this same pattern of allowing things to rely on classes put in the wrong location in the past (timers, cough) has caused the project pain.  How can we follow up to make sure that this will get moved to stdexec in the future?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What would you like addressed?\n\nI don't think stdexec would ever support sd-event directly; stdexec is intended to be much more portable than that."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That a generic FD object isn't really an interface a dbus library should be publishing.  If we want to support sd-timer, we have classes for that that can be added to without having to expose a primitive object."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Which other repository do you feel this belongs in?\n\nsdbusplus has had code for interfacing with sd_event for a long time (even before the async code).  Someone added a 'Timer' class about 6 years ago now.  When I added the async code, I added 'wait_for' (an async equivalent to Timer) because it was necessary for porting similar daemons.\n\nThe code in this commit might seem large but it is almost all boilerplate that stdexec requires for creating a send/receiver; there ends up being only about 3 real lines of code that aren't already trivially implemented on top of the existing sd_event support.\n\nhttps://github.com/openbmc/sdbusplus/blob/master/src/async/fdio.cpp#L7-L15\n\nI agree this \"isn't dbus\" but sd-bus itself is built on top of sd-event and we have to support sd-event anyhow.  Maybe you could argue that this belongs in sdeventplus, but it would be significantly more complex to try to spread the event loop implementation across both of these repos.  I don't really see the benefit of that."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Which other repository do you feel this belongs in?\n\nstdplus already has an FD so that might be a good place to start (or at least ask William what his opinion is).  I'm not sure that's not the overall right place, but at least there it doesn't duplicate things.  std::exec seems like the overall right place.  Has that topic been broached?\n\n> \n> sdbusplus has had code for interfacing with sd_event for a long time (even before the async code).  Someone added a 'Timer' class about 6 years ago now.  When I added the async code, I added 'wait_for' (an async equivalent to Timer) because it was necessary for porting similar daemons.\n> \n> The code in this commit might seem large but it is almost all boilerplate that stdexec requires for creating a send/receiver; there ends up being only about 3 real lines of code that aren't already trivially implemented on top of the existing sd_event support.\n> \n> https://github.com/openbmc/sdbusplus/blob/master/src/async/fdio.cpp#L7-L15\n> \n> I agree this \"isn't dbus\" but sd-bus itself is built on top of sd-event and we have to support sd-event anyhow.  Maybe you could argue that this belongs in sdeventplus, but it would be significantly more complex to try to spread the event loop implementation across both of these repos.  I don't really see the benefit of that.\n\n\nMaybe that's the distinction?  This object wasn't really meant to be part of the public interface, and that could just be fixed to not be published?  If all the was exposed in the public interface was sd-event, and related objects, that seems fine and reasonable.  As written, it's being used in the public interface to read gpio.  Needing sdbusplus to read a gpio seems like a design anti-pattern."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> std::exec seems like the overall right place. Has that topic been broached?\n\nI don't agree that std::exec is the right overall place.  They're focused mostly on getting `std::exec` into C++26 and as a reference implementation.  Supporting assorted io frameworks (like sd-event) seems way outside their scope.\n\n> As written, it's being used in the public interface to read gpio. Needing sdbusplus to read a gpio seems like a design anti-pattern.\n\nI'm not really following this.  sd-event already has handling for files.  This commit is enabling that to be used.  It has nothing specifically related to GPIOs; it could just as easily be used as a replacement for the boost socket monitoring stuff in bmcweb."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "From Jagpals patch here: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329\n\n// Wait for the fd event for the line to change\nco_await sdbusplus::async::async_fdio(ctx, lineFd);\n\nearlier in the file, Line FD is a gpio:\nlineFd = line.event_get_fd();\n\nIt's being used to read GPIO events, and based on the timing, seems to be why this patch exists (maybe there's another usage?)\n\n> it could just as easily be used as a replacement for the boost socket monitoring stuff in bmcweb.\n\nAs intrigued as I am at this thought, it's unrelated to this patch, so lets discuss somewhere else."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Yes, he wrote this to be able to use it in the gpio code.  As part of the gpio handling you need to be able to monitor a file descriptor.  But there isn't anything here that is GPIO specific.  It's just exposing existing sd-event support for monitoring a fd in an async way."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "The other use-case for this code is in cable-monitor which is going to watch for config file changes in xxx/cable.d/* dir. I am already using the last version of this API in there."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "caa2b3b22a5f279512c9c7e597b45c816399e9ea",
            "parents": [
                "17e54abc8c47858e4162ec1de4af4bb6769cbd16"
            ],
            "ref": "refs/changes/61/75461/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1730946517,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "8034687031432945b93361587c82e1c8617256c1",
            "parents": [
                "fe1ebd43decbc6c9aea9aaa49581dc6cc90eb32f"
            ],
            "ref": "refs/changes/61/75461/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731433265,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you really want these to be \"one-shot\" or do you want something like the async::match where you can call `next`?  It seems like you're potentially doing a decent amount of setup that maybe could be done just once.\n\nI don't think there are any race conditions here of checking the fd before `add_io` and a file change happening between the two.  How do we confirm there are no issues there?"
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, changed to sdbusplus::async::match & next like flow."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: `writeToFile`.\n\nGenerally gtest prefers a \"fixture\" be created here where these two non-test functions would become static members."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "`(path / \"test_fdio.txt\").native()`"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: `testFSEvents`"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Shouldn't this be `ASSERT_TRUE` and done before anything else?"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want something like `ctx.spawn(sdbusplus::async::execution::sleep_for(1s) | WriteToFile())` ?\n\nRight now I don't think you have any certainty that the inotify isn't already waiting by the time you call `async_fdio`.\n\nMaybe this is a hint to two test cases... one where we sleep prior to `WriteToFile` and one where we sleep prior to `async_fdio`.  This covers both cases of the event before and after the `co_await` (see my comment on the last file re race conditions)."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "fc5957566fc490dbe605220dc71535ebc6782689",
            "parents": [
                "578b9733d30bb03015715932e9f64d11416655ca"
            ],
            "ref": "refs/changes/61/75461/4",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731782830,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 332,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "8f61d73b50663f7c1266db05c9f8ebbc679b149d",
            "parents": [
                "578b9733d30bb03015715932e9f64d11416655ca"
            ],
            "ref": "refs/changes/61/75461/5",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731783283,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 334,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "bf84e7dcd6635add18b19a3c11a8077d2afb598f",
            "parents": [
                "578b9733d30bb03015715932e9f64d11416655ca"
            ],
            "ref": "refs/changes/61/75461/6",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731783365,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 334,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "9d92f01b46d94c346ce8a859e49dd393b1ea1f91",
            "parents": [
                "fe1ebd43decbc6c9aea9aaa49581dc6cc90eb32f"
            ],
            "ref": "refs/changes/61/75461/7",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731783600,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We need a destructor that takes itself out of `fdio::complete`.  Otherwise we can end up with a completion registering and then being destructed before it completes.\n\nEx.  if someone writes this code:\n\n```\n   fdio::next();\n```\n\nThis code will compile without error and end up temporarily constructing a fdio_completion but then immediately destructing it.  We end up with `fdio::complete` having a dangling pointer to a destructed object."
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, added a destructor which resets the fdio::complete to nullptr.\n\nfdio_completion::~fdio_completion()\n{\n    std::unique_lock l{fdioInstance.lock};\n\n    if (fdioInstance.complete == this)\n    {\n        std::exchange(fdioInstance.complete, nullptr);\n    }\n}"
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why not `= default` in the .hpp then?"
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why unlock if we are exiting?"
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not necessary."
                },
                {
                    "file": "src/async/fdio.cpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we want this sleep here?"
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Removed."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please pick better names than \"events\" and \"events2\".  Name testcases based on what they are testing."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sorry i missed it in my last commit as i was planning to do it before push. Fixed it now."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we shorten this up to 5 seconds or less?\n\n(Having test cases that take a total of 20 seconds is annoying for rapid development where I run `ninja test`."
                },
                {
                    "file": "test/async/fdio.cpp",
                    "line": 87,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 334,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "5763d207ce7cfed092ac23543fd85e74dea75fbe",
            "parents": [
                "ae0a838485df3630b37cabf08a2965cce746dd3e"
            ],
            "ref": "refs/changes/61/75461/8",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732564653,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 133,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 340,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "2a12ae12455bfa1cdf92dff21c16757b1f126c8f",
            "parents": [
                "956e87a2ed85f7b415e22ba4ad610f3e9e94ccb8"
            ],
            "ref": "refs/changes/61/75461/9",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1732567156,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/async/fdio.cpp",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "include/sdbusplus/async/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 133,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 340,
            "sizeDeletions": 0
        }
    ]
}