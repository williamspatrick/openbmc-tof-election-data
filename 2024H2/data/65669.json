{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I266b73a7c9160e4e252cf5fb7831ac71a26b6e4f",
    "number": 65669,
    "subject": "managed fru device support for non-i2c-based devices",
    "owner": {
        "name": "Christopher Sides",
        "email": "christopher.sides@hpe.com",
        "username": "csides-hpe"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/65669",
    "hashtags": [],
    "createdOn": 1691613622,
    "lastUpdated": 1730391858,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1691613622,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1691613637,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691613637,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1691613907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72684/ : SUCCESS"
        },
        {
            "timestamp": 1691690700,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1691697443,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1691697557,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1692051663,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1692136723,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1692148859,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1692211588,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1692211887,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1692212138,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1692212587,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1692213037,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1692215890,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1692307298,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1694102922,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1730391858,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Abandoned\n\nReplaced with devicetree-vpd daemon"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
            "parents": [
                "f60262d50b6629dbd19bc7e7c55f6442401242e4"
            ],
            "ref": "refs/changes/69/65669/1",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1691613622,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This seems like a new feature, can we add a design doc first?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "That's a good point. I'll put something together. Will it need to be submitted through Gerrit and accepted @ https://github.com/openbmc/docs/tree/master/designs, or is there another process I should look into?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This is the place to go for the design doc review. Looking forward to it"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Doc uploaded: https://gerrit.openbmc.org/c/openbmc/docs/+/65678"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "A new design document to replace that one has been uploaded for review @ https://gerrit.openbmc.org/c/openbmc/docs/+/66369\n\nInstead of a 'general' solution relying on Entity-Manager's fru_device daemon to transfer arbitrary HW ID data from filesystem to D-Bus, the new doc discusses relying on phosphor-u-boot-env-mgr to transfer HPE-specific HW ID data from u-boot environmental variables to D-Bus without the filesystem, and without needing extra additions to EM's fru_device daemon."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please wrap your commit message properly."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Do you mean to word-wrap to 72 characters in the body of commit messages, or is there another guideline I should be using?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Is this proprietary implementation or opensource code?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The uBoot code HPE has for creating FRU data files based on FRU data copied into RAM during boot will be open sourced.\n\nThat said, this feature should work with any setup that writes FRU data to the file system. One property/field per file is the current expectation."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "ACK"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The uBoot code HPE has.\n\nplease provide a pointer to this code traceable back to:\nhttps://github.com/openbmc/u-boot\n\nIf it's not present, this discussion on this patch is a little premature.  Having u-boot directly write the filesystem is a little worrisome as a design, and we need to make sure it's handled appropriately.\n\nFor sending data from u-boot to openbmc userspace, we already have https://github.com/openbmc/phosphor-u-boot-env-mgr that should be used, unless there's some technical reason why that doesn't work, but a patchset isn't the right place to have that discussion, a design doc is."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I have uploaded a design doc for further discussion @ https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\nI will be going through the rest of your comments before responding to each, but thank you very much for the time and effort spent going into the level of detail you did- it's very much appreciated!"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "It would be good to cover how to expand in the design doc."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "A preview of the steps I'll be adding to the design doc for supporting a (non-HPE-specific) Managed FRU Device can be found in the comments at line 2000.\n\nIn retrospect, maybe I should have put that comment *above* the \"HPE specific code\" label."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 25,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Correction: I meant to point to comments starting at line 1400."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, this patchset and design chooses to rewrite functionality that already exists, but doesn't really justify why it's doing so.  That explanation of \"why this is special and different than what's already in the project\" needs a lot more discussion, including references to the existing code that communicates with u-boot.\n\nIf this design goes forward, this really feels like it needs its own daemon, because it's completely changing the transport (filesystem instead of i2ctools) but lets cross that bridge when we get there."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1298,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this how we handle hex field in the API that exists?  I didn't think so, but I haven't looked.  Just posting them with a 0X prefix doesn't seem productive, but if it's what we do already, I guess it's fine?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1309,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Return and log an error?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1316,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We do other transforms by replacing with underscore, so the tests can catch that there's a problem in the eeprom, I would expect this to do the same:\nhttps://github.com/openbmc/entity-manager/blob/6fa508cbdf90fdd612daa05039836486ef6e6bb1/src/fru_device.cpp#L684\n\nAgain, this comes back to a problem of not reusing code that exists."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1321,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "std::string by definition is null terminated.  I'm a little surprised this gives the right result (which means that someone is calling c_str() somewhere they shouldn't be), but this isn't right."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is also incorrect, it's going to register properties like \"serial_number\" which doesn't match the existing API.  Please validate that your DBus API matches what exists."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1338,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems kind of unintentionally confrontational.  Are you saying no manufacturer except HPe can use this file format?  Presumably we want to read this string out of the FRU somewhere?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1343,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems ill advised as a path name."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1349,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are these being put in their own namespace?  Seems like these are FRU entries, and should go in the same namespace as the other entries?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1352,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Naming convention on this is wrong, doesn't match anything that exists.  Please follow the existing APIs."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1386,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why static?  either it's:\n1. Const, in which case, use a constexpr data structure, like array\n2. Non const, in which was use a non static stack variable.\n\nI suspect it's #1"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1393,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Where are these paths referenced from?  Can you add a comment with the link to the code that this needs to stay aligned with?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1400,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The below comment outlines the current process for supporting a new Managed FRU Device.\n\nIn the future, I think it makes sense to move these path/property name/file format definitions into .JSON config files, but I haven't looked into what that will take yet."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1400,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "At a file-format level is this configurable?  I suspect it doesn't need changed on a per-system basis."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "These are GXP specific implementation. Is it possible generalize and move the hard coded path into configuration files?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The current setup is intended to allow 'anyone' to create a new 'managedFRUDirectories newManagedPaths,' populate it with relevant paths for their device, then set 'managedFRUs[managedFRUType::NewDevice] = newManagedPaths;'\n\nI definitely like the idea of having this info read in from data JSON config files, but haven't researched how much new structure will be required for that yet.\n\nHow comfortable would you be with a 'get paths from JSON' feature being added as as add-on (separate dependent Gerrit review) to this one?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "I lean towards get these into json to start with. So system only need to look for the path that are relevant. For example platforms that do not have the ManagedFru do not have to walk through this list at all and HPE system only needs to look for the directories that are valid for HPE."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "A point in favor of using JSON configs as an add-on feature:\n\nPart of the issue we're solving is that there's currently no way (that I'm aware of) for Entity Manager probes to identify HPE systems, since the FRUDevice data typically used for device ID is not available over the standard I2C channels that Entity Manager currently scans for that data.\n\nMy understanding is that we're going to have to check the filesystem for the existence of specific Managed FRU directories regardless of where the filepaths are defined- but this is intended as a one-off process at Entity Manager startup, and we can limit the number of checks done (ie stop checking for a given FRU type at the first missing directory).\n\nMoving [FRU Type]->[file path list]definitions to JSON configs could make it simpler to add arbitrary new 'Managed FRUs' directories and files to scan (this additionally could be used as a way to move arbitrary data from the filesystem to D-Bus under a 'FRU Device' interface), but I feel like it's more of a \"nice to have\" feature unless the list of supported devices and directories starts to really expand.\n\nThoughts?"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Thanks for the explanation. I got it now. \nHave you thought about leverage filesystem based baseboard fru here https://github.com/openbmc/entity-manager/blob/master/src/fru_device.cpp#L69\nSeems like you might be able to solve your Probe issue with it"
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "My understanding is that that functionality would be useful in setups that write a standard FRU data blob to the filesystem, but it won't solve for HPE's case for two layers of reasons:\n\n\t1) The uBoot code HPE is working with writes the FRU data to disk as individual files for each property (generally as strings) instead of as a standard FRU blob\n\n\t2) The underlying data is being parsed from a non-standard format at boot, so dumping a data blob wouldn't work cleanly here.\n\nI'm going to make note of that existing functionality in the design doc I'm polishing up, since it would be useful for anyone with a standard FRU blob in the filesystem instead of individual property files."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1425,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, this is an EM reactor, and should be reading from EM config files.  If we need to add a new \"GXP\" type to the types we already have, so be it, but we really need to not invent yet another config file format."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1576,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, I really feel like this code belongs in https://github.com/openbmc/phosphor-u-boot-env-mgr\n\nand considering that addManagedFRUDevices takes no dependencies on existing code inside fru-device, that tracks as this not being the right place to put this code.\n\nFru-device ultimately is for reading i2c eeproms and eeprom-like devices.  The fact that it reads one file from the filesystem is an architectural hiccup that because of the tiny amount of code it imposes, we live with.  It is not a good place for putting what amounts to u-boot communication code that is already covered in other places using other mechanisms."
                },
                {
                    "file": "src/fru_device.cpp",
                    "line": 1577,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, I see no \"instead of\" implemented here.  This appears to be in addition to."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "src/fru_device.cpp",
                    "type": "MODIFIED",
                    "insertions": 238,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        }
    ]
}