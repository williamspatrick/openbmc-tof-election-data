{
    "project": "openbmc/fb-ipmi-oem",
    "branch": "master",
    "id": "I652cb6073eeba58d8a204a79183ac98f7ab99e96",
    "number": 76099,
    "subject": "support configurable FRUID and EEPROM path mapping",
    "owner": {
        "name": "cchoux",
        "email": "cosmo.chou@quantatw.com",
        "username": "cchoux"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/fb-ipmi-oem/+/76099",
    "hashtags": [],
    "createdOn": 1732622708,
    "lastUpdated": 1733105130,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1732622708,
            "reviewer": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1732622750,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732622750,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1732622877,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95312/ : SUCCESS"
        },
        {
            "timestamp": 1732624998,
            "reviewer": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "message": "Patch Set 1:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1732640916,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(11 comments)"
        },
        {
            "timestamp": 1733025543,
            "reviewer": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733025599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733025599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1733025723,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/95591/ : SUCCESS"
        },
        {
            "timestamp": 1733026304,
            "reviewer": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "message": "Patch Set 2:\n\n(11 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "49a20c3f783dd871080bed79e964ea14eaafaebd",
            "parents": [
                "5e18a70e19b812e9a659173c62da94aa6ec22631"
            ],
            "ref": "refs/changes/99/76099/1",
            "uploader": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "createdOn": 1732622708,
            "author": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/commandutils.cpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What does the tuple represent?  Can we make a struct for this for clarity?"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can't this return an empty vector rather than a std::optional?"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 73,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 73,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK. (it represent id, bus, address)"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why static?"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "to avoid traverse the map file each time processing the IPMI FRU Read command."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use lg2 in new code.\n\nShow the exception."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This does not seem like the appropriate interface to be looking for.  Why are we looking for an EEPROM and not an inventory item?"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "It's used for handling IPMI FRU Read command, that BIOS/Host send to get raw data.\nThat is, get bus/address, and then call \"GetRawFru\" method."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 121,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Log more than just the exception."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 121,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this a uint8_t and not a size_t?"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 128,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "ID of IPMI FRU Read command is 0 ~ 255 (1 byte)"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Seems like fruDevices should be a map."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 134,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK. Thanks for the suggestion!"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "paths is certain to be longer than fruDevices.  I would suggest we start with the paths and look them up in the fruidMap, rather than searching through the paths list N times.\n\nYou can probably create a map from fruidMap-json in order to make lookups clearer."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 140,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK. Thanks for the suggestion!"
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 147,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not clear why we are using `get<uint64_t>` and then forcing to a uint8_t.\n\nAren't i3c devices more than uint8_t?  We should go ahead and be able to support those now.\n\nWhy are we needing to save the Bus and Address anyhow?  This is rather surprising.  Don't we need the Inventory information and not low-level bus access information?  fru-device has already gotten the data parsed and handed off to entity-manager."
                },
                {
                    "file": "src/commandutils.cpp",
                    "line": 147,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "OK. will use uint64_t, which also align with the properties.\nIt's for handling IPMI FRU Read command, that BIOS/Host send to get raw data.\n(BIOS/Host will get complete raw data and then parse)"
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 264,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't understand why this code is going to FruDevice directly to begin with."
                },
                {
                    "file": "src/storagecommands.cpp",
                    "line": 264,
                    "reviewer": {
                        "name": "cchoux",
                        "email": "cosmo.chou@quantatw.com",
                        "username": "cchoux"
                    },
                    "message": "This is the original way; here is just to go original way when the new json map file is not found."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "include/commandutils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 43,
                    "deletions": -30
                },
                {
                    "file": "src/commandutils.cpp",
                    "type": "MODIFIED",
                    "insertions": 97,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 177,
            "sizeDeletions": 30
        },
        {
            "number": 2,
            "revision": "6babcf2d59caab4ddee39c27a17614b521f42398",
            "parents": [
                "3add478ba5b825e2d800a5b6b8a98d409110e42e"
            ],
            "ref": "refs/changes/99/76099/2",
            "uploader": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "createdOn": 1733025543,
            "author": {
                "name": "cchoux",
                "email": "cosmo.chou@quantatw.com",
                "username": "cchoux"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/commandutils.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -2
                },
                {
                    "file": "src/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -53
                },
                {
                    "file": "src/commandutils.cpp",
                    "type": "MODIFIED",
                    "insertions": 130,
                    "deletions": -27
                }
            ],
            "sizeInsertions": 229,
            "sizeDeletions": 82
        }
    ]
}