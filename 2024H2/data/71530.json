{
    "project": "openbmc/phosphor-host-ipmid",
    "branch": "master",
    "id": "I9a7bf81fbbd04c5ef39f22f36ab7accfeda316ab",
    "number": 71530,
    "subject": "dbus-sdr: Refactor storagecommands for separate FRU read/write caches",
    "owner": {
        "name": "Oskar Senft",
        "email": "osk@google.com",
        "username": "osenft"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-host-ipmid/+/71530",
    "hashtags": [],
    "createdOn": 1716209545,
    "lastUpdated": 1730765243,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1716209545,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1716209584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716209584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1716209603,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84641/ : FAILURE"
        },
        {
            "timestamp": 1716209906,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716209954,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716209954,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1716209970,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84642/ : FAILURE"
        },
        {
            "timestamp": 1716210372,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 3: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716210424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716210424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1716210441,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84643/ : FAILURE"
        },
        {
            "timestamp": 1716223450,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 4: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716223485,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716223485,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1716223501,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84668/ : FAILURE"
        },
        {
            "timestamp": 1716228286,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716228305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716228305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1716228511,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84671/ : SUCCESS"
        },
        {
            "timestamp": 1716228625,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1716249503,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1716303440,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1716312144,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1716408994,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 6: Commit message was updated.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR **changekind:NO_CODE_CHANGE** OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716409039,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716409044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1716409233,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84766/ : SUCCESS"
        },
        {
            "timestamp": 1721336571,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1722521168,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1722875973,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1723083597,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1723155655,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1723164306,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723164359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723164359,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1723164380,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/89442/ : FAILURE"
        },
        {
            "timestamp": 1723164716,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 8: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723164758,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723164758,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1723164778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/89443/ : FAILURE"
        },
        {
            "timestamp": 1723164948,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723164978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723164978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1723165000,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/89444/ : FAILURE"
        },
        {
            "timestamp": 1723165128,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 10: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723165183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723165183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1723165201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/89450/ : FAILURE"
        },
        {
            "timestamp": 1723165357,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1723165398,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1723165398,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1723165663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/89451/ : SUCCESS"
        },
        {
            "timestamp": 1723165687,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 11:\n\n(5 comments)"
        },
        {
            "timestamp": 1723165706,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1723571212,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1723574385,
            "reviewer": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1730765243,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 11:\n\n(6 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "4a1a8e9a1b04f28ba050dd7a9c31bb23d66cdde9",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/1",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716209545,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 67
        },
        {
            "number": 2,
            "revision": "00416be93104d78599c5f55568e9250c2712f21e",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/2",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716209906,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 67
        },
        {
            "number": 3,
            "revision": "b7836de4f84f5cce6ec0c333251b1ca98e9c67ae",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/3",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716210372,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 67
        },
        {
            "number": 4,
            "revision": "3ed3597afa6484c8a90d32faaa96ed6d68bb8c63",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/4",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716223450,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 161,
            "sizeDeletions": 67
        },
        {
            "number": 5,
            "revision": "c149a4db18b960cd989e4ef59dedabe5d3bd9975",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/5",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716228286,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 113,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "clang_format actually wants it this way. It's weird ...\n\nhttps://jenkins.openbmc.org/job/ci-repository/84668/console"
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "I was about to say `std::span<uint8_t>` however... I don't see any benefits or difference in doing so."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "There'se a .data().resize() in line 493, which won't work on a std::span. I think we should leave it as a std::vector."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 296,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "do we need to change this type?\n\nshouldn't we just return cache.data() instead?\n\nOr just not return at all and use cache.data() where we called getFru?\nI guess you want a copy to prevent some race condition where the data might change in the middle of accessing it if you do this."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 296,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Yes. Look at the caller in line 485 where the data is only swapped out later in line 561."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 138,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 162,
            "sizeDeletions": 67
        },
        {
            "number": 6,
            "revision": "58b1c560133181cf98ef64408d57a029e4c75a62",
            "parents": [
                "8fb5b89ac71ec9c344ff3c030b84a209f09e1b1c"
            ],
            "ref": "refs/changes/30/71530/6",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1716408994,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The first paragraph makes total sense, and is a great simplification.\n\nThe second paragraph is where I'm not quite understanding.  You're wanting to use the IPMI commands to write non IPMI compliant data that doesn't match the FRU format?  That seems like a specification abuse, but I of understand, that kind of thing probably worked on older systems, and I could see the argument we should support it if we can.\n\nThe part where it breaks down for me is why we have to separate out the read/write caches to accomplish that.  Won't that lead to user Reads looking like they didn't persist?\n\nKeep in mind, the read commands read from the cache because there are IPMI fru writing implementations that write one byte (or a chunk of bytes) at a time, then immediately read them back and verify they were the same before continuing to the next chunk.  If we split the caches into separate read and write, won't we break that, because the read will return the \"old\" data that hasn't been persisted yet?\n\n\nI wonder if a better approach might be to just detect the case where we're writing beyond the valid fru area, and persist any bytes that are past the FRU area immediately.\n\nThe point of the cache is to allow rollback in the case where a user writes an invalid FRU or partially writes it but never completes writing the full thing.  If we're writing bytes beyond the valid FRU area, there really isn't any way to know that those writes are \"complete\" or \"correct\" (assuming they're not just all 0xFF)\n\n\nTl; DR, I'm confused."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Thanks, valid question! And I'm sorry this caused confusion.\n\nI updated the description to better explain the use case.\n\nYou're right, additional bytes beyond the FRU data should not matter. The problem is that in the current implementation, these additional bytes ultimately cause the overall write process to fail or the written data to be corrupted.\n\nDetails are in the referenced post in https://lists.ozlabs.org/pipermail/openbmc/2024-May/035222.html."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Tom, Vernon, any chance you could review this, please?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Ping ... anyone?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Ed, would you be ok +2-ing this change?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like Vernon replied, and I don't have a good sense of exactly what we're doing here."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Done"
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 296,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I don't understand the duplication of FruCaches here. The cache parameter is passed in as a l-value ref, it is modified and then copied into the response.\n\nI would vote to simply respond with an ipmi::Cc to avoid the copy. Or at the very least, return an l-value ref."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 296,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "Good point, thank you for noticing that. I had maintained the original interface (minus the type change) without considering whether this would still make sense. I changed it to simply update the contents of the passed in `cache` in place. It's then up to the caller to either take a copy or just use the cache object directly."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 485,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "const auto &[status, fru] = ...\n\nThis assumes that you have chosen to return an l-value ref. Otherwise, no need for structured binding."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 485,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "This is now obsolete."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 138,
                    "deletions": -67
                }
            ],
            "sizeInsertions": 165,
            "sizeDeletions": 67
        },
        {
            "number": 7,
            "revision": "f90192106a61e3a025534824bd28360afde53ec2",
            "parents": [
                "5e84c7c59ac8269244e9ea03b6fd9d7fd1587b40"
            ],
            "ref": "refs/changes/30/71530/7",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1723164306,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 165,
                    "deletions": -69
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 69
        },
        {
            "number": 8,
            "revision": "8ef59860e17e40e59bb68282d337e65d3829cca4",
            "parents": [
                "5e84c7c59ac8269244e9ea03b6fd9d7fd1587b40"
            ],
            "ref": "refs/changes/30/71530/8",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1723164716,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 165,
                    "deletions": -69
                }
            ],
            "sizeInsertions": 194,
            "sizeDeletions": 69
        },
        {
            "number": 9,
            "revision": "49991d17768a3bbee6e0e1a5449d1c92c8292eec",
            "parents": [
                "5e84c7c59ac8269244e9ea03b6fd9d7fd1587b40"
            ],
            "ref": "refs/changes/30/71530/9",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1723164948,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 161,
                    "deletions": -68
                }
            ],
            "sizeInsertions": 190,
            "sizeDeletions": 68
        },
        {
            "number": 10,
            "revision": "d0858bd0ece107b94fabf1108fb1992a6f8fafb3",
            "parents": [
                "5e84c7c59ac8269244e9ea03b6fd9d7fd1587b40"
            ],
            "ref": "refs/changes/30/71530/10",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1723165128,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 161,
                    "deletions": -68
                }
            ],
            "sizeInsertions": 193,
            "sizeDeletions": 68
        },
        {
            "number": 11,
            "revision": "8ebb64d583ecad6df9ec63a1412539c4bcedded6",
            "parents": [
                "5e84c7c59ac8269244e9ea03b6fd9d7fd1587b40"
            ],
            "ref": "refs/changes/30/71530/11",
            "uploader": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "createdOn": 1723165357,
            "author": {
                "name": "Oskar Senft",
                "email": "osk@google.com",
                "username": "osenft"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "PTAL"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I am a a bit anti-cache unless there is a good performance (or other) improvement. They increase complexity and contribute to bugs like this. I would prefer that ipmid did not cache the fru at all, and only have the cache (and write timeout) at the level that is actually doing the writing.\n\nIf we have to send the fru data over D-BUS and then have no guarantees that when we read back the value that it is not coherent, our caches are very broken. I don't like the idea of adding (or changing) the ipmid fru cache to paper over what seems to be a bug in the ipmi-fru-parser code. We should just fix the improper caching there.\n\nI think the correct behavior is that ipmid merely extracts the fru data and address/offset from the ipmi command and passes it on to the ipmi-fru-parser. That code should keep a coherent cache (so that even if it hasn't written through to the backing storage, it will still present the freshest data). It should keep the timer to minimize read/copy/erase/write cycles in the storage by grouping writes together. It can also be the arbiter of what writes are in and out of bounds and respond with an error when ipmid tries to write beyond the end of storage."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oskar Senft",
                        "email": "osk@google.com",
                        "username": "osenft"
                    },
                    "message": "The problem is that the IPMI FRU writes come in several IPMI calls. We need to give the caller the opportunity to complete all these calls before sending it on to the storage backend. The storage backend will not accept a FRU that is not \"complete\" i.e. that does not parse. It would also allow a caller to perform a \"partial\" write and potentially corrupt the contents of the FRU. So with that, the write cache is essential to the correct functioning of the system.\n\nThe read cache is important to provide acceptable performance to the IPMI caller for reading the FRU or for figuring out details of the FRU (ipmiStorageGetFruInvAreaInfo). Dropping the read cache would have a notable performance degradation for callers.\n\nAlso note that the storage backend notifies us via D-bus if the contents of the FRU change, which allows the cached to be flushed.\n\nI share your sentiment of not having caches. I'm afraid that with the current architecture of phosphor-host-ipmid and the underlying entity-manager (which acts as a storage backend) alongside IPMI's protocol I cannot see how caches could be dropped. If the storage backend and the host-ipmid were integrated into one process, we could consider dropping the read cache. I still don't see how the write cache could be dropped.\n\nNote that this code is a straightforward improvement over the previous implementation where the read and write cache was shared, causing random behavior to clients."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 126,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "adding const to functions that don't change the object makes it easier to use const objects and const refs."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 136,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "It might be more appropriate to have an append_data function and make this return a const&."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 155,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Please don't use m as a prefix for member variables. Just give them names."
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 178,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "const FruCache&"
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 210,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Is there a retry mechanism for if the write failed?"
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I think there's a race condition here between the write timer and modifying the fruCacheForWriting. Before calling getFru, you need to stop the write timer."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                },
                {
                    "file": "dbus-sdr/storagecommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 163,
                    "deletions": -68
                }
            ],
            "sizeInsertions": 195,
            "sizeDeletions": 68
        }
    ]
}