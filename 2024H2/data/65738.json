{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "topic": "code-update",
    "id": "I65f186856c446cf7d957591c213054dc2d5c3861",
    "number": 65738,
    "subject": "code-update: simplified interface for code update",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/65738",
    "hashtags": [
        "redfish-updateservice-use-dbus"
    ],
    "createdOn": 1691260187,
    "lastUpdated": 1734118716,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1691260187,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1691260206,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1691260206,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1691260559,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72492/ : SUCCESS"
        },
        {
            "timestamp": 1692037147,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1692037204,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1692037205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1692037577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/72848/ : SUCCESS"
        },
        {
            "timestamp": 1693422003,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693504031,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 3: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693504061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693504061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1693504100,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1693504418,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/73680/ : FAILURE"
        },
        {
            "timestamp": 1693505538,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693505585,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693505585,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1693505969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73682/ : SUCCESS"
        },
        {
            "timestamp": 1693506228,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(10 comments)"
        },
        {
            "timestamp": 1693952700,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693952775,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 5:\n\n(11 comments)"
        },
        {
            "timestamp": 1693952795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693952795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1693953164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73759/ : SUCCESS"
        },
        {
            "timestamp": 1693953537,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1694121869,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694121924,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694121925,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1694122018,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1694122280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73920/ : SUCCESS"
        },
        {
            "timestamp": 1694146280,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694146337,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694146337,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1694146711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73938/ : SUCCESS"
        },
        {
            "timestamp": 1694190168,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1694729507,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694729524,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694729524,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1694729551,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 8:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1694729889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74151/ : SUCCESS"
        },
        {
            "timestamp": 1697230409,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1697231316,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1698094761,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1698095290,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1698095323,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1698095323,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1698095687,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75385/ : SUCCESS"
        },
        {
            "timestamp": 1698950711,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1698950739,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1698950739,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1698951046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75757/ : SUCCESS"
        },
        {
            "timestamp": 1706133233,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Topic set to code-update"
        },
        {
            "timestamp": 1707938050,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707938070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707938070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1707938398,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79273/ : SUCCESS"
        },
        {
            "timestamp": 1708985196,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 11: Code-Review-1\n\n(3 comments)"
        },
        {
            "timestamp": 1708986867,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1708990134,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 12.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708990160,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 12:\n\n(6 comments)"
        },
        {
            "timestamp": 1708990191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708990191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1708990387,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1708990553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79851/ : SUCCESS"
        },
        {
            "timestamp": 1708995560,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1709161135,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 12:\n\n(1 comment)"
        },
        {
            "timestamp": 1709162596,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 12:\n\n(6 comments)"
        },
        {
            "timestamp": 1709182481,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 12:\n\n(7 comments)"
        },
        {
            "timestamp": 1709182624,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709182639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709182639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1709182981,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/80015/ : SUCCESS"
        },
        {
            "timestamp": 1709683812,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(5 comments)"
        },
        {
            "timestamp": 1709684157,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1709715371,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709715415,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709715416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1709715535,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 14:\n\n(7 comments)"
        },
        {
            "timestamp": 1709715756,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/80231/ : SUCCESS"
        },
        {
            "timestamp": 1709741094,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 14:\n\n(6 comments)"
        },
        {
            "timestamp": 1709767569,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709767584,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 16: Patch Set 15 was rebased."
        },
        {
            "timestamp": 1709767584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709767584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1709767599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709767599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1709767601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80262/ : ABORTED"
        },
        {
            "timestamp": 1709767711,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 16:\n\n(7 comments)"
        },
        {
            "timestamp": 1709767941,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/80263/ : SUCCESS"
        },
        {
            "timestamp": 1710171437,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16: Code-Review+1"
        },
        {
            "timestamp": 1710181568,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1710183515,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1710183541,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1710183542,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1710183891,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/80464/ : SUCCESS"
        },
        {
            "timestamp": 1710183921,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 17: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1710184713,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1710188870,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 17:\n\n(3 comments)"
        },
        {
            "timestamp": 1710188987,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1710192198,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 17: Code-Review+2"
        },
        {
            "timestamp": 1710192201,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged"
        },
        {
            "timestamp": 1734118716,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Hashtag added: redfish-updateservice-use-dbus"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "13c06f664233495d8be785fe5b2e47ae898b2db0",
            "parents": [
                "d1484a1499bc241316853934e6e8b735166deee2"
            ],
            "ref": "refs/changes/38/65738/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1691260187,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.xml",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 85,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "6a2076326f43e32bbdfb3d795520b1cb5bdb4626",
            "parents": [
                "402dc6a5beee58ee1e6514a425c542a0d879954c"
            ],
            "ref": "refs/changes/38/65738/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1692037147,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "need more than 5 words here.. \nWhy does openbmc need this interface? \nWhy don't the existing interfaces work? \nIs there a design doc for this?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 116,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "5fde744ac31444d00327a9a46d1b9e93a6b2e9d4",
            "parents": [
                "402dc6a5beee58ee1e6514a425c542a0d879954c"
            ],
            "ref": "refs/changes/38/65738/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693504031,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, please wrap you commits 50/72."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed your comment. Thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, Please follow the naming convention of dbus, which is CamelCase.\n\nAlso, I would prefer to call this \"StartUpdate\"?.  Like I mentioned before, Schedule implies some kind of cron ability, that this interface isn't set up to support."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "ohh i suppose you mean pascal case or upper camel case. Sure changed to that.\n\nChanged API to StartUpdate."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes.  You got it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, can we just call this \"image\". fd is implied by the type."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't seem like it works in your design.  If we're going to have multiple daemons hosting this interface, then how does bmcweb know that the image for X device goes to Y DBus connection?\n\nI suspect you need some kind of association property back to the inventory item, so bmcweb can look up from target->dbus path, and call the right firmware update daemon.  Or, maybe this object just gets added under the same path?  But either way, I don't think accepting the path as a method call param works."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I have mentioned this in the design. Please refer to \"Proposed End to End Flow\" diagram. It mentions about a functional association which needs to be created from Inventory Item to Version Object. BMCWeb will map the Redfish URI to inventory object and would get the corresponding DBUS path for the associated version object.\nTo make this explicit i just added this to doc wording and explicitly added the association to the Version interface.\n\nThis InventoryObjectPath param is needed internally in the Update daemon so it can figure out in multi host situations or when there are two devices of same type in single host scenario to figure out which one to update. NOTE: The Update Interface is going to be hosted at /xyz/openbmc_project/Software/<deviceX> path and not /xyz/openbmc_project/Software/<deviceX>/<InstanceNum> path."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This InventoryObjectPath param is needed internally in the Update daemon so it can figure out in multi host situations.\n\nLets leave out multi-host for the moment.  That's its own design that needs ownership from someone.  If you're owning multi-host, then there's a lot of things missing, and I don't think it's beneficial to open that can of worms at this time.\n\n> NOTE: The Update Interface is going to be hosted at /xyz/openbmc_project/Software/<deviceX> path and not /xyz/openbmc_project/Software/<deviceX>/<InstanceNum> path.\n\nWhy?  This would be different than we've handled other things in the past.  For example, sensors, each one has its own unique path.  There's no \"sensor manager\" that accepts a path to an individual sensor when you want to interact with it.  I really suspect your \"and not\" example is the right path here.  Although I would make it something like \n\n/xyz/openbmc_project/Software/<device unique id>\n\nIn practice, most Device Unique IDs are generated via the entity-manager name, to allow the name to be somewhat useful to a user."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done. Dropped the InventoryObjectPath as based on next response we won't need it since UpdateInterface will reside on specific device path.\n\nMy idea for not tying the Update interface to a specific path instance path(/xyz/openbmc_project/Software/<deviceX>/<InstanceNum>) was to consider Update interface as a singleton, but i see what you mean from Sensor perspective. Sure, will drop this constraint.\n\nMy understanding is keeping the DBus path as \"/xyz/openbmc_project/Software/<deviceX>/<InstanceNum>\" will help to make it more readable and hierarchical, for example, /xyz/openbmc_project/Software/cpld/0 rather than /xyz/openbmc_project/Software/1234 where 1234 is <device unique id>.\n\n@Patrick, whats your input on this?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "should be a dbus path type."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does \"Already Exists\" mean in the context of starting an update?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "The version you are trying to update to is the current version of the device, so no update needed.\n\nFYI: These are the errors from the existing Version interface."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The version you are trying to update to is the current version of the device, so no update needed.\n\nPlease don't implement it this way.  There are valid reasons for updating to the same version that the device already has.  Many of them are developer reasons (where a dev might not have a unique version number) but should still be considered."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we also have an error that's differentiated for something like \"Update Does Not Apply to This device\" so that we can differentiate a signature issue from a corrupt file issue from a support issue?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "So, i suppose its better to define new error types for Update interface rather than using the one from Version then? For next proposal update, i am going to define new one's, let me know if you think otherwise.\n\nFrom what you are suggesting, we would have -\n\n - xyz.openbmc_project.Software.Update.Error.Incompatible\n - xyz.openbmc_project.Software.Update.Error.AlreadyExists\n - xyz.openbmc_project.Software.Update.Error.InvalidSignature\n - xyz.openbmc_project.Software.Update.Error.InvalidImage"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> So, i suppose its better to define new error types for Update interface rather than using the one from Version then?\n\nIf those errors are unique to this interface, yes.\n\nAside from AlreadyExists, which was in the previous paragraph, the rest look good to me."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs a better description.  Reset of WHAT?  Maybe we need \"OnBMCReset\", \"OnDeviceReset\", and \"OnHostReset\"?  In addition, a property that denotes which of those two this device supports?\n\nFWIW, this issue was debated at DMTF Redfish level quite heavily."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "My understanding is that this oneReset represents the reset for the device under update. For general standpoint, this can end up being a BMCReset for BMCUpdate, deviceXReset for deviceXUpdate and so worth. Its upto the implementation to see how they want to interpret the reset and trigger the required reset.\n\nAlso, as you mentioned about DTMF, i don't see BMCReset and DeviceReset as 2 different options in Redfish UpdateService interface, so not sure how we will represent it there?\n\nhttps://redfish.dmtf.org/schemas/v1/UpdateService.v1_11_3.json"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> My understanding is that this oneReset represents the reset for the device under update\n\nI think we need to be more explicit.\n\n> For general standpoint, this can end up being a BMCReset for BMCUpdate, deviceXReset for deviceXUpdate and so worth\n\nHow would I know that from the interface?  How would I generate a correct Redfish tree without knowing that OnReset means device reset?\n\n\nDMTF questions on \"how do I implement X in Redfish\" should generally be directed at the DMTF Redfish Github.  Like the Developing guide states, there are far more Redfish experts there, and then my opinion isn't the only one rendered for standards questions."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "\"How would I know that from the interface? How would I generate a correct Redfish tree without knowing that OnReset means device reset?\"\n\nBecause the Update interface will reside on the DBUS path for the specific device and onReset will represent the reset for the device the DBus path pertains to.\n\nSure, checking this on DMTF forums https://redfishforum.com/thread/936/onsystemreset-ondevicereset-redfish-updateservi"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is an ambiguity in the existing Redfish standard.  Isn't the preference for the enumerations here to match Redfish if possible?  I think the \"on reset\" is implied to be \"on reset of the element being updated\".\n\nI don't see any present time action necessary here.  If we want to refactor the enumeration names, that should be a relatively trivial follow-up as need arises."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This is an ambiguity in the existing Redfish standard.  Isn't the preference for the enumerations here to match Redfish if possible?\n\nThe Redfish standard has more than a 4 word description of the property.  If we want to say \"as defined by redfish\" then say that.  I also asked this originally because I believe the standard discussed this in a bug or a forum post that I was hoping we would be able to surface.\n\n> I think the \"on reset\" is implied to be \"on reset of the element being updated\".\n\nIf that's the intent, then lets get the description of this property updated to say that.\n\n> \n> I don't see any present time action necessary here.  If we want to refactor the enumeration names, that should be a relatively trivial follow-up as need arises.\n\n\nIf we want to leave it ambiguous, sure I could see that argument, but we still need \"a property that denotes which of those two this device supports\" from my first message, because it's unlikely all devices will support all update types.  Adding a \"supported\" property later has been a pain in other similar dbus changes."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Updated the enum description to \"Apply on reset of device being updated\"."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Updated the enum description to \"Apply on reset of device being updated\".\n\nAnd you ignored the other half of what I was asking for......  If you don't want to see a supported property added, then lets talk that through on why.  Updating the description was only half of the above."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> And you ignored the other half of what I was asking for......  If you don't want to see a supported property added, then lets talk that through on why.  Updating the description was only half of the above.\n\nSorry, are you referring to whether we should add onBMCReset to the enums?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We need a property that denotes which of the apply types this device supports.\n\nA power supply, VR, or something else likely might not support A/B updates.  There needs to be a way to advertise that lack of support on dbus."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, i can add a readonly property which the Code-Updater can advertise for the specific device."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Specifically, this is to implement the redfish \"@AllowedValues\" property.  You can find an example of this in the git log from Andrew Giessler merged literally this week."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 43,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done added a property named \"AllowedApplyTimes\"."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This enum doesn't look used in this interface?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "My bad, removed it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, typo \"status\""
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 49,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 124,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "4a4b4886b5961087dffc6f013b19936d7546366b",
            "parents": [
                "4de8a3b03cbb375eae92184cce3bc69be85f07d4"
            ],
            "ref": "refs/changes/38/65738/4",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693505538,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 124,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "e54c2b941b4b3b97620ace42b52b21c464458142",
            "parents": [
                "4f6fbeab36c23cce3816f0f6de4c92b9b87774b7"
            ],
            "ref": "refs/changes/38/65738/5",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693952700,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ed, Thanks for reviewing the PR. I have addressed & replied to your comments. Thanks"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just FYI, ACK generally means \"I will look into this comment later\".  Mark things as \"done\" if you've made the change requested.  When I see lots of ACKed comments, I generally don't reply because it means the author is still working on it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 117,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "215f7e10b33c76ee2d59be5a04ed9eef8689ccc9",
            "parents": [
                "4f6fbeab36c23cce3816f0f6de4c92b9b87774b7"
            ],
            "ref": "refs/changes/38/65738/6",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1694121869,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 106,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "78c0b4e88ebc3520c7a6d9c003d782e767afc68c",
            "parents": [
                "4f6fbeab36c23cce3816f0f6de4c92b9b87774b7"
            ],
            "ref": "refs/changes/38/65738/7",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1694146280,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 102,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "cc74529b051cf45260f0ef6e20355e4afc66606f",
            "parents": [
                "8e360784fc4edcc4de5b4b0f1fce5ffa7bf327fb"
            ],
            "ref": "refs/changes/38/65738/8",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1694729507,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed Comments. Please review."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Thanks for the review. Replied to your comments."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should be the progress object, right?  The version object very likely won't be known by the bmc, given the requirement for opaque image binaries, right?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "By this time the image has already been parsed and version has been extracted. So, the version is already known."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't understand.  If it's an opaque image, how do you know the version information?  By definition, the data is opaque.\n\nFor BMC, yes, we absolutely know the version.  For anything else, I don't think we will.\n\n\nAlso, having an API like this hits on a major problem we have today: What if I upload two different images with the same version, as happens in development?  They would get the same version, and get a collision on paths.  If we're going to rewrite interfaces, we should fix that.  See somewhere else about a unique identifier.  Maybe we just put that in the path somewhere?\n\n\n\nin addition, regardless of the above, there needs to be a progress indicator of some kind returned, so that we can track it in the Redfish::Task schema."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> I don't understand.  If it's an opaque image, how do you know the version information?  By definition, the data is opaque.\n> \n> For BMC, yes, we absolutely know the version.  For anything else, I don't think we will.\n\nThis is a return value from the startUpdate API. The daemon which will implement this interface for a specific type of upgradable entity will know how to parse the image and extract version out of it, but the image is opaque from caller(bmcweb) perspective.\n\n> \n> \n> Also, having an API like this hits on a major problem we have today: What if I upload two different images with the same version, as happens in development?  They would get the same version, and get a collision on paths.  If we're going to rewrite interfaces, we should fix that.  See somewhere else about a unique identifier.  Maybe we just put that in the path somewhere?\n\nI have mentioned in the design spec that we will apply salt to generate the VersionId https://github.com/openbmc/docs/blob/master/designs/code-update.md. Hence it will be unique.\nVersionId = Version from Image + Salt\n\nPlease let me know if you want me to change something in nomenclature in API interface to depict so.\n\n> \n> \n> \n> in addition, regardless of the above, there needs to be a progress indicator of some kind returned, so that we can track it in the Redfish::Task schema.\n\nCan you please refer to the flow diagram in the design document for progress update flow https://github.com/openbmc/docs/blob/master/designs/code-update.md."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The daemon which will implement this interface for a specific type of upgradable entity will know how to parse the image and extract version out of it,\n\nNot necessarily.  Think of the case of a PSU update.  The PSU binary is going to come from a vendor, for which it needs sent to an interface over smbus.  No BMC knows how vendor X implemented their image versioning scheme, nor should it.\n\n\n> Hence it will be unique. VersionId = Version from Image + Salt\n\nACK.\n\n\n> Can you please refer to the flow diagram in the design document for progress update flow\n\n\nYep, and in that doc you document that \"Create Interface\nxyz.openbmc_project.Software.Version\" is going to return {ObjectPath, Success}, \n\nWhich then gets fed into:\ncreate Matcher\n(PropertiesChanged,\nxyz.openbmc_project.Software.ActivationProgress,\nObjectPath)\n\nExcept that you've handed back a version object path, not a progress object path.  Unless I'm missing something, your document shows the same error I've noted here.\n\nAs a side note, that state diagram shows bmcweb maintaining a lot of state (matchers and loops to monitor progress) that break a lot of the design rules, and do things that cause bugs (I believe I've pointed you to the existing firmware update bug).  Business logic for monitoring needs to be done in the firmware update daemon itself, not in bmcweb."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> > The daemon which will implement this interface for a specific type of upgradable entity will know how to parse the image and extract version out of it,\n> \n> Not necessarily.  Think of the case of a PSU update.  The PSU binary is going to come from a vendor, for which it needs sent to an interface over smbus.  No BMC knows how vendor X implemented their image versioning scheme, nor should it.\n\nAs discussed over discord, i will change the description to better reflect the intention for generic object path.\n\n> \n> \n> > Hence it will be unique. VersionId = Version from Image + Salt\n> \n> ACK.\n> \n> \n> > Can you please refer to the flow diagram in the design document for progress update flow\n> \n> \n> Yep, and in that doc you document that \"Create Interface\n> xyz.openbmc_project.Software.Version\" is going to return {ObjectPath, Success}, \n> \n> Which then gets fed into:\n> create Matcher\n> (PropertiesChanged,\n> xyz.openbmc_project.Software.ActivationProgress,\n> ObjectPath)\n> \n> Except that you've handed back a version object path, not a progress object path.  Unless I'm missing something, your document shows the same error I've noted here.\n\nThe same objectPath will host all interfaces (Version, ActivationProgress etc) for the image. As we discussed via discord, i will change the description to reflect a generic object path which can host multiple interfaces.\n\n> \n> As a side note, that state diagram shows bmcweb maintaining a lot of state (matchers and loops to monitor progress) that break a lot of the design rules, and do things that cause bugs (I believe I've pointed you to the existing firmware update bug).  Business logic for monitoring needs to be done in the firmware update daemon itself, not in bmcweb.\n\nMatchers are being maintained (in diagram) for ActivationState and ActivationProgress properties. bmcweb can either maintains these matchers (to rely on notifications) or read the interface properties is an implementation choice we can make. For both the flows, Activation and ActivationProgress interfaces will be used which are existing interfaces."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > The daemon which will implement this interface for a specific type of upgradable entity will know how to parse the image and extract version out of it,\n> > \n> > Not necessarily.  Think of the case of a PSU update.  The PSU binary is going to come from a vendor, for which it needs sent to an interface over smbus.  No BMC knows how vendor X implemented their image versioning scheme, nor should it.\n> \n> As discussed over discord, i will change the description to better reflect the intention for generic object path.\n\nSounds good.\n\n> \n> > \n> > \n> > > Hence it will be unique. VersionId = Version from Image + Salt\n> > \n> > ACK.\n> > \n> > \n> > > Can you please refer to the flow diagram in the design document for progress update flow\n> > \n> > \n> > Yep, and in that doc you document that \"Create Interface\n> > xyz.openbmc_project.Software.Version\" is going to return {ObjectPath, Success}, \n> > \n> > Which then gets fed into:\n> > create Matcher\n> > (PropertiesChanged,\n> > xyz.openbmc_project.Software.ActivationProgress,\n> > ObjectPath)\n> > \n> > Except that you've handed back a version object path, not a progress object path.  Unless I'm missing something, your document shows the same error I've noted here.\n> \n> The same objectPath will host all interfaces (Version, ActivationProgress etc) for the image. As we discussed via discord, i will change the description to reflect a generic object path which can host multiple interfaces.\n\nIn practice, I'm not sure how this will work, but so long as this denotes that progress is required, and version is not, my concerns are solved.\n\n> \n> > \n> > As a side note, that state diagram shows bmcweb maintaining a lot of state (matchers and loops to monitor progress) that break a lot of the design rules, and do things that cause bugs (I believe I've pointed you to the existing firmware update bug).  Business logic for monitoring needs to be done in the firmware update daemon itself, not in bmcweb.\n> \n> Matchers are being maintained (in diagram) for ActivationState and ActivationProgress properties.\n\nbmcweb should not be maintaining matchers for the simple update flow.  That's the state that causes bugs like https://github.com/openbmc/bmcweb/issues/202\n\n> bmcweb can either maintains these matchers (to rely on notifications) or read the interface properties is an implementation choice we can make.\n\nJust to be clear, there are known bugs in the former.  I'm not going to accept anything that's no safer than previously (otherwise what's the point in rewriting all the code).  Reading the interface properties on query is what we should go with.\n\n> For both the flows, Activation and ActivationProgress interfaces will be used which are existing interfaces.\n\nSounds good."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "InternalError? \n\nThere are a few more at \nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Software/Version.errors.yaml\n\nand https://github.com/openbmc/phosphor-bmc-code-mgmt/commit/098a6771e26c2c217b359d284fbca4d662e0aa73 had \n\n- name: UnTarFailure\n  description: An error occurred during untar.\n- name: ManifestFileFailure\n  description: An error when reading the Manifest file.\n- name: InternalFailure\n  description: The operation failed internally during processing the image.\n- name: ImageFailure\n  description: An error occured processing the image.\n- name: BusyFailure\n  description: The device is busy during the update."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 28,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "@Gunnar,\nI have already covered the ones from https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Software/Version.errors.yaml\nEd don't want to have AlreadyExists and there was a discussion around this. Ed's point was that there could be a valid reason to update an existing version on a device. Link to conversation - https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/65738/comment/b45b51be_3cf9e898/\n\nAbout https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Software/Image.errors.yaml\nUnTarFailure, ManifestFileFailure makes assumption about the image format to be tarred file or have a ManifestFile. The design doesn't impose any such restriction. Moreover, this option is already covered by InvalidImage failure at a broader level.\n\nInternalFailure - I might be wrong but i think Patrick was not in support of using InternalFailure as it doesn't help in any way by not providing any useful info.\n\n\nImageFailure has been covered by Incompatible, InvalidSignature, InvalidImage.\n\nBusyFailure cannot be returned from this API as update is a async operation and will happen in backend. Update Daemon can log a valid error message for it. I am not sure if we use these definitions in logging too?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "Doesn't this functional association today go from /xyz/openbmc_project/software/ to \n/xyz/openbmc_project/software/<software id> today?\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/5e7bca41c4460abb6f513ae8e0a67c551d6192a5/yaml/xyz/openbmc_project/Software/README.md?plain=1#L260\n\nbusctl get-property --no-pager xyz.openbmc_project.Software.BMC.Updater /xyz/openbmc_project/software xyz.openbmc_project.Association.Definitions  Associations\na(sss) 5 \"active\" \"software_version\" \"/xyz/openbmc_project/software/71d47a18\" \"updateable\" \"software_version\" \"/xyz/openbmc_project/software/71d47a18\" \"functional\" \"software_version\" \"/xyz/openbmc_project/software/bcfb7338\" \"active\" \"software_version\" \"/xyz/openbmc_project/software/bcfb7338\" \"updateable\" \"software_version\" \"/xyz/openbmc_project/software/bcfb7338\""
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Right now, there is just one use case for BMC, so we could have created this association that way. But this design is for Software Update in general for all type of devices. In that case the functional association needs to exist from Software Version to inventory item, so we can figure out what is the current running version for a FW inventory item. \nPlease let me know if you think i misunderstood your question."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, can we name this something better?  Based on my reading here, I can't differentiate between when I would use functional, and when I would use active, and the description doesn't help much."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 47,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 56,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "Isn't there already an Association that does this \n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/5e7bca41c4460abb6f513ae8e0a67c551d6192a5/yaml/xyz/openbmc_project/Software/README.md?plain=1#L265\n\nbusctl get-property --no-pager xyz.openbmc_project.Software.BMC.Updater /xyz/openbmc_project/software/bcfb7338 xyz.openbmc_project.Association.Definitions  Associations\na(sss) 1 \"inventory\" \"activation\" \"/xyz/openbmc_project/inventory/system/chassis/motherboard/ebmc_card_bmc\""
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 56,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "None, of the associations are documented right now in phosphor-dbus-interfaces. So, what i am doing is documenting them to get a consensus for the new design. Also, nomenclature wise 'active' seemed better, so changed it to active."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 60,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Priority order for... what?  You don't sepecify, but can there be more than one functional version?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 60,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Changed association names and added more description."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 117,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "8ea6ec01a4814fddd713cb8936ef910effeaa5f0",
            "parents": [
                "8e360784fc4edcc4de5b4b0f1fce5ffa7bf327fb"
            ],
            "ref": "refs/changes/38/65738/9",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1698095290,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 124,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "f87fe530b3be1dedebcefabf4e4cff22af1304f3",
            "parents": [
                "5d54b3d19c3b98d395a818693acb2fb0ca22a32d"
            ],
            "ref": "refs/changes/38/65738/10",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1698950711,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "96c651e162b01a490cf248699ac918961d874d18",
            "parents": [
                "e0466093ab40f57a409c6d1d21043cb7506b3405"
            ],
            "ref": "refs/changes/38/65738/11",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1707938050,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed the comments. Thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please update these names per the latest revision of the design document."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 54,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please update this item also."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "line": 54,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 131,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "c0bec47d696d06f9bf188e92d1d3db01bb6022fc",
            "parents": [
                "fdcdfbef30771a422e0d170e56fd14ed1b7a11f0"
            ],
            "ref": "refs/changes/38/65738/12",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1708990134,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Replied to the comments. Thanks"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Replied to your comments. Thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a method call, not a property.  There is no \"default\".  I'm a little surprised the schema allows this, maybe put it in the description?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 21,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Huh?  This seems like something we wouldn't want in the API, and I'm not really sure what it would map to in anything generic?  Maybe this is a meta-specific policy?  If we really must have this, we should define what \"update policies\" this bypasses, or multiple implementations will pick whatever they feel it like \"update policy\" means.\n\nIf it means \"don't check the image at all for correctness\" that's a worrying API to have.  We should probably break that into its own separate method call on an optional interface called \"ForceUpdate\" so that we can omit it separately and implementations can choose to not have it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Huh?  This seems like something we wouldn't want in the API, and I'm not really sure what it would map to in anything generic? Maybe this is a meta-specific policy?\n\nThis parameter already exist in the Redfish Update Service https://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#127\n\n> If we really must have this, we should define what \"update policies\" this bypasses, or multiple implementations will pick whatever they feel it like \"update policy\" means.\n\nIsn't that fine that implementation can choose what its own meaning of update policy is? For example, if they want to avoid some version checks or minimum ship level checks etc.\n\n\n> \n> If it means \"don't check the image at all for correctness\" that's a worrying API to have.\n  \nI agree we shouldn't skip the image correctness checks such as CRC etc. I am fine with adding restrictions around that.\n\n> We should probably break that into its own separate method call on an optional interface called \"ForceUpdate\" so that we can omit it separately and implementations can choose to not have it.\n\nIf implementation don't want to use the Dbus method parameter, it can choose to ignore the parameter and not act on it. Isn't it?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Huh?  This seems like something we wouldn't want in the API, and I'm not really sure what it would map to in anything generic? Maybe this is a meta-specific policy?\n> \n> This parameter already exist in the Redfish Update Service https://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#127\n\nSure.... and in that, it has a lot better description of what types of policies we're allowing.  I don't see any policies in the design doc, so it's not clear at a dbus level what policies we're \"forcing\".\n\nIn an effort to keep this patchset to what works, lets just remove the param, and if at such time we can figure out what a \"force update\" definition would be, we can add it back.\n\n> \n> > If we really must have this, we should define what \"update policies\" this bypasses, or multiple implementations will pick whatever they feel it like \"update policy\" means.\n> \n> Isn't that fine that implementation can choose what its own meaning of update policy is? For example, if they want to avoid some version checks or minimum ship level checks etc.\n\nHow does the client know what checks they're overriding in that case?  IMO, no, I don't think it should be an implementation specific detail.  In Redfish it might be, just because I dont' think a lot of implementations implement that parameter.\n\n> \n> \n> > \n> > If it means \"don't check the image at all for correctness\" that's a worrying API to have.\n>   \n> I agree we shouldn't skip the image correctness checks such as CRC etc. I am fine with adding restrictions around that.\n\nLets just keep it simple.  Keep the force update off, and if we find that we need ways to bypass specific policies in the future, we'll add them.\n\n> \n> > We should probably break that into its own separate method call on an optional interface called \"ForceUpdate\" so that we can omit it separately and implementations can choose to not have it.\n> \n> If implementation don't want to use the Dbus method parameter, it can choose to ignore the parameter and not act on it. Isn't it?\n\nNot according to this, and if we're ignoring a parameter, that seems like a bad idea."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "@Patrick,\nYou had asked for this parameter. Please let me know if you are fine with removing this. \n\nI suppose another alternative would be to add some more details on update policies which forceUpdate will bypass as thats what Ed is asking for.\nWhat forceUpdate can allow -\n- Allow a component to be downgraded.\nWhat forceUpdate can't allow -\n- Bypass minimum version enforcement."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> @Patrick,\n> You had asked for this parameter. Please let me know if you are fine with removing this. \n> \n> I suppose another alternative would be to add some more details on update policies which forceUpdate will bypass as thats what Ed is asking for.\n\nLets not try to do too much to start with.  Force update handling is going to be its own definition and feature.  Lets start with the simple \"just update the image\" flow, and we can add complexity as we get things working.\n\n> What forceUpdate can allow -\n> - Allow a component to be downgraded.\n\nWhy isn't this the default?  Downgrade should be allowed unless there's a security reason not to, and maintaining security revisions properly doesn't seem like it's covered in the design.\n\nIf the downgrade policy is trivially bypassed with a user facing parameter, what's the point in having it?  Generally downgrade restrictions are done for security reasons, but if it's settable by a user, clearly it's not a security boundary.\n\n> What forceUpdate can't allow -\n> - Bypass minimum version enforcement.\n\nI see no mention of \"minimum version enforcement\" in your doc.  Lets not try to do too much all at once here."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Removed the ForcedUpdate from this patch."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should we require that this takes some kind of argument to denote which image to apply?  I could see a race where\n\nClient A and B try to do updates\n\nClient A calls StartUpdate\nClient B calls StartUpdate\nClient A calls ApplyStagedImage, expecting to get image A, but gets image B without any error.\n\nMaybe we need to return a unique identifier as part of StartUpdate that can then be given to this call, to make it at least be able to return an error if the above happens?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Should we require that this takes some kind of argument to denote which image to apply?  I could see a race where\n> \n> Client A and B try to do updates\n> \n> Client A calls StartUpdate\n> Client B calls StartUpdate\n> Client A calls ApplyStagedImage, expecting to get image A, but gets image B without any error.\n> \n> Maybe we need to return a unique identifier as part of StartUpdate that can then be given to this call, to make it at least be able to return an error if the above happens?\n\nhttps://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#141\n\nThe Redfish StartUpdate API doesn't seem to be taking any input parameter.\nHence, i don't see anything which can tell whether to apply ImageA vs ImageB. But what i do see is HttpPushUriOptionsBusy which can help to avoid contention between clients when it comes to update operation.\nNow, where shall we keep this Busy state - bmcWeb or Code-Updater is something we might have to discuss?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Should we require that this takes some kind of argument to denote which image to apply?  I could see a race where\n> > \n> > Client A and B try to do updates\n> > \n> > Client A calls StartUpdate\n> > Client B calls StartUpdate\n> > Client A calls ApplyStagedImage, expecting to get image A, but gets image B without any error.\n> > \n> > Maybe we need to return a unique identifier as part of StartUpdate that can then be given to this call, to make it at least be able to return an error if the above happens?\n> \n> https://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#141\n> \n> The Redfish StartUpdate API doesn't seem to be taking any input parameter.\n> Hence, i don't see anything which can tell whether to apply ImageA vs ImageB.\n\nRight, because the state is built during other commands.\n\n> But what i do see is HttpPushUriOptionsBusy which can help to avoid contention between clients when it comes to update operation.\n> Now, where shall we keep this Busy state - bmcWeb or Code-Updater is something we might have to discuss?\n\nNot bmcweb for sure.  bmcweb should not maintain state.  I could see an argument that before uploading an image, or starting an update, bmcweb would go check to see if any existing updates are in progress, and return HttpPushUriOptionsBusy if anything is currently updating.  That MIGHT be reasonable?  But would prevent parallel updates.\n\nMultipartHttpPushUri is the thing that's going to be building state up for updates."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> > > Should we require that this takes some kind of argument to denote which image to apply?  I could see a race where\n> > > \n> > > Client A and B try to do updates\n> > > \n> > > Client A calls StartUpdate\n> > > Client B calls StartUpdate\n> > > Client A calls ApplyStagedImage, expecting to get image A, but gets image B without any error.\n> > > \n> > > Maybe we need to return a unique identifier as part of StartUpdate that can then be given to this call, to make it at least be able to return an error if the above happens?\n> > \n> > https://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#141\n> > \n> > The Redfish StartUpdate API doesn't seem to be taking any input parameter.\n> > Hence, i don't see anything which can tell whether to apply ImageA vs ImageB.\n> \n> Right, because the state is built during other commands.\n\nCan you please elaborate which command sequence will build the state as you mentioned in the example above (same device being upgraded in parallel by two clients). As per my understanding, I don't see the command flow in the current Redfish interface which can help to achieve this.\n\n> \n> > But what i do see is HttpPushUriOptionsBusy which can help to avoid contention between clients when it comes to update operation.\n> > Now, where shall we keep this Busy state - bmcWeb or Code-Updater is something we might have to discuss?\n> \n> Not bmcweb for sure.  bmcweb should not maintain state.  I could see an argument that before uploading an image, or starting an update, bmcweb would go check to see if any existing updates are in progress, and return HttpPushUriOptionsBusy if anything is currently updating.  \n\nHttpPushUriOptionsBusy is \"readonly\": false, property which as per my understanding client will set on bmcweb to take lock or mutual exclusion for the update operation. As per description -\n\"When a client uses any HttpPushUriOptions properties for software updates, it should set this property to `true`.\"\n\nThat MIGHT be reasonable?  But would prevent parallel updates.\n> \n\nDo we really want to allow parallel upgrades for same device? If yes, then how as i don't see that support in existing Redfish interface.\n\n> MultipartHttpPushUri is the thing that's going to be building state up for updates.\n\nIsn't MultipartHttpPushUri a readonly=true property which provides the multipart URI to which the client can post the Multipart image?  As per description -\n\"This property shall contain a URI used to perform a Redfish Specification-defined Multipart HTTP or HTTPS POST of a software image\"\nHow would this help with building state up for updates?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > > Should we require that this takes some kind of argument to denote which image to apply?  I could see a race where\n> > > > \n> > > > Client A and B try to do updates\n> > > > \n> > > > Client A calls StartUpdate\n> > > > Client B calls StartUpdate\n> > > > Client A calls ApplyStagedImage, expecting to get image A, but gets image B without any error.\n> > > > \n> > > > Maybe we need to return a unique identifier as part of StartUpdate that can then be given to this call, to make it at least be able to return an error if the above happens?\n> > > \n> > > https://grok.openbmc.org/xref/openbmc/bmcweb/static/redfish/v1/schema/UpdateService_v1.xml?r=2ae81db9#141\n> > > \n> > > The Redfish StartUpdate API doesn't seem to be taking any input parameter.\n> > > Hence, i don't see anything which can tell whether to apply ImageA vs ImageB.\n> > \n> > Right, because the state is built during other commands.\n> \n> Can you please elaborate which command sequence will build the state as you mentioned in the example above (same device being upgraded in parallel by two clients). As per my understanding, I don't see the command flow in the current Redfish interface which can help to achieve this.\n\nCreating a match expression stores state in bmcweb that needs tracked, and causes bugs like I've sent you before if bmcweb restarts during a firmware update:\nhttps://github.com/openbmc/bmcweb/issues/202\n\n> \n> > \n> > > But what i do see is HttpPushUriOptionsBusy which can help to avoid contention between clients when it comes to update operation.\n> > > Now, where shall we keep this Busy state - bmcWeb or Code-Updater is something we might have to discuss?\n> > \n> > Not bmcweb for sure.  bmcweb should not maintain state.  I could see an argument that before uploading an image, or starting an update, bmcweb would go check to see if any existing updates are in progress, and return HttpPushUriOptionsBusy if anything is currently updating.  \n> \n> HttpPushUriOptionsBusy is \"readonly\": false, property which as per my understanding client will set on bmcweb to take lock or mutual exclusion for the update operation. As per description -\n\nbmcweb should not \"take a lock\".  That implies that bmcweb is the thing executing the update.  At most, bmcweb might grab a lock on behalf of the http user.\n\n> \"When a client uses any HttpPushUriOptions properties for software updates, it should set this property to `true`.\"\n> \n> That MIGHT be reasonable?  But would prevent parallel updates.\n\nThat seems like an issue as well.  I would expect that the tag that you return to the user once the image is uploaded can map to the tag on dbus such that when the user starts the update, the update can map to the dbus identity of the image, rather than just \"load all images\".\n\n> > \n> \n> Do we really want to allow parallel upgrades for same device? If yes, then how as i don't see that support in existing Redfish interface.\n\nFor the same device seems like it's not a use case, but there needs to be explicit checking and proper error codes if it happens.\n\n> \n> > MultipartHttpPushUri is the thing that's going to be building state up for updates.\n> \n> Isn't MultipartHttpPushUri a readonly=true property which provides the multipart URI to which the client can post the Multipart image?  As per description -\n> \"This property shall contain a URI used to perform a Redfish Specification-defined Multipart HTTP or HTTPS POST of a software image\"\n> How would this help with building state up for updates?\n\nMultipartHttpPushUri  is how images are uploaded when a Redfish service supports multiple devices.  SimpleUpdate doesn't support  multiple devices so far as I'm aware."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 35,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Removed the Stage and Apply related changes from the patch."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What's the use case for this mode?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "This tells the startUpdate API to only stage the image and not apply it. It will be applied when ApplyStagedImage method will be called (in response to StartUpdate Redfish API call)."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This tells the startUpdate API to only stage the image and not apply it. It will be applied when ApplyStagedImage method will be called (in response to StartUpdate Redfish API call).\n\nRight..... why do we need that?  From other bmc implementations, requiring an implementation of this makes the solution significantly more complicated."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Right..... why do we need that?  From other bmc implementations, requiring an implementation of this makes the solution significantly more complicated.\n\nThen how do we tell the startUpdate API not to apply the image but only stage it? Do you want to add another API for staging?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Then how do we tell the startUpdate API not to apply the image but only stage it?\n\nI guess I'm advising that a \"staging\" type interface is complicated, and most BMC stacks that I've worked on in the past don't support \"staging\" multiple updates at once.  Update resets are done once the image has been loaded, to avoid a complex API.\n\n> Do you want to add another API for staging?\n\nWhat I'd really like is to just see the simple, upload an image, image gets applied, device gets reset flow work first, then we can make it more complex incrementally."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, removed the Stage and Update flow from the interface."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 132,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "66f186829c59e8645238e234a94f9a27fbc05fdd",
            "parents": [
                "534515b7ca4cea7dfcf151882bc5987fef3f94d5"
            ],
            "ref": "refs/changes/38/65738/13",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1709182624,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, I'm having a really tough time understanding how these APIs come together to form a working Redfish solution where bmcweb doesn't maintain state, multiple updates are supported at a time, and \"delayed\" updates are supported. With that said I'm not sure it's productive to argue at this high level.\n\nThis APIs are probably close enough to start coding, and I suspect that a lot of the bugs will be apparent once some of the code is written.  If you have code that already implements these, please share it.  It is quite possible that I'm too close to the existing dbus interfaces, and am having trouble seeing what the flow will actually look like.\n\nLets get some code moving, and we can regroup on this patchset after we have some indication that these interfaces work as designed."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, i am working on the patchset for changing the Dbus Interface. As we discussed the changes will be applied in phases. My plan -\n\n1. Add the new DBus interface in all repos (multiple repos alongwith bmcweb) with existing features. This will only involve supporting the existing SimpleUpdate flow.\n2. Update phosphor-bmc-code-mgmt to have a single daemon and code refactoring around it.\n2. Add StagedImage support using StartUpdate Redfish flow.\n3. More features as per design."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "#1 seems very likely that you'll have significant rework, rather than getting one daemon working for the full flow through redfish to verify the interfaces are correct, but it's up to you."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 54,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 132,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "722ceef8cad945ef9a6da70d02f69371b1d25b19",
            "parents": [
                "534515b7ca4cea7dfcf151882bc5987fef3f94d5"
            ],
            "ref": "refs/changes/38/65738/14",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1709715371,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed and replied to your comments. Thanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 142,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "a768ea0f30663551c431e1e0d849fc0eca313318",
            "parents": [
                "534515b7ca4cea7dfcf151882bc5987fef3f94d5"
            ],
            "ref": "refs/changes/38/65738/15",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1709767569,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 129,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "46dc50db567ef58498b1c54b73cfa86ae967cc02",
            "parents": [
                "25507c8e7eb64893063d9b55caced4a9a100334c"
            ],
            "ref": "refs/changes/38/65738/16",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1709767584,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I see there were removals between PS12 and PS16 to address feedback.  Are we going to get follow up commits in this repository so that the result looks like this design?  Can we stack those changes on top of this one so we at least have something to point people at if they ask questions?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, i have raised the patches as stack. But let's keep them separate and we will revisit, discuss and merge those as we work on those features."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed your comments. Thanks"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Doesn't this need to be a `set[enum[...]]`?\n\nDo we need a default value?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Do we need a default value?\n\nI'd prefer not.  services exporting this interface should explicitly declare what they support."
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "line": 34,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Updated the type to be set[enum[self.ApplyTimes]].\n\nAs we discussed skipping the default for now as defaults don't support providing a set as default. Raised https://github.com/openbmc/sdbusplus/issues/93 for this support."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 129,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "4206b1ac6fde78bcbaca6fc766af8a4dc34c6b0d",
            "parents": [
                "25507c8e7eb64893063d9b55caced4a9a100334c"
            ],
            "ref": "refs/changes/38/65738/17",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1710183515,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Code looks fine. what is the follow up plan for alignment with accepted design?  (Question I asked in PS16)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed your comments and raised other changes as separate patches in stack."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Raised separate patches in stack."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.interface.yaml",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/Software/Update.errors.yaml",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "gen/xyz/openbmc_project/Software/Update/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 129,
            "sizeDeletions": 0
        }
    ]
}