{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "Id52d1fc3b26010c864c7e64d3dfdf0a2b5de9294",
    "number": 75349,
    "subject": "service: device-tree node vpd to d-bus hw id data",
    "owner": {
        "name": "Christopher Sides",
        "email": "christopher.sides@hpe.com",
        "username": "csides-hpe"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349",
    "hashtags": [],
    "createdOn": 1729191138,
    "lastUpdated": 1730389396,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1729191138,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729191179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729191179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729191388,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93332/ : FAILURE"
        },
        {
            "timestamp": 1729193797,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729230148,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729261337,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729264923,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729275986,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(8 comments)"
        },
        {
            "timestamp": 1729540267,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1729800168,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729800231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729800231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1729800471,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93700/ : SUCCESS"
        },
        {
            "timestamp": 1729800666,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729800721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729800721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1729800954,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93701/ : SUCCESS"
        },
        {
            "timestamp": 1729801417,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1729801939,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729804096,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1729815570,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1729865316,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729891919,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729913161,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729956928,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729956951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729956951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1729957186,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93794/ : SUCCESS"
        },
        {
            "timestamp": 1729957515,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1730074249,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1730129193,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(6 comments)"
        },
        {
            "timestamp": 1730136690,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 4:\n\n(7 comments)"
        },
        {
            "timestamp": 1730149290,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730149327,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730149327,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1730149563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93845/ : SUCCESS"
        },
        {
            "timestamp": 1730149758,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1730151090,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 6: Published edit on patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730151127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730151128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1730151362,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93847/ : SUCCESS"
        },
        {
            "timestamp": 1730198431,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1730217005,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730217028,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730217029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1730217266,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93886/ : SUCCESS"
        },
        {
            "timestamp": 1730217269,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1730217578,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1730217653,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1730229101,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730229125,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730229125,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1730229358,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93895/ : SUCCESS"
        },
        {
            "timestamp": 1730229373,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1730229629,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1730233035,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8:\n\n(5 comments)"
        },
        {
            "timestamp": 1730248368,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1730304501,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 8:\n\n(8 comments)"
        },
        {
            "timestamp": 1730308653,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1730308696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1730308696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1730308956,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93918/ : SUCCESS"
        },
        {
            "timestamp": 1730314243,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1730333135,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1730387330,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 9: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1730389396,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Change has been successfully rebased and submitted as 2ab7341b7bd9467de10c8a6e6fdfd7f9801dc529"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "de8b4fa7473d0c6a41db77a6e100a71f50561193",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/1",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1729191138,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "This is a version of the daemon that builds and works on a live system, but does not pass CI testing.\n\nAs of the writing, the CI tool appears to be making suggestions that stop it from building. A revision with the suggestions accepted is here:\n\n75353: entity-manager: dt-vpd daemon broken by ci tool changes | https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75353\n\nI plan to ask around on the OBMC discord in the near future for help figuring out what needs to be done (but am about to be headed out to a doc apt today)"
                },
                {
                    "file": "meson.build",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "whitespace issues."
                },
                {
                    "file": "meson.build",
                    "line": 39,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Since it seems like the CI tool scripts don't catch this kind of thing automatically - any recommended tools for checking this stuff automatically before I push to Gerrit?"
                },
                {
                    "file": "meson.build",
                    "line": 39,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I think most people just have it built into their editors. I use a vim plugin."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "source files names should be snake_case."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is a copy.  I suspect this will go away shortly though."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wildcard captures are generally disallowed, as they are hard to review."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Is capturing 'this' for access to members of the MachineContext object instance acceptable, or would something else be preferred?\n\nI tried capturing \"MachineContext::Asset:model\" (overloaded setter for the inherited property I'm trying to update), but I get errors along the lines of\n\nerror: capture of non-variable 'sdbusplus::aserver::xyz::openbmc_project::inventory::decorator::details::Asset<MachineContext, sdbusplus::async::server::server<MachineContext, sdbusplus::aserver::xyz::openbmc_project::inventory::decorator::details::Asset> >::model'\n|    25 |     std::thread readInThread([&model] {\n\n\nand I haven't worked out what other options are available for capturing those references yet."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "yea, [this] is fine"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It looks like you're having some difficulty with this, and I feel like this approach might be over-complicating it.\n\nThe devicetree isn't something that changes on a whim; properties of a node are described in machine-checked bindings because they form an ABI between the firmware and the kernel.\n\nI don't see a reason we can't hard-code the setting of these members rather than have the complexity of the property map with lambdas. The only thing that's necessary is testing if the file exists."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Fair enough. The structure seemed like a really cool idea suggested in a previous review that left things open for easy expansion in the future.\n(https://gerrit.openbmc.org/c/openbmc/phosphor-u-boot-env-mgr/+/71512/comment/34ca01d8_5acf8f3d/)\n\nThe weird thing is that the code itself works-- but when the CI tool runs, it wants to change any function containing this map def into a 'static' (replacing 'const' if set) -- which breaks the closure getting a reference to an instanced object.\n\nI'm about to jump on Discord and ask around to see if I can get a handle on why the CI tool is so insistent about following this structure with a 'static' label. \nCurrently I'm suspecting it's something to do with the tool thinking \"map being defined on-the-spot? clearly that could be static.\"\n\nEither way, I'll put \"just get rid of the structure and hardcode\" on the shortlist of serious considerations."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Discord discussion about the CI tool suggestions breaking things posted @\nhttps://discord.com/channels/775381525260664832/817151035197358081/1296853865911812097"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I feel like this approach might be over-complicating it.\n\n+1\n\nI think in discord I posted this, but duplicating in gerrit for visibility\n```\nif (name == \"serial-number\"){\n    MachineContext::Asset::serial_number(....);\n}\n```\n\nIn addition, I would say as an overall goal, lets keep _this patch_ simple.  If in future patches we find that we need targetable per handler dynamic callbacks we can do implement that when we can justify the complexity.  For now, just a fixed list of keys and direct call methods will work just fine."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You're constructing a map here, then you're using it like a list."
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is doing a blocking IO call in the async reactor, which will deadlock all other calls if this node takes a long time to reply.  In asio we have uring based file readers, or should we do this in its own thread so we don't block dbus?"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "snake_case filenames here too."
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is only used in one place, and realistically has nothing to do with this class.  Just inline this."
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is only ever called in the constructor.  Maybe just make this the constructor?"
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I ran into linker issues when I call out the MachineContext constructor in machine_context.hpp, then define the implimentation in the cpp (attempting to avoid implementation code in the header file). \n\nI *think* I can work around that with some meson.build changes, but I haven't gotten that working in experiments yet.\n\nDefining a MC constructor in the header that calls a member function with the implementation details works around the linker issue without meson changes.\n\nThoughts?"
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Looks like we're now discussing having the populate function called explicitly, instead of in the constructor.\n\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349/comment/0ad4625c_5eab1232/"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/machinecontext.hpp",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/machinecontext.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 193,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "c4da97dcfaa33d8ab91f750eaa146d0d19ebed65",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/2",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1729800168,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "31c5d474ca940444236d4166110382a0229b95d1",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/3",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1729800666,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Note: All Async API examples I've seen in SDBusPlus use\n\n>ctx.spawn( -> sdbusplus::async::task<> {\n>    ctx.request_name(reqDBusName);\n>    co_return;\n>}(ctx));\n\n\nhttps://github.com/openbmc/sdbusplus/blob/578b9733d30bb03015715932e9f64d11416655ca/example/coroutine-example.cpp#L101\n\nhttps://github.com/openbmc/sdbusplus/blob/578b9733d30bb03015715932e9f64d11416655ca/example/calculator-client.cpp#L69\n\nhttps://github.com/openbmc/sdbusplus/blob/578b9733d30bb03015715932e9f64d11416655ca/example/calculator-aserver.cpp#L67\n\nbut when Entity-Manager's clang-tidy rule \"readability-static-accessed-through-instance\" (with warning as error flag set) hits this line, it throws 'bad' suggestions -- seemingly no matter how simple the call being passed to 'spawn'\n\nrelevant here CI tool output (and discussion) here:\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/75353/comment/57743120_586df2a2/\n\nThe 'original' code works if //NOLINTNEXTLINE(readability-static-accessed-through-instance) is specified, but I have the impression we don't want to do that if it can be avoided."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "My vote would be the NOLINT direction.  Patrick had found the clang-tidy issue where they have plans to handle it better in the next version so hopefully it'd just be temporary anyway."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why do we have threads and mutexes? This seems too complex. I'd much rather we read the procfs devicetree attributes into stack-local variables before doing any DBus-related work, and drop the threads and the mutexes."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I experimented with std::thread partially as \n\nA) potential workaround for erroneous CI tool output surrounding Async API .spawn calls (discussion on that here: https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75353/comment/57743120_586df2a2/ --  but now it sounds like we're leaning towards rolling back this bit back to using Async API's context.spawn + a //NOLINT tag)\n\nB) in response to a comment Ed T made about the MachineContext populate operation:\n>This is doing a blocking IO call in the async reactor, which will deadlock all other calls if this node takes a long time to reply. In asio we have uring based file readers, or should we do this in its own thread so we don't block dbus?\n\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349/comment/dcde11bc_365a072c/\n\nI have not yet dug into the uring file reader option since it seemed like using std::thread might solve a few things at a once-- but I'll go ahead and take a closer look into the uring readers option next."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think explicit consideration of io_uring is over-complicating it as well.\n\nAll we need to do is:\n\n1. do simple blocking reads of the procfs files into local variables\n2. setup and run the async dbus stuff, passing the local variables in as the data for the machine context object\n\nin that order.\n\nThe blocking reads aren't even going to block, the data comes straight of memory, so IMO the concern seems a bit overblown. However the approach above removes the problem.\n\nIf necessary, a `//NOLINT` is preferable than invoking the complexity of threads and mutexes."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": ">do simple blocking reads of the procfs files into local variables\nsetup and run the async dbus stuff, passing the local variables in as the data for the machine context object\n\nPatrick may have more insight into how Async API works behind the scenes here and may correct me -- but I have the impression the steps you've enumerated are more-or-less the default behavior when going through SDBusPlus Async API -- if I hadn't added the thread-related code.\n\nMy current understanding of the process seen in lines 12 - 14 here is:\nMachineContext object is instantiated. The constructor does blocking reads (without the std:::thread stuff; that's new), and uses the results to populate properties that were inherited from an SDBusPlus Async API version of Inventory::Asset. A reference to this instance is saved to 'async::context ctx.' \n\nI *think* the spawn call just cues up anything that needs to be done asynchronously at this point, then when ctx.run() is called, the spawn function fires off, then the MachineContext object is consumed and a d-bus bus is plumbed out based on that.\n\nUp until ctx.run() is called, I believe nothing here interacts with d-bus. Once ctx.run() is called, changes to the MachineContext object do not appear to be reflected to the associated d-bus property after that point.\n\nIf things really that simple with the Async API, it seems like I *might* be able to just remove the std::thread stuff, put the ctx.spawn with //NOLINT back into the dt_vpd_parser.cpp and expect things to be 'good as-is'."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've gone ahead and reverted the thread and mutex additions for now."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "bb793d5347b4630cd521d80bfdd8b69d9032705c",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/4",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1729956928,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thread & mutex code removed for now."
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why a different busname from the service name?  If you named the service name with an `xyz...` this is surprising."
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "line": 8,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The service name and bus name matched previously, but the bus name was simplified (to match fru-device handling, IIRC) based on another comment.\n\nMy thinking on *not* changing the service name too was that MachineContext is a class -> bus that encapsulates info from the device tree that gives context about the hardware OBMC is running on, and that the 'daemon/service' is driving the parsing of the device-tree to populate that bus-- which is an abstraction for 'misc' hardware communicating data readable through DT nodes.\n\nvs. the fru-device daemon, which generally focuses on I2C-based EEPROM 'fru-devices.'\n\nIf the bus name == service name is a strong preference, I'm not stuck on using the current service file name."
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "line": 8,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The daemon & service name are now 'devicetree-vpd-parserd' and 'devicetree-vpd-parserd.service' respecctively."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Where'd this come from?\n\nI'm not really liking the separate path (vs inventory) but I guess this is in some regards a \"hidden\" API within entity-manager.\n\nDo we have any other suggestions than \"MachineContext\"?  I don't have any alternatives but \"Context\" seems so vague to not be very helpful."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "We've gone through a fair number of name changes, but the name 'MachineContext' ultimately got the least pushback. I'd say the idea here is that MachineContext can represent any kind of device that can give OBMC context about the hardware it's booting on through the device-tree. (and folks *definitely* didn't want \"device-tree\" in the name.)\n\nI think this was the last bit real of discussion on the topic (with a much longer previous discussion I'm having trouble digging up) before the 'MachineContext' name started being used here, in the doc, and in Discord discussions:\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/66369/comment/a2a72830_f4385807/"
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 5,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why is it necessary to parse these in the implementation of the `MachineContext` class? Can we not do this in the implementation of `main()` and pass the results through the constructor of `MachineContext`? Then there's no IO beyond D-Bus IO involved in `MachineContext` (which is a better separation of concerns IMO)."
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It doesn't seem to me like it really matters where the code lives.  Having a big blob of random device tree processing in the main function doesn't sound that great either, so at some point this becomes a function.  A static function in main vs a non-static function here isn't really that different, is it?\n\nMaybe move `populate` to be called explicitly rather than implicitly via the constructor?"
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've gone ahead and refactored populate() to populateFromDeviceTree(), and it is now called explicitly from main(), rather than from the constructor in the next rev."
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machine_context.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want this to explicitly be a `&&` ?\n\nI guess in the original code this ends up being a c-string, so why the extra work of a std::forward anyhow?\n\nLooks like the `server` class implementation uses a c-string also."
                },
                {
                    "file": "src/machine_context.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I originally added the std::forward based on a nit: for an earlier version of this code when it was being reviewed for a different repo. \n\nAsking around, I got the impression it probably wasn't needed in this *specific* case, but it wouldn't hurt anything either. \n\nI'll go ahead and take it out in the next revision to keep things simpler. \n\nI'm thinking there's not too many examples of Async API being used yet, so I'd definitely like to get this done in a way folks feel would 'set a good example' for future usage -- whatever that ends up meaning."
                },
                {
                    "file": "src/machine_context.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machine_context.hpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm slightly surprised this decltype is necessary."
                },
                {
                    "file": "src/meson.build",
                    "line": 62,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We will need a wrap file for this."
                },
                {
                    "file": "src/meson.build",
                    "line": 62,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I tried checking in phosphor_dbus_interfaces.wrap, but discovered there's a specific callout in entity-manager repo's root-level .gitignore about it\n\n> build*/*\n> subprojects/*\n> !subprojects/*.wrap\n> subprojects/phosphor-dbus-interfaces.wrap\n> !subprojects/.clang-tidy\n> !subprojects/.clang-format"
                },
                {
                    "file": "src/meson.build",
                    "line": 62,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It is in gitignore right now because we were getting a wrapfile \"for free\" from phosphor-logging as a secondary dependency.  Now it is a first-class dependency we need to explicitly add it.\n\n```\n$ cat subprojects/phosphor-dbus-interfaces.wrap \n[wrap-redirect]\nfilename = phosphor-logging/subprojects/phosphor-dbus-interfaces.wrap\n```\n\nThis is what is currently in place as a secondary dependency."
                },
                {
                    "file": "src/meson.build",
                    "line": 62,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Alright-- relevant line removed from .gitignore, and subprojects/phosphor-dbus-interfaces.wrap added"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.DeviceTree.VPD.Parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 174,
            "sizeDeletions": 1
        },
        {
            "number": 5,
            "revision": "3c2e6a3a60468b18da82cc02c54cb95f21de29b6",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/5",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730149290,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Tweaked daemon executable & service names to better align with convention, simplified some elements in constructor inheritance handling, and now the MachineContext populate function is explicitly called from main(), instead of being part of the constructor."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 190,
            "sizeDeletions": 1
        },
        {
            "number": 6,
            "revision": "3cc38876116241805228d4c8f5b2b778b35301c0",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/6",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730151090,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 188,
            "sizeDeletions": 1
        },
        {
            "number": 7,
            "revision": "bd3b1119274dc45d1dcccf72b7e6b97bd2f40ed7",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/7",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730217005,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Mostly ok with the code as is.  I think we should add something to prevent the MachineContext object from being created if the device tree path is totally non-existant."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I added a static function that checks for specific node existence at the basepath (since device-tree root is always present). \n\nI considered setting 'model' as a default parameter in the header, but decided setting it main() where the static function is called was more readable.\n\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349/8/src/dt_vpd_parser.cpp#27\n\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349/8/src/machine_context.cpp#39"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I just realized you said *if the device tree path is totally non-existent*, not \"if specific nodes aren't there\" -- but the proposed function should handle for that situation too."
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do we ensure there isn't a blank object created if someone runs this when they don't have the device tree entries added?  Should we look for `nodeBasePath` before creating this object?"
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 195,
            "sizeDeletions": 2
        },
        {
            "number": 8,
            "revision": "939d699195af2d7760ade854359d06e0c2ea2c24",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/8",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730229101,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we drop the `d` from the end of the name?"
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done. \n\nI'm now reading that adding 'd' to the end of services is maybe an older unix-based convention that doesn't apply so much to newer systemd-based services. Safe to assume that's the reason for this change?"
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, it's pretty rare these days."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we make the source file name match the binary name and the service name?"
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Construction shouldn't be necessary (would be done implicitly)."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Maybe \"model\" is your most important / required field, but do we want to have to express particular fields here?  Seems like it would be more appropriate to have a \"is the device tree good enough\" call and leave the details of which field to the MachineContext class."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Good point. \n\nI thought to set 'model' here instead of as a default param in the .hpp for readability, but just handling any check(s) internally probably makes more sense than offering parameter options that aren't likely to be needed without additional changes to MachineContext source."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Use `make_unique` rather than a raw new/pointer."
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "https://en.cppreference.com/w/cpp/filesystem/exists"
                },
                {
                    "file": "src/machine_context.cpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/dt_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "service_files/devicetree-vpd-parserd.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 208,
            "sizeDeletions": 2
        },
        {
            "number": 9,
            "revision": "1ec0acf56d86497a7e92faaeda40c3a2b44138d3",
            "parents": [
                "1ee3235ca51b1fe35ab6c4d3443fa1477b2d91e8"
            ],
            "ref": "refs/changes/49/75349/9",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730308653,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "service_files/devicetree-vpd-parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "src/devicetree_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 212,
            "sizeDeletions": 2
        },
        {
            "number": 10,
            "revision": "2ab7341b7bd9467de10c8a6e6fdfd7f9801dc529",
            "parents": [
                "28649a9cf790d1dc9e04905b819beeadcdcd9e5f"
            ],
            "ref": "refs/changes/49/75349/10",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1730389396,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "service_files/devicetree-vpd-parser.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "src/devicetree_vpd_parser.cpp",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -1
                },
                {
                    "file": "src/machine_context.hpp",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/machine_context.cpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 212,
            "sizeDeletions": 2
        }
    ]
}