{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ideff1470d366926591827bbfabf6759e55a1456e",
    "number": 75500,
    "subject": "code update: add pre post update targets",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/75500",
    "hashtags": [
        "PLDM-packaging"
    ],
    "createdOn": 1729876613,
    "lastUpdated": 1735846139,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1729876613,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729876631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729876631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729876656,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93764/ : SUCCESS"
        },
        {
            "timestamp": 1729878979,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1730096450,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1730106416,
            "reviewer": {
                "name": "Unive Tien",
                "email": "unive.tien.wiwynn@gmail.com",
                "username": "UniveTien"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(3 comments)"
        },
        {
            "timestamp": 1730106761,
            "reviewer": {
                "name": "Christopher Meis",
                "email": "christopher.meis@9elements.com",
                "username": "ChriMarMe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1730107838,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1730258622,
            "reviewer": {
                "name": "Unive Tien",
                "email": "unive.tien.wiwynn@gmail.com",
                "username": "UniveTien"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1730272301,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1730278545,
            "reviewer": {
                "name": "Unive Tien",
                "email": "unive.tien.wiwynn@gmail.com",
                "username": "UniveTien"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1730279462,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1731004073,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review+1, Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1731004101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731004101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1731004126,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94187/ : SUCCESS"
        },
        {
            "timestamp": 1731005079,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1731057494,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1733163146,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1734118811,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Hashtag added: redfish-updateservice-use-dbus"
        },
        {
            "timestamp": 1734132262,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Hashtag added: PLDM-packaging"
        },
        {
            "timestamp": 1734132265,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Hashtag removed: redfish-updateservice-use-dbus"
        },
        {
            "timestamp": 1735263774,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1735263796,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1735263796,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1735263819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/97486/ : SUCCESS"
        },
        {
            "timestamp": 1735263934,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 4: New patch set was added with same tree, parent tree, and commit message as Patch Set 3.\n\nCopied Votes:\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1735263966,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1735263967,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1735263994,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/97489/ : SUCCESS"
        },
        {
            "timestamp": 1735266661,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1735267283,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1735267828,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1735267842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1735267842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1735267846,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1735267873,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/97491/ : SUCCESS"
        },
        {
            "timestamp": 1735836923,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1735845684,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1735846139,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "07111dfc5f8a2bd9a5e49c4e3b66e5ed056edc25",
            "parents": [
                "0df59f4dd0e10247dff672234fd92dae9ddaad8f"
            ],
            "ref": "refs/changes/00/75500/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729876613,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "i think this is difficult conceptually since configuring a systemd target loses all information about what that target is intended to do.\n\nIf the pre- and post-condition is hardcoded in the device-specific firmware update daemon then the potential for misconfiguration is removed.\n\nSince the pre- and post-condition is device specific.\n\nCan you provide any specific example of a use-case for the pre- and post-update target that can or should not be solved inside the device-specific update daemon."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> i think this is difficult conceptually since configuring a systemd target loses all information about what that target is intended to do.\n\nNot sure what you mean by \"configuring a systemd target loses all information about what that target is intended to do.\"?\n> \n> If the pre- and post-condition is hardcoded in the device-specific firmware update daemon then the potential for misconfiguration is removed.\n\nNot all Code Updater deamons are device specific. PLDMd is one such example which can handle update for wide variety of PLDM devices, which can have different pre and post conditions. Also, for same device type pre and post conditions can change depending upon the platform type and where that particular component is positioned.\n\n> \n> Since the pre- and post-condition is device specific.\n\npre and post systemd targets can be device specific too.\n\n> \n> Can you provide any specific example of a use-case for the pre- and post-update target that can or should not be solved inside the device-specific update daemon.\n\nAs i mentioned above, PLDMd is such an example which handles update for all PLDM devices and pre & post conditions for devices can be different depending upon the platform type."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Unive Tien",
                        "email": "unive.tien.wiwynn@gmail.com",
                        "username": "UniveTien"
                    },
                    "message": "Hi Jagpal, thanks for your work, I have start implementing the code with this schema, but some of the details might be unclear to me, I have list my questions below."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Meis",
                        "email": "christopher.meis@9elements.com",
                        "username": "ChriMarMe"
                    },
                    "message": "For me it is not clear in which layer or subrepo this configuration (the JSON-config) shall take place. Can you clearify that?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> Not sure what you mean by \"configuring a systemd target loses all information about what that target is intended to do.\"?\n\nYou posted a question here but marked my comment as resolved. If there is still questions, my comment is not resolved.\n\nWhat i mean here is that in your proposal, you suggest running configured systemd services before and after the update. The code updater application will have no way to know what these services are doing and thus refactoring the application logic will be very difficult.\n\n> Not all Code Updater deamons are device specific. PLDMd is one such example which can handle update for wide variety of PLDM devices, which can have different pre and post conditions. Also, for same device type pre and post conditions can change depending upon the platform type and where that particular component is positioned.\n\nLooking at pldmd, if it is handling updates for multiple devices, it can handle all the required pre- and post- update logic internally.\n\n> As i mentioned above, PLDMd is such an example which handles update for all PLDM devices and pre & post conditions for devices can be different depending upon the platform type.\n\nThat's not a specific example.\n\nAlso, is this change a design for pldmd? If so, maybe we should mark the pldm reviewers aswell to review the change."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Unive Tien",
                        "email": "unive.tien.wiwynn@gmail.com",
                        "username": "UniveTien"
                    },
                    "message": "In our case, we're currently trying to update BICs for Yosemite4, which would reset itself automatically without a proper controlable and mesureable approaches when update is done, causing bad attempts acquiring active version from BIC, because we're not able to know when it would complete resetting, adding a brief sleep is okay for scripts and services, but afraidly not appropriate for hard coding."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "The platform can specify this in the openbmc/openbmc layer and have it installed into the image.\n\nFor example - \nhttps://github.com/openbmc/phosphor-pid-control/blob/951aff4cd1ba07f6d25400b7ac87621e76267eab/configure.md?plain=1#L32\n\nhttps://grok.openbmc.org/xref/openbmc/openbmc/meta-hpe/meta-dl385-g11/recipes-phosphor/fans/phosphor-pid-control_%25.bbappend?r=a4efaf7a#4"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> > Not sure what you mean by \"configuring a systemd target loses all information about what that target is intended to do.\"?\n> \n> You posted a question here but marked my comment as resolved. If there is still questions, my comment is not resolved.\n\nWhen I looked into your comment, I noticed that it had already been resolved. I was initially confused about why this was the case, but it's possible that you marked it as resolved when you posted it.\n\n> \n> What i mean here is that in your proposal, you suggest running configured systemd services before and after the update. The code updater application will have no way to know what these services are doing and thus refactoring the application logic will be very difficult.\n\nIt's important to understand that not all CodeUpdater daemons need to implement this extension. If the CodeUpdater daemon can benefit from using it and it provides some abstraction, then it can choose to do so. That's why the wording says \"the Code Updater daemon can be configured\" rather than \"the Code Updater daemon should be configured\". For example, if we think it doesn't make much sense to add this extension for flash-based updates of BIOS, we can always skip it since it's all internal workings.\n\n> \n> > Not all Code Updater deamons are device specific. PLDMd is one such example which can handle update for wide variety of PLDM devices, which can have different pre and post conditions. Also, for same device type pre and post conditions can change depending upon the platform type and where that particular component is positioned.\n> \n> Looking at pldmd, if it is handling updates for multiple devices, it can handle all the required pre- and post- update logic internally.\n\nThe PLDMd implementation follows the generic PLDM specification and does not include any device or platform-specific logic within its code.\n\n> \n> > As i mentioned above, PLDMd is such an example which handles update for all PLDM devices and pre & post conditions for devices can be different depending upon the platform type.\n> \n> That's not a specific example.\n> \n> Also, is this change a design for pldmd? If so, maybe we should mark the pldm reviewers aswell to review the change.\n\nUnive Tien and Bright, who are working on the PLDM firmware update, have already been added to the reviewers list. They have reviewed this and provided their feedback."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> When I looked into your comment, I noticed that it had already been resolved. I was initially confused about why this was the case, but it's possible that you marked it as resolved when you posted it.\n\nsorry about that.\n\n> Can you provide any specific example of a use-case for the pre- and post-update target that can or should not be solved inside the device-specific update daemon.\n\n> As i mentioned above, PLDMd is such an example which handles update for all PLDM devices and pre & post conditions for devices can be different depending upon the platform type.\n\nThen pldmd can receive the specific pre- and post-condition as part of it's configuration. I do not see why it has to be a systemd service."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I am not sure what you mean by \"do not see why it has to be a systemd service.\", how to expect to specifcy pre post conditions in EM (let's say for discussion sake, i am not saying we should do it there) if they are not systemd targets? Keep in mind that these conditions can be very hardware or platform specific and can involve all sorts of arbitrary operations."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> how to expect to specifcy pre post conditions in EM\n\nJust list the different pre- and post-conditions. Providing a way to put any arbitrary systemd service is destabilizing the whole thing. In this entire discussion there was never once an specific example of any such condition.\n\nIt usually goes like this\n- provide extension point for flexibility\n- extension point becomes widely used, people assume it is required\n- depending on device, extension point is now required to work, people avoid patching the code updater since it's easier to just write systemd service in their own layer\n- extension point implicitly becomes required part of the design\n- the default (without extension point) does not work anymore\n\nThere are many examples of this\n- the ipmi UUID thingy (need custom dbus service to make 'ipmitool mc guid' work)\n- phosphor-watchdog\n- bmcweb redfish event log (needs rsyslog to be configured separately to make it work)\n\n> Keep in mind that these conditions can be very hardware or platform specific and can involve all sorts of arbitrary operations.\n\nWhen the code updater is done updating the device, the update is complete.\nIf there is any steps needed as part of the update process, the code updater is responsible for completing those steps.\n\nWhen the code updater is done, anything after that is not part of the update process. So there is no need for the code updater to start any service, since the update is already complete."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Sorry for the dumb question, but which configuration file?\n\nWill it be part of EM configuration? \n\nIf so, why is it not part of a configuration for a device?\nInstead of having all of this as a separate ```Components``` array it\ncould be configured in the json object for the specific device.\n\nThat would make it easier for a code updater daemon to extract the config.\n\nIf it should not be part of EM config, why not?"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Sorry for the dumb question, but which configuration file?\n\nThe platform can offer a configuration file in a specific format, such as JSON, which is commonly used by various daemons in openBMC.\n\n> \n> Will it be part of EM configuration? \n\nNo, it's not part of the EM configuration because I received feedback in the past to avoid specifying systemd targets in the EM configuration. However, it can be included in daemon-specific configurations.\n\n> \n> If so, why is it not part of a configuration for a device?\n\nFor the reason I previously stated.\n\n> Instead of having all of this as a separate ```Components``` array it\n> could be configured in the json object for the specific device.\n> \n> That would make it easier for a code updater daemon to extract the config.\n> \n> If it should not be part of EM config, why not?\n\nYes, it would have been straightforward to include this in the EM configuration since the previous patch already defined it for updatable components. However, there is a reason why it cannot be added, as I mentioned earlier."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> No, it's not part of the EM configuration because I received feedback in the past to avoid specifying systemd targets in the EM configuration. However, it can be included in daemon-specific configurations.\n\nI believe we should be preferring EM based configuration since that it can be probed on specific devices and dbus interfaces.\n\nWith the daemon specific configuration it is problematic since it is fixed.\nSo the configuration already has to include all the components which may or may not be there which creates overhead and favors a fixed chassis configuration.\n\nAlso it will not be intuitive for users that they have to configure the Code Updater daemon both with EM config and also with the daemon specific configuration.\n\nThen there is the additional implementation overhead of detecting mismatch between those 2 configurations. Since they are inherently mismatched (dynamic vs static configuration)"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> > No, it's not part of the EM configuration because I received feedback in the past to avoid specifying systemd targets in the EM configuration. However, it can be included in daemon-specific configurations.\n> \n> I believe we should be preferring EM based configuration since that it can be probed on specific devices and dbus interfaces.\n> \n> With the daemon specific configuration it is problematic since it is fixed.\n\nDon't understand what you mean by fixed?\n\n> So the configuration already has to include all the components which may or may not be there which creates overhead and favors a fixed chassis configuration.\n\nIt seems that you are under the impression that there is only one version of the configuration file for all platforms and devices. However, this is not the case. Each platform can specify its own overrides in the openbmc/openbmc repo within its meta layer. These overrides are specified using .bbappend files on the original recipe and are installed in a location in the filesystem as expected by the daemon. For example, in the case of PLDMd, platformX will specify this configuration file in the openbmc/openbmc repo depending upon the devices that can be discovered dynamically on that platform.\n\n> \n> Also it will not be intuitive for users that they have to configure the Code Updater daemon both with EM config and also with the daemon specific configuration.\n> \n> Then there is the additional implementation overhead of detecting mismatch between those 2 configurations. Since they are inherently mismatched (dynamic vs static configuration)"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "I think it will be worth to understand why systemd targets are not preferred in EM configuration. I share the same concern that we have to configure both EM and daemon specific configuration which makes platform portability harder."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "(+Adding @Matt who had suggested me in past to avoid using systemd targets in EM definitions."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "@Matt & @Ed\nAs part of this PR i am trying to define a way the pre and post conditions can be triggered for firmware update. The approach i am suggesting here is to define a platform json configuration with systemd targets. \nAnother approach could be to add these targets to EM schema definitions. But as per my earlier conversation with @Matt, he had suggested me to avoid using systemd targets in EM configurations. Can you please provide more details on that intent on why systemd targets are not preferred in EM configurations?"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "To me, this is the same as EM not putting D-Bus specific info in its config files.  \n\nCan whatever daemon is looking at this build up the service names based on the hardware it is updating? e.g. <device>-pre-update.service and <device>-post-update.service.\n\nIt would only try to start them if those services exist."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> To me, this is the same as EM not putting D-Bus specific info in its config files.\n\nI am not sure what you mean by \"EM not putting D-Bus specific info in its config files.\"? Can you please be more specific?\n  \n> \n> Can whatever daemon is looking at this build up the service names based on the hardware it is updating? e.g. <device>-pre-update.service and <device>-post-update.service.\n\nWe previously discussed making this usage implicit based on the deviceName. I initially wanted to make it explicit, but I'm open to going with the implicit approach as well. If there are no major concerns from others, I'll update the PR to generate the serviceName implicitly based on the device name.\n\nCan you please help answer above question i asked about your last comment.\n\n> \n> It would only try to start them if those services exist."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "For example, one wouldn't hardcode d-bus service names or object paths in EM config files."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Above you were referring to \n\n> platform-specific pre and post\nupdate systemd targets \n\nbut now it's ```PreSetupTarget```, should it not be ```PreUpdateTarget```?"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Same here, ```PostUpdateTarget```"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 288,
                    "reviewer": {
                        "name": "Unive Tien",
                        "email": "unive.tien.wiwynn@gmail.com",
                        "username": "UniveTien"
                    },
                    "message": "Maybe it's my problem, but I have not yet found anything defined what `downstream component name` is, neither in the exist code nor DMTF standards, would be grateful if you can point it for me, so that I can follow the definition to inplement the code.\n\nIf the definition is actually not exist, the closest equalivant I've found would be `ASCII Model Number`, defined in [DMTF DSP0267 1.1.0 Table 8].\n\nOne more question related to slot number below.\n\n[DMTF DSP0267 1.1.0 Table 8]: https://www.dmtf.org/sites/default/files/standards/documents/DSP0267_1.1.0.pdf"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 288,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Yes, you can use the ASCII Model number, i will update PR to reflect this."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 300,
                    "reviewer": {
                        "name": "Unive Tien",
                        "email": "unive.tien.wiwynn@gmail.com",
                        "username": "UniveTien"
                    },
                    "message": "Some of the service units might be slot-specific, but seems like the schema here doesn't yet accommodate the slot variable pattern, perhaps we can introduce a wildcard for slot number here in cases, so that the given slot number could correctly match the specific unit file for specific slot."
                },
                {
                    "file": "designs/code-update.md",
                    "line": 300,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "If you use the 'ASCII Model Number' for the Component field, do you still need to rely on the slot number? Wouldn't the ASCII model number be unique for all components on a board? For same type of devices on different slots, shouldn't the PreUpdate and PostUpdate targets be the same?"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 300,
                    "reviewer": {
                        "name": "Unive Tien",
                        "email": "unive.tien.wiwynn@gmail.com",
                        "username": "UniveTien"
                    },
                    "message": "OK, a dumb like me was confused between the systemd argument and wildcard\ud83e\udd2a, all my concerns are addressed, looks good to me."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/code-update.md",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "28baeb986d1e120b843ef9e0a3ed1f4e92b4ba89",
            "parents": [
                "f5909cf590b32b0f51b3efd9ce4dc0855a4f6060"
            ],
            "ref": "refs/changes/00/75500/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1731004073,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/code-update.md",
                    "line": 288,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "In the case of PLDM, having Component correspond to only \"ASCII Model Number\",is restrictive. Can we make it generic?"
                },
                {
                    "file": "designs/code-update.md",
                    "line": 288,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/code-update.md",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "ede18534b41ea01b7e18515f1c913827c93445f7",
            "parents": [
                "cd6cba2b9b7905c8744921deae998f5ba6f9e25b"
            ],
            "ref": "refs/changes/00/75500/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1735263774,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/code-update.md",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "c9d5a30bcff9ad0d749e7104b28104d8a66f9dc4",
            "parents": [
                "a97ffc2827b9a097115a66681a68d5974f104cb8"
            ],
            "ref": "refs/changes/00/75500/4",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1735263934,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/code-update.md",
                    "type": "MODIFIED",
                    "insertions": 66,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "db515c18b94d9dbdb8a658d01d70621f00753153",
            "parents": [
                "a97ffc2827b9a097115a66681a68d5974f104cb8"
            ],
            "ref": "refs/changes/00/75500/5",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1735267828,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/code-update.md",
                    "type": "MODIFIED",
                    "insertions": 67,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 80,
            "sizeDeletions": 0
        }
    ]
}