{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "add-muxchannel-object",
    "id": "I6f0af0440ed78d9a586ac551d1b64349fe68403b",
    "number": 75497,
    "subject": "Add I2CMux and I2CBus objects",
    "owner": {
        "name": "Jonico Eustaquio",
        "email": "jonico.eustaquio@fii-na.com",
        "username": "JGEustaquio"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75497",
    "hashtags": [],
    "createdOn": 1729868385,
    "lastUpdated": 1736315641,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1729868385,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729868411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729868411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729868741,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93752/ : FAILURE"
        },
        {
            "timestamp": 1729869663,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729869696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729869696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1729870054,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93753/ : FAILURE"
        },
        {
            "timestamp": 1729870136,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729870201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729870201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1729870538,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93754/ : SUCCESS"
        },
        {
            "timestamp": 1729888468,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Topic set to add-muxchannel-object"
        },
        {
            "timestamp": 1730005165,
            "reviewer": {
                "name": "ChauLy-Vietnam",
                "email": "chaul@amperecomputing.com",
                "username": "chaul-ampere"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1730074029,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(6 comments)"
        },
        {
            "timestamp": 1730826534,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1730855243,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1731613764,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1731631944,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733339144,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733339178,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733339178,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1733339672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95817/ : FAILURE"
        },
        {
            "timestamp": 1733339734,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733339787,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733339787,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1733340005,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95818/ : FAILURE"
        },
        {
            "timestamp": 1733369556,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(10 comments)"
        },
        {
            "timestamp": 1735850995,
            "reviewer": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "message": "Patch Set 5:\n\n(9 comments)"
        },
        {
            "timestamp": 1736315641,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "189d466ffd03d83064a06f42cd50de296a4e783e",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/97/75497/1",
            "uploader": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "createdOn": 1729868385,
            "author": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 33,
                    "deletions": -2
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 64,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "e6b2b492e42e79c6b375ce7ddba4b5e0136dbb9f",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/97/75497/2",
            "uploader": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "createdOn": 1729869663,
            "author": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 33,
                    "deletions": -2
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 65,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "a73ecbf7b1030af913bf5da03b829885613b02df",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/97/75497/3",
            "uploader": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "createdOn": 1729870136,
            "author": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What do you mean by the \"MuxChannel interface\"? There's no such type in the codebase. Are you referring to an EM property?\n\nIf so, can you provide a link to the EM schema or change introducing it in the commit message so it is clear what you're discussing?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Added in the commit message, here is the change in the schema: https://gerrit.openbmc.org/c/openbmc/entity-manager/+/69030"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please avoid describing the implementation details in the commit message. Prefer to comment the code instead, if that's necessary."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What sensors plan on this? Can you unpack in the commit message when this alternative is necessary?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 26,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 890,
                    "reviewer": {
                        "name": "ChauLy-Vietnam",
                        "email": "chaul@amperecomputing.com",
                        "username": "chaul-ampere"
                    },
                    "message": "Because EM has a replacement of spaces in \"Name\" value (https://github.com/openbmc/entity-manager/blob/2826f40187e4090acd761b59bc4c6f0036b7be8c/src/overlay.cpp#L241), mux name in the symlink can be different from the config. I think you should do it too here to ensure consistency, as users can use space-separated strings in \"Name\" of a mux, and \"MuxName\"."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 890,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 892,
                    "reviewer": {
                        "name": "ChauLy-Vietnam",
                        "email": "chaul@amperecomputing.com",
                        "username": "chaul-ampere"
                    },
                    "message": "I think this should be predefined as constexpr or something."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why `uint64_t`? Seems excessive?"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This has no documentation or tests. Can you please add both?"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "My preference is that we don't add yet more free functions to Utils.h. It's not a maintainable path forward.\n\nRather, keeping things that are together together via a coherent object model makes this all much more comprehensible, and allows us to encode relationships between concepts in the type system. I'd much prefer we create a `I2CMux` object that has a `const` `bus()` method that returns an `I2CBus` object, from which you can retrieve the bus index (... because it's a property of a Linux I2C bus ...)."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "`uint64_t` was used since entity-manager and most of the sensors in dbus-sensors uses `uint64_t` when it comes to describing the bus. However, looking into the kernel, it looks like `int` is used:\nhttps://github.com/torvalds/linux/blob/6c52d4da1c742cd01a797a4d0a2d3c5a60dc9bfe/drivers/i2c/i2c-core-base.c#L1644\n\n`int` could be used instead, but perhaps a separate CL to change all the variables that describe bus in dbus-sensors and entity-manager to `int`."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "What if I moved it into DeviceMgmt.cpp as it seems more fitting to have a function that retrieves the bus in that file. I don't think we need to create an `I2CMux` and `I2CBus` object for a function, but perhaps I don't see what you are trying to illustrate."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Part of where I was going with the other comment about an `I2CBus` object was that with that the representation would be encapsulated (and we can collect operations related to I2C buses on the class).\n\nIn the past I've written this, which probably provides some context for my position:\n\nhttps://github.com/ibm-openbmc/platform-fru-detect/blob/main/src/sysfs/i2c.hpp"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "If an `I2CBus` object will be made that will be used by the sensors that use bus, should we standardize all those that use bus to use a specific data type? Currently different data types are used by different sensors.\n\nunsigned int: Fan\nuint64_t: HwMon, IntelCPU, and PSU\nint: Intrusion, NVMe\nuint8_t MCUTemp\n\nSince the kernel uses int would it be fine to use int for `I2CBus`?"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Just to clarify, I'm not expecting that you do the rework to integrate the type throughout the code base. But if we at least bring it into existence and start using it in code you're changing, then we can spread its use over time.\n\nI think we should settle on `int` for the bus index type, as this is what the kernel uses."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 413,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -2
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 65,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "7f4c16c330b19a79601a199206afbf211d296a9b",
            "parents": [
                "d7be555ee0d885418e9a862b16565a0474c68d14"
            ],
            "ref": "refs/changes/97/75497/4",
            "uploader": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "createdOn": 1733339144,
            "author": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 73,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 104,
            "sizeDeletions": 4
        },
        {
            "number": 5,
            "revision": "5058a4b37d60a2c823c89ab61229cdd4d7c38ca6",
            "parents": [
                "d7be555ee0d885418e9a862b16565a0474c68d14"
            ],
            "ref": "refs/changes/97/75497/5",
            "uploader": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "createdOn": 1733339734,
            "author": {
                "name": "Jonico Eustaquio",
                "email": "jonico.eustaquio@fii-na.com",
                "username": "JGEustaquio"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Jonico, thanks for the change in approach. I prefer this direction \ud83d\ude0a However, I do have some queries and thoughts in-line.\n\nFurther, given these new classes a fairly self-contained, can you please add some test cases?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I prefer we mark this as `explicit`."
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What's the motivation for the ordering operators? If they're required, can you please add source a comment describing why?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "They will be removed as they are found unnecessary"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What's the motivation for a setter? My preference is that the instances are immutable."
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "Although I would also prefer that it is immutable, the motivation for a setter is an issue of scope. I need to set the I2CBus value differently based on whether we are using the \"Bus\" or \"MuxChannel\" to configure it in EM. Afterwards I2CBus is used to create the sensor (see https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75503 for context/examples).\nCurrently, it is set up as the following:\n\n```\n...\nI2CBus bus;\n...\n\nif (\"Bus\" keyword used)\n{\n    bus.setBus(busNumber)\n}\nelse if (\"MuxChannel\" interface used)\n{\n    ...\n    bus = mux.getLogicalBus(channelName)\n    ...\n}\n\nXSensor(bus, addr, ...)\n```"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 80,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Isn't that rather a matter of only instantiating a I2CBus instance if the `Bus` keyword is used?\n\n```\nif (\"Bus\" keyword used)\n{\n    bus = I2CBus(... busNumber ...);\n}\nelse if (\"MuxChannel\" interface used)\n{\n    ...\n    bus = mux.getLogicalBus(channelName);\n    ...\n}\n```"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 94,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`explicit` again here?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think `std::runtime_error` might be a bit too big a hammer here. Maybe `std::logic_error()`? Feels like an easy one to trip over though, because it's entirely determined by the conformance of the published EM config to the mux schema. Possibly a custom exception is better, or a public static function that tests the preconditions and returns a `std::optional<I2CMux>` which is only populated if the preconditions are met?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Also, unconditionally prepending this absolute path prefix might make testing tricky. It might be better to store the mux name extracted from the config map and append a (configurable) prefix as necessary."
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you add a source comment (with relevant links) about how `/dev/i2c-mux` is populated?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Jonico Eustaquio",
                        "email": "jonico.eustaquio@fii-na.com",
                        "username": "JGEustaquio"
                    },
                    "message": "In EM, the linkMux function creates the /dev/i2c-mux directory and creates the symlinks between the channelNames in that directory with the /dev/i2c-#\nhttps://github.com/openbmc/entity-manager/blob/849f13ab73fb85a6b8b002bc16414b67562f3513/src/overlay.cpp#L71"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 107,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I was asking that the comment be added in the code."
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, I think a `std::runtime_error` here might be a bit strong. What do you think of changing the return type to `std::optional<I2CBus>`?"
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The stripping of an absolute path prefix is going to make this awkward to test. If you instead parse the basename of the path then you'll have an easier time testing it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "src/DeviceMgmt.hpp",
                    "type": "MODIFIED",
                    "insertions": 71,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 100,
            "sizeDeletions": 0
        }
    ]
}