{
    "project": "openbmc/hiomapd",
    "branch": "master",
    "id": "If54dd8674ff48f67b9eba179b21f9d93cd020581",
    "number": 75815,
    "subject": "windows: Fix core dump in create window",
    "owner": {
        "name": "Ninad Palsule",
        "email": "ninad@linux.ibm.com",
        "username": "ninadpalsule"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/hiomapd/+/75815",
    "hashtags": [],
    "createdOn": 1731531070,
    "lastUpdated": 1734105880,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1731531070,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1731531109,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1731531114,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1731531148,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/94435/ : SUCCESS"
        },
        {
            "timestamp": 1731539524,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1731613290,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1732223556,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1732234527,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1733523024,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733523045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733523045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1733523065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96038/ : FAILURE"
        },
        {
            "timestamp": 1733524727,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733524766,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733524766,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1733524824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96045/ : SUCCESS"
        },
        {
            "timestamp": 1733530066,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733705367,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733763891,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733808595,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733934537,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733949631,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733949887,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733965057,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1733978039,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733978147,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733978243,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1733978680,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1734069973,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1734105880,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6ff2dac9332f7bc466c2fa90639926e9db79088f",
            "parents": [
                "b8d89b777e5e2c4242802b4554818f65a5fadf1a"
            ],
            "ref": "refs/changes/15/75815/1",
            "uploader": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "createdOn": 1731531070,
            "author": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Where there's a bug, there are new test cases to be written ;)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Andrew, I hit this issue when I run it with valgrind command."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "There are multiple testcase which are creating window and not hitting this issue. I hit it only with valgrind."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If there are multiple test cases that aren't hitting the bug, then the test coverage isn't yet good enough.\n\nIt's my expectation that if a bug exists then a test should be written to capture the broken behaviour, so the implementation cannot regress undetected in the future.\n\nWhat's your understanding of unit tests? When should someone write them, and what should they capture?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Sorry I saw this today.\n\nyes, I am aware of unit testing. Adding valgrind to the unit test may be large effort as compare to the simple logic issue."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't think you need to add valgrind support, but you do need to add a test case that would otherwise trigger the core?\n\nSeparately, you get valgrind support for free in CI if you fix up https://gerrit.openbmc.org/c/openbmc/hiomapd/+/65396"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "ok, On rainier system I am hitting SEGV when I run this command.\n\nbusctl call xyz.openbmc_project.Hiomapd /xyz/openbmc_project/Hiomapd xyz.openbmc_project.Hiomapd.Protocol.V2 CreateReadWindow qq 0 1\n\nThere is already testcase to create read window so not sure why it is working in CI and not on real system.\n\nhttps://github.com/openbmc/hiomapd/blob/master/test/create_read_window_v2.c"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Does the test case take the same inputs, including e.g. TOC?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "There is also a testcase to create window with TOC. https://github.com/openbmc/hiomapd/blob/master/vpnor/test/create_read_window_toc.cpp"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "ok, I did further investigation.\n\n# If I call CreateReadWindow before calling GetInfo I see the crash.\n++ busctl call xyz.openbmc_project.Hiomapd /xyz/openbmc_project/Hiomapd xyz.openbmc_project.Hiomapd.Protocol.V2 CreateReadWindow qq 0 1\nCall failed: Remote peer disconnected\n\n# I call GetInfo first then I don't see the call because GetInfo calls windows_alloc_dirty_bytemap() hence we don't see the issue.\n++ busctl call xyz.openbmc_project.Hiomapd /xyz/openbmc_project/Hiomapd xyz.openbmc_project.Hiomapd.Protocol GetInfo y 2\nyyq 2 12 8\n++ busctl call xyz.openbmc_project.Hiomapd /xyz/openbmc_project/Hiomapd xyz.openbmc_project.Hiomapd.Protocol.V2 CreateReadWindow qq 0 1\nqqq 49152 2 0\n\n# I tried to write testcase without GetInfo call and it failed saying that GetInfo must be called first.\n[ 1733949109.098396932] Received MBOX request:\n[ 1733949109.098399329] MBOX cmd: 4\n[ 1733949109.098401119] MBOX seq: 1\n[ 1733949109.098402377] MBOX arg[0]: 0x00\n[ 1733949109.098403889] MBOX arg[1]: 0x00\n[ 1733949109.098405217] MBOX arg[2]: 0x01\n[ 1733949109.098406523] MBOX arg[3]: 0x00\n[ 1733949109.098407795] MBOX arg[4]: 0x00\n[ 1733949109.098409057] MBOX arg[5]: 0x00\n[ 1733949109.098410324] MBOX arg[6]: 0x00\n[ 1733949109.098411604] MBOX arg[7]: 0x00\n[ 1733949109.098412853] MBOX arg[8]: 0x00\n[ 1733949109.098414103] MBOX arg[9]: 0x00\n[ 1733949109.098415368] MBOX arg[10]: 0x00\n[ 1733949109.098416717] Received MBOX command: 4\n[ 1733949109.098418244] Must call GET_MBOX_INFO before 4\n[ 1733949109.098427057] Translating errno 71: Protocol error\n\nIn check_req_valid() we make sure that map is already allocated.\n        if (!(context->state & MAPS_MEM)) {\n                if (cmd != MBOX_C_RESET_STATE && cmd != MBOX_C_GET_MBOX_INFO\n                                              && cmd != MBOX_C_ACK) {\n                        MSG_ERR(\"Must call GET_MBOX_INFO before %d\\n\", cmd);\n                        return -EPROTO;\n                }\n        }"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "windows.c",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "d5a5410e6d699a940c1374bc1832c345fc1fc7cf",
            "parents": [
                "b8d89b777e5e2c4242802b4554818f65a5fadf1a"
            ],
            "ref": "refs/changes/15/75815/2",
            "uploader": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "createdOn": 1733523024,
            "author": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "windows.c",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "ced971f60f0183361b8131997089d5e734cde6ee",
            "parents": [
                "0bfd90de58825963ff52237b43bba359c08e5bce"
            ],
            "ref": "refs/changes/15/75815/3",
            "uploader": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "createdOn": 1733524727,
            "author": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Looks like we don't have unit test for transport_dbus_create_window() path. There are lot of effort for this UI so I will not be able to add the testcase."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't understand; why does dbus need to be involved? The fix is in windows.c"
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack how you reached case? Have you read through [the protocol spec](https://github.com/openbmc/hiomapd/blob/master/Documentation/protocol.md), particularly the section on the [protocol flow](https://github.com/openbmc/hiomapd/blob/master/Documentation/protocol.md#protocol-flow)?\n\nI mean, we should defend against an incorrect sequence causing a crash, but what component is it that's not following the protocol? Is that being fixed?\n\nThe bytemap is almost unconditionally created in the `GET_INFO` handlers:\n\n- https://github.com/openbmc/hiomapd/blob/master/protocol.c#L124\n- https://github.com/openbmc/hiomapd/blob/master/protocol.c#L539"
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "This is how we reached to the create window. We do not go through the protocol space.  \n```\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  __GI_memset () at ../sysdeps/arm/memset.S:57\n\nwarning: 57\t../sysdeps/arm/memset.S: No such file or directory\n#0  __GI_memset () at ../sysdeps/arm/memset.S:57\n#1  0x00424bec in memset (__len=<optimized out>, __ch=248, \n    __dest=<optimized out>) at /usr/include/bits/string_fortified.h:59\n#2  window_set_bytemap (context=<optimized out>, cur=0x232e2f8, offset=0, \n    size=<optimized out>, val=0 '\\000')\n    at /usr/src/debug/mboxd/1.0+git/windows.c:380\n#3  0x00425054 in windows_create_map (context=context@entry=0x2324598, \n    this_window=this_window@entry=0x23245f8, offset=<optimized out>, \n    offset@entry=0, exact=<optimized out>)\n    at /usr/src/debug/mboxd/1.0+git/windows.c:657\n#4  0x004231b0 in protocol_v1_create_window (context=context@entry=0x2324598, \n    io=io@entry=0x7efd59b8) at /usr/src/debug/mboxd/1.0+git/protocol.c:311\n#5  0x004234b4 in protocol_v2_create_window (context=0x2324598, io=0x7efd59b8)\n    at /usr/src/debug/mboxd/1.0+git/protocol.c:568\n--Type <RET> for more, q to quit, c to continue without paging--\n#6  0x0042418c in transport_dbus_create_window (context=0x2324598, ro=true, m=0x232c408, ret_error=<optimized out>) at /usr/src/debug/mboxd/1.0+git/transport_dbus.c:214\n#7  0x76f03968 in method_callbacks_run (found_object=0x0, require_fallback=false, c=0x23301a0, m=0x7efd5ad4, bus=0x232e7e8)\n    at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/bus-objects.c:406\n#8  object_find_and_run (bus=0x232e7e8, m=0x7efd5ad4, p=0x441dbc \"qq\", require_fallback=false, found_object=0x7efd5ad4)\n    at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/bus-objects.c:1319\n#9  0x76f1dba4 in bus_process_object (m=0x232c408, bus=<optimized out>) at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/bus-objects.c:1439\n#10 process_message (m=0x232c408, bus=<optimized out>) at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/sd-bus.c:3007\n#11 process_running (ret=0x0, bus=<optimized out>) at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/sd-bus.c:3049\n#12 bus_process_internal (bus=<optimized out>, ret=ret@entry=0x0) at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/sd-bus.c:3277\n#13 0x76f1e0f0 in sd_bus_process (bus=<optimized out>, ret=ret@entry=0x0) at /usr/src/debug/systemd/255.4/src/libsystemd/sd-bus/sd-bus.c:3304\n#14 0x004207c0 in poll_loop (context=0x2324598) at /usr/src/debug/mboxd/1.0+git/mboxd.c:167\n#15 main (argc=<optimized out>, argv=<optimized out>) at /usr/src/debug/mboxd/1.0+git/mboxd.c:454\n```"
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": ">  We do not go through the protocol space. \n\nNot sure what you mean?\n\n```\n#4  0x004231b0 in protocol_v1_create_window (context=context@entry=0x2324598,\n    io=io@entry=0x7efd59b8) at /usr/src/debug/mboxd/1.0+git/protocol.c:311\n#5  0x004234b4 in protocol_v2_create_window (context=0x2324598, io=0x7efd59b8)\n    at /usr/src/debug/mboxd/1.0+git/protocol.c:568\n```"
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "yes, As you mentioned the GET_INFO creates window map but we do not call it under the CREATE_READ_WINDOW dbus call unless we make a GET_INFO dbus call to first using busctl followed by CREATE_READ_WINDOW."
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "oops, yes, It is going through the protocol but doesn't make sure that GET_INFO is called before invoking create window."
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right. So that should be a protocol invariant and we should return an error if the caller fails to uphold it. The invariant shouldn't be implemented in terms of whether `cur->dirty_bmap` is populated though, that's far too subtle."
                },
                {
                    "file": "windows.c",
                    "line": 658,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Andrew, Thanks for the review. I will check. I may have to continue on this in January."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "windows.c",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 4
        }
    ]
}