{
    "project": "openbmc/entity-manager",
    "branch": "master",
    "id": "I82c87fc48d396a6413a8d569f1e678dba8e496fa",
    "number": 75353,
    "subject": "entity-manager: dt-vpd daemon broken by ci tool changes",
    "owner": {
        "name": "Christopher Sides",
        "email": "christopher.sides@hpe.com",
        "username": "csides-hpe"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75353",
    "hashtags": [],
    "createdOn": 1729193500,
    "lastUpdated": 1729798421,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1729193500,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729193539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729193539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729193581,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93336/ : FAILURE"
        },
        {
            "timestamp": 1729194843,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1729272780,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729272982,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729273194,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729274700,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729535261,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729707976,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1729709488,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1729798411,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Abandoned\n\nCI tool errors resolved/worked around. Code discussion continues in parent PR."
        },
        {
            "timestamp": 1729798421,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "201bd4bb44674bf232fa87217ed26321a669d0f4",
            "parents": [
                "de8b4fa7473d0c6a41db77a6e100a71f50561193"
            ],
            "ref": "refs/changes/53/75353/1",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1729193500,
            "author": {
                "name": "Chris Sides",
                "email": "Christopher.Sides@hpe.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Added comments to the specific pain points I've run into with the CI tool suggestions"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Is there a reason you made this a separate commit?  The commit that has the issue hasn't merged yet and will need to pass CI before it can merge, so you'd just fix up that one."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "My thinking was that I had 'working code' I wanted to start discussion on, but CI tool passes were suggesting changes that broke the build outright -- so I was hoping to separate discussions about the odd changes being suggested from the working code discussion.\n\nI plan to mark this one as 'abandoned' soon, as I think I've worked out the cause behind the last 'build-breaking suggestion' being put out by a clang-tidy rule in the entity-manager repo."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The only place I can find an OBMC instances of '__final_awaitable' is as a set of private structs linked to async API: https://github.com/search?q=org%3Aopenbmc%20final_awaitable&type=code\n\nAmong other related-complaints, console output shows\n\n>/usr/local/include/sdbusplus/async/stdexec/task.hpp:366:12: note: declared private here\n>  366 |     struct __final_awaitable\n\nI don't even understand what the CI tool is trying to do here."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is not a proper change.  What was the original failure?"
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Here's console output from 'original code' (pre-CI pass) where a clang-tidy rule suggests the change shown here\nhttps://jenkins.openbmc.org/job/ci-repository/93332/console"
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "While I don't understand the tool's final code suggestion/output, I am reading up on the clang formatting rules, and am coming to understand that the clang-tidy rule is complaining that I'm referencing static variable reqDBusInterface from inside this thing.\n\nI assume it would be preferred that I simply have this reference a non-static variable, rather that add a //NOLINT(rule) line here to try to skip the check."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "```\n../src/dt-vpd-parser.cpp:10:15: error: static member accessed through instance [readability-static-accessed-through-instance,-warnings-as-errors]\n   10 |     ctx.spawn([](sdbusplus::async::context& ctx) -> sdbusplus::async::task<> {\n```\n\nThe \"fixup\" for this from clang-tidy is busted.  Yes, making a real fix is preferred over NOLINT.  We generally don't like to put those in."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I discovered I could fix the \"static member accessed through instance\" complaint by calling spawn from\n\nsdbusplus::async::context.spawn()\ninstead of (context instance).spawn()\n\nwhich incidentally, all the Async API examples I've seen so far call spawn from an instance:\n\nhttps://github.com/openbmc/sdbusplus/blob/master/example/calculator-aserver.cpp\n\nhttps://github.com/openbmc/sdbusplus/blob/master/example/calculator-client.cpp\n\nhttps://github.com/openbmc/sdbusplus/blob/master/example/coroutine-example.cpp\n\nAssuming this 'fix' isn't quietly breaking something somewhere-- do you think the Async API examples in SDBusPlus should be updated to call spawn this way too?"
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ah, nevermind. I thought I'd got a working build, but something just hadn't saved before build. Back to the drawing board--\n\nAs far as I can tell, this 'bad' line is being appended to *anything* inside ctx.spawn() calls, whether a lamdba or a bare-bones simple \n\nauto startup() -> sdbusplus::async::task<> \n{\n co_return;\n}\n...\nctx.spawn(startup());\n\ngets turned into\n\nauto exec::__task::basic_task<\n                  void, exec::__task::__default_task_context_impl<\n                            exec::__task::__scheduler_affinity::__sticky>>::\n                  __final_awaitable::\n                  startup() -> sdbusplus::async::task<> \n{\n..."
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've confirmed we can avoid the CI tool issue entirely by switching away from the ctx.spawn() calls used in the Async API examples, and replacing\n\n>ctx.spawn([](sdbusplus::async::context& ctx) -> sdbusplus::async::task<> {\n>        ctx.request_name(reqDBusName);\n>        co_return;\n>    }(ctx));\n\n//anything passed to ctx.spawn from inside main() will have \"exec::...__final_awaitable::\" appended to it by the CI tool unless NOLINTNEXTLINE(readability-static-accessed-through-instance) is set\n\nwith\n\n> std::thread nameReqThread([&ctx] { ctx.request_name(reqDBusName); });\n> nameReqThread.join();\n\nIt's confirmed working on a live system. \n\nYou worked on the SDBusPlus Async API, correct? Does this seem like a reasonable workaround for the clang-tidy complaints in Entity-Manager?\n\nI'll be pushing the updated source for discussion to the parent PR 75349: service: device-tree node vpd to d-bus hw id data | https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75349\n\nand marking this PR as closed. If we want to roll back to relying on ctx.spawn, we can continue discussion on the parent PR, since the \"I don't understand what's even happening\" level CI issues seem to be resolved now.\n\nThanks for helping out on this stuff!"
                },
                {
                    "file": "src/machinecontext.cpp",
                    "line": 26,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "If this function is marked as static like the CI tool suggests, it breaks the lambda closures.\n\nIf I move the creation of this map into the populateMachineContext() function instead of here, the CI tool wants to mark the populateMachineContext() function as static instead, which also breaks the lambda closures in the map."
                },
                {
                    "file": "src/machinecontext.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The map being returned ties a device-tree path string to a lambda function with a by-reference closure used update a MachineContext object's inherited properties.\n\nMaking a function that uses this map static breaks the by-reference closure."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/machinecontext.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/machinecontext.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/dt-vpd-parser.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 6
        }
    ]
}