{
    "project": "openbmc/telemetry",
    "branch": "master",
    "id": "If8676ae12af23707763784e2b43bdc5a4559d874",
    "number": 74890,
    "subject": "Adjust error handling to bmcweb's preferences",
    "owner": {
        "name": "Michal Orzel",
        "email": "michalx.orzel@intel.com",
        "username": "morzelx"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/telemetry/+/74890",
    "hashtags": [],
    "createdOn": 1727347261,
    "lastUpdated": 1727877981,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1727347261,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1727347319,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1727347319,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1727348095,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/92328/ : SUCCESS"
        },
        {
            "timestamp": 1727354668,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1727354719,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1727354719,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1727355472,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/92332/ : SUCCESS"
        },
        {
            "timestamp": 1727603672,
            "reviewer": {
                "name": "Smriti-Ayushi",
                "email": "smriti.ayushi@linux.intel.com",
                "username": "Smriti-Ayushi"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1727688503,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1727696476,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1727770079,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1727787945,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1727790028,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1727877954,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1727877981,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Set Work In Progress"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "c85d03a7f2e8e6ae297f6f8fda4ee968294e23de",
            "parents": [
                "b47b7db48c4f883eb191077848d55d96bd884607"
            ],
            "ref": "refs/changes/90/74890/1",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1727347261,
            "author": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/utils/conversion_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -5
                },
                {
                    "file": "src/errors.cpp",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -2
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -8
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/report.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/utils/conversion.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "tests/src/test_report.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -9
                },
                {
                    "file": "src/report_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "tests/src/test_report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -12
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -12
                },
                {
                    "file": "src/utils/make_id_name.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "src/metrics/collection_data.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -6
                },
                {
                    "file": "src/utils/dbus_path_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -12
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_make_id_name.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "tests/src/test_path_append.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/errors.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -8
                },
                {
                    "file": "tests/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/utils/dbus_path_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 152,
            "sizeDeletions": 100
        },
        {
            "number": 2,
            "revision": "00d48ed2c68248bd7d1f64135439c3d6a995dc6a",
            "parents": [
                "b47b7db48c4f883eb191077848d55d96bd884607"
            ],
            "ref": "refs/changes/90/74890/2",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1727354668,
            "author": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Smriti-Ayushi",
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "Changes look good to me."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Generally seems in a better direction to me.  Seems like you two have a handle on the rest of the details."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "I see you want to align with other upstream services with error reporting.\nOther YAML definitions mention their errors.\n\nI believe correct course of action would be to have them approved in service spec first."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 16,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I've prepared a spec change in https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/74968. Could You please take a look?"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Why having our own implementaton when sdbusplus::Error::...common..InvalidArgument exists? What's so special about this compared to others?"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Autogenerated implementation contains hardcoded message strings for description() and what() overrides. If we want to pass info about failing property in description, then we need to have custom version of that error."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "I see. But then you don't have the journal log, like other `elog` entries, right?\n\nI don't think mimicking 'standard' type (by name) but having non-standard implementation and behavior is the way to go... It's 2 steps forward and 1 step backward.\n\nDo I see correctly that what you're trying to achieve is to have `description()` and `what()` passed through D-Bus?\n\nIn that way I suppose we need to at least make implementation behave similarly by:\n- `report()-ing` the intended exception type\n- throwing our custom implementation\n\nThis is short-sighted though, wonder if there are plans for these to support passing metadata as well.."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "What I'm trying to achieve here is:\n1) to be able to use bmcweb's utility function for setting Dbus properties,\n2) retain already existing error reporting mechanism when any method call fails.\n\nFor 1) to achieve, error name needs to be \"xyz.openbmc_project.Common.Error.InvalidArgument\", whereas 2) requires that error description will be property name.\n\n\n> Do I see correctly that what you're trying to achieve is to have `description()` and `what()` passed through D-Bus?\n\n`description()` is mapped to `message` field from `sd_bus_error` structure. That is currently used for getting info, which property is incorrect (ref.: https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/metric_report_definition.hpp#L730-L743).\n\n> In that way I suppose we need to at least make implementation behave similarly by:\n> - `report()-ing` the intended exception type\n> - throwing our custom implementation\n> \n> This is short-sighted though, wonder if there are plans for these to support passing metadata as well..\n\nTBF the more I think of it the more I don't know if this whole type impersonation can be allowed at all.\n\n@Patrick, could You please share Your opinion on it? Is it OK to provide custom description to error defined in standard? Or perhaps we should think of another solution for that?"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You should use the ones provided and not make your own.\n\nI'm in the process of working through drastic changes in the event logging.  https://github.com/openbmc/docs/blob/master/designs/event-logging.md .  If you use the phosphor-dbus-interfaces events directly, it is going to be much easier for us to refactor your code to use the new ones (as they get defined).  This will make it so that your Redfish Message Id is consistent with all the other code.\n\nHere is a commit in the chain of work in progress (though these are getting merged as they are completed).  https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/74858"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 34,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "The new design looks promising and could in fact address the issue I was having here regarding not being able to pass property metadata to Redfish with current API.\n\nWe've decided to put this change on hold for now, and we will get back to it once the new implementation is ready. This way we can avoid temporary loss of behavior that is already functioning here."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "As soon as this throws, passed `std::string&` (and your reference to c_str ) will be invalid.\n\nI'm not familiar with these autogenerated errors. You sure it's safe?"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Contents of passed c-string are only used for journal logging right before throwing the actual exception: https://github.com/openbmc/phosphor-logging/blob/master/lib/include/phosphor-logging/elog.hpp#L172-L176. The autogenerated error is initialized without any arguments, so I think it's safe to provide the string this way."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "For now, yeah, we're basing this on the hope it won't change in the future ;)"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The new code will use a copy anyhow.  It should be safe."
                },
                {
                    "file": "src/errors.cpp",
                    "line": 66,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why make a wrapper for something so small?"
                },
                {
                    "file": "src/errors.cpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "My intention was to separate the error-throwing details from the rest of the code. This way, if anything changes in the phosphor-logging/sdbusplus API, we'd only have to refactor error.[h/c]pp files."
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "This makes your build potentially unreproducible."
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I'm following the format from other wraps, used not only in telemetry, but other upstream projects as well. IIRC, it is preferred here this way, because fixed revisions quickly tend to get out of date. Both CI, and Yocto builds ignore it anyway, as they define subproject versions independently."
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/utils/conversion_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -5
                },
                {
                    "file": "src/errors.cpp",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -2
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -8
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/report.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "src/utils/conversion.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "tests/src/test_report.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -9
                },
                {
                    "file": "src/report_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -3
                },
                {
                    "file": "tests/src/test_report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -12
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -12
                },
                {
                    "file": "src/utils/make_id_name.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "src/metrics/collection_data.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/report_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -6
                },
                {
                    "file": "src/utils/dbus_path_utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -12
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "tests/src/test_make_id_name.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "tests/src/test_path_append.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -4
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/errors.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -8
                },
                {
                    "file": "tests/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/utils/dbus_path_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 100
        }
    ]
}