{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Iaf7d25fec15ad547a6c741c9410995e19ba22016",
    "number": 75267,
    "subject": "Explicitly set verify_none",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/75267",
    "hashtags": [],
    "createdOn": 1728930191,
    "lastUpdated": 1729781141,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1728930191,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1728930205,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased."
        },
        {
            "timestamp": 1728930224,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1728930224,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1728930996,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1728931025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1728931025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1728931027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93179/ : ABORTED"
        },
        {
            "timestamp": 1728932442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93181/ : SUCCESS"
        },
        {
            "timestamp": 1728963641,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1728964009,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1728964567,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729281183,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729281323,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729281480,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729281497,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1729281515,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729281515,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1729282260,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93381/ : SUCCESS"
        },
        {
            "timestamp": 1729478291,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1729484833,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729485115,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729485227,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729485690,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729485782,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729486170,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729540164,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729609156,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729609574,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729611929,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729612008,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729614149,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729614171,
            "reviewer": {
                "name": "Abhilash Raju",
                "email": "abhilash.kollam@gmail.com",
                "username": "abhilashraju"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1729781136,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1729781141,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 463a0e3e880340a119bf986bab039d1afbe1a432"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5c2d559614273df4bc80ca596537df48ff8b6345",
            "parents": [
                "89dc2f6f412d7ab07a43c6c843583dad242faa9f"
            ],
            "ref": "refs/changes/67/75267/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1728930191,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "f1f6bc8186fa034daf11d41f0022a38f4ac5a1f9",
            "parents": [
                "6fe8751c46d7086e49977b68e74262927b4a7d39"
            ],
            "ref": "refs/changes/67/75267/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1728930205,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
            "parents": [
                "6fe8751c46d7086e49977b68e74262927b4a7d39"
            ],
            "ref": "refs/changes/67/75267/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1728930996,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Earlier there was a flexibility in using MTLS. If client certificate is provided then use it for authentication or continue with usual basic auths. Now I guess the flexibility is gone.If we want MTLS we should use strict tls. \n\nThis flexibility was useful when aggregation is enabled. External clients can use basic auth methods for authentication and internal BMC-BMC can use MTLS. \n\nCan't we keep this flexibility?"
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "can you elaborate what you mean in terms of \u201cflexibility\u201d ideally in terms of behavior and commands that would work before and don\u2019t now."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Now we are disabling the invocation of tlsVarifyCallback(by setting verify none). That in turn will disable the session creation using MTLS certificate.\nIf we wanted MTLS session we should set tlsStrict. That makes external client mandatorily provide client certificates, otherwise handshake will fail."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Now we are disabling the invocation of tlsVarifyCallback(by setting verify none). That in turn will disable the session creation using MTLS certificate.\n\nThis is what I can't explain.  Previously we had no call to set verify mode:\n\nhttps://github.com/openbmc/bmcweb/commit/3281bcf157d2a5a7e12eea199e280fc21db3b3fb#diff-e1afbba62ce215eb68c2ea3b2256d616b26c5c5ea00f77c31f41567400aa5aa6L608\n\n> If we wanted MTLS session we should set tlsStrict. That makes external client mandatorily provide client certificates, otherwise handshake will fail.\n\nRight."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ohhh, maybe that's the problem, that we're calling set_verify_mode at all?"
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I pushed a new patch that might help, PTAL"
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 554,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "This is the neater way to do what you did in previous patch set. But What I was asking is different. Just see comment below where I have problem."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "3ce8c08d24ec7736a3d880293fac76de4d9b5692",
            "parents": [
                "116370d8b7d4a7fa273796a875697f168d04465f"
            ],
            "ref": "refs/changes/67/75267/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1729281480,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "I agree that in strict TLS we should fail handshake if client certificate is not provided. In this patch we have only two possibility.\n1) No MTLS\n2) Strict MTLS\n\n\nWhat we need (which was supported before this patch) is a Flexi MTLS\n\nIn this mode if client give MTLS certificate then uses it to authenticate the client. If not the handshake will still succeed and uses user/passwd option as fallback to authenticate clients.\n\nTo be specific what we need is a new TLS flag in which  only boost::asio::ssl::verify_peer is set."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I agree that in strict TLS we should fail handshake if client certificate is not provided. In this patch we have only two possibility.\n> 1) No MTLS\n> 2) Strict MTLS\n> \n> \n> What we need (which was supported before this patch) is a Flexi MTLS\n> \n> In this mode if client give MTLS certificate then uses it to authenticate the client. If not the handshake will still succeed and uses user/passwd option as fallback to authenticate clients.\n> \n> To be specific what we need is a new TLS flag in which  only boost::asio::ssl::verify_peer is set.\n\n\nThat's what was there before, and it caused browsers to show the certificate screen.  That's the whole thing with this patch."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "I know that. That is why I asked for one more flag c.tlsFlexi under which only the verifypeer is set. I have already told you about the aggregator use case where we need this fallback authentication mechanism."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "the flag is driven by the redfish setting.  If we want to add a new setting to it, it would be a discussion with DMTF, not a discussion on a patchset.\n\nWhile I understand your use case and can respect it, there's not really anything we can do in this patchset."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Does that mean that the existing(previous) behaviour of fallback authentication is a buggy implementation of the redfish? I thought that was a feature. If someone relied on that already, this is going to be a bc break."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Does that mean that the existing(previous) behaviour of fallback authentication is a buggy implementation of the redfish?\n\nThere's two behaviors.  This is arguably trying to fix a regression.\n\n> I thought that was a feature. If someone relied on that already, this is going to be a bc break.\n\nIf they were relying on it, then they were broken prior to the regression."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "I believe verify_fail_if_no_peer_cert was not there before(correct me ). Then when it got added optional mtls was still working because verify-peer was default. Now verify-peer is no more default that makes optional MTLS is broken."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I believe verify_fail_if_no_peer_cert was not there before(correct me .\n\ncorrect, and ir is still not present in the non strict branch of this patch.\n\n\n> Then when it got added optional mtls was still working because verify-peer was default. Now verify-peer is no more default that makes optional MTLS is broken.\n\nthis patch goes back to the default behavior/\n\n\n\nif this patch doesn\u2019t do what you need, maybe you could propose a different one as an alternative? that might be faster than this conversation."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "I can see that you are not in favour of allowing optional MTLS.I have a genuine use case for it.I don't think writing a new patch for it will solve the problem.\n\nIf optional MTLS is not going to be supported by bmcweb then I don't have any other comments on this patch. The changes are looking fine otherwise."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I can see that you are not in favour of allowing optional MTLS.\n\nthat is not what i said.  i have no problem with optional tls and understand the use case, My point was that going back and forth in a patchset comment section doesn't get us closer to that working.\n\n> I have a genuine use case for it.I don't think writing a new patch for it will solve the problem.\n> \n> If optional MTLS is not going to be supported by bmcweb then I don't have any other comments on this patch. The changes are looking fine otherwise.\n\nIf you have patches for things you need, please send them in gerrit reviews."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 553,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 559,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "how does this path impact the bmcweb? will bmcweb fail to start or retry?"
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 559,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "strict tls mode (this path) fails connections that don\u2019t have a client cert."
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "line": 559,
                    "reviewer": {
                        "name": "Abhilash Raju",
                        "email": "abhilash.kollam@gmail.com",
                        "username": "abhilashraju"
                    },
                    "message": "getSslServerContext called only once from the 'run' method during bmcweb start. It does not happen for each connection. I am not sure how it was handled. But it is  not new in this patch so I am  fine with whatever behaviour it had before."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 9
        },
        {
            "number": 5,
            "revision": "463a0e3e880340a119bf986bab039d1afbe1a432",
            "parents": [
                "a0969c70c0e5a38c0e65f558e254f1af062b33b4"
            ],
            "ref": "refs/changes/67/75267/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1729781141,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/ssl_key_handler.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "http/http_connection.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 9
        }
    ]
}