{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I0b1774e586671874bb79f115e9cddf194f9ea653",
    "number": 71986,
    "subject": "Send cookies to webui-vue from Sessions POST",
    "owner": {
        "name": "Paul Fertser",
        "email": "fercerpav@gmail.com",
        "username": "paulfertser"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986",
    "hashtags": [],
    "createdOn": 1718221876,
    "lastUpdated": 1726678460,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1718221876,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718221928,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718221928,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718222120,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1718223082,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/85980/ : SUCCESS"
        },
        {
            "timestamp": 1718262719,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718262764,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718262764,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718263949,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86005/ : SUCCESS"
        },
        {
            "timestamp": 1718289647,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1718290899,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1718292973,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1718294837,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1718296555,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718297922,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1718298906,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718305291,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718306322,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1718306577,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718309497,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718674257,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1719939797,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719939824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719939824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1719939929,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/87182/ : FAILURE"
        },
        {
            "timestamp": 1719941243,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719941295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719941295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1719942596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87185/ : SUCCESS"
        },
        {
            "timestamp": 1719944109,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1719951045,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(7 comments)"
        },
        {
            "timestamp": 1719951367,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1719952056,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719952070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719952070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1719952568,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1719953340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87205/ : SUCCESS"
        },
        {
            "timestamp": 1719953370,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1719966438,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1720098179,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1720107131,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1720703744,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720703784,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720703784,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1720703813,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/87759/ : FAILURE"
        },
        {
            "timestamp": 1720705199,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720705224,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720705225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1720706492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87760/ : SUCCESS"
        },
        {
            "timestamp": 1720706539,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1720717066,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1720717070,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as 29aab242f2d35891bd808e057e33b328989836d3"
        },
        {
            "timestamp": 1726581675,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1726588888,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1726665794,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1726678460,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8910ab6db9dda63b4c6501ae96aed5fab86a7eca",
            "parents": [
                "00a0fe4e361efcdeb600f3a2e88b746fa18b9715"
            ],
            "ref": "refs/changes/86/71986/1",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1718221876,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Corresponding webui-vue change: https://gerrit.openbmc.org/c/openbmc/webui-vue/+/71974"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": "Redfish.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 59,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
            "parents": [
                "00a0fe4e361efcdeb600f3a2e88b746fa18b9715"
            ],
            "ref": "refs/changes/86/71986/2",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1718262719,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets replace bmcweb with \"webui\" and remove the word \"wants\".\n\nTechnically bmcweb supports any of the auth methods for a websocket, it's just that browsers don't support all of them.  There's no desire for one auth over another."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Thank you for the review!"
                },
                {
                    "file": "Redfish.md",
                    "line": 721,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd rather this be documented in code, especially given we don't really document the specification correct path.  Technically this is \"redfish\" documentation, so it's a little confusing we only document the \"wrong\" parts.\n\n\nI do appreciate trying to document it though"
                },
                {
                    "file": "Redfish.md",
                    "line": 721,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> I'd rather this be documented in code, especially given we don't really document the specification correct path.  Technically this is \"redfish\" documentation, so it's a little confusing we only document the \"wrong\" parts.\n\nThis document is meant to give OpenBMC-specific information about Redfish implementation and serve as a quick reference for what's supported and what's not, right? I'd say documenting all OEM specifics in it seems to be more useful compared to code comments here and there. Code comments are mostly useful to those working on this code and nearby while Redfish.md is suppposed to be useful to API consumers too, right?\n\nIf you sure it'd be more helpful to move this comment to the code, no problem, it's just that the rationale isn't obvious to me, probably I'm missing the intent behind Redfish.md."
                },
                {
                    "file": "Redfish.md",
                    "line": 721,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > I'd rather this be documented in code, especially given we don't really document the specification correct path.  Technically this is \"redfish\" documentation, so it's a little confusing we only document the \"wrong\" parts.\n> \n> This document is meant to give OpenBMC-specific information about Redfish implementation and serve as a quick reference for what's supported and what's not, right?\n\nCorrect, but what we've implemented here is outside the \"redfish\" specification.\n\nMy main thinking here is that API implementers look to this documentation for \"which parts of the Redfish spec does bmcweb implement\".  Considering this isn't in the redfish spec, and we don't document the redfish-official parts that we do implement, it makes it read like we only support OEM.\n\nIf this document were flushed out with the specification behavior, and this was just a minor note at the bottom, I'd feel differently.\n\nI'm happy to have it documented, just not in this spot.\n\n> I'd say documenting all OEM specifics in it seems to be more useful compared to code comments here and there. Code comments are mostly useful to those working on this code and nearby while Redfish.md is suppposed to be useful to API consumers too, right?\n\nThat's the key, API consumers shouldn't be using this interface.  This is intended only for webui-vue;  If we want to document this flow in webui-vue, we could do that, but I don't want API implementers looking at this documentation and expecting that this is something we allow.\n\nHopefully that makes sense.\n\n> \n> If you sure it'd be more helpful to move this comment to the code, no problem, it's just that the rationale isn't obvious to me, probably I'm missing the intent behind Redfish.md."
                },
                {
                    "file": "Redfish.md",
                    "line": 721,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> I'm happy to have it documented, just not in this spot.\n\nGot it, thanks for the clarification."
                },
                {
                    "file": "Redfish.md",
                    "line": 721,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just thinking out loud for a second, could we instead use \n!req->getHeaderValue(\"X-Requested-With\").empty();\n\nThe UI currently sets this header to inform us it's doing an XHR request, so we don't accidentally send back basic auth.\n\nI think that might solve this here without having to invent another header?"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I'm afraid I do not follow, I didn't add any other (than the regular OpenBMC cookies) header anywhere..."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "bmcweb already makes use of the \"X-Requested-With\" header to determine if the login is coming from a browser.  If we used that as our \"we should return cookies\" decision instead of the query param, we'd avoid duplicating things."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> bmcweb already makes use of the \"X-Requested-With\" header to determine if the login is coming from a browser.  If we used that as our \"we should return cookies\" decision instead of the query param, we'd avoid duplicating things.\n\nBut we want any Web browser based Redfish frontend to work nicely with bmcweb, not just webui-vue, so this can't be a good trigger to enable non-standard behaviour, I guess?"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> But we want any Web browser based Redfish frontend to work nicely with bmcweb\n\nMaybe, but even if that's our goal, that's why we're using a common header, not some bmcweb/openbmc specific one.  In theory now we can detect any browser, not just webui-vue.\n\nAlso, FWIW, browsers aren't how most consume Redfish, nor are any browser specifics called out in the protocol, so to say we want this to work with \"any web browser\" is a stretch.  We have lots of anti xss headers turned on, it's not like you can have a static page just redirect bmcweb and work (maybe it does?).\n\nFWIW, in the Redfish ecosystem, even DMTF had trouble for calls to make a \"generic UI\" to the point where it's still being worked."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we setting path here?  The issue is more that this is different than the other calls, which might be fine, but we should put it in its own commit so we can document why we're doing it."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> Why are we setting path here?  The issue is more that this is different than the other calls, which might be fine, but we should put it in its own commit so we can document why we're doing it.\n\nIt's actually not different because `/login` endpoint implies the same `/` path. But if it's not set here then the Path in the browser cookie storage gets limited to Sessions path so the cookie will be only sent for session listing and DELETE and no other endpoints :)"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "https://github.com/openbmc/bmcweb/blob/00a0fe4e361efcdeb600f3a2e88b746fa18b9715/include/login_routes.hpp#L174\n\nDoes not include any mention of the keyword \"Path\", this is why I'm confused.\n\nI'm assuming you tried without Path being set, and it didn't work?  Some mention of this in your commit message would be good, so we can note why it's different."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> https://github.com/openbmc/bmcweb/blob/00a0fe4e361efcdeb600f3a2e88b746fa18b9715/include/login_routes.hpp#L174\n> \n> Does not include any mention of the keyword \"Path\", this is why I'm confused.\n\nhttps://www.rfc-editor.org/rfc/rfc6265#section-5.3 point 7 for this case says \"set the cookie's path to the default-path of the request-uri\" and https://www.rfc-editor.org/rfc/rfc6265#section-5.1.4 tells how to compute the default path. Basically, it was a \"happy coincidence\" that `/login` defaults to `/` for the Path, if it was `/openbmc/login` then the cookies would have been set to `Path=/openbmc` and not work at all for `/redfish/v1` endpoints.\n\n> I'm assuming you tried without Path being set, and it didn't work?  Some mention of this in your commit message would be good, so we can note why it's different.\n\nSure, how else would a person without much clue about web technologies learn about it if not by getting puzzling results :) But then after reading the docs and seeing what the deal is about I just assumed it's common knowledge for cookie users so not something worth mentioning."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > https://github.com/openbmc/bmcweb/blob/00a0fe4e361efcdeb600f3a2e88b746fa18b9715/include/login_routes.hpp#L174\n> > \n> > Does not include any mention of the keyword \"Path\", this is why I'm confused.\n> \n> https://www.rfc-editor.org/rfc/rfc6265#section-5.3 point 7 for this case says \"set the cookie's path to the default-path of the request-uri\" and https://www.rfc-editor.org/rfc/rfc6265#section-5.1.4 tells how to compute the default path. Basically, it was a \"happy coincidence\" that `/login` defaults to `/` for the Path, if it was `/openbmc/login` then the cookies would have been set to `Path=/openbmc` and not work at all for `/redfish/v1` endpoints.\n\nThe above text would be perfect to put in your commit message about why you changed it to now return path where it didn't previously.  In your reading, should we be returning Path=/ on all the other set-cookie calls?  I suspect things like mtls cookies would be broken if you first requested a path that wasn't root because we don't set path.  (doesn't have to be in this patch).\n\n> \n> > I'm assuming you tried without Path being set, and it didn't work?  Some mention of this in your commit message would be good, so we can note why it's different.\n> \n> Sure, how else would a person without much clue about web technologies learn about it if not by getting puzzling results :)\n> But then after reading the docs and seeing what the deal is about I just assumed it's common knowledge for cookie users so not something worth mentioning.\n\n\nPutting that, or some variation of \"I tried the simple thing and it didn't work because XYZ, so I read RFCXXX and now it works\" helps me to not have to go look up the various standards to figure out what you did and why (which takes effort that when reviewing 10s of patches a day, I don't really have time for).\n\nLets get the commit message updated with the details and close this out."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 262,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we wrap this in a method please?  I see this same located two other places already, and it would be nice to be able to modify them in one spot."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I thought about that but also thought that you might want to get rid of /login altogether when the standard Redfish reaches feature parity.\n\nAs to the other path, the MTLS one, it also sets `IsAuthenticated` cookie and never checks it or does anything else with it. I wonder if it was added in mistake.\n\nBut even if /login is removed then it'd still be two and two is more than one, so DRY tells us a helper should be created instead, sure, agreed."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I thought about that but also thought that you might want to get rid of /login altogether when the standard Redfish reaches feature parity.\n\nHaving this in its own method won't take away from that goal when it comes.\n\nThe reality is also that /login at most will at most be wrapped in an option flag.  Its existed for too long and too many things rely on it to remove the code entirely.\n\n> \n> As to the other path, the MTLS one, it also sets `IsAuthenticated` cookie and never checks it or does anything else with it. I wonder if it was added in mistake.\n\nIsAuthenticated was used by the UI for cases where we had things like mTLS that would authenticate without Javascript, but we still needed to inform javascript \"hey, you're already logged in, don't post the login screen\".\n\nwebui-vue broke this path, and we haven't fixed it.  Lets keep IsAuthenticated for now just to be consistent between the auth paths, and at some point we'll have to look at getting mtls auth working on webui-vue.\n\n> \n> But even if /login is removed then it'd still be two and two is more than one, so DRY tells us a helper should be created instead, sure, agreed.\n\nThank you."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > \n> > As to the other path, the MTLS one, it also sets `IsAuthenticated` cookie and never checks it or does anything else with it. I wonder if it was added in mistake.\n> \n> IsAuthenticated was used by the UI for cases where we had things like mTLS that would authenticate without Javascript, but we still needed to inform javascript \"hey, you're already logged in, don't post the login screen\".\n\nI do not see how this can make any sense as that IsAuthenticated cookie is always set along with XSRF-Token cookie (which is /not/ HttpOnly) so the frontend can always assume it's currently logged in if it has XSRF-Token and always know that it's not logged in when it doesn't have it. This token is needed anyway for WS.\n \n> webui-vue broke this path\n\nThe logic behind it seems flawed so no wonder it ended up being fragile.\n\nInstead webui-vue should just try loading any page it's asked for, no matter if it thinks it's logged in or not, best case, mtls works and it gets the page and the cookie in response, worst case, it gets 401 and knows it needs to redirect to login page.\n\nThis shouldn't require any additional cookies AFAICT. Or am I missing some essential deal breaking detail here?"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > \n> > > As to the other path, the MTLS one, it also sets `IsAuthenticated` cookie and never checks it or does anything else with it. I wonder if it was added in mistake.\n> > \n> > IsAuthenticated was used by the UI for cases where we had things like mTLS that would authenticate without Javascript, but we still needed to inform javascript \"hey, you're already logged in, don't post the login screen\".\n> \n> I do not see how this can make any sense as that IsAuthenticated cookie is always set along with XSRF-Token cookie (which is /not/ HttpOnly) so the frontend can always assume it's currently logged in if it has XSRF-Token and always know that it's not logged in when it doesn't have it. This token is needed anyway for WS.\n\nI'm happy to explain the above to you, but not in the context of of a code review comment.  Lets keep this thread focused on the change I asked for, which is refactoring this to use common code where we can.\n\n>  \n> > webui-vue broke this path\n> \n> The logic behind it seems flawed so no wonder it ended up being fragile.\n\nIt worked fine for the whole lifecycle of phosphor-webui;  It's not about it being fragile, it's about webui-vue completely ignoring the feature when they did a \"replacement\" UI.\n\nSome historical reading if you're curious.\nhttps://lore.kernel.org/openbmc/OF91B43372.8E81A7D9-ON002585EA.0056113C-002585EA.0060099C@notes.na.collabserv.com/\n\n> \n> Instead webui-vue should just try loading any page it's asked for, no matter if it thinks it's logged in or not, best case, mtls works and it gets the page and the cookie in response, worst case, it gets 401 and knows it needs to redirect to login page.\n> \n> This shouldn't require any additional cookies AFAICT. Or am I missing some essential deal breaking detail here?\n\nI believe the original theory is that if we're authenticating via MTLS, we didn't want any session token to even exist (because its existence could in theory be used as a chain of the attack) so we're better off returning a non-secret.\n\nObviously the current code doesn't live up to that intent, (I'm not sure if it did previously and we just broke it at some point in a refactor), but that intent makes sense to me.  If we ever get around to doing webui-mtls auth in the future, we'll have to look at this again."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I hope I found a suitable location for the common set/clear cookies method, if not, ready to rework but I'd need a hint at a better place."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Where you put it is fine."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should add this header in either path."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> We should add this header in either path.\n\nWhy? If we know our client is special and asks for our special sauce why send the standard header? Also, it contains the token that's supposed to be secret from JS code if we claim the non-standard cookie auth is done for additional security the SESSION HttpOnly cookie provides but here we would be giving injected JS an opportunity to catch it."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > We should add this header in either path.\n> \n> Why? \n\nIn a word, consistency.  The special header is only additive, so even if we got in some strange scenario where the special header is being used, but the client was expecting x-auth, it would function.\n\nAlso, a more minor thing, if we keep the X-auth-token, we're technically still \"redfish correct\" in our response to the POST.\n\n> If we know our client is special and asks for our special sauce why send the standard header? Also, it contains the token that's supposed to be secret from JS code if we claim the non-standard cookie auth is done for additional security\n\nLets be clear, cookie auth is done for websocket support.  I'm not prepared to justify the claim that it's more secure the X-auth-token.\n\n> the SESSION HttpOnly cookie provides but here we would be giving injected JS an opportunity to catch it.\n\nMy opinion here isn't terribly strong.  If you want to keep the code as is, all good."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > If we know our client is special and asks for our special sauce why send the standard header? Also, it contains the token that's supposed to be secret from JS code if we claim the non-standard cookie auth is done for additional security\n> \n> Lets be clear, cookie auth is done for websocket support.  I'm not prepared to justify the claim that it's more secure the X-auth-token.\n\nWhy do we need the cookie auth in addition to the subprotocol token auth for WS? What's the threat you have in mind here? That JS will get injected code somehow and that code would steal and exfiltrate the temporary token but then since it's not able to read the SESSION cookie the WS won't be accessible to the outside processes? But in fact it will be accessible to the other tabs in the same web browser because CORS isn't applied to web sockets. But then you say the SESSION cookie will be removed on logout and /then/ the WS will no longer be accessible? Sounds far-fetched, guess that's not what you think about.\n\nAnd if you say we need cookie auth only for websockets then why websocket needs to be protected any more seriously than all the standard API calls (if they were using just the standard X-Auth-Token)?\n\n>> the SESSION HttpOnly cookie provides but here we would be giving injected JS an opportunity to catch it.\n> \n> My opinion here isn't terribly strong.  If you want to keep the code as is, all good.\n\nMy impression so far is that if Redfish members think X-Auth-Token is secure enough for the web browser clients and HttpOnly is an overkill then OpenBMC probably shouldn't complicate the matters too much and get rid of cookie auth altogether, and websocket checking the same X-Auth-Token on upgrade path (passed as subprotocol string) is as secure as the rest of the API, I'm yet to see any difference. I might be very wrong here, far from being an expert in web technologies."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > If we know our client is special and asks for our special sauce why send the standard header? Also, it contains the token that's supposed to be secret from JS code if we claim the non-standard cookie auth is done for additional security\n> > \n> > Lets be clear, cookie auth is done for websocket support.  I'm not prepared to justify the claim that it's more secure the X-auth-token.\n> \n> Why do we need the cookie auth in addition to the subprotocol token auth for WS?\n> What's the threat you have in mind here? That JS will get injected code somehow and that code would steal and exfiltrate the temporary token but then since it's not able to read the SESSION cookie the WS won't be accessible to the outside processes? But in fact it will be accessible to the other tabs in the same web browser because CORS isn't applied to web sockets. But then you say the SESSION cookie will be removed on logout and /then/ the WS will no longer be accessible? Sounds far-fetched, guess that's not what you think about.\n\n\nIf you're looking for history, this code review isn't the right place to discuss (although I'm happy to have that conversation).  Keep in mind, I wasn't a part of the subprotocol addition, so the context of that is hopefully captured in commit messages.\n\nI know you have strong opinions on various communication forums, so I'll leave it up to you which OpenBMC forum you want to start the above discussion (I'm available on all of the active openbmc ones).\n\n\nIn the context of this commit, I've written down the change I'd like to see, and also said I'm not that tied to it if I don't see it.  We can close this discussion whether or not you want to make the change, and honestly either way is fine.\n\n> \n> And if you say we need cookie auth only for websockets then why websocket needs to be protected any more seriously than all the standard API calls (if they were using just the standard X-Auth-Token)?\n> \n> >> the SESSION HttpOnly cookie provides but here we would be giving injected JS an opportunity to catch it.\n> > \n> > My opinion here isn't terribly strong.  If you want to keep the code as is, all good.\n> \n> My impression so far is that if Redfish members think X-Auth-Token is secure enough for the web browser clients and HttpOnly is an overkill then OpenBMC probably shouldn't complicate the matters too much and get rid of cookie auth altogether, and websocket checking the same X-Auth-Token on upgrade path (passed as subprotocol string) is as secure as the rest of the API, I'm yet to see any difference. I might be very wrong here, far from being an expert in web technologies.\n\nYou can also rephrase \"get rid of X\" as \"break existing clients that use X\", which we try to avoid in the ecosystem if we can.\n\nPeoples opinions on this stuff are wide and varied;  bmcweb tries to support as many opinions in one codebase as we can securely, which is why we currently support 5 different ways to authenticate, and also why they're all selectable at build time AND runtime.\n\nIf you don't want to use cookie auth, there's a meson config for that already and a way to disable it at runtime.  websockets from a browser will not function if you disable cookie auth but that's not a bmcweb problem, that's a webui-vue problem, so if you want to discuss that in that context (not in this patch), we can.\n\n> My impression so far is that if Redfish members\n\nConsidering I am a DMTF Redfish member......   I'm not really sure how to take this \ud83d\ude0a\n\nWe're discussing protocol specifics that go beyond Redfish, so while I certainly value Redfish forums opinion, it's kind of irrelevant.  Their opinion applies to the Redfish protocol (for which we have full support).  bmcweb implements Redfish and \"more\", so there are cases where Redfish itself isn't sufficient, or hasn't caught up to us (mutual TLS being a good example of something we implemented YEARS ago, and Redfish is just now catching up on)."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> I know you have strong opinions on various communication forums, so I'll leave it up to you which OpenBMC forum you want to start the above discussion (I'm available on all of the active openbmc ones).\n\nOK, I'll try to re-start this discussion on the mailing list.\n\n> In the context of this commit, I've written down the change I'd like to see, and also said I'm not that tied to it if I don't see it.  We can close this discussion whether or not you want to make the change, and honestly either way is fine.\n\nWhen making a decision I like to come to consensus with all experienced parties involved. Here I think I still have a point but if it doesn't sound convincing to you then either the point is bad or I haven't yet succeeded explaining it to you.\n\n> You can also rephrase \"get rid of X\" as \"break existing clients that use X\", which we try to avoid in the ecosystem if we can.\n\nNo existing clients count on cookie auth being available via the standard Redfish Session creating method. So if you just agreed to relax the security requirements for WS a bit and allow authenticating with the subprotocol alone (without cookies) that would seem like a viable way forward of converting webui-vue to standard auth."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> So if you just agreed to relax the security requirements for WS a bit and allow authenticating with the subprotocol alone (without cookies) that would seem like a viable way forward of converting webui-vue to standard auth.\n\nFWIW, it's done using cookies because it reduces the amount of code that's presented to an unathenticated attacker, which reduces the possibility of an unauthenticated attack being found.  Subprotocol runs a lot more code before it can decide a connection is unauthenticated, and all that code is specific to websockets (so harder to test). while I'd like to believe that code is bug and race condition free, not executing it at all is easier."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "X-Auth-Token is sent unconditionally as per your request.\n\nHowever I'm asking you to give it one final thought. The way it currently is the token is returned as HttpOnly cookie but also as reply header for this particular endpoint once. So if we assume webui-vue JS got injected something malicious somehow then it can intercept that response and get access to the secret token which was supposed to be absolutely inaccessible to JS."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> X-Auth-Token is sent unconditionally as per your request.\n> \n> However I'm asking you to give it one final thought. The way it currently is the token is returned as HttpOnly cookie but also as reply header for this particular endpoint once. So if we assume webui-vue JS got injected something malicious somehow then it can intercept that response and get access to the secret token which was supposed to be absolutely inaccessible to JS.\n\nYou make a fair argument that we shouldn't return X-Auth-Token when we get this header.  If you wanted to change to make it so we don't send an X-Auth-Token in the case where we're sending cookies, that seems reasonable to me"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "Redfish.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 66,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "27b02c004f6a6d58fa5054deaf1c263c2ffa3e26",
            "parents": [
                "478c5a57ac1143d689f3d3670092c2eb75e0f0c4"
            ],
            "ref": "refs/changes/86/71986/3",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1719939797,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -12
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 76,
            "sizeDeletions": 18
        },
        {
            "number": 4,
            "revision": "030b237ea0adfdf9ba7d7749a7c510041471447e",
            "parents": [
                "478c5a57ac1143d689f3d3670092c2eb75e0f0c4"
            ],
            "ref": "refs/changes/86/71986/4",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1719941243,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is going to collide hard with https://gerrit.openbmc.org/c/openbmc/bmcweb/+/72358\n\nThat's ok, I can resolve the merge conflicts;  Lets get yours in first.  If you could help to review that series now that you understand that code, I would appreciate it."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 6,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> This is going to collide hard with https://gerrit.openbmc.org/c/openbmc/bmcweb/+/72358\n> \n> That's ok, I can resolve the merge conflicts;  Lets get yours in first.  If you could help to review that series now that you understand that code, I would appreciate it.\n\nI'll see what I can do. Not sure I fancy getting mTLS set up myself without any good instructions for easily reproducible setup though. I kind of feel uneasy about people who really want that functionality not actively participating."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > This is going to collide hard with https://gerrit.openbmc.org/c/openbmc/bmcweb/+/72358\n> > \n> > That's ok, I can resolve the merge conflicts;  Lets get yours in first.  If you could help to review that series now that you understand that code, I would appreciate it.\n> \n> I'll see what I can do. Not sure I fancy getting mTLS set up myself without any good instructions for easily reproducible setup though.\n\nI didn't ask you to test, just to review the parts of the code you understand.  With that said, scripts/generate_auth_certs.py, makes it pretty trivial to set up mTLS in a reproducible way."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LGTM.  Leaving in review for a minute to do the bookeeping on the open issues and to let others comment."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -12
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 18
        },
        {
            "number": 5,
            "revision": "ab3029c4d3f625e75fa3afb96317b048272f6005",
            "parents": [
                "478c5a57ac1143d689f3d3670092c2eb75e0f0c4"
            ],
            "ref": "refs/changes/86/71986/5",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1719952056,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like what we talked about."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Eh, these probably should've gone in authentication.hpp directly.  This file is more about \"session\" storage than http session handle.  Oh well, they're fine here."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "OTOH authentication.hpp is mostly about /checking/ authencity of requests made under an already existing session while setting and clearing cookies are coupled to session management, that was my reasoning. So let's wait for more feedback if any."
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "how about just a new file for cookies.hpp?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> how about just a new file for cookies.hpp?\n\nSounds good, np, will do for the next iteration if desired. And put it in namespace `cookies`?"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "bmcweb namespace please"
                },
                {
                    "file": "include/sessions.hpp",
                    "line": 385,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -12
                },
                {
                    "file": "include/sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 84,
            "sizeDeletions": 19
        },
        {
            "number": 6,
            "revision": "0ca7a3f453dc398f779a7a3fe906a7e87d8f8e84",
            "parents": [
                "478c5a57ac1143d689f3d3670092c2eb75e0f0c4"
            ],
            "ref": "refs/changes/86/71986/6",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1720703744,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -12
                },
                {
                    "file": "include/cookies.hpp",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 94,
            "sizeDeletions": 19
        },
        {
            "number": 7,
            "revision": "a671efad880fd2a015ee3c0ce9f242509f6f9631",
            "parents": [
                "478c5a57ac1143d689f3d3670092c2eb75e0f0c4"
            ],
            "ref": "refs/changes/86/71986/7",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1720705199,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -12
                },
                {
                    "file": "include/cookies.hpp",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 94,
            "sizeDeletions": 19
        },
        {
            "number": 8,
            "revision": "29aab242f2d35891bd808e057e33b328989836d3",
            "parents": [
                "ca89b200406e16a47195e132f2e47a1d2b9879c3"
            ],
            "ref": "refs/changes/86/71986/8",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1720717070,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Looks like I made a mistake here. It's not always we DELETE the very session we are using, so guess this should have been\n`if (req.session != nullptr && req.session->uniqueId == sessionId && session->cookieAuth)`\n\nI'll cook a tested patch to that effect later if nobody beats me to it."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d\n\nThanks for testing this further.  I suspect this probably doesn't effect anything, because other session deletes are being done in an XHR context in the UI, but it'd be good to fix either way."
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "The bug is apparently real when one web session is deleting another web session, a follow-up here: https://gerrit.openbmc.org/c/openbmc/bmcweb/+/74704"
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "line": 129,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/login_routes.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -12
                },
                {
                    "file": "include/cookies.hpp",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/authentication.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/lib/redfish_sessions.hpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 94,
            "sizeDeletions": 19
        }
    ]
}