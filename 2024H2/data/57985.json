{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ic3f29b2fd4e04c25ffdd97d4ef760e90e328a33b",
    "number": 57985,
    "subject": "Design: Redfish Composability",
    "owner": {
        "name": "Gunnar Mills",
        "email": "gunnar@gmills.xyz",
        "username": "gtmills"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/57985",
    "hashtags": [],
    "createdOn": 1666059803,
    "lastUpdated": 1726673671,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1666059803,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1666059892,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1666059892,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1666059910,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53678/ : SUCCESS"
        },
        {
            "timestamp": 1666117355,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(11 comments)"
        },
        {
            "timestamp": 1666126255,
            "reviewer": {
                "name": "Nikhil Jain C S",
                "email": "nikhil.jain.c.s@intel.com",
                "username": "njaincs"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1687384981,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1696301050,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1697215639,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Abandoned\n\nCan reopen later but at this time focus has shifted to other things"
        },
        {
            "timestamp": 1726632127,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "339f0d00d3c2e6e8b21cb41ccfa5b48eac74d2f0",
            "parents": [
                "62f2b272e762b94974abcb5612a112af8b3e0779"
            ],
            "ref": "refs/changes/85/57985/1",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "createdOn": 1666059803,
            "author": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Excellent start.  The only concerns from my perspective are in missing design details, but this is a great start, and I'm willing to bet can land."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "posting previously drafted comments"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Most of this is background and references vs problem description."
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Nikhil Jain C S",
                        "email": "nikhil.jain.c.s@intel.com",
                        "username": "njaincs"
                    },
                    "message": "typo? Redfish standard ?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "s/Redish/Redfish/"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Great requirements section.  Concise, but very clear what the external facing APIs we're adding are.  There's a few missing details around what properties will do what, but eh, I'm not that worried about it.  Good work!"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Requirement to persist the composed systems that have been created? Or is there an expectation that \"something else\" persists the composed systems on d-bus?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "does this need more than an association link to the resource blocks?  \n(you mention capabilities?)\n(does it host create composed system method below?)"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, DBus APIs don't create Redfish systems.  Probably just remove the word redfish."
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Where would this method be found?   On the resource zone?   Do we just find the zone of the first block or does bmcweb validate all blocks are in one zone?  \n\n(thinking a bit it probably has to translate redfish object.id to dbus objects)\ndo we expect all resource blocks for a resource zone are all local or will they be from aggregated managers?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 141,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "guessing these would be on the composed system object along with standard delete"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This section is a little lacking.  \"I want to make some new DBus interfaces\" is how I'm reading this, which arguably could've just been a PDI review.\n\nSome important things that I see missing here:\n\n1. What is the overall data path?  user -> Redfish -> bmcweb -> DBus is pretty clear, but presuably that needs to go Dbus -> Some daemon? -> Hardware?  And I think the righthand side of that graph is important.  Presumably we're not going to run hypservisors on the BMC.\n\n2. This should call out how this interacts with other existing services.  Do composed systems show up as an Item.System?  Are there associations to the existing Item.Dimm/Item.Drive resources to map the composed resources?  How does Reset work?\n\n3. Do we need to complete the multi-host design first, so that we can enumerate multiple System instances?  I would expect the answer is yes.\n\n4. Give a couple examples of what paths, interfaces, and methods would look like in your example you gave earlier."
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This section is a little lacking.  \"I want to make some new DBus interfaces\" is how I'm reading this, which arguably could've just been a PDI review for the interfaces you want to add.  Some things that I think need called out in the design section.\n\n1. How do the existing DBus interfaces interact with this?  (DIMM, Host, State.Chassis, ect).  What does a composed system look like on DBus.\n\n2. What daemons are implementing this, and what are the communication channels for these daemons?  Is there an expectation of multiple daemons to implement this?  User -> Redfish -> bmcweb -> DBus is pretty clear, but the chain seems to end at that point.  What hosts those dbus APIS?\n\n3. Could you call out some examples of what the dbus interfaces look like for a composed system?  Does it have a reset API?  Does it have Inventory APIs?  It's not clear to me how that would work.\n\n4. How would at a DBus level would we differentiate between a composed system and a \"normal\" system?  Or do we care?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an alternative?  I'm pretty sure we're already going to follow Redfish and OpenBMC Dbus archictecture."
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 147,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Or sensors, or user manager, or EM, or..... damn near everything except event service \ud83d\ude0a"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 151,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Security model?  Binary size?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 157,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs called out in the design section.  What does the composed-system daemon do?"
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "will."
                },
                {
                    "file": "designs/redfish-composability.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Are there any open tools that do this already that we could use to test?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-composability.md",
                    "type": "ADDED",
                    "insertions": 164,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        }
    ]
}