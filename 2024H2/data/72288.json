{
    "project": "openbmc/libpldm",
    "branch": "main",
    "id": "I0440b6d1965fa86b54ce329a5d013852af14bbcd",
    "number": 72288,
    "subject": "pdr: Add decode_auxiliary_names_data()",
    "owner": {
        "name": "Thu Nguyen",
        "email": "thu@os.amperecomputing.com",
        "username": "ThuBaNguyen"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/72288",
    "hashtags": [],
    "createdOn": 1719066725,
    "lastUpdated": 1720012296,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1719066725,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1719066744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719066744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1719067098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86598/ : FAILURE"
        },
        {
            "timestamp": 1719067469,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719067491,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719067491,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1719067656,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1719067822,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86600/ : FAILURE"
        },
        {
            "timestamp": 1719068055,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719068081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719068081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1719068333,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86601/ : SUCCESS"
        },
        {
            "timestamp": 1719068424,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719196617,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(13 comments)"
        },
        {
            "timestamp": 1720012296,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Abandoned\n\nthe decoder can use pldm_msgbuf_span_string_utf16() and pldm_msgbuf_span_string_ascii() to directly decode name in Sensor/State/Effecter name."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9333260f7917d08d331f158ec39609f5a6e9069d",
            "parents": [
                "aefb3162359d11c6ac9155e2161e2320ea20bc97"
            ],
            "ref": "refs/changes/88/72288/1",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719066725,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 154,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 266,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "15458ce5e7929e9777a1550396435c43fb176c2e",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/88/72288/2",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719067469,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/platform.h",
                    "line": 548,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The entity-aux-name in response message is in format `0x00, 0x52, 0x00, 0x52, 0x00, 0x33, 0x00, 0x00  // Entity Name \"RR3\"`. To decode this format the codecvt_utf8_utf16 is required. This codec is available in cpp. So the entity_aux_name will be responsed as flexible array of char. That why name_size is added."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 548,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We don't need it though, because we don't care for the flexible array size. The utf16-be string is null-terminated.\n\nI did have a look at whether we should try to use `wchar_t` here, but that ties into all the locale junk, and that's not what we want. That does mean that we can't exploit e.g. `wcsnlen()`, but we can use `memmem(cursor, remaining, u\"\", sizeof(char16_t))` as an equivalent (C17, 6.4.5 paragraph 6 for the `u` character prefix)."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 225,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "16e979b59eda00afcbd14341a87d195cd7ba3e43",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/88/72288/3",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719068055,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please use forward-slashes (`/`) throughout? Back-slashes (`\\`) make me twitch."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What provides this? Why are we prescribing it here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Thu, I have some comments throughout. I think the most fundamental bit is implementing the string span helpers in the `msgbuf` API."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 537,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Actually, instead of `char` we can make this `char16_t`, which is specified by the C standard."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 552,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please drop this."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2696,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Instead of `aux_names` and `names_size` we could pass a `struct variable_field`."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2697,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Perhaps we should use `size_t` here?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2704,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Need to test `names` also?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2705,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "New functions should return 0 on success or a negative errno. See:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain=1#L108-L112"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2708,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "No; casting away `const` may yield undefined behaviour. Why is that necessary?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2713,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This may overrun the buffer bounds. At a minimum we need to use `strnlen()`. But really this should all be implemented as `msgbuf` APIs for spanning a null-terminated ASCII string (`pldm_msgbuf_span_string_ascii()`), and a null-terminated `char16_t` string (`pldm_msgbuf_span_string_utf16()`). We make the prototypes of these functions take a `struct variable_field *` as an out-parameter, and through that provide the start address and the string size, and from there we can do with that what we please.\n\nThen this loop becomes alternating calls to e.g. `pldm_msgbuf_span_string_ascii()`, and `pldm_msgbuf_span_string_utf16()`."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2736,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "New functions should return 0 on success or a negative errno. See:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain=1#L108-L112"
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "line": 4883,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "For mat of one entity aux name in str_utf16be format. terminator is `0x00, 0x00`. One character needs two bytes.\nPLDM data is response in BE, the character bytes is utf16be -> Response data for `R` s `0x00 0x52` in LE."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 227,
            "sizeDeletions": 0
        }
    ]
}