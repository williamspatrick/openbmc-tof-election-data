{
    "project": "openbmc/phosphor-debug-collector",
    "branch": "master",
    "id": "I69fd4ac555a7fc7297813c6cbc53a97d3eb1c366",
    "number": 75343,
    "subject": "dreport: Remove hardcoding of dump types",
    "owner": {
        "name": "Dhruvaraj S",
        "email": "dhruvaraj@gmail.com",
        "username": "dhruvibm"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/75343",
    "hashtags": [],
    "createdOn": 1729178862,
    "lastUpdated": 1732199714,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1729178862,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729178884,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729178884,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729178950,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93322/ : SUCCESS"
        },
        {
            "timestamp": 1729178964,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1729840252,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729840290,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 2:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1729840308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729840308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1729840328,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93714/ : FAILURE"
        },
        {
            "timestamp": 1729844940,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Uploaded patch set 3: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729844962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729844962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1729845020,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/93723/ : SUCCESS"
        },
        {
            "timestamp": 1729847217,
            "reviewer": {
                "name": "Gopichand Paturi",
                "email": "gopichandpaturi@gmail.com",
                "username": "gcpin"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1729851382,
            "reviewer": {
                "name": "MARRI DEVENDER RAO",
                "email": "devenrao@in.ibm.com",
                "username": "devenrao"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1729857252,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1731930738,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1732081744,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1732119594,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1732130910,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1732198214,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1732199714,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "fb9cc4f731354b755689cb07c9808013a5d7d38c",
            "parents": [
                "973b291eb264ae8de4119c8d62fd16230926d257"
            ],
            "ref": "refs/changes/43/75343/1",
            "uploader": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "createdOn": 1729178862,
            "author": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/elog",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/dreport",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -75
                }
            ],
            "sizeInsertions": 66,
            "sizeDeletions": 75
        },
        {
            "number": 2,
            "revision": "d86955eaa512fe33d7e8706d577b26fc4228df5c",
            "parents": [
                "973b291eb264ae8de4119c8d62fd16230926d257"
            ],
            "ref": "refs/changes/43/75343/2",
            "uploader": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "createdOn": 1729840252,
            "author": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/elog",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/dreport",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -75
                }
            ],
            "sizeInsertions": 72,
            "sizeDeletions": 75
        },
        {
            "number": 3,
            "revision": "de8d042a704e1711f355cc0b583c5e56a9b55129",
            "parents": [
                "973b291eb264ae8de4119c8d62fd16230926d257"
            ],
            "ref": "refs/changes/43/75343/3",
            "uploader": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "createdOn": 1729844940,
            "author": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Please add the \"why\" to the commit message. Why are we doing this? Does it allow supporting other dump types more easily? Is it to make downstream function easier to carry? What are the ramifications of doing this? Are we more prone to errors since we don't have any dump type validation anymore?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "In my understanding from the discussions earlier, the dump types are added in the configuration and in the dbus interface definition and created plugin-based architecture is for easy extensibility. Dreport script is the entry point for executing the plugins. But the dump type checking is hardcoded in the dreport script, which looks unnecessary as the supported types are listed in the conf file and the plugins for each type are installed based on that. Checking the type in dreport make it less flexible because the configuration file can be overridden for different architectures based on the requirements. Still, there is a requirement to hardcode that in the main dreport script just for checking the type of the dump."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Dump Initial proposal to community is available here. https://lists.ozlabs.org/pipermail/openbmc/attachments/20170517/5118b357/attachment-0001.html.\nThis proposal also talks about dreport tool which is \"This tool is mainly aimed for developers and lab bring-up\".\nAs i mentioned earlier this tool should support both standalone and PDC use case.\n\n\"Checking the type in dreport make it less flexible because the configuration file can be overridden for different architectures based on the requirements\". IBM got any use case for overiding the conf file?  if it is adding or disabling dumps? t , as mentioned by Andrew please provide details. then we can discuss configuration file based instead of  installed based plugin based approch."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "I will update the commit message but \n\n> This proposal also talks about dreport tool which is \"This tool is mainly aimed  for developers and lab bring-up\".\nAs i mentioned earlier this tool should support both standalone and PDC use case.\n\nThis change should still allow the standalone execution of dreport.\n\nAn additional point, here is what is mentioned about dreport\n\n`dReport\nA bash script-based reporting application that generates a compressed tarball of debugging information based on inputs and bmcdump.config.`\n\nNow apart from input and bmcdump.config, we need to modify the dreport main script also to add a new BMC dump type, which is all addressed in this commit."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Not sure why you are saying hardcoded dump type here ? dreport is is also designed to run standalone.\n  Basically dump type definition is owned by dreport not based on the external app's which is in charge of installing scripts. this look like anti design patter from dreport script."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "Can you please explain why you mention anti-pattern?\nAnd can you please provide the design document for the dreport, and please point out why it is mandatory to hardcode the name of the type in the dreport script?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "As i mentioned earlier , design direction we used for dreport, is support both standlone and application usage. Allowing the user application( PDC) to define dump types can introduce unnecessary complexity. The dreport  tool might need to handle a wide variety of data types, which can complicate the design and maintenance.  So loosing the flexibilty of using standalone or other applications That is why am refering this is not hardcoded. If you are really looking an infrastructure to overide this , by conf file approch , we need to add support dreport to handle default conf ( same as now) and overide based on user provided types, with handling all error use cases. Do you have any requirement to do this?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "One problem may be the lack of documentation of the design direction, which is causing confusion. \n\n> The dreport tool might need to handle a wide variety of data types -> I am not clear about handling data type and the complexity in handling data type here\n\nWith these changes also dreport can be executed standalone, the only change in the commit is removing the hardcoded checking for dump type(which is a concern of conf file) and checking whether that plugin is installed.\n\nIf the hardcoding of dump type is removed from dreport, the dump type checking will be purely based on the plugin installation and that should improve the extensibility.\n\nThere are multiple requirements to pack different BMC data in different types of dump or even for overriding the content of the dump based on the field usecases, so what I am looking for is extending the support for such requirements with plugins without impact on the main dreport script."
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "line": 9,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "pid is global variable and shouldn't be getting the information from plugin. Plugin is run on priority basis defined at beginning of file.  and these changes creating new dependency on plugin to run alway's first."
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "line": 9,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "Can you please clarify this point why pid is global variable when it is being used only in the pluggin script?"
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "line": 9,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "any variable used by multiple plugins are considered as global variable."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/corefile",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/plugins.d/elog",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "tools/dreport.d/dreport",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -75
                }
            ],
            "sizeInsertions": 72,
            "sizeDeletions": 75
        }
    ]
}