{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "topic": "LeakDetection",
    "id": "Id6981deb314ca6852c5e31b932b28e601c2f3976",
    "number": 75329,
    "subject": "Implement Liquid Leak Detector",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329",
    "hashtags": [],
    "createdOn": 1729098942,
    "lastUpdated": 1734568470,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1729098942,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1729098962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729098962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1729098969,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1729098984,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93282/ : FAILURE"
        },
        {
            "timestamp": 1729187646,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729187684,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729187684,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1729187733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93329/ : FAILURE"
        },
        {
            "timestamp": 1729708572,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Topic set to LeakDetection"
        },
        {
            "timestamp": 1729901730,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729901769,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729901769,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1729901964,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93786/ : FAILURE"
        },
        {
            "timestamp": 1729905058,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1729905092,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1729905098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1729905098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1729905146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/93787/ : FAILURE"
        },
        {
            "timestamp": 1730075440,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1730076261,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1730392690,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1730419073,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1730708515,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1732404763,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1732404786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1732404787,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1732404836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95099/ : FAILURE"
        },
        {
            "timestamp": 1732568827,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732573633,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review-1\n\n(33 comments)"
        },
        {
            "timestamp": 1732575447,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1732584288,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1732584461,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732584789,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732586082,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732586272,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732586493,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732586582,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1732587379,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732587559,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732589121,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732589293,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1732589573,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1733123377,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1733123884,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733123909,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733123909,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1733124105,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95612/ : FAILURE"
        },
        {
            "timestamp": 1733196154,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733196196,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733196196,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1733196679,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95669/ : FAILURE"
        },
        {
            "timestamp": 1733212342,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733212392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733212393,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1733212874,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95699/ : FAILURE"
        },
        {
            "timestamp": 1733214769,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733214818,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733214818,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1733215187,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95700/ : FAILURE"
        },
        {
            "timestamp": 1733387970,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 10: New patch set was added with same tree, parent tree, and commit message as Patch Set 9.\n\nCopied Votes:\n* Verified-1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1733387996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733387996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1733388197,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95888/ : FAILURE"
        },
        {
            "timestamp": 1733389802,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 10:\n\n(42 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1733389936,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1733389972,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733390001,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733390001,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1733390340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95898/ : FAILURE"
        },
        {
            "timestamp": 1733438595,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 11:\n\n(3 comments)"
        },
        {
            "timestamp": 1733439647,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1733439932,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 11:\n\n(3 comments)"
        },
        {
            "timestamp": 1733440745,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 12.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733440765,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1733440774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733440774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1733440826,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95957/ : FAILURE"
        },
        {
            "timestamp": 1733442682,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733442685,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1733442699,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733442699,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1733442871,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95959/ : FAILURE"
        },
        {
            "timestamp": 1733448356,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733448370,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733448370,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1733448370,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1733448445,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/95973/ : FAILURE"
        },
        {
            "timestamp": 1733509666,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733509720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733509720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1733509771,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96032/ : FAILURE"
        },
        {
            "timestamp": 1733509811,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1733768752,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1733768762,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733768801,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733768801,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1733768849,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96139/ : FAILURE"
        },
        {
            "timestamp": 1733769641,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733769654,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733769655,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1733769702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96141/ : FAILURE"
        },
        {
            "timestamp": 1733787948,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733787981,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733787981,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1733788029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96157/ : FAILURE"
        },
        {
            "timestamp": 1733812850,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 19: Patch Set 18 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733812878,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733812879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1733812935,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96181/ : FAILURE"
        },
        {
            "timestamp": 1733814970,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733814998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733814998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1733815053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96183/ : FAILURE"
        },
        {
            "timestamp": 1733899063,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733899106,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733899106,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1733899157,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96277/ : FAILURE"
        },
        {
            "timestamp": 1733952674,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 22.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733952692,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1733952730,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733952730,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1733952781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96375/ : FAILURE"
        },
        {
            "timestamp": 1733953190,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 22:\n\n(4 comments)"
        },
        {
            "timestamp": 1734018805,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1734018819,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1734028648,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 23.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734028665,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1734028678,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734028678,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1734028727,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96504/ : FAILURE"
        },
        {
            "timestamp": 1734029101,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96509/ : FAILURE"
        },
        {
            "timestamp": 1734029124,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734029124,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1734029172,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96510/ : FAILURE"
        },
        {
            "timestamp": 1734030139,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734030139,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1734030188,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96517/ : FAILURE"
        },
        {
            "timestamp": 1734032775,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734032776,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1734033267,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96526/ : FAILURE"
        },
        {
            "timestamp": 1734042130,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734042165,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734042165,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1734042820,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96532/ : FAILURE"
        },
        {
            "timestamp": 1734044816,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 25.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734044845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734044845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1734045191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96534/ : FAILURE"
        },
        {
            "timestamp": 1734052172,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 26.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734052200,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734052200,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1734052686,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96543/ : FAILURE"
        },
        {
            "timestamp": 1734075104,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 27.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734075128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734075128,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1734075648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96586/ : SUCCESS"
        },
        {
            "timestamp": 1734076363,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 28.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734076377,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734076378,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: -Ok-To-Test"
        },
        {
            "timestamp": 1734076751,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96592/ : SUCCESS"
        },
        {
            "timestamp": 1734079023,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 29.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734079044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734079044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: -Ok-To-Test"
        },
        {
            "timestamp": 1734079115,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 28:\n\n(3 comments)"
        },
        {
            "timestamp": 1734079445,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96603/ : SUCCESS"
        },
        {
            "timestamp": 1734118436,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 30.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734118465,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734118466,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: -Ok-To-Test"
        },
        {
            "timestamp": 1734118836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96640/ : SUCCESS"
        },
        {
            "timestamp": 1734138496,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 30:\n\n(1 comment)"
        },
        {
            "timestamp": 1734338884,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 31.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734338913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734338913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: -Ok-To-Test"
        },
        {
            "timestamp": 1734339411,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96721/ : FAILURE"
        },
        {
            "timestamp": 1734376522,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 32.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734376551,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734376551,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: -Ok-To-Test"
        },
        {
            "timestamp": 1734377076,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96761/ : SUCCESS"
        },
        {
            "timestamp": 1734464218,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 33.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734464240,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734464240,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: -Ok-To-Test"
        },
        {
            "timestamp": 1734464742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96849/ : FAILURE"
        },
        {
            "timestamp": 1734465200,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 34.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734465230,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734465230,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: -Ok-To-Test"
        },
        {
            "timestamp": 1734465578,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/96852/ : FAILURE"
        },
        {
            "timestamp": 1734465978,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 35.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734465990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734465990,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: -Ok-To-Test"
        },
        {
            "timestamp": 1734466504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96856/ : SUCCESS"
        },
        {
            "timestamp": 1734566779,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 36.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734566798,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734566798,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: -Ok-To-Test"
        },
        {
            "timestamp": 1734566973,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/97234/ : FAILURE"
        },
        {
            "timestamp": 1734567863,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 37.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1734567898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1734567898,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: -Ok-To-Test"
        },
        {
            "timestamp": 1734568470,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/97237/ : SUCCESS"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "18b810cc549a8c3bab829601496a917cbb03f9c6",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729098942,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 185,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 55,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 717,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "993999ea3e5f021052146ce3d0ff2af1a1bffe95",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729187646,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 192,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 722,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "5a38bf6503ef5402768807a3e0ae10cef99df84d",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729901730,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 174,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 201,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 805,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "d1da78816d761df78c5343a316fa26ceedf4abb3",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/4",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1729905058,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same comments here as in your cable presence sensor review.  Feel free to decide which you'd like to prioritize the review of first, and once you have an understanding of the first one, you can work to get the same cleanups made to the second one."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, will get this reviewed first and make similar updates to other PR."
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What can we do to avoid adding more things called \"Utils\"? Can we find another way to represent this?"
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Currently, the LeakUtils module only contains functionality related to events. We can create a new class called LeakEvents that will provide the necessary methods for handling events?"
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I feel that would be an improvement, thanks."
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I really prefer we do not continue to pile free functions into Utils.h.\n\nPlease try to start forming some object models that represent the things we're interacting with, and do the interactions via methods on the resulting classes. That way we can start enforcing relationships between types via the type system and not have this shotgun-scatter of unrelated functions."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I assume you are suggesting creating a class (lets say system) within dbus-sensors that can provide methods or functions for this purpose. Can you please confirm?"
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right - if we're interacting with systemd, I much prefer we have a Systemd class, model systemd's behaviours as methods on that class, and put all the code in files called `Systemd.[ch]pp`."
                },
                {
                    "file": "src/Utils.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 174,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 199,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 47,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 758,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "7ff3fb07184f91394e93d65e2d961231d6f3c212",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/5",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1732404763,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Jagpal, any input here?  Please look at intrusion sensor, which functionally does exactly the same thing you're doing here.  I suspect at least some of the code can be common rather than a rewrite."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "@Ed Sure, i am already using some pieces from common code -\n* SensorData from Utils.hpp\n* loadVariant from Utils.hpp while parsing the EM configuration.\n\nI looked at the code from ChassisIntrusionSensor. Conceptually, there are 2 pieces which can have overlap in terms of their logic. Please let me know if you think there is anything else apart from these two?\n\n1. Read EM configuration-\nhttps://grok.openbmc.org/xref/openbmc/dbus-sensors/src/Utils.cpp?r=2aaf7175&fi=getSensorConfiguration#156\n\nThe LeakDetection daemons use sdbusplus::async co-routines whereas getSensorConfiguration API is a sync API (and also doesn't support co-routines). Hence, LeakDetection doesn't use getSensorConfiguration. Also, I am in plan of moving LeakDetection daemon to https://grok.openbmc.org/xref/openbmc/sdbusplus/include/sdbusplus/async/proxy.hpp?r=06f265f6#176 for easier flow.\n\n2. Read GPIOs\nhttps://grok.openbmc.org/xref/openbmc/dbus-sensors/src/intrusion/ChassisIntrusionSensor.cpp?r=d7be555e#200\nChassisIntrusionSensor uses boost::asio to poll the GPIOs whereas the leakdetection daemon uses co-routines so i am not sure how much code we can make common here.\n\n@Patrick also did a post on \"dbus-sensors with sdbusplus::async coroutines)\nhttps://discord.com/channels/775381525260664832/1304217523465486356/1304217527379034152\nDo you have any concerns with the proposed approach in the post?\n\n\nAlso, as per another comment from @Andrew https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/b1c20d15_c52bf097/ he doesn't want me to add APIs to Utils.hpp and suggested to add a systemd class. Any concerns there?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> @Ed Sure, i am already using some pieces from common code -\n> * SensorData from Utils.hpp\n> * loadVariant from Utils.hpp while parsing the EM configuration.\n> \n> I looked at the code from ChassisIntrusionSensor. Conceptually, there are 2 pieces which can have overlap in terms of their logic. Please let me know if you think there is anything else apart from these two?\n> \n> 1. Read EM configuration-\n> https://grok.openbmc.org/xref/openbmc/dbus-sensors/src/Utils.cpp?r=2aaf7175&fi=getSensorConfiguration#156\n> \n> The LeakDetection daemons use sdbusplus::async co-routines whereas \n\nSee, this is where I struggle, there's nothing about a leak detector that \"Requires\" coroutines, and my preference is for less code to maintain over having new code use new constructs duplicate things that we know work.\n\n\"Leak detection deamon\" is what this patch is about, and given we have code for handling this exact use case (take a gpio poll or event it, and put it the result on dbus in a structured interface), this patch doesn't really need to be where we try to inject coroutines into entity-manager reactors.  If we want to do that, lets get an implementation that uses the asio reactor code we have (so we're not duplicating) and then get another patch on top that starts looking at what a coroutine version would be.\n\nI'd also note that the gpio stuff is under active development and has seen several patches move through, so this feels a little bit like trying to sneak coroutines in while others are working on other stuff.  I'm sure that wasn't your intent, but popping into those other reviews with \"hey, we should use coroutines to solve this problem, look at how much better they are\" would be a good start.\n\n> getSensorConfiguration API is a sync API (and also doesn't support co-routines). Hence, LeakDetection doesn't use getSensorConfiguration. Also, I am in plan of moving LeakDetection daemon to https://grok.openbmc.org/xref/openbmc/sdbusplus/include/sdbusplus/async/proxy.hpp?r=06f265f6#176 for easier flow.\n> \n> 2. Read GPIOs\n> https://grok.openbmc.org/xref/openbmc/dbus-sensors/src/intrusion/ChassisIntrusionSensor.cpp?r=d7be555e#200\n> ChassisIntrusionSensor uses boost::asio to poll the GPIOs whereas the leakdetection daemon uses co-routines so i am not sure how much code we can make common here.\n\nYep, all of dbus-sensors uses asio, and always has.  Asio also supports c++20 coroutines, so if that's something we really want to do, we can look at injecting the stdexec reactor into asio.\n\nIf we want to change the fact that we use asio here, that's certainly a discussion as a feature independent of leak detection.  The existence of IntrusionSensor proves this problem is essentially already solved, and we're just discussing minor interface changes to make an intrusion sensor a leak detector.\n\n> \n> @Patrick also did a post on \"dbus-sensors with sdbusplus::async coroutines)\n> https://discord.com/channels/775381525260664832/1304217523465486356/1304217527379034152\n> Do you have any concerns with the proposed approach in the post?\n\nFWIW, I was on a 2 week vacation when that post was made so I didn't see it.\n\nI'll let the other maintainers chime in on that post.  The reality is that:\n1. There's a lot of boilerplate for dealing with entity-manager that today exists in dbus-sensors and uses asio.\n2. That boilerplate really shouldn't be duplicated in a different repo;  If we wanted to make a \"general\" version of it, we could roll out what exists.\n3. That boilerplate code uses callbacks, dynamic (ie not concrete) configuration interfaces and asio.  Porting all 3 (asio->libexec, use coroutines, and use PDI) are 3 things we can certainly take up as a holistic thing, but trying to do it in a single patch is a bit overkill.\n4. the existing dbus-sensors maintainers (with the exception of maybe andrew?) aren't read up on the new coroutine stuff, and havne't ever tried to consume an EM config with PDI and would have a lot of trouble reviewing this patch.\n\nI do see that Patrick has now chimed in, so lets see how much light he can shine on this.\n\n> \n> \n> Also, as per another comment from @Andrew https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/b1c20d15_c52bf097/ he doesn't want me to add APIs to Utils.hpp and suggested to add a systemd class. Any concerns there?\n\n\nAndrew is right.  \"Please try to start forming some object models\" is something I completely agree with, but wouldn't be necessary if we hadn't decided to rewrite the core of things that work already."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Yep, all of dbus-sensors uses asio, and always has. Asio also supports c++20 coroutines, so if that's something we really want to do, we can look at injecting the stdexec reactor into asio.\n\nMeta will not contribute any new hand-spun boost dbus object daemons; we have invested lots of effort to moving the project towards compile-time checked dbus bindings.  We clearly communicated this up front before work began on this code.  We submitted a design document about 3 months ago.  We opened TOF issues asking where this code belongs and we were told \"dbus-sensors\".  You're backing us into a situation that is impossible to make you happy.\n\nDo we need to make \"dbus-sensors2\"?  Is that the ask?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Meta will not contribute any new hand-spun boost dbus object daemons;\n\nUnderstood, but can you see how the intersection of:\n1. Coroutines\n2. New executor\n3. New logging dependency (lg2)\n4. New dbus interface dependency (pdi)\n5. New feature (leak detectors)\n\nIs a lot to handle in a single patch?  I'm happy to work through it, but it's a lot to do in one step for a set of daemons that are largely uniform in these things.\n\n>  We opened TOF issues asking where this code belongs and we were told \"dbus-sensors\"\n\nYep, and this was because parsing EM interfaces is non trivial and has a lot of weird code that we shouldn't duplicate.  This patchset didn't solve that and duplicated the code anyway.  The intent was lost a bit.\n\nI'd also point out that there's 5 dbus-sensors maintainers.  If any of the others weigh in, say they understand the patch, and think this patchset should move forward, then I will happily defer to them.  If you'd rather I not review this patch, happy to defer to them for the complete review as well.\n\nThe goal isn't to make me happy.  If I'm going to maintain this, I need to at least understand it, and how it relates to the existing implementations that do the same thing.  If other maintainers understand it and can maintain it, all the better.\n\n> Do we need to make \"dbus-sensors2\"? Is that the ask?\n\nI think that would duplicate a lot of the code that really shouldn't be duplicated, so no, that's not the ask."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> If other maintainers understand it and can maintain it, all the better.\n\nIf there are any concerns about who will maintain the sdbusplus coroutine-based code, I am willing to volunteer for the task."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, @Patrick I also appreciate that you've reviewed this.  That helps a lot."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I am willing to volunteer for the task.\n\nThat definitely helps.  Probably best to start by adding yourself to the reviewers list and start looking at commits."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Much of the functions in here seem like they could be abstracted and/or templated based on `DetectorConfigIntf` (in this case) so that they can be reused in other daemons.  All of them are going to be looking for entity-manager changes to a particular sub-interface.  Let's make that easy to do."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: Can we order functions in some way.  Right now they're neither ordered as they are in the class definition, nor do they seem to be ordered where you have \"handleFoo\" and \"processFoo\" nearby each other.  It seems pretty arbitrary."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I find this double-indirection really difficult to follow.  I have to jump around 3 different files to even see what this is.\n\nIs there something we can do to reduce the length of names here?  Don't we have namespaces?"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to \"this is tough to read\""
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Yes, we have namespaces. I have moved GPIODetectorConfigIntf into same file and also changed it to point it to the actual namespace by avoiding redirection."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Isn't this a problem?  I'm surprised `debug` is sufficient."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I don't think this flow should get hit ever, unless the daemon receives same config again. Sure, i can make this warning if that helps."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This function doesn't appear to be doing any sort of async operations.  Why does it need to return a task?  Just make this a normal function?  Same advice applies throughout this review."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "In the newer version of the patch this function has been changed to do async get of the config, hence preserving the async nature for that reason.\n\nChanged processConfigRemoved to a sync API."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Kind of jarring that we used `ManagedObjectType` in one function and raw types in this one."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "../src/LeakDetection/../EntityManagerConfig.hpp: In instantiation of 'sdbusplus::async::task<> phosphor::entity::manager::EntityManagerConfig<Instance>::handleConfigAdded() [with Instance = phosphor::leak::manager::LeakDetectionManager; sdbusplus::async::task<> = exec::__task::basic_task<void, exec::__task::__default_task_context_impl<exec::__task::__scheduler_affinity::__sticky> >]':\n../src/LeakDetection/LeakDetectionManager.cpp:15:32:   required from here\n../src/LeakDetection/../EntityManagerConfig.hpp:50:16: error: cannot decompose inaccessible member 'boost::container::flat_map<sdbusplus::message::details::string_path_wrapper, boost::container::flat_map<std::__cxx11::basic_string<char>, boost::container::flat_map<std::__cxx11::basic_string<char>, std::variant<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int, long unsigned int, double, int, unsigned int, short int, short unsigned int, unsigned char, bool> > > >::m_flat_tree' of 'boost::container::flat_map<sdbusplus::message::details::string_path_wrapper, boost::container::flat_map<std::__cxx11::basic_string<char>, boost::container::flat_map<std::__cxx11::basic_string<char>, std::variant<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int, long unsigned int, double, int, unsigned int, short int, short unsigned int, unsigned char, bool> > > >'\n   50 |           auto [objectPath, detectorConfig] =\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from ../src/LeakDetection/../Utils.hpp:7,\n                 from ../src/LeakDetection/../EntityManagerConfig.hpp:3:\n/usr/local/include/boost/container/flat_map.hpp:134:16: note: declared private here\n  134 |    impl_tree_t m_flat_tree;  // flat tree representing flat_map\n  \n\nI haven't spend much time on this but build breaks with this error if i try to change it."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Will dig little more into this to figure out the issue."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ohh i just saw that -\nentityManager.call<ManagedObjectType>(ctx, \"GetManagedObjects\")) <= Returns a Dict\nwhereas\nnext<sdbusplus::message::object_path, SensorData>() <=Returns a tuple.\n\nThats why the template arg types are different. Marking this one resolved for now as its based on API return type. Please let me know if there are any questions."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: suggest whitespace between these two.  Difficult to read due to long names and clang-format indentation rules."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "interface_list_t is almost as many characters as std::set<std::string>.\n\nJust inline std::set<std::string> in the couple of places it's used."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "We can use set, but instead I am using this to actually make it clear what does this set represent hence using interface_list_t."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, for most things we've found that a vector is actually a better way to represent dbus sets because it ends up faster."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, changed to vector."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is the difference between \"handle\" and \"process\"?"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "handle\\* are one's which call next() on EM matchers and further call into process\\* to parse the received config. processConfigAdded is common API which gets called from handleConfigAdded() and general config get."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "In latest code, handle\\* has been moved to EntityManager class and process\\* are part of LeakDetectionManager."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Marking this one resolved for now as handle APIs has been moved into EntityManager class. Please let me know if there are still any concerns."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we safely take references to the context like this and still handle shutdown appropriately?"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Yes, i don't see any issue as ctx gets created from main and keeps on running until its stopped."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Right, but there are destructors that run after main (any static or global variables) that in asio contexts have caused shutdown issues with a context declared in main."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "In this case, the ctx has been declared as a local var in main and anything dependent on it also go out of scope as they are declared in main. Nothing is declared as static or global."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK.  Seems fine then.  I know we've had similar problems in other dbus-sensors, but I suspect that was due to static usage."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why do these need to be unique_ptrs?  Presumably they could just be values?"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "These matchers have been moved to different file now, but they are still unique_ptrs. \nReason for unique_ptr: the info required to create them is not known at compile time so i cannot make them type instance. Please ket me know if you have some other idea/approach on how to achieve this without unique_ptr?"
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Huh?  sdbusplus::async::match is a single type:\n\nhttps://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/async/match.hpp#L25\n\nIt's definitely known at compile time.  Maybe I don't understand?\n\nGenerally you would declare these by value and make sure they're initialized in the constructor?  That way, you don't have to implement nullptr checks all over the place to keep static analyzers happy."
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done. Sure, I understood what you meant. Thanks."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is doing a blocking read in an async coroutine.  Pretty sure that's going to block the whole reactor?  libgpio isn't coroutine enabled for this function."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "This is not a async coroutine, its a normal function to read the initial gpio state."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I thought you have a polarity in the EM config?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Polarity check is already being done inside updateState at a single place both for readState() and readStateAsync()."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Resolving this comment based on changes in https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/b8bf6bb8_21bbb5a8/ as the updateState in arg changed to gpioState."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are we storing \"line\" in a member value but then releasing it and having to reclaim it all the time?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "The initial line request is for synchronous read whereas inside readStateAsync() its for async events. Made this \"line\" a local var to avoid any confusion."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Changed the logic and now line will be set once and preserved."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Needs changes based on latest code."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "This would be changed to sdbusplus::async::fdio and sdbusplus::async::fdio::next() flow as per https://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/async/fdio.hpp."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I left comments that this really shouldn't be an sdbusplus interface.  an FD is a generic object that a structured dbus binding shouldn't need to expose.  Said another way, we should be able to read a gpio without needing to rely on sdbusplus (as we do currently)."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 89,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "This has been discussed in length on https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/75461. Please let me know if there are still any questions."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Now after reading this code it seems like you're intending \"state\" to be the 0/1 state of the GPIO line and not the \"state\" of the leak.  Please fix names to avoid this kind of ambiguity."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Double-ternary? Seems like this could be less clever (for readability)."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You shouldn't update member property directly but call `state(newState)` otherwise you're not getting dbus signals."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 108,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why do we have static targets here?  Don't we need them to have some kind of position identifier?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This daemon really shouldn't be dealing with targets at all, right?  It's responsible for putting the current state on dbus, same as any other sensor.  What other daemons do with that is their choice, and phosphor-state-manager can certainly react if it chooses to."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Don't we need them to have some kind of position identifier?\nSorry i am not sure what you mean by position identifier. Can you please elaborate?\n\n\n> This daemon really shouldn't be dealing with targets at all, right?  It's responsible for putting the current state on dbus, same as any other sensor.  What other daemons do with that is their choice, and phosphor-state-manager can certainly react if it chooses to.\n\nThat's not true. It has been one of the requirements for the design (#3)."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "> Don't we need them to have some kind of position identifier?\n\nSorry i am not sure what you mean by position identifier. Can you please elaborate?\n\n> This daemon really shouldn't be dealing with targets at all, right? It's responsible for putting the current state on dbus, same as any other sensor. What other daemons do with that is their choice, and phosphor-state-manager can certainly react if it chooses to.\n\nThat's not true. It has been one of the requirements for the design (#3) - https://gerrit.openbmc.org/c/openbmc/docs/+/73152"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 119,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Isn't that opposite of how things like fan control work?  Given there's probably a lot of options for leak detect backends, we don't want them all duplicating the \"Shutdown when this happens\" logic, right?\n\nIf that's the last thing, I guess it's fine, but it seems like it would cause duplication."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Using this kind of string processing implies to me that something is missing in the client generator for you (or you're not using something).  Is there something that should be improved in the client bindings?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 142,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Changed this code to generated PDI get APIs for config."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why std::exception?  What are the kinds of errors that can happen here?  Why is \"level\" special that it is more likely to fail than the other properties?  Something doesn't seem right here."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 149,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Changed this code in latest patch, so not applicable anymore."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Same questions as 149."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "line": 161,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Changed this code in the latest patch."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Having to forward declare this type to use as a template parameter seems strange."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Without forward declarations the build breaks\n\nIn file included from ../src/LeakDetection/LeakDetector.cpp:1:\n../src/LeakDetection/LeakDetector.hpp:24:9: error: 'LeakDetector' was not declared in this scope; did you mean 'detector'?\n   24 |         LeakDetector>;\n      |         ^~~~~~~~~~~~\n      |         detector\n../src/LeakDetection/LeakDetector.hpp:24:21: error: template argument 1 is invalid\n   24 |         LeakDetector>;"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You almost never want to use the \"common\" namespace.  Is this a client or a server?  Specify one of those."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are we having to hard code strings here?  Didn't you create an YAML interface for this?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It looks like he still had to unpack it using the variant access, because of the non concrete way that EM publishes interfaces.  This is expected (at least by me), even if it's ugly unless we had a way to describe a non concrete dbus interface in PDI, or EM found a way to do the coercion on its side."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "should've read as \"even if..... we still probably need this code.\""
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Removed these in the latest patch as i am using PDI generated bindings for config get."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This doesn't seem to belong in a .hpp file."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What benefit are these comments providing?  There is no difference from the thing after the @brief and the member name."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I have added these for doxygen, do we generate such documentation?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 63,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Dual inheritence isn't right.  You should be inheriting from `sdbusplus::async::server` with both types passed in as template parameters."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 93,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Seems like a lot of code to put in the header."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, added createLeakDetector() and moved to .cpp file."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do you prevent \"propertyChanged\" signal on initial construction?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Are u referring to the propertyChanged for the state? If yes, then the initial state property is only updated after the reading the GPIO state.\nAlso, for aserver i couldn't find any defer_emit kind of action, does it exist?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, passed false for emitSignal template arg for initial property set."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do you know the value hasn't changed between 104 and 110?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I am doing the read first to start with some state first, otherwise i don't see a way on how to figure out if the state has transitioned or not. I can understand there can be state transition in between here and i can reverse the order by setting the async event first, but similar issue can happen in that scenario as well where event gets generated after setting the state but before reading the initial state. In that case, the async event handling would have no state to compare against. Other way, this could be solved is to keep some state mentioning that this is the initial state."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 110,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, changed the sequence to setup async event first and then read and set the value."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 114,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Shouldn't we do something here to destruct \"this\"?  It seems like we should have thrown an exception or something so that the manager knows not to hold this dbus object.  Otherwise we end up with a leak detection object that isn't actually functional."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 114,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are you implementing these?  This is the default implementation, isn't it?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What kind of name and what kind of path?  Should this return an object_path?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done.\n\nChanged to auto getObjectPath(std::string detectorName) -> sdbusplus::message::object_path;"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is this a bool?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Returns true if read succeeds, otherwise false. Updated description to reflect this."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 133,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Change the API to throw exception in case of failure. Marking this resolved."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 135,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is the purpose of the return value here?"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 135,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Returns true if setup succeeds otherwise false. Updated description to reflect this."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 135,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Change the API to throw exception in case of failure."
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why const?  Violates C++ Core Guidelines.\n\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-constref"
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Leak utils as a name is a little over generalized.  Maybe LeakLogEvents?"
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, changed to LeakEvents."
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These TODOs can all be resolved now."
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "line": 10,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 150,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 175,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 709,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "37f0f83ac0bb3b8b16d0f24a1d13ad1a25e18e1e",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/6",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733123884,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 205,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.hpp",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakUtils.cpp",
                    "type": "ADDED",
                    "insertions": 48,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 806,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "81e6ec507681ab3c1d80df1653e2c7c0986dd074",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/7",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733196154,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 133,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 822,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "ae61a61def809c44c135960b914328df4c8a1564",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/8",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733212342,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 138,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 208,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 55,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 899,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "da2e3f9a2f6b0072c815334c26e72a193989afe5",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/9",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733214769,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 55,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 846,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "9d2e9f17738e57fae89791df6ba04e50b1e4c9b2",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/10",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733387970,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 132,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 95,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 55,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 846,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "d333b7f4f6f131b6f1623ec36a41fe7fb61d51ca",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/11",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733389972,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 855,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "029a037aa2addc1b050c479c0aa4166b5f02d247",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/12",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733440745,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 855,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "22bfe752b74ff6b152e66dc39eaa9f05921df9ce",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/13",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733442682,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 815,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "d161c989be4f57c21205a951768aa87f9d7b718b",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/14",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733448356,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 107,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 816,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "4e69f841ae8cf710080b1d4e0735e8619d6f260b",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/15",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733509666,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 87,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 818,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "cf56a9970a7516e604d5c5216f391ccf408573a9",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/16",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733768762,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 824,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "23594f9c8d643c3002c434c69c413b4390a455ac",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/17",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733769641,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 819,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "deab93a25fe3b0d3c44d256ad4b915c672c12498",
            "parents": [
                "416c96a673bdd484985b6a91f2c32bd090a50a08"
            ],
            "ref": "refs/changes/29/75329/18",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733787948,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 850,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "a34472301c1273edb4ba078fa8b9483767c6fd7e",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/19",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733812850,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "src/LeakDetection/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 850,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "3c71d671a6765d4fa91cd88a6fdb3ee0599b2f3c",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/20",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733814970,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/temp/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 941,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "8e5f131cceec7446d759d9bff7e24e2a7eb846f4",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/21",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733899063,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 125,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/temp/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 946,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "2e2ba74c8d984b2405367b14902656d2421b1c8f",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/22",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1733952674,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It looks like the topic is set but this is still failing?"
                },
                {
                    "file": "src/leakdetector/temp/fdio.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Should be in sdbusplus now right?"
                },
                {
                    "file": "src/leakdetector/temp/fdio.hpp",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 122,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/temp/fdio.hpp",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 998,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "1162606c9093c2a3c18e7df008250d9fbd9aae3e",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/23",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734028648,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 122,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 907,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "4182059f69195d846f5933a1cdf441f4da4b2cb1",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/24",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734042130,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 122,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 932,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "90e3fb903fba27f7857bc99becc49be3480ebee1",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/25",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734044816,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 932,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "46c15130edb834918aa44b33b316fddbb204e784",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/26",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734052172,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 108,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 73,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 932,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "4be907ad465b589c05b2eea689affeb8f1ea978d",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/27",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734075104,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 934,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "06c7396a76bce770bbbdf17bb8d4c3e2c3cb907b",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/28",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734076363,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 936,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "f9f9b1a24060b9e297024c4b61e5091640ffbc70",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/29",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734079023,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 919,
            "sizeDeletions": 0
        },
        {
            "number": 30,
            "revision": "daa98d935376e93329cf0243c8343156cb07ea47",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/30",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734118436,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 41,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 919,
            "sizeDeletions": 0
        },
        {
            "number": 31,
            "revision": "2d7dbe79cda01673e6b78be9a3e6191c5905d9b3",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/31",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734338884,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 957,
            "sizeDeletions": 0
        },
        {
            "number": 32,
            "revision": "5abb9416e4ccb58725f6cc523aed0fd2b425fc11",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/32",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734376522,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 149,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 959,
            "sizeDeletions": 0
        },
        {
            "number": 33,
            "revision": "66811665ce415195e1fe918ff701f194f27a334d",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/33",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734464218,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 45,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 951,
            "sizeDeletions": 0
        },
        {
            "number": 34,
            "revision": "7929a8c0fefd8bca01ade691aa4f00df8d5763ee",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/34",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734465200,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 955,
            "sizeDeletions": 0
        },
        {
            "number": 35,
            "revision": "dc32dc80976c134d2bfe029306abf831629a68b3",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/35",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734465978,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 144,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 953,
            "sizeDeletions": 0
        },
        {
            "number": 36,
            "revision": "618c148c60731ab04aaf40205b9a67255b11afe4",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/36",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734566779,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 956,
            "sizeDeletions": 0
        },
        {
            "number": 37,
            "revision": "29bc18d6876c25256269f9188e586e057ae08274",
            "parents": [
                "4bbd02dce8fe574ecae5efda089e02940178cac7"
            ],
            "ref": "refs/changes/29/75329/37",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1734567863,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 98,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "src/GPIOInterface.hpp",
                    "type": "ADDED",
                    "insertions": 101,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.hpp",
                    "type": "ADDED",
                    "insertions": 60,
                    "deletions": 0
                },
                {
                    "file": "service_files/xyz.openbmc_project.leakdetector.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetector.cpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.hpp",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/EntityManager.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "src/meson.build",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.options",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/Systemd.cpp",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakDetectionManager.cpp",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/LeakEvents.cpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "src/leakdetector/meson.build",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "service_files/meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 957,
            "sizeDeletions": 0
        }
    ]
}