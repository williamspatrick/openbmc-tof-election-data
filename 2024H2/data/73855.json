{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "topic": "redfish-core-multi-host",
    "id": "I67c17c3dd7a354fa9a2ebbc56d4def7a7e788909",
    "number": 73855,
    "subject": "systems.hpp - support for multi-host",
    "owner": {
        "name": "Oliver Brewka",
        "email": "mox669.dev@gmail.com",
        "username": "mox669"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/73855",
    "hashtags": [],
    "createdOn": 1724164946,
    "lastUpdated": 1733762543,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1724164946,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1724164989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724164989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1724165304,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1724166269,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/90148/ : SUCCESS"
        },
        {
            "timestamp": 1724167181,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1724180990,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 2: Patch Set 1 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1724181015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724181016,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1724182303,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/90185/ : SUCCESS"
        },
        {
            "timestamp": 1724251582,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 3: New patch set was added with same tree, parent tree, and commit message as Patch Set 2.\n\nCopied Votes:\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1724251612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724251612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1724253244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/90283/ : SUCCESS"
        },
        {
            "timestamp": 1724276850,
            "reviewer": {
                "name": "Janet Adkins",
                "email": "janeta@us.ibm.com",
                "username": "jeaaustx"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1724338512,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1724345647,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1724345663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724345663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1724345770,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/90444/ : FAILURE"
        },
        {
            "timestamp": 1724346700,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1724346749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724346749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1724348662,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/90450/ : SUCCESS"
        },
        {
            "timestamp": 1724348895,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Patch Set 5:\n\n(4 comments)"
        },
        {
            "timestamp": 1724350865,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1724350899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1724350899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1724352296,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/90453/ : SUCCESS"
        },
        {
            "timestamp": 1724360162,
            "reviewer": {
                "name": "Janet Adkins",
                "email": "janeta@us.ibm.com",
                "username": "jeaaustx"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1725881389,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1725897312,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1725921859,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1725973060,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1725981285,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726069617,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726070865,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726072270,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726073792,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726076601,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1726077353,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1727700962,
            "reviewer": {
                "name": "Anjali Ray",
                "email": "anjali.ray@intel.com",
                "username": "Anjaliintel-21"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1729029350,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1733491339,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1733491379,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1733491379,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1733492141,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/96013/ : SUCCESS"
        },
        {
            "timestamp": 1733762543,
            "reviewer": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "3a3e03507062af5d28f7985971d4487fb08da4e3",
            "parents": [
                "ff5f9032d9eedcaca8db2f850b7cc33c48293804"
            ],
            "ref": "refs/changes/55/73855/1",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724164946,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "Hi Ed, as mentioned in patch#1, this is the continuation"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "Hi @Ed, in order to progress with multi host support, I pushed the next patch resolving some of the issues you have pointed out earlier. I only pushed the core logic that now resides in systems_utils, since I suspect there will be changes to be made. The amount of code adaptions in systems.hpp to this logic are quite a lot.. \nAs you have asked for, instead of retrieving an index and construct object paths manually, we now follow the approach to let dbus return those to be used in later operations. However, in addition to object paths, it also becomes a necassity with multi host, to retrieve service names as well. I would like to start a discussion on the overall design and hear your opinion on it.\nOn the positive side, we don't make any assumptions on naming schemes of paths or services which I understand is the desired approach. However, internally we have some concern about the possible effect on latency when making requests. The full flow to get object path and service name consists of four dbus calls. If we have a look at handleComputerSystemGet in systems.hpp, with this approach we have to multiply this number by the amount of different interfaces we need a object path / service for in this particular handler. Could you give us some insight on that as well?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 243,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "f7f83125a584e999bf2f6f4e7804efa9397ac96b",
            "parents": [
                "9e3392fb8662eb5e23e9525f886cb46302e6c1a5"
            ],
            "ref": "refs/changes/55/73855/2",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724180990,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 243,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "7e4db2c39326fb04859be7c5a45a571c4b97234a",
            "parents": [
                "9e3392fb8662eb5e23e9525f886cb46302e6c1a5"
            ],
            "ref": "refs/changes/55/73855/3",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724251582,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "Since the message response is the same for the error here and for below L267-272, I think it would be helpful to add a BMCWEB_LOG_DEBUG() message here."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "Is sdbusplus::message::object_path.filename() ever going to return something with a '/' character still in it?\n\nSeems like could just check if (systemId == systemName) here and skip the split above."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 313,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "You are right. Changed accordingly and removed the splitting part."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "Why is this wrapper needed? I.e. why not just call getValidSystemPaths() directly from the callers?"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "This function should be called in various header files in redfish-core, not only systems.hpp. The wrapper serves solely the reason to provide a clear name that indicates what is going to happen.\nI could rename getValidSystemPaths to getComputerSystemDBusResources, but I felt doing it this way we end up having a  well named entry point to be used in other header files, and every subsequent call in the flow has a clear functionname->functionality mapping."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 353,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "I don't have a strong opinion on this one. I suppose the compiler will probably optimize out the additional stack anyway."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 357,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "Missing 'interface' param description"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 357,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "Done. Added missing param description."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This function doesn't look used anywhere.   I'm not really clear on why it's so complex.\n\nGor examples:\nWhat is reqParams, and why is it passed all the way through?\nWhy are we calling the mapper 3 times?  (GetSubTreePaths, GetSubTree, and GetObject).  This should be 1, but it's not clear what we're attempting enough to give you a way to solve it.\nWhy are we writing a function for a one line call?\n\nNo need to answer these questions, lets just get an example of this being used, and we can burn it down."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "I provided some uses in systems.hpp. Also you are right the reqParams don't need to be passed to the callback, removed it."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "In order to revive the discussion, I will answer your question on the dbus usage (the other two questions I have already answered): \nFor context, on single-host we typically know three things ahead of the request: the dbus interface, service name and object path. I.e:\n\niface:   xyz.openbmc_project.State.Host \nservice: xyz.openbmc_project.State.Host \npath:   /xyz/openbmc_project/state/host0 \n\nOn multi-host we only know the interface ahead of the request. Dbus service name is unclear what it is called exactly (we could assume it is xyz.openbmc_project.State.Host$idx, but then we would end up with constructing service names by appending indices, also I am not sure if it is guaranteed that this works for other services aswell). Same for object paths, we could construct them manually, i.e /xyz/openbmc_project/state/host + $idx, which was the initial approach but as I understood, is not the method we are looking for. So we end up with getting all the missing dbus resources via dbus calls. The complexity mainly comes from the fact that service name and object path to the requested interface are unknown ahead of the request, when we are on multi-host. \nOn top of that, before we can find any of those, we need to retrieve the HostIndex property, so we can do the mapping correctly."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> In order to revive the discussion, I will answer your question on the dbus usage (the other two questions I have already answered): \n> For context, on single-host we typically know three things ahead of the request: the dbus interface, service name and object path. I.e:\n> \n> iface:   xyz.openbmc_project.State.Host \n> service: xyz.openbmc_project.State.Host \n> path:   /xyz/openbmc_project/state/host0 \n> \n> On multi-host we only know the interface ahead of the request. Dbus service name is unclear what it is called exactly (we could assume it is xyz.openbmc_project.State.Host$idx, but then we would end up with constructing service names by appending indices, also I am not sure if it is guaranteed that this works for other services aswell).\n> Same for object paths, we could construct them manually, i.e /xyz/openbmc_project/state/host + $idx, which was the initial approach but as I understood, is not the method we are looking for.\n> So we end up with getting all the missing dbus resources via dbus calls. The complexity mainly comes from the fact that service name and object path to the requested interface are unknown ahead of the request, when we are on multi-host. \n> On top of that, before we can find any of those, we need to retrieve the HostIndex property, so we can do the mapping correctly.\n\n\nGenerally we use the mapper to find service names and object paths to make any sort of URL construction moot.\n\nSomething like:\nGetSubtreePaths(\"xyz.openbmc_project.State.Host\", \"/xyz/openbmc_project/state\", 0);\n\nWhich would return you all the paths that have state interfaces.  The catch is that because the ManagedHost is an inventory item, and you're using that to build the collection, you need an association to determine \"this is the correct power object for this managed host\".  I suspect we'll need to come up with a \"power control for\" association to be able to identify which power controller to use for which managed host.  The interface name could be made more generic possibly, but that's something we should discuss in a PDI review.\n\nAs this patchset stands, you're proposing doing a lot of that using path manipulation, and relying on things following a preset naming pattern (integer indexes at the end, filename{} of the dbus path matches between inventory and state namespace) that aren't well defined in our current DBus specs."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI, here's an example of doing a similar lookup for Inventory -> Sensor\nhttps://github.com/openbmc/bmcweb/blob/e3142e80dc05632d04a1cc4c9539225afa4ab391/redfish-core/lib/sensors.hpp#L454"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Oliver Brewka",
                        "email": "mox669.dev@gmail.com",
                        "username": "mox669"
                    },
                    "message": "Hi Ed, thank you for the input! yes I thought about dbus associations aswell, will look further into that, and the example you have provided. From my current understanding this would solve excessive dbus calls quite well. I would continue to come up with a solution for pdi, unless this is something somebody else normally handles? \nAlso, I would expect, we would like to do it in a similar fashion for single host aswell then?"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't really think we want to add associations at this point for all of these operations.  It requires every daemon to now understand how their states are related to the inventory, which might be \"better\" but it isn't how we've already done things and it is quite a bit of extra code to put in every other daemon.\n\nThere was already a number of pre-existing design documentation that suggests \"fooN means it is related to hostN\", so we're leveraging that with the ManagedHost inventory decorator to make it easier for `bmcweb` (as had been previously requested).\n\nIt seems to me, asking for every other daemon to be re-written to incorporate [currently undefined] associations is way outside the scope here and yet another \"go in a different direction now that the code is here\"."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I don't really think we want to add associations at this point for all of these operations.  It requires every daemon to now understand how their states are related to the inventory, which might be \"better\" but it isn't how we've already done things and it is quite a bit of extra code to put in every other daemon.\n> \n> There was already a number of pre-existing design documentation that suggests \"fooN means it is related to hostN\", so we're leveraging that with the ManagedHost inventory decorator to make it easier for `bmcweb` (as had been previously requested).\n\n\nMost daemons already do this (bind associations to inventory items), so I'm not really following why this is a heavy lift?  Knowing X inventory/log/whatever applies to Y host is an important requirement for the whole ComputerSystems collection, not just power control.  My primary worry here is that we've only considered power control in this patch, and there's not something general that gets us to where the remaining items in computer system collection are multi-host.\n\nThere's a lot more than Power control in ComputerSystem, and to my understanding the above design would _only_ work for power control.  Just to rehash what was talked about a year ago when this effort started, these are all the URIs under ComputerSystemCollection.  Each needs to have a mechanism to make them multihost before we can remove the experimental option and rely on DBus.\n\n/redfish/v1/Systems/<str>/Actions/ComputerSystem.Reset/\n/redfish/v1/Systems/<str>/Bios/\n/redfish/v1/Systems/<str>/Bios/Actions/Bios.ResetBios/\n/redfish/v1/Systems/<str>/FabricAdapters/\n/redfish/v1/Systems/<str>/FabricAdapters/<str>/\n/redfish/v1/Systems/<str>/LogServices/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/Actions/LogService.ClearLog/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/Actions/LogService.CollectDiagnosticData/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/Entries/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/Entries/<str>/\n/redfish/v1/Systems/<str>/LogServices/Crashdump/Entries/<str>/<str>/\n/redfish/v1/Systems/<str>/LogServices/Dump/\n/redfish/v1/Systems/<str>/LogServices/Dump/Actions/LogService.ClearLog/\n/redfish/v1/Systems/<str>/LogServices/Dump/Actions/LogService.CollectDiagnosticData/\n/redfish/v1/Systems/<str>/LogServices/Dump/Entries/\n/redfish/v1/Systems/<str>/LogServices/Dump/Entries/<str>/\n/redfish/v1/Systems/<str>/LogServices/EventLog/\n/redfish/v1/Systems/<str>/LogServices/EventLog/Actions/LogService.ClearLog/\n/redfish/v1/Systems/<str>/LogServices/EventLog/Entries/\n/redfish/v1/Systems/<str>/LogServices/EventLog/Entries/<str>/\n/redfish/v1/Systems/<str>/LogServices/EventLog/Entries/<str>/attachment/\n/redfish/v1/Systems/<str>/LogServices/HostLogger/\n/redfish/v1/Systems/<str>/LogServices/HostLogger/Entries/\n/redfish/v1/Systems/<str>/LogServices/HostLogger/Entries/<str>/\n/redfish/v1/Systems/<str>/LogServices/PostCodes/\n/redfish/v1/Systems/<str>/LogServices/PostCodes/Actions/LogService.ClearLog/\n/redfish/v1/Systems/<str>/LogServices/PostCodes/Entries/\n/redfish/v1/Systems/<str>/LogServices/PostCodes/Entries/<str>/\n/redfish/v1/Systems/<str>/LogServices/PostCodes/Entries/<str>/attachment/\n/redfish/v1/Systems/<str>/Memory/\n/redfish/v1/Systems/<str>/Memory/<str>/\n/redfish/v1/Systems/<str>/PCIeDevices/\n/redfish/v1/Systems/<str>/PCIeDevices/<str>/\n/redfish/v1/Systems/<str>/PCIeDevices/<str>/PCIeFunctions/\n/redfish/v1/Systems/<str>/PCIeDevices/<str>/PCIeFunctions/<str>/\n/redfish/v1/Systems/<str>/Processors/\n/redfish/v1/Systems/<str>/Processors/<str>/\n/redfish/v1/Systems/<str>/Processors/<str>/OperatingConfigs/\n/redfish/v1/Systems/<str>/Processors/<str>/OperatingConfigs/<str>/\n/redfish/v1/Systems/<str>/ResetActionInfo/\n/redfish/v1/Systems/<str>/Storage/\n/redfish/v1/Systems/<str>/Storage/1/Controllers/\n/redfish/v1/Systems/<str>/Storage/1/Drives/<str>/\n/redfish/v1/Systems/<str>/Storage/<str>/\n\nIf we'd like to use fixed interface/path naming holistically for all of the above, and have a common system based on names for logs/sensors/power, I'm happy to have that discussion, but to my understanding that's not what this patch is proposing, it's _just_ a change to state manager.\n\n> \n> It seems to me, asking for every other daemon to be re-written to incorporate [currently undefined] associations is way outside the scope here and yet another \"go in a different direction now that the code is here\".\n\nGoing back to relying on known dbus object paths, names, or path hiearchy was discussed during https://github.com/openbmc/technical-oversight-forum/issues/18\n\nI don't think anything has changed since then?"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Going back to relying on known dbus object paths, names, or path hiearchy was discussed during https://github.com/openbmc/technical-oversight-forum/issues/18\n\nI was not thinking that far back in time.  I was thinking in terms of the earlier versions of this patch set.  https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/72414 was added to satisfy your earlier concerns, and you +1'd the dbus interface.  Now that we're trying to use it, you want yet another direction...\n\nIssue 18 was specifically scoped to inventory because nobody signed up to fix all the other daemons.\n\n`ComputerSystem.Reset` is handled by this approach.\n`Bios.ResetBios` only works on IBM systems anyhow and the software design already has architecture around \"slots\".\nMost of the elements you posted are Inventory related, which probably work with associations per the issue#18 you posted.\n`Crashdump` design doesn't handle multi-host at all yet so it is hard to reason about.\n`EventLog` design internals also do not explicitly handle multi-host; there is one big log for the BMC.\n`PostCodes` is handled by this approach.\n`HostLogger` is handled by this approach.\n\nSo, it seems to me like this approach covers most of the necessary end-points beyond just \"state management\"."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Going back to relying on known dbus object paths, names, or path hiearchy was discussed during https://github.com/openbmc/technical-oversight-forum/issues/18\n> \n> I was not thinking that far back in time.  I was thinking in terms of the earlier versions of this patch set.  https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/72414 was added to satisfy your earlier concerns, and you +1'd the dbus interface.  Now that we're trying to use it, you want yet another direction...\n> \n\nThis issue was pointed out in that review.  To quote myself:\n```I'm not sure bmcweb needs this parameter, it's going to rely on the dbus path to build unique references similar to how we handle sensors and other inventory, but if it's useful to other systems, rock on.```\n\nIt looks like that comment series was closed the same day that thread was opened without anyone responding to the fact that this isn't how bmcweb deals with dbus, so I had assumed I was heard.  Seems like a simple miscommunication, nbd.  Lets try to improve on that in the future, but I like to think I made this clear in that review, and I was surprised to see this patch show up in its current form.\n\n> Issue 18 was specifically scoped to inventory because nobody signed up to fix all the other daemons.\n\nACK, true, it was related to inventory, but changing Redfish ComputerSystem does deal with Inventory, which is why I assumed it was related.\n\n> \n> `ComputerSystem.Reset` is handled by this approach.\n> `Bios.ResetBios` only works on IBM systems anyhow and the software design already has architecture around \"slots\".\n> Most of the elements you posted are Inventory related, which probably work with associations per the issue#18 you posted.\n> `Crashdump` design doesn't handle multi-host at all yet so it is hard to reason about.\n> `EventLog` design internals also do not explicitly handle multi-host; there is one big log for the BMC.\n> `PostCodes` is handled by this approach.\n> `HostLogger` is handled by this approach.\n> \n> So, it seems to me like this approach covers most of the necessary end-points beyond just \"state management\".\n\n\nThe above is exactly the point I'm making.  We're going to do 1 thing for power control, and something completely different for inventory tracking, and we have to make a 6 bullet item list to determine which resource is using which method.  That flow wasn't documented anywhere that i'm aware of, nor was the idea of ignoring some of them in porting over the ComputerSystem object.  If that 6 bullet item list is truly what we're trying to design generally, and we're using 3 mechanisms, slots, associations, and fixed dbus path naming, lets get that mapped out somewhere which things are using which, and lets see what needs to live behind an option flag, because I'm confused how that would work between existing hosts and multi-host.\n\nThe way Refish works as a tree, you can't have one mechanism for determining the \"hosts\" at the ComputerSystemCollection level, then have a different mechanism for determining hosts deeper down the tree.  It would be good to see at least one example of each slots, inventory associations, and fixed naming working in tandem under a dbus-owned ComputerSystem."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "From that discussion in PDI commit:\n\n> Ideally they'd be an association look up but until we can get a handle around all the missing associations, we'd use this index.\n\nI thought we were previously aligned through earlier renditions of this commit and that discussion that the use of any kind of Index isn't intended to be the ideal long-term solution, but enough to be able to gauge what all the work is on the other existing daemons (by a series of commits like this one showing up using the index).\n\n> The way Refish works as a tree, you can't have one mechanism for determining the \"hosts\" at the ComputerSystemCollection level, then have a different mechanism for determining hosts deeper down the tree. It would be good to see at least one example of each slots, inventory associations, and fixed naming working in tandem under a dbus-owned ComputerSystem.\n\nI'm not understanding what this is referring to.  Everything that isn't supported with associations today (ie. everything outside inventory and _maybe_ sensors) uses an index-based identifier for the host.\n\n> we're using 3 mechanisms\n\nMaybe I mis-worded something.  It should only be \"static paths + index\" or \"associations\".  The firmware update design talks to \"slots\" because it also has to handle dual flash banks, CPLDs, etc. but when it comes to the host firmware entities I believe they're all index based in the current implementation."
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 361,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> From that discussion in PDI commit:\n> \n> > Ideally they'd be an association look up but until we can get a handle around all the missing associations, we'd use this index.\n> \n> I thought we were previously aligned through earlier renditions of this commit and that discussion that the use of any kind of Index isn't intended to be the ideal long-term solution, but enough to be able to gauge what all the work is on the other existing daemons (by a series of commits like this one showing up using the index).\n\nI'm fine with that so long as we don't break the existing single-host systems.  Right now, there's not enough implemented in the backend daemons, so this series currently breaks single-host systems.  If we need to use the existing experimental option flag as a crutch longer than it was intended to make progress, I'm happy to have that discussion.\n\n> \n> > The way Refish works as a tree, you can't have one mechanism for determining the \"hosts\" at the ComputerSystemCollection level, then have a different mechanism for determining hosts deeper down the tree. It would be good to see at least one example of each slots, inventory associations, and fixed naming working in tandem under a dbus-owned ComputerSystem.\n> \n> I'm not understanding what this is referring to.  Everything that isn't supported with associations today (ie. everything outside inventory and _maybe_ sensors) uses an index-based identifier for the host.\n\nI don't think there's an association for \"this component belongs to ManagedHost X\".  Maybe I missed it in the reviews?\n\n> \n> > we're using 3 mechanisms\n> \n> Maybe I mis-worded something.  It should only be \"static paths + index\" or \"associations\".  The firmware update design talks to \"slots\" because it also has to handle dual flash banks, CPLDs, etc. but when it comes to the host firmware entities I believe they're all index based in the current implementation.\n\nAH, that's what slots meant.  Ok.  So we're down to 2, index and association.  Lets get examples of both in this series and I think the technical issues will be things that we can solve over time.\n\nLong term, I think we're in agreement that everything related to a \"host\" needs an association?\n\n@Oliver, if you're on discord, we can probably uplevel some of this chat there and get faster response times."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 243,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "4758fae6d66f7fd21e128c9e5ae0cbef89ec31b7",
            "parents": [
                "be5443750ee4cf463133e9a874a855ae2b23b49b"
            ],
            "ref": "refs/changes/55/73855/4",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724345647,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 230,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 12
        },
        {
            "number": 5,
            "revision": "b93cf1856b43a53b0c31f0d8497264b40526879b",
            "parents": [
                "be5443750ee4cf463133e9a874a855ae2b23b49b"
            ],
            "ref": "refs/changes/55/73855/5",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724346700,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 230,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 12
        },
        {
            "number": 6,
            "revision": "a417f1aa0c5a523d49a3006ab1b0da2581994b4f",
            "parents": [
                "0617b513c636bd699b01579d6083d2d67961b000"
            ],
            "ref": "refs/changes/55/73855/6",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1724350865,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "*multi-host"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "*long-term"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Needs a tested statement, as is documented in DEVELOPING.md"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Anjali Ray",
                        "email": "anjali.ray@intel.com",
                        "username": "Anjaliintel-21"
                    },
                    "message": "+1"
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "line": 291,
                    "reviewer": {
                        "name": "Janet Adkins",
                        "email": "janeta@us.ibm.com",
                        "username": "jeaaustx"
                    },
                    "message": "nit: After finding the match the systemId is set back to the entire path not just the Id. This masks a bit what is going on here. I think it might be better to just pass the path directly here for clarity.\n\nThat also implies the parameter in getManagedHostProperty() might be better named systemPath."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 230,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 12
        },
        {
            "number": 7,
            "revision": "a5f27ce0698c5b4b671b44f8c4bae072cfcc6755",
            "parents": [
                "110044ce46d932995e54b6d0dc1f5270a58f8824"
            ],
            "ref": "refs/changes/55/73855/7",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1733491339,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_util.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -10
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 417,
                    "deletions": -317
                }
            ],
            "sizeInsertions": 549,
            "sizeDeletions": 327
        },
        {
            "number": 8,
            "revision": "3daa1a41f900d5b93e3852c4013fe500db4d97f2",
            "parents": [
                "7addf54dab3155e9a38513c891593424523cd003"
            ],
            "ref": "refs/changes/55/73855/8",
            "uploader": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "createdOn": 1733762543,
            "author": {
                "name": "Oliver Brewka",
                "email": "mox669.dev@gmail.com",
                "username": "mox669"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/systems_utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_util.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": -10
                },
                {
                    "file": "redfish-core/lib/systems.hpp",
                    "type": "MODIFIED",
                    "insertions": 446,
                    "deletions": -317
                }
            ],
            "sizeInsertions": 587,
            "sizeDeletions": 327
        }
    ]
}