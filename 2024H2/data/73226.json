{
    "project": "openbmc/phosphor-led-manager",
    "branch": "master",
    "id": "I990fdaa629e5ae1b033353d0bf6ee5e0a7671c9f",
    "number": 73226,
    "subject": "manager: refactor setGroupState",
    "owner": {
        "name": "Alexander",
        "email": "alexander.hansen@9elements.com",
        "username": "pointbazaar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-led-manager/+/73226",
    "hashtags": [],
    "createdOn": 1722419001,
    "lastUpdated": 1724150389,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1722419001,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1722419025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1722419025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1722419067,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/88918/ : FAILURE"
        },
        {
            "timestamp": 1722420246,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1722420265,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1722420265,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1722420385,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/88926/ : SUCCESS"
        },
        {
            "timestamp": 1722445524,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1722445548,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1722445548,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1722445759,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/88963/ : SUCCESS"
        },
        {
            "timestamp": 1722459168,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1722526668,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 3:\n\n(11 comments)"
        },
        {
            "timestamp": 1722526681,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Abandoned\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-led-manager/+/73254"
        },
        {
            "timestamp": 1724150389,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7fbe8e9274f8b0e1071f2968216d92a1c86cc8d0",
            "parents": [
                "2a08e81f96f3808b854e8ad316811c05ce083ae0"
            ],
            "ref": "refs/changes/26/73226/1",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1722419001,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "manager/manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -51
                },
                {
                    "file": "manager/manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 96,
            "sizeDeletions": 58
        },
        {
            "number": 2,
            "revision": "70018641fba7dbf12f398bab9615d455457bd32a",
            "parents": [
                "2a08e81f96f3808b854e8ad316811c05ce083ae0"
            ],
            "ref": "refs/changes/26/73226/2",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1722420246,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: cleanup."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "As written, doesn't this regress the current behavior in that \"Blink\" in an earlier defined group can be overwritten by \"On\" in a later defined group?\n\n(\"earlier\" and \"later\" are ... memory pointer ordering per line 46; unrelated to JSON definition order)"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "I did not look into the undocumented or untested behavior.\n\n\nI think it's fine if we stay within what the configuration defines and is documented / tested.\n\n\nCan you give an example (does not have to be a valid config) to the scenario you are describing? \n\nIf it's important to keep the behavior i can perhaps try to turn it into a test, document it and consider it in the implementation."
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "> (\"earlier\" and \"later\" are ... memory pointer ordering per line 46; unrelated to JSON definition order)\n\nIf this behavior is really dependent on the internal representation, undocumented, and untested, do we need to keep it?"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: auto?"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 46,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: I'd be fine with `auto` here (I prefer almost-always-auto, but I know some maintainers don't)."
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 74,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: would it simplify this logic further to do\n\n`if (currentAction.action == action.action) continue;`\n\nand then put `ledsAssert.insert(action)` as the final clause in the for loop for all cases?"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 88,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Frankly, I feel like some of this change is just a matter of opinion.  `set_difference` more clearly expresses _what_ you are doing, despite the syntax for it being complicated.  Now I have to read the comments _and_ the code to see if they match."
                },
                {
                    "file": "manager/manager.cpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Yes. If we are doing set operations, that is cool but when using the custom inserters, they are no longer simple.\n\nIn my opinion the proposed code is easier to read, and uses less state (getting rid of a class member).\n\nI try to have code use the least amount of state, it makes it easier to test."
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "private?\n\nWhy static + takes assertedGroups rather than member using this->assertedGroups?"
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: spelling"
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 95,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Wanted to make this public since it's a pure function. It's easier to unit-test a public function."
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: for modern code, I prefer trailing-type syntax because it makes the function definitions more consistent.\n\n`auto getNewMap(...) -> std::map<...>`\n\n(At the definition location it also makes the use of class typedefs less verbose: `classname::type classname::foo()` vs `auto classname::foo() -> type`.)"
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 97,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: prefer a typedef for this."
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "It's easier to read this way. When reading the code, people do not have to chase the indirection to find out what the type is.\n\nIs there a reason to prefer the typedef? Besides it being shorter.\n\nI mean we are not re-using this type all over the place. It's not a building block like LedAction is."
                },
                {
                    "file": "manager/manager.hpp",
                    "line": 157,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "manager/manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -51
                },
                {
                    "file": "manager/manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 96,
            "sizeDeletions": 58
        },
        {
            "number": 3,
            "revision": "17996df99a575303627280aa2c9599e727a91ecf",
            "parents": [
                "86863cad00c1cfaeec0a59e888ad210382d2be33"
            ],
            "ref": "refs/changes/26/73226/3",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1722445524,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "\ud83d\ude1e cleaning up the commit message made gerrit choose the other change-id.\n\nSo i abandon this in favor of https://gerrit.openbmc.org/c/openbmc/phosphor-led-manager/+/73254"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "manager/manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 63,
                    "deletions": -51
                },
                {
                    "file": "manager/manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -7
                }
            ],
            "sizeInsertions": 96,
            "sizeDeletions": 58
        }
    ]
}