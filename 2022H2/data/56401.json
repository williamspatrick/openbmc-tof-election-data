{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Icc6dadc1ad3230e34c7525a8b08efb6f7da52262",
    "number": 56401,
    "subject": "design: dynamic redfish authz",
    "owner": {
        "name": "Nan Zhou",
        "email": "nanzhoumails@gmail.com",
        "username": "FighterNan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/56401",
    "hashtags": [],
    "createdOn": 1660069075,
    "lastUpdated": 1668439139,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1660069075,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1660069127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660069127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1660069142,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48806/ : SUCCESS"
        },
        {
            "timestamp": 1660069173,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1660069211,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660069211,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1660069227,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48807/ : SUCCESS"
        },
        {
            "timestamp": 1660071920,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1660240533,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1660244193,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1660248006,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1660248472,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4: Published edit on patch set 3."
        },
        {
            "timestamp": 1660248568,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660248568,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1660248584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49035/ : SUCCESS"
        },
        {
            "timestamp": 1660248598,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660248898,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660253522,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660253853,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660254389,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660256291,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660256845,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1660257772,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5: Published edit on patch set 4."
        },
        {
            "timestamp": 1660257791,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660257834,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660257834,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1660257848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49045/ : SUCCESS"
        },
        {
            "timestamp": 1660307055,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660320120,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660321743,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660334582,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(9 comments)"
        },
        {
            "timestamp": 1660335083,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660335448,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(14 comments)"
        },
        {
            "timestamp": 1660335565,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1660335765,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660339617,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660610782,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1661233227,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6: Published edit on patch set 5."
        },
        {
            "timestamp": 1661233232,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(29 comments)"
        },
        {
            "timestamp": 1661233243,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661233244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1661233259,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49665/ : SUCCESS"
        },
        {
            "timestamp": 1661233290,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1661234114,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 7: Published edit on patch set 6."
        },
        {
            "timestamp": 1661234159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661234159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1661234175,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49666/ : SUCCESS"
        },
        {
            "timestamp": 1661234484,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8: Published edit on patch set 7."
        },
        {
            "timestamp": 1661234513,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1661234544,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661234544,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1661234552,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9: Published edit on patch set 8."
        },
        {
            "timestamp": 1661234559,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49667/ : SUCCESS"
        },
        {
            "timestamp": 1661234568,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661234568,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1661234584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49668/ : SUCCESS"
        },
        {
            "timestamp": 1661299984,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(34 comments)"
        },
        {
            "timestamp": 1661307492,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1661314017,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(5 comments)"
        },
        {
            "timestamp": 1661314359,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(6 comments)"
        },
        {
            "timestamp": 1661314548,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1661314878,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1661316333,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1661370546,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1661370576,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661370576,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1661370682,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49798/ : SUCCESS"
        },
        {
            "timestamp": 1661400676,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1661481151,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1661481194,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(28 comments)"
        },
        {
            "timestamp": 1661481208,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1661481268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661481268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1661481284,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49899/ : SUCCESS"
        },
        {
            "timestamp": 1661481416,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1661481507,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661481512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1661481522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49900/ : SUCCESS"
        },
        {
            "timestamp": 1661530467,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 12:\n\n(2 comments)"
        },
        {
            "timestamp": 1661872359,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1661886009,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13: Published edit on patch set 12."
        },
        {
            "timestamp": 1661886019,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1661886050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661886050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1661886065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50129/ : SUCCESS"
        },
        {
            "timestamp": 1661886109,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1662058758,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1662484108,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1662501190,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(12 comments)"
        },
        {
            "timestamp": 1662501433,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1662503634,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 13:\n\n(9 comments)"
        },
        {
            "timestamp": 1662515149,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1662517467,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13:\n\n(4 comments)"
        },
        {
            "timestamp": 1662559564,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 13:\n\n(3 comments)"
        },
        {
            "timestamp": 1662569001,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 14: Patch Set 13 was rebased"
        },
        {
            "timestamp": 1662569065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662569065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1662569083,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50444/ : SUCCESS"
        },
        {
            "timestamp": 1662598945,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1662598954,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 14:\n\n(21 comments)"
        },
        {
            "timestamp": 1662599026,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662599026,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1662599082,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50462/ : SUCCESS"
        },
        {
            "timestamp": 1662603237,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 15: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1662657610,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1662657620,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1662657644,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662657645,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1662657847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50500/ : SUCCESS"
        },
        {
            "timestamp": 1662660546,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 16: Code-Review+1"
        },
        {
            "timestamp": 1663161262,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 16:\n\n(9 comments)"
        },
        {
            "timestamp": 1663175861,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1663175868,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16:\n\n(8 comments)"
        },
        {
            "timestamp": 1663175951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663175951,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1663175968,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50764/ : SUCCESS"
        },
        {
            "timestamp": 1663185363,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 17:\n\n(6 comments)"
        },
        {
            "timestamp": 1663201190,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1663201217,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(8 comments)"
        },
        {
            "timestamp": 1663201248,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663201248,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1663201374,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50777/ : SUCCESS"
        },
        {
            "timestamp": 1663636007,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 18: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1663636402,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1663706191,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18: Code-Review+1\n\n(10 comments)"
        },
        {
            "timestamp": 1663706669,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(9 comments)"
        },
        {
            "timestamp": 1663710037,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1663710086,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1663871885,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 18:\n\n(5 comments)"
        },
        {
            "timestamp": 1663873537,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(4 comments)"
        },
        {
            "timestamp": 1663873555,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1663873605,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663873610,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1663873621,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/52272/ : SUCCESS"
        },
        {
            "timestamp": 1663873744,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1665089795,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 19:\n\n(4 comments)"
        },
        {
            "timestamp": 1665107917,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1665107935,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 20: Published edit on patch set 19."
        },
        {
            "timestamp": 1665107986,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1665108021,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665108022,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1665108037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53107/ : SUCCESS"
        },
        {
            "timestamp": 1665119545,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 20: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1665142031,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 20: Code-Review+2"
        },
        {
            "timestamp": 1665142094,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1665163121,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 20:\n\n(5 comments)"
        },
        {
            "timestamp": 1665163136,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1665163140,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Change has been successfully rebased and submitted as 8fd98f1375d834217c34602204b7c0ad581c846a"
        },
        {
            "timestamp": 1668439139,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 21: Code-Review+1"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1c9b9303e6111bf461f01ef10a712e798b07f58b",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/1",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1660069075,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 183,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "ceb6bc85f1bf8f5ddf56e4274e2f7438d4e672df",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/2",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1660069173,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 183,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 199,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/3",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1660071920,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is new... bmcweb exposing dbus endpoints??  Who is calling them?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for your comment. Not entirely new.\n\nIt is very like how BMCWeb gets new root certificate and server certificate today (notified by SIGHUB).\n\nWe want to update the authz config in similar way"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Isn't SIGHUP different from exposing dbus objects though?  Who is calling this dbus interface?  You didn't mention that.\n\nI'm surprised this isn't a signal from something like phosphor-user-manager."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. I added some more context about who is calling this dbus interface.\n\n> Isn't SIGHUP different from exposing dbus objects though?\n\nIt doesn't need to be dbus method call. It can also be a SIGHUB. Welcome any ideas about how to notify BMCWeb there is a new authz configuration\n\n> I'm surprised this isn't a signal from something like phosphor-user-manager.\n\nApologize, why do you mention phosphor-user-manager? Are you thinking about something else other than Redfish authz?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Apologize, why do you mention phosphor-user-manager? Are you thinking about something else other than Redfish authz?\n\nWe're talking about users and permissions, right?  phosphor-user-manager already can take data from LDAP.  I'm not really seeing how this is drastically different from that.  Maybe I don't understand what 'authz' is."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This design is talking about Redfish roles, Redfish privileges, and Redfish authorization, not the authentication part or linux permissions (does password/username match, is this username a root on system)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> This design is talking about Redfish roles, Redfish privileges, and Redfish authorization, not the authentication part or linux permissions (does password/username match, is this username a root on system).\n\n\nNot sure I understand why those are necessarily distinct.  Isn't the default behavior to provide some mapping between phosphor-user-manager identities and Redfish roles?  We map all the IPMI users as well.  Not understanding why we want to make Redfish \"special\"."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for the question. That part (mapping linux permissions to Redfish roles) is remaining the same https://github.com/openbmc/bmcweb/blob/3ba0007367777144f474fdf99439ae8c03633486/redfish-core/lib/roles.hpp#L28.\n\nBut you bring up a great topic, how we use these newly added Redfish roles. Yes, I would add new section about that, I plan to use mTLS (common name, or subject alternative name) as the authenticated identity, and make bmcweb expose APIs (or take mappings from the configuration), so that those mTLS identities can be mapped to Redfish roles without involving the linux user stack."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> mTLS identities can be mapped to Redfish roles without involving the linux user stack.\n\nYou write this as if it is obvious why this is a good thing. It isn\u2019t obvious to me. In any case hopefully this discussion highlights some gaps in your design document."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": ">> mTLS identities can be mapped to Redfish roles without involving the linux user stack.\n> You write this as if it is obvious why this is a good thing. It isn\u2019t obvious to me.\n\nSo, this design is to provide optionalities. Google's systems don't have any meaningful linux users, all the authentication is done by the mTLS stack. Identities are all metadata in the certificates.\n\nWe found that currently OpenBMC doesn't provide an optional to support this. So, this design is to fill this gap. This design is not to prove this is better, but just to make current system more flexible without breaking existing use cases (where identities and Linux users are tightly coupled). If other contributors or companies have similar use cases, they can share this implementation from Google.\n\nIs this acceptable? If not, what's your idea to support Google's use case?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "FYI, I added some new sections for this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> If not, what's your idea to support Google's use case?\n\nI apologize upfront if I come off as blunt in this.\n\n\"I want to enable dynamic users and privileges using mTLS in Redfish\" is a usecase.  \"We have a proprietary blob of json we've made up in a particular format that we want to force bmcweb to support\" is an implementation.\n\nI have no problem supporting the above statement as a use-case.  I might even find it acceptable with some discussion to go down your particular implementation proposal.  One major purpose of these designs is to ensure we are adequately exploring the \"Alternatives\" space such that we're not just throwing unmaintainable features randomly in applications, but that the code base is evolving in a somewhat sustainable and cohesive direction.\n\nI've tried to ask you about alternative paths, partially because I don't even fully understand what your \"use case\" is or what your \"proposal\" is, and you've come back with \"I guess you don't want to support us?\".  Frankly, this design comes off as the typical \"we have a bunch of code we wrote 2 years ago without any insight from the rest of the community and now we want to foist onto the community for long-term maintenance so we are trying to justify the design decisions we made 2 years ago without any real alternatives\".\n\nAgain, I have no problem supporting dynamic mTLS users and roles.  In fact, our company will likely leverage that feature for similar reasons.  My purpose in asking questions is to make sure we're not one-offing this support in an entirely unmaintainable way.\n\nSo, to restart this discussion in a practical way please elaborate on the following (in the doc):\n\n- Why do we need to interact _directly_ with bmcweb for this functionality?  Yes, this is about Redfish *today* but there is no reason why we wouldn't want to have dynamic users supported in other interfaces down the road (or by other companies).  (I, for instance, would like my users to be able to use both mTLS/Redfish and SSH using our centralized certificate management system and clearly I also don't want to 'useradd' everyone in the company on each BMC).\n\n- We already have some amount of dynamic users and roles using LDAP.  Why are you not able to build on top of that?  Why are you not able to follow a similar design pattern at least?  Stated another way: I'm pretty sure bmcweb already handles LDAP-based users; why isn't this transparent from bmcweb's perspective and just a new \"dynamic users\" method from the BMC's perspective.\n\n- Why do you explicitly want to avoid using Linux's authentication mechanisms and insert your own into bmcweb?  We _could_ have done the same thing for IPMI a long time ago when we did it, but we decided not to, and instead we wanted common authentication paths based on well-worn code in Linux (ie. PAM).  Your proposal is a drift from this overall project direction and so we need to justify why this is the right direction for the project."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> I've tried to ask you about alternative paths, partially because I don't even fully understand what your \"use case\" is or what your \"proposal\" is, and you've come back with \"I guess you don't want to support us?\". \n\nApologize let you feel that. I am actually just want to see your ideas. And this conversation is what I want to see, since it can help improve the design and move things forward. What I really don't want to see is a design gets no feedbacks and becomes stuck.\n\n> Frankly, this design comes off as the typical \"we have a bunch of code we wrote 2 years ago without any insight from the rest of the community and now we want to foist onto the community for long-term maintenance so we are trying to justify the design decisions we made 2 years ago without any real alternatives\".\n\nActually, it's not the case. We don't yet have an implementation internally and this design is not trying to make some internal codes public. It is to propose something new directly in upstream to satisfy our future need.\n\n> Why do we need to interact _directly_ with bmcweb for this functionality?  Yes, this is about Redfish *today* but there is no reason why we wouldn't want to have dynamic users supported in other interfaces down the road (or by other companies).  (I, for instance, would like my users to be able to use both mTLS/Redfish and SSH using our centralized certificate management system and clearly I also don't want to 'useradd' everyone in the company on each BMC).\n\nGood question. Could you point out other alternatives? If there is a daemon that accept adding user dynamically without building a new image, and doesn't require password (password is not a thing in our use case), I am really glad to take a look at that option. This also makes things easier.\n\n> We already have some amount of dynamic users and roles using LDAP.  Why are you not able to build on top of that?  Why are you not able to follow a similar design pattern at least?  Stated another way: I'm pretty sure bmcweb already handles LDAP-based users; why isn't this transparent from bmcweb's perspective and just a new \"dynamic users\" method from the BMC's perspective.\n\nYes, I got your main point of the discussion: why do we make BMCWeb keep the state of mapping user to Redfish role; why not make this transparent. \n\nHow does existing LDAP based uses work? Does it require adding users upfront at compile time? Does it require reboot? Do you have a link to existing implementation? \n\nAgain, I am open and actually prefer to put managing user to redfish role mapping out of BMCWeb.\n\n> Why do you explicitly want to avoid using Linux's authentication mechanisms and insert your own into bmcweb?  We _could_ have done the same thing for IPMI a long time ago when we did it, but we decided not to, and instead we wanted common authentication paths based on well-worn code in Linux (ie. PAM).  Your proposal is a drift from this overall project direction and so we need to justify why this is the right direction for the project.\n\nIt's because it's unnecessary and our previous attempt on this needs to define users at compile time. If we can make this \"dynamic\", I am open to investigate and consider more."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> We don't yet have an implementation internally and this design is not trying to make some internal codes public.\n\n\ud83d\udc4d\n\n> How does existing LDAP based uses work? Does it require adding users upfront at compile time? Does it require reboot? Do you have a link to existing implementation? \n\nLDAP does not require listing the users upfront, no.  Take a look at phosphor-user-manager and nss-pam-ldapd.  (also `git grep ldap -- meta-phosphor` is probably a helpful place to look).  Ultimately, LDAP installs a PAM module that facilitates authentication / group lookup from an LDAP server which is configured by phosphor-user-manager.\n\nYou should see bmcweb uses `pamAuthenticateUser` (etc.) for the login validation.  If we install a different PAM module for mTLS-based authentication, there is a good chance bmcweb won't know any different (a bit of hand-waving here).\n\nIBM has a custom PAM module they wrote for being able to create time-based credentials for their service admins.  You might be able to use that as a reference as well.\n\nI would strongly suspect your own devserver at Google has some sort of dynamic accounts set up based on certificates.  You could probably investigate how that works."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Patrick asked some relevant questions about the proposed implementation that haven't been answered, and jumping to \"what's your idea to support Google's use case?\" takes away from this design doc process.  Patrick is still trying to understand what Googles use case is.  We all have similar goals, the point of a design doc is to find the common ground.\n\nThe questions I don't see answered are:\n1. What component is intending to call this dbus API?\n2. Why the sudden design change that bmcweb now needs dbus methods, which to be clear, it DOES NOT support today.   Certificates and SIGHUP are not the same as dbus method calls beyond \"they're both forms of IPC\".\n3. What does any of this has to do with mutual TLS, which OpenBMC already has support for, but doesn't seem to be referenced in this conversation or background for the design doc.\n4. Why the existing solutions (IE PAM) don't work in this case.\n5. Why LDAP doesn't work in this case.\n\nLets try to get those questions answered, and quite possibly the design doc updated.\n\n>  What I really don't want to see is a design gets no feedbacks and becomes stuck.\n\nThis design has been up for less than 3 days and has had multiple rounds of feedback.  At this point we're in no danger of getting stuck."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 140,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "All these questions are answered in the latest design.\n\nSeveral highlight updates:\n1. no dbus interfaces added in bmcweb\n2. phosphor-user-manager is involved; linux user management stack is involved\n3. LDAP remote users can be supported\n4. background sections now have more information about how the existing system works (pam, TLS) and what the gaps are."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 183,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 198,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "bf8f9bd0405571ed3111eb6619d3989cdd1fb074",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/4",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1660248472,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 188,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 203,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "f3b4604c27332fc4e9031a47f64bb93f0d380939",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/5",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1660257772,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Adding folks whos companies I know have asked about this in the past."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Will do some research on LDAP and get back."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. I have investigated how phosphor-user-manager works today. I have updated the design so it involves phosphor-user-manager when doing Redfish role management"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please wrap your lines on 80 character boundaries.  They seem to be wrapped manually."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Lines are wrapped at 79 chars according to the template, and done by my editor, any gaps that you found?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Called out a bunch of wrapping errors in the first few paragraphs that I see with \"here\" comments below.  I didn't list all of them, just the couple I found, but I suspect there are more."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. I have used my best effort to wrap lines.\n\nIf you have a better automated tool, please let me know."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Vim.  highlight the section you're trying to wrap (shift V) then hit gq\nit'll wrap each paragraph for you."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This one is hard. I don't have a good way to wrap hyperlinks like this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I didn't comment on the hyperlink, that can go over because it's longer than 80 lines (although in editors I've used, it puts the link on its own line.  I commented on the \"and\" at the end of the hyperlink, which should be on the next line for sure."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "here."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "compile time"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 53,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same, recompile.  \"roll out\" implies that it's still configurable."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Unfortunately this can't be a requirement at this level.  As far as this design doc is concerned, there is no \"downstream\".  MIght need to take out all mention of \"downstream\" and talk in terms of BMC interfaces."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Reworded so that we compare a system against other systems."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Reworded. It's about atomicity."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need more exacting limits here.  \"significant\" isn't very precise.  This probably needs a discussion about how much flash space is left and how much we can take up with a privilege registry."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I put < 100KB for now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 84,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need to add:\nDefault roles and privilege registry must be selectable on a per system basis at compile time.\nBMC must be able to implement all 3 override types in a privilege registry.\nRegistry behavior must be maintainable such that new entities being added do not require modification of N systems worth of privilege registries.\nCI testing must be capable of finding issues in PrivilegeRegistry implementations.  Changes to odata.ids must be able to be propagated to the current privilege registries automatically.\nThe BMC shall expose PrivilegeRegistry entry under service root, per the standard to allow clients to determine the privileges for a given resource (now that they're not fixed to the standard)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 84,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Registry behavior must be maintainable such that new entities being added do not require modification of N systems worth of privilege registries.\n\nThis has been covered already.\n\nAll others have been added."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This isn't new.  bmcweb already stores privileges as bitmasks."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Reworded."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 95,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There is no mention in the requirements about changing roles, which redfish already can support via POST/PATCH/DELETE.  Maybe there's some missing requirements around role management?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 95,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is covered now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In this design, SubordinateOverrides aren't possible.  Please take a look at the discussions made in the subordinate overrides patchset in this regard.  This design needs to account for the fact that each instance of a particular route might have a different privilege level."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Why isn't it possible? I don't write it down though. Please take a look at what I wrote down now. I have a specific section for overrides."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't believe SubordinateOverrides \"aren't possible\". Please see what I proposed now which is very similar to https://gerrit.openbmc.org/c/openbmc/bmcweb/+/45125."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For the OEM stuff (google/v1, ibm/v1) lets treat this as out of scope, those companies are free to select how they want to manage this.\n\nFor the non-oem stuff (websockets, ect) I suspect we need to define OEM privilege levels for the various use cases.  Please take a look at the reviews in-progress for changing kvm parameters to understand what the requirements are, and add them to the requirements section."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have proposed a solution to this. Doesn't need to treat OEM as out of scope.\n\nSee the section of Non-Redfish Routes or OEM Resources."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 103,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is covered now and we don't need to treat OEM routes as out of scope.\n\nIn the latest design we still keeps the option to specify privilege set explicitly."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "to reiterate above, route names are not 1:1 with privileges.  This needs a more detailed design.  If you'd like to drop this section and handle it in code review, happy to do it there too, but as written, this design can't meet the requirements."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see the Operation-to-Privilege Mapping Overrides section. I don't believe there is any significant gap in the direction that this design proposes. But I do agree it will be more clear to write them down explicitly (I also add subordinateTargets)"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see the Operation-to-Privilege Mapping Overrides section in the latest design. I have covered all overrides."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "the method here is already called \"isSuperSet\";  I don't see a good reason to invert the logic that already exists, although we could if there were a good reason."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't mean to create a new method. Fine with isSuperSet"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I didn't mean to change this. Reworded to existing methods."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think this works for all use cases.  Most openbmc members want to be able to select defaults at compile time for a given system."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 118,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "But what we have now is all static, right?\n\nI have updated the design, so it supports a certain extend of dynamic configuration, including overrides.\n\nI also updated this section so it reads from a config that can be changed at compile time."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't understand this statement.  The bmc will have a list of roles that it supports, and linux groups can be added/removed/modified at runtime.  Why can't the existing groups mechansisms be used?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have updated the design so that phosphor-user-manager is used."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what is an \"identity\" in this context?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 132,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is explained explicitly now in the beginning of the doc."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lots more detail needed here, because I'm not understanding what this is or how it's used.  what is an \"identity\" and how does it differ from an \"account\" or a \"role\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is not relevant now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please back this up with:\n1. The sizes of the existing json privilege registries that we intend on adding\n2. How the sizes of these will happen.\n3. What the size of the existing overlayfs is on most systems, and how much is spare."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> How the sizes of these will happen.\n\nWhat does this mean?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "The other two comments are now addressed."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What I meant was what the sizes of a common implementation will be."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack. Will add binary size"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, rephrase, the first sentence says we're going to store as json, then the next sentence says we're not going to store as json."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "sorry, I was saying the whole PrivilegeRegistry is stored as a JSON and the next sentence I said the Privileges strings can be replaced with bitmasks.\n\nActually, I realize storing bitmasks can introduce race condition, e.g., a role is deleted and bmcweb recovers from an old config.\n\nI removed the bitmask optimization."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please rephrase, I don't understand this statement."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Removed."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Good callout, and I think that helps."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 213,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 228,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "e54869c9ef772ce98e825c7d30f33f8caeef88fe",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/6",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661233227,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 379,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 394,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "4448a957fb84f1a273269ea28d64d2118b61c2a1",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/7",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661234114,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 384,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 399,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "649889b08687ec4dc5697d360d9e88d6d8630b96",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/8",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661234484,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 384,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 399,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/9",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661234552,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Didn't quite make it all the way through, but figured quick feedback was important.\n\nThis is already looking MUCH better, so thank you for that.  This version:\n1. Accounts for what exists today.\n2. Attempts to add to it in a way that can be reused by others."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think you mistyped.  OEM roles can be added via post to RolesCollection, not AccountService.  POST to AccountService creates users."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I changed it to RoleCollection in AccountService."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, probably don't need to put google here.  These use cases aren't specific to us."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done, changed to modern systems"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Changed to modern systems"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you call out that this is the DMTF-defined defaults?  You might also mention they are derived from IPMI."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I reworded."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 159,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 159,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "this is removed"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 159,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Just removed. I am basically saying OemGoogleRoleXyz won't be in other company's systems"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we just rephrase to:\n\nbmc will parse a given registry on input, and reject registries that:\n1. Lock all users out of the BMC\n2. Are improperly formed.\n3. Would prevent the bmc from hosting a correct redfish tree.\n\nFor example, if I POSTed a PrivilegeRegistry that locked everyone out of serviceroot, that would be a problem."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Are improperly formed.\n\nSure. Added.\n\n> Lock all users out of the BMC\n> Would prevent the bmc from hosting a correct Redfish tree. \n\nHow is this possible? Are you adding too much complexity? How do we implement such check, are we going through every user and examine their privilege?\n\nAlso, how does BMCWeb today prevent a user power cycle the machine continuously so that no other users can really do anything? \n\nMaking the sanity check too complex doesn't make sense to me. A user with proper permission (e.g., root) is allowed to delete all other users.\n\nWe can do simple check like non-OEM roles and non-OEM privileges and non-OEM mappings can't be modified.\n\nI have added a handful checks to the requirement:\n1. Users without certain permissions won't able to delete other users\n2. Privileges, roles in use by at least on user can't be deleted"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> How is this possible? Are you adding too much complexity?\n\nIf I created a privilege registry that allowed sensor values with a lower privilege level than chassis, it would be effectively impossible to create a redfish tree that was correct.\n\nInput validation is one pretty core security principal.  We're just trying to follow standards like this (and similar ones)\nhttps://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Have you look at the input validation that I wrote down.\n\nThere is no explicit ordering of the privilege. No concept of level. That's the whole point of this design: a user only has access to resources that it needs to.\n\nIf you look at the current design, I have added a handful checks to the requirement:\n1. Users without certain permissions won't able to delete other users\n2. Privileges, roles in use by at least on user can't be deleted"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets follow up with test cases on the individual commits.  I think that will be a lot better, and I don't think it needs called out.  The key principal here is that the bmc should reject the PrivilegeRegistry attempts that its code cannot fulfill correctly."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Need some additional requirements on maintainability if users can select these things.  Namely that new schema support can be added without modifying all custom users privilege registry.  This will require some additional requirements on how the behavior of that works."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I added a requirement for this.\n\nI don't think this requirement makes a difference on the design. If one needs the new resource to be accessible by a role, just add one of the privileges that role has to the PrivilegeRegistry."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> just add one of the privileges that role has to the PrivilegeRegistry.\n\nTo _which_ privilege registry?  If all systems have overridend privilege registries, do I have to now go through and update N systems worth of registries?\n\n> I don't think this requirement makes a difference on the design.\n\nI believe it makes a significant difference in how maintainable this is over time."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Still, I guess you just read my response without looking at the latest design doc.\n\nPlease see \"### PATCH on PrivilegeRegistry\" for an example how user can authorize a new service."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I read it, and I think that works great for runtime changes;  For compile time changes, we need to figure out what kinds of stuff we will allow in meta layers, but lets follow up with the individual users of this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given that PrivilegeRegistry defines this as a requirement, I don't think this is a may, I think it's a \"shall\"\n\nOtherwise even your use cases I don't think can be met.  LogServices use a subordinate override."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I know In BaseRegistry: LogService uses a subordinate override; password uses a property override.\n\nJust like the other thread I replied, static overrides (implementing whatever overrides in the BaseRegistry) shall be supported. Changing overrides at runtime may be supported. Is it clear now?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have reworded.\n\n\"It shall implement all overrides in the Redfish base Privilege registries at compile time; it may support configuring overrides at runtime\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "both should be \"shall\".  Considering that the default privilege registry will be the base registry, it's non-sensical if the user can POST the existing setting back as-is."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Fine.. As a design, I am okay with getting this to shall. But there are priorities, configuring subordinate overrides won't be more important than adding OEM roles, privileges, and modifying require privileges for non-override configures."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 175,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The key here is that as we implement this, the bmc needs to reject PrivilegeRegistries that it can't fulfill the promises of, and the implementation needs to be able to support the base registry.  All other priorities are fine with me, and I'm happy to let you use your own judgement on them."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 200,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "???  This doesn't seem in line with how Redifsh specifies privilege registry implementations.  Maybe you mean privilege set?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 200,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't mean privilege set. If you look at the current phosphor-user-manager, it uses a linux group to model a Redfish role.\n\n\"priv-admin\", \"priv-operator\", \"priv-user\" are all linux groups on system. Then in bmcweb, these groups are mapped into hardcoded Redfish privilege sets (the mapping table is in BMCWeb).\n\nIn an ideal case, I would like phosphor-user-manager owns the mappings as well, so given a user, phosphor-user-manager returns the set of Redfish privileges directly. We will have \"priv-configure-self\", \"priv-configure-components\", \"priv-configure-user\", etc as linux groups. And a user can be in multiple groups (meaning they have corresponding Redfish privileges).\n\nIf you agree with above, I can propose this in the design. Note this needs new interface changes in phosphor-user-manager, so it returns a string array for Redfish privileges. Otherwise, I don't find a good way to do user to Redfish role to Redfish privileges mapping, unless we do what I have proposed: \"an OEM Redfish role only supports being configured with a single Redfish privilege\".\n\nIf you don't agree, do you have better ideas?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 200,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I went with what's I though is idea. This involves larger changes to existing daemons (phosphor-user-manager)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 200,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ">  We will have \"priv-configure-self\", \"priv-configure-components\", \"priv-configure-user\", etc as linux groups\n\nI don't think this works at a system level.  One of the important properties of the existing mechanisms is that the privilege levels map to IPMI (admin/operator/user).  Moving these to be Redfish privilege levels would break that, which I don't think we can do at a system level.\n\nwe can certainly add extra redfish roles, but I think we need to keep some ability to map to ipmi."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 200,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Wait, have you looked the current design?\n\nTo not breaking existing privilege, I explicitly said we are only going to add Rf* Roles and privileges."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 218,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If this is part of your design doc, then upstreaming of this daemon is a prerequisite for your design, and definitely isn't \"out of scope\".  Otherwise how would anyone outside of google use the feature?  I'm pretty sure that's not what you want from an implementation timeline perspective.\n\nRemove this item, and talk through a design that follows the standard.  If it were me, I would allow POST to the PrivilegeRegistry, but I'm open to other ideas."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 218,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Sorry, I don't understand. I have said that these interfaces to add local groups are used in creating roles via POST Rest APIs JUST BEFORE this section.\n\nFWIW, I will remove this sub bullet point."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 218,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see what I have now. I even added several diagrams."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 235,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just so you're aware, we've talked about and there are patchsets out to move back to a model that doesn't' require a dbus call per request.  I suspect some of that design will intertwine with yours, but doesn't make sense to put in a design doc."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 235,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "How? Maybe a dbus call per connection?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 235,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This review isn't really the place to discuss, I just wanted you to be aware of changes in this area that might effect you."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 242,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "can we make this less subtle.  Can the oem privilege groups just start with priv-oem-<oemname> so that we're not treating oem differently?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 242,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see what I have now. I made explicit prefixes."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How would these privileges map to something like PLDM?  Do we need to come up with a naming convention here?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "What do you mean? OEM privileges are freely configurable by clients.\n\nTo implement least Privilege principle, we can grant a role a single unique privilege, and add that privilege to their required resources.\n\nWe can probably do something else like \"OemPrivChassisPowerCycle\". I would move that discussion out of the scope of this design."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Naming convention was discussed in another thread and reflected in the doc."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> OEM privileges are freely configurable by clients.\n\nRight, but there's clients on non-redfish interfaces, for which there's an expectation that the user can set other interfaces roles between them.  LEts follow up in tests and implementation."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 248,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, I would really like to see default OEM routes added for these, but we can treat that as a followup patch."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 253,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "BMCWEB_ROUTE is not specific to redfish.  You should not add Redfish-specific things (like subordinate targets) to that API."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 253,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Sorry, this is a fully internal macro, \"Route\" is a fully internal (in terms of bmcweb) , why can't we add APIs to it to support new features. \n\nNo Redfish routes shouldn't call these C++ function `entity`, `subordinateTargets` at all. Isn't this something we can guarantee via code review?\n\nI don't understand why you reject an idea like this? Do you have a better way to make a route know its own entity and what entities it's subordinate to easily?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 253,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Sorry, this is a fully internal macro, \"Route\" is a fully internal (in terms of bmcweb) , why can't we add APIs to it to support new features. \n\nbmcweb hosts more than just redfish, and requiring that all clients take on redfish baggage isn't going to work.  There are currently, and will be in the future http protocols beyond redfish (OpenConfig for example) that bmcweb will need to support.  This is why we abstract the layers as we do.\n\n> \n> No Redfish routes shouldn't call these C++ function `entity`, `subordinateTargets` at all. Isn't this something we can guarantee via code review?\n\nConsidering that the old way relied on code review, and didn't work (that's why we have the new way) I would say that we can't guarantee it in code review.\n\n> \n> I don't understand why you reject an idea like this? Do you have a better way to make a route know its own entity and what entities it's subordinate to easily?\n\nWe likely need a redfish specific call, (ie REDFISH_ROUTE) that can do whatever is needed under the covers to register the right handlers, without having to add complexity to BMCWEB_ROUTE.  It would call BMCWEB_ROUTE, as well as setupRedfishRoute underneath the abstraction, and we would just move all the redfish specific handlers over to REDFISH_ROUTE."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 253,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "fine... I added REDFISH_ROUTE. this is purely implementation details.. What you said aligns with my idea on this: add attributes to route so it can do authorization."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 253,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is what I think doesn't work.  What happens if IBM has a subordinate override for EthernetInterfaces, and Google doesn't?  Which option gets put into code?\n\nWhat if a user declares a subordinate override for something that doesn't have the optional flag.\n\nWe know at compile time what all the routes are, we need to come up with a method where it starts by checking subordinate overrides for the route, then looks up by type.  This will likely need to be generated from the schemas to be maintainable over time (the same as we found that manually adding privilege registry entries was not maintainable).\n\nPlease take another attempt at this paragraph."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "What about we make it required and add subordinateTargets for all the route? Yes, the values of possible subordinateTargets can be generated from schemas."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see what I have now.\n\n> This is what I think doesn't work.  What happens if IBM has a subordinate override for EthernetInterfaces, and Google doesn't?  Which option gets put into code?\n\nI guess you are thinking about something else. by |subordinateTargets| I actually refer to the resources that a route is subordinate to, which is decided once the route is decided.\n\nI don't understand why this doesn't work? |subordinateTo| is a property of routes, so we can directly use them to compare what's configured in the PrivilegeRegistry. If Google doesn't have override in EthernetInterfaces, Google just uses a config without subordinate override.\n\nI added inferring this from the URL as alternative considered. I don't want to deal with this complexity at this moment. A given route won't change its entity nor what resources it's under at runtime."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> What about we make it required and add subordinateTargets for all the route?\n\nBasically, I think that when we register a route, we need to register the path, then have a lookup table of path -> entity-type, so that we can do the subordinate overrides correctly, then fall back to type checking if no subordinate override is present.\n\n>  |subordinateTo| is a property of routes, so we can directly use them to compare what's configured in the PrivilegeRegistry.\n\nLets just plan to have a test case for this, and deal with it in the code review/implementation.  Just being aware that subordinate overrides are always optional, and have a test case for both subordinate override present, and subordinate override not present should be fine.  The only design thing this changes is it means that odata.type isn't the only thing that determines a given routes privilege level"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I guess you just read my response without looking at the latest design doc. Please take at the doc. This has been answered in the doc.\n\nI just eliminated the lookup table of path -> entity-type by introducing a new attribute to the route."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 262,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep, I was trying to give you timely feedback, and replying to the issues that you had posed was a better use of time.  Agreed, you appear to have solved this in the design now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 265,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Today, the hardcoding doesn't matter because we handle it correctly in explicit code, given that we know the privilege registry at compile time.  If that changes, that means that we need to implement a generic subordinate override system."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 265,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please see all other threads about this.\n\nI DIDN'T propose to break systems and break Base privilege registry. I have proposed how dynamic override can be implement in the latest doc.\n\nI have also argued we can start with just implementing whatever overrides are there in Base privilege registry, and implement dynamic override in the 2nd iteration."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 265,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't see how that works though if we have subordinate overrides in code.  How would a user set up a privilege registry for something that we have a subordinate override for that's hardcoded in c++?  Or would we require that the upstream Base registry subordinate overrides always be present when a user posts a PrivilegeRegistry?  That might work."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 265,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "You misunderstood what I have proposed. Please read the relevant section \"### PATCH on PrivilegeRegistry\". I have updated the answer to you question there."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 265,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've read the patch section, lets just follow up with implementation and test cases."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 274,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This data already exists in the router.  Please don't add yet another map structure, just add a method to update the existing router structures."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 274,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Please don't add yet another map structure, just add a method to update the existing router structures.\n\nIsn't this what I am proposing in the above section? Adding `entity` and `subordinateTo` is just like adding method. The data is store in a Rule class like today.\n\nThe map data structure here is to store PrivilegeRegistry."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering that the redfish base registry has subordinate overrides that are important to ANY implementation (including ours), This is a non starter.  Feel free to stack up the patches however you like, but we CANNOT be changing default behavior for existing systems, and whatever implementation merges to master must be able to load and correctly run the base privilege registry, considering that's what DMTF publishes, and that is the default we'll have to expose from PrivilegeRegistry."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I didn't say anywhere that I propose to not implement base privilege registry.\n\n\"Static\" here means we only implement the Overrides in base privilege registry and don't support changing Overrides at run time.\n\nI can't stack patches without this design being approved. Developing codes without getting agreement in design and then getting considerable rework is a waste of time of both maintainers and myself."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "See what I have now. Design covers how to implement dynamic overrides. However, I don't believe implementing it is a hard requirement as long as we implement the base registry in a static way and don't break existing system.\n\nGoogle doesn't really have use case of changing overrides at runtime now. I want to put effort on the things that Google really needs first.\n\nLet me know if it makes sense."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LGTM.  Thanks for making that change."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 291,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't work.  The overrides are currently hardcoded in code."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 291,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I really don't understand why it doesn't work.\n\n>  The overrides are currently hardcoded in code.\n\nWhat's hardcoded? Did you misunderstand my idea?\n\nPlease take a look at the current design."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 310,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  If you inject them into code, they run after.  I'm open to seeing how this happens in a patchset, but setupRedfishRoutes definitely runs after the privileges."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 310,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I will rephrase. These codes will be in routing. I will remove \"similar to how query parameters are implemented\". I didn't mean to use setupRedfishRoutes"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 310,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nProperties overrides have to be examined after getting a response."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 315,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm curious to see how this will work in code with no binary size or memory impact, but I'm open to the possibility."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 315,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Will add."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 315,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Added in the requirements."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 320,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, stack your patches however you like, but given that this is:\nA. A security feature that effects the whole system.\nB. A well defined specification feature.\n\nWe can't be merging something that doesn't follow the spec."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 320,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Again, I won't do implementation until we have this design approved.\n\nPlease see the other thread about why this design doesn't break \"whole system\". We can discuss there."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Reading a large json file from disk at startup ignores:\nhttps://github.com/openbmc/bmcweb/blob/master/DEVELOPING.md#startup-times\n\nThese rules were generated for good reason, and I don't think should be ignored."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 323,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": ">  Unless a feature is explicitly intended to be runtime configurable\n\nIsn't this feature fall into this category?\n\nDo you have other solutions?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 323,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I updated the design with my ideas of generating codes at compile time and take a small JSON when startup.\n\nAlso updated that we only storing the Patch JSON (pure modification). So that the full mapping is PrivilegeRegistry (generated at compile time) + Patch JSON (modification)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 324,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does \"compact version\" mean?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 324,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "indent. basically json.dump(-1)"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 324,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 329,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ease don't add a new file for this.  This is what bmcweb_persistent_data.json is for, and does not need to take the form of anything specific to a given system."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 329,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Sure, I can add that Persistent Data can reuse bmcweb_persistent_data.json"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 329,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what are you basing this off?  I thought we were at the limit for most systems?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I checked romulus and s7106. This statement is true for both."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't know if there is good solution if there is an upstream system that doesn't have enough space for 100KB data.\n\nDo you have any ideas?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have added several ideas for reduce data size, and we don't parse a large JSON now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 346,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not seeing where that's true.  From the schema:\n\n<Property Name=\"SubordinateOverrides\" Type=\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable=\"false\">\n<Annotation Term=\"OData.Description\" String=\"The privilege overrides of the subordinate Resource.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall contain the privilege overrides of the subordinate Resource. The target lists are identified by Resource type.\"/>\n</Property>\n<Property Name=\"ResourceURIOverrides\" Type=\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable=\"false\">\n<Annotation Term=\"OData.Description\" String=\"The privilege overrides of Resource URIs.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall contain the privilege overrides of Resource URIs. The target lists the Resource URI and the new privileges.\"/>\n</Property>\n<Property Name=\"PropertyOverrides\" Type=\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable=\"false\">\n<Annotation Term=\"OData.Description\" String=\"The privilege overrides of properties within a Resource.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall contain the privilege overrides of properties, such as the `Password` property in the `ManagerAccount` Resource.\"/>\n</Property>\n<Property Name=\"OperationMap\" Type=\"PrivilegeRegistry.v1_0_0.OperationMap\" Nullable=\"false\">\n<Annotation Term=\"OData.Description\" String=\"List mapping between HTTP methods and privilege required for the Resource.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall list the mapping between HTTP methods and the privilege required for the Resource.\"/>\n</Property>\n\nI do not see OData.Permission/Read on any of those.  maybe I'm missing it?\n\nMy understanding is that other implementations have implemented this already."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 346,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "A big gap between you and me is that whether PrivilegeRegistry is read/write; if you read the spec, you will find permission annotations only exist for properties that are not structured properties; SubordinateOverrides is a structured properties, so you don't see a permission annotations.\n\nInstead, please see the type of SubordinateOverrides, Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap), and look into Target_PrivilegeMap, \n\n```\n<ComplexType Name=\"Target_PrivilegeMap\">\n<Annotation Term=\"OData.Description\" String=\"This type describes a mapping between one or more targets and the HTTP operations associated with them.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This type shall describe a mapping between one or more targets and the HTTP operations associated with them.\"/>\n<Property Name=\"Targets\" Type=\"Collection(Edm.String)\">\n<Annotation Term=\"OData.Permissions\" EnumMember=\"OData.Permission/Read\"/>\n<Annotation Term=\"OData.Description\" String=\"The set of URIs, Resource types, or properties.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall contain the array of URIs, Resource types, or properties. For example, `/redfish/v1/Systems/1`, `Manager`, or `Password`. When the Targets property is not present, no override is specified.\"/>\n</Property>\n<Property Name=\"OperationMap\" Type=\"PrivilegeRegistry.v1_0_0.OperationMap\" Nullable=\"false\">\n<Annotation Term=\"OData.Description\" String=\"The mapping between the HTTP operation and the privilege required to complete the operation.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall contain the mapping between the HTTP operation and the privilege required to complete the operation.\"/>\n</Property>\n</ComplexType>\n```\n\nYou see Targets are Read-only. Then look into OperationMap, you will find all properties are read-only.\n\nIn addition, take a look at this,\n\nhttps://redfishforum.com/thread/328/modify-privilegeregistry\n\nThey said \"I would not expect end clients to be able to modify a privilege registry on a service, but implementations can certainly construct their own privilege registry (as long as you follow the rules of the registry structure). \".\n\nDoes this make sense? You said you have seen systems, what are them? Are they available for testing?\n\nYou also said you are in discussions of this with DMTF, why don't they put modifying privilegeregistry into the Redfish standard?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 346,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I am fairly sure in today's spec, these are read-only. This is confirmed by DMTF."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 349,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why would we want to support PATCH over PUT (ie, requiring the user to completely replace the PrivilegeRegistry each time).  PATCH seems a lot more error prone?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 349,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I am not proposing replacing the PrivilegeRegistry completely. I just meant patch whatever the attributes in PrivilegeRegistry you need.\n\nI guess REST APIs confused people. Makes sense. I updated the document so that only PATCH is allowed."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 349,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm pretty sure in the specification this would be a PUT?  Because we're expected to totally replace the privilege registry each time, but sure, I guess we could do either or."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 349,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't expect user to completely replace the privilege registry each time. Please take a look at ### PATCH on PrivilegeRegistry section."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 349,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 365,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering we need implementations either way, who cares if it's custom or our own?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 365,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "What do you mean? We need to implement what ways?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 365,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Not applicable now. Now we only store delta, and does use custom format."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 365,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\n\nHow are roles added at compile time?\nHow are oem privileges added at compile time?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> How are roles added at compile time?\n> How are oem privileges added at compile time?\nSee what I have now.\n\n> I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\nWhy is ConfigureSelf related?\n\nBefore resource handlers (what the current hardcoding of SonfigureSelf) being executed, we do whatever the normal authz needs: getting the privileges set of the user, get the required privilege set, and do isSuperSetOf. After that, we just execute what the hardcoded ConfigureSelf codes are there. I don't any see any changes needed."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "The ConfigureSelf privilege is specified on a property override for the ManagerAccount Password property.\n\nThe weird behavior of the ConfigureSelf privilege is it only effective when the user is accessing their own ManagerAccount.  There are two cases:\n\n1. For example, although the privilege registry allows a user who has only the ConfigureSelf privilege to PATCH the ManagerAccount.Password property, that only applies to *their* password, and not to anyone else's password.  <-- That behavior is not adequately captured in the spec or in the privilege registry.  This behavior is implicitly understood, and it is implemented in BMCWeb (code in ManagerAccount PATCH operation).\n\n2. There is another similar weird wrinkle in the Redfish Authorization specification.  The GET ManagerAccountCollection operations shows different results for different users.  Users who have the ConfigureUsers privilege will see all users, but users who do not will only see their own account listed.  The privilege registry use of ConfigureUsers does not adequately capture this behavior.\n\nIt would be nice to get this into the spec.  This is described in the public forum here: https://redfishforum.com/thread/309/configureself-account\n\nI would be okay with leaving the code in BMCWeb to perform special handling of the ConfigureSelf privilege."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for the information. I believe \" leaving the code in BMCWeb to perform special handling of the ConfigureSelf privilege\" is the easiest at the moment."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > How are roles added at compile time?\n> > How are oem privileges added at compile time?\n> See what I have now.\n> \n> > I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\n> Why is ConfigureSelf related?\n> \n\nBecause it's a special case of privileges that needs handled.\n\n> Before resource handlers (what the current hardcoding of SonfigureSelf) being executed, we do whatever the normal authz needs: getting the privileges set of the user, get the required privilege set, and do isSuperSetOf. After that, we just execute what the hardcoded ConfigureSelf codes are there. I don't any see any changes needed.\n\nSo then what happens if someone uploads a privilege registry without ConfigureSelf set on a particular resource?  We would give the wrong response if the ConfigureSelf code is hardcoded."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Now I explicitly said base PrivilegeRegistry can't be changed. This design is for adding/deleting OEM Registries."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 384,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This can be removed.  This doc doesn't worry about downstream systems."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 384,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 384,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 399,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "205b0d3f19d059daecdefc4e524a91eecd0d54a6",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/10",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661370546,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Got some updates, will update tmr. Please hold and see my latest reply with a updated doc. Thanks "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 384,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 399,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "44a30c29bdf4069447a630209185d51bfa150b59",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/11",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661481151,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 553,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 567,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "3c8cc31c35f816b0419a484edbec93bb3e7bf20a",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/12",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661481416,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 516,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Excerpts from the Redfish spec DSP0266 section \"Authorization\":\n1. Redfish allows vendors to extend the standard privilege model with OEM privileges and custom OEM roles.\n2. Services may also allow clients to create custom roles.\n\nNote the spec does not explicitly allow clients to create custom OEM privileges.  I don't know why.  I think we could ask Redfish to change the spec to allow this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 516,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "They don't allow changing roles and privileges at runtime. But they do allow changing them at compile time. See https://redfishforum.com/thread/328/modify-privilegeregistry I linked in the other thread.\n\nI will mark this as resolved now. Discussions to this can be moved to the existing thread about the Permission Annotation of the Redfish PrivilegeRegistry resource."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 557,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Do you mean: All existing regression tests should work as before when both (1) BMCWeb is built from the Redfish-provided privilege registry, and (2) no Roles or Privileges are modified (POST, PATCH, etc.)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 557,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I forgot to remove the Google testing part.\n\nYes, all existing system will work as if nothing changes if they disable the feature of changing PrivilegeRegistry at runtime."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 557,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I also added more testing cases in the testing section."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 558,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 572,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "b93287f405510f4707e6b4a98afb9e844b6811e8",
            "parents": [
                "0b7780b5af82300012e6141a0b3614e6c84029e0"
            ],
            "ref": "refs/changes/01/56401/13",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1661886009,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Any more comment? Note, I have replied to all pending thread. Some of them are not resolved since I am waiting for reviewers' reply and hope they can close those pending comments if my updates make sense."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Friendly ping. Any more comments?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Haven't done a full review, but partial comments from my drafts are better than none."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, please don't delete sections of the template that are important.  Namely it looks like Orangizational is missing?\n\nhttps://github.com/openbmc/docs/blob/master/designs/design-template.md#organizational"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Added."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The background up to this point(*) is now quite likely one of the best design documents I've seen written.  Thanks for this awesome work.\n\n(*) - I don't mean this to sound like you've failed past this point, but only that I've read up to this point and wanted to leave some positive feedback."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 194,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks Patrick, this does encourage me a lot!\n\n:)"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I wonder if this is a good idea or not: \"...to distinguish them...\".  We might _want_ to be able to assign these same groups to either local users or a mechanism for LDAP users?\n\nIt is possible that I don't fully understand all of the PrivilegeMapper stuff in user-manager already and we handle this by some secondary mapping of LDAP groups to local groups?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Wait, this section is about Redfish Roles, right? Not local or LDAP users. Here I meant Redfish role itself will be stored as a local user.\n\nIf I read the code correctly, we have RemoteRoleMapping to handle LDAP users' privileges. So, if we want remote LDAP user to have OEM privileges. We can modify the PrivilegeMapper and PrivilegeMapperEntry interface so that they return a list of local groups (one of existing hardedcoded privilege + Redfish OEM privileges)\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/User/PrivilegeMapper.interface.yaml\n\nThis is somewhat called out in section #Redfish Role to Redfish Privileges Mapping, let me know if you want me to add more details (e.g., extend PrivilegeMapperEntry so it returns a list)"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Wait, this section is about Redfish Roles, right? Not local or LDAP users. Here I meant Redfish role itself will be stored as a local user.\n\nI was just wanting us to think a bit about if we want them to be distinct or not.  There seems to be some value at least from an LDAP perspective of being able to map LDAP groups to these Redfish roles as well."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Oh, here Redfish roles are modeled as local secondary groups, right? So they have to be unique.\n\nYes, I have added how to map LDAP groups to Redfish privileges in #Redfish Role to Redfish Privileges Mapping,."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 219,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest reading this: https://systemd.io/USER_NAMES/\n\nI think we should use lower-kabab-case for these group names and limit to 31 characters.\n\nWe might want something like \"openbmc-rf-\" as a prefix?  I mentioned above it might be handy to be able to use LDAP for these same roles.  We'll want something halfway globally unique in order to be able to leverage LDAP.  (What I mean by this is that a company can add the group 'openbmc-rf-adminstrator' to a user in their AD and they gain Redfish:Administrator access on their fleet).\n\nUnfortunately this prefix also consumes some of the 31 characters.  Maybe 20 characters is still enough for most purposes (openbmc-rf- => 11, 31-11=20)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 219,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "yeah, not using \"-\" is to save characters.\n\n\"OEM role names should begin with a lowercase character or \"Oem\" followed by a vendor name to avoid conflict with future Redfish predefined role names.\" This is Redfish's subjection. I adopt both your and Redfish's opinion and proposed openbmc-rfr- as the prefix now.\n\nI also mentioned OpenBMC can be replaced with other vendor names at compile time."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 221,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Based on the above we might want to consider \"openbmc-rfo-\" for OEM.\n\nDo we have to worry about collisions between various OEMs?  Does OEM really mean the same thing here as it typically does in Redfish or does OEM really mean \"custom roles created by the user\" or does it mean both?  How do we avoid potentially collisions?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 221,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Do we have to worry about collisions between various OEMs? How do we avoid potentially collisions?\n\nNo. An OEM Redfish role on system A won't affect OEM Redfish role on system B. For LDAP, a company name plus \"rfr\" should be enough to distinguish these roles.\n\n> Does OEM really mean the same thing here as it typically does in Redfish or does OEM really mean \"custom roles created by the user\" or does it mean both?\n\nOEM here means non-standard Redfish roles (Administrator, ReadOnly, and Operator) created by Redfish implementation. All Redfish roles not in the spec are OEM roles. DMTF wants implementation to add OEM since they might add more standard roles in the future and want to avoid collision."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 227,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Might need to rethink this name also."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 227,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nWe can discuss more if these names don't make sense."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 236,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't fully understand the primary/secondary group usage here.  I tried to search and found an article that says:\n\n> Primary Group: Specifies a group that the operating system assigns to files that the user creates. Naturally, each user must belong to a primary group\n> Secondary Group: Specifies one or more groups to which a user also belongs. In addition, users can belong to up to 15 secondary groups\n\nWe're not really using primary groups at all, are we?  Usually the primary group is 'user:user'.\n\nAre secondary groups are limited to 15 on Linux?  Another search seems to indicate later kernels can support 64k: \n https://askubuntu.com/questions/300049/is-there-a-maximum-number-of-groups"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 236,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "No, we are not using primary group at all. This is aligned with phosphor-user-manager today unless I miss-understood anything.\n\nMy understanding of why we use group to model privileges in phosphor-user-manager is that we have single source of truth and don't need a separate storage mechanism.\n\nRegarding number of secondary groups, it's not 15 and is larger than 32. I just tested this on s7106\n\n```\nroot@s7106:~# id PowerService\nuid=1002(PowerService) gid=100(users) groups=1007(PowerService),1008(Priv0),1009(Priv1),1010(Priv2),1011(Priv3),1012(Priv4),1013(Priv5),1014(Priv6),1015(Priv7),1016(Priv8),1017(Priv9),1018(Priv10),1019(Priv11),1020(Priv12),1021(Priv13),1022(Priv14),1023(Priv15),1024(Priv16),1025(Priv17),1026(Priv18),1027(Priv19),1028(Priv20),1029(Priv21),1030(Priv22),1031(Priv23),1032(Priv24),1033(Priv25),1034(Priv26),1035(Priv27),1036(Priv28),1037(Priv29),1038(Priv30),1039(Priv31),100(users)\n```\n\nAll search results show that latest linux can have up to 65,536 supplementary groups"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 236,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> All search results show that latest linux can have up to 65,536 supplementary groups\n\nUnderstood.  Looks like the 15 limit was an older POSIX requirement.\n\n> No, we are not using primary group at all. This is aligned with phosphor-user-manager today unless I miss-understood anything.\n\nIt might be good to reword this section a bit then.  You talked about \"groups\" at first but then you started using \"secondary groups\" in the middle.  It made it seem like they might be different things."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 236,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, I have make them all \"secondary groups\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 308,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Missing sentence?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 308,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Removed. This is the first sentence in this section.\n\n\"\"\"\nBase privileges and roles won't be allowed to change at runtime.\n\"\"\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 340,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not particularly fond of the proposal at a dbus level.  Don't we just need a few new methods on User.Manager in order to manipulate groups?  Why does this need a redfish-specific set of APIs?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 340,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Don't we just need a few new methods on User.Manager in order to manipulate groups?\n\nYes, just few DBus methods to manipulate groups in User.Manager side. Ed wants me to explicitly list how Redfish roles/privileges are created in previous comments. Thus I listed these DBus APIs.\n\n> I'm not particularly fond of the proposal at a dbus level.\n\nOh, is there any other options? Do you mean not list the details in DBus level. Yeah, the dbus level details in this proposal is just used to convey the ideas. The actual implementation might use different name or arguments. \n\n> Why does this need a redfish-specific set of APIs?\n\nThis is to address Ed comments: features should be testable without access to the BMC console. So I explicitly added how DBus APIs are invoked by Redfish APIs."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 340,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Oh, is there any other options? Do you mean not list the details in DBus level.\n\nI have no problem listing the dbus flows here.  My concern is, for example the API is identified as \"createOEMPrivilege\", which implies Redfish.  We should be able to create and modify groups via User.Manager, which it doesn't support today, but we shouldn't explicitly create/modify \"Redfish Groups\".  The fact that some prefix is used for Redfish should be kept to Redfish-aware code, which doesn't belong in User.Manager."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 340,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Makes sense, I have updated the diagram so that Redfish was removed from UserManager."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 558,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Robert or Robot? \ud83d\ude04"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 558,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "\ud83d\ude2e \nGood catch.\n\nChanged to Robot."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 559,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 573,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "8a0326699ce7c2a0ff4638331824717870f3852b",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/14",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1662569001,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 559,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 573,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "d5870dd0c2231a8ec2b87eced2e7d7faf95941df",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/15",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1662598945,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Minor nits.  Overall looks pretty good to me.  Probably need some buy in from others."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks. Will follow up with other reviews."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I had to read this sentence a few times because it seems to contradict the whole rest of the document.\n\nI think you meant that \"modeling roles as _static_ Linux secondary groups doesn't work well\"?  We actually are using groups to represent OEM Redfish Roles in the proposed design, right?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for this comment. Yeah, I found it confusing myself when you point it out.\n\nI adjusted the wording and adopted your suggestion. Here I meant modeling roles as only Linux secondary groups is not enough, since now a role might contain multiple dynamic privileges. Thus we propose to model roles not only as groups, but also as users so that we can easily link a role with multiple privileges (modeled as secondary groups).\n\nDone."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 238,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Does this become `openbmc-rfr-`?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 238,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Good catch.\n\nI double checked RfRole and RfOem across the doc."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 600,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 614,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "b0735c86b2e7d8c2167927590e74ee2faf5408a5",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/16",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1662657610,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Very nice design!  I have a couple of questions..."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 177,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Is requirement 8 intended to represent requirements 1 and 2 at firmware build time?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 177,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is to respect Ed's comments before.\n\nDefault OEM roles and OEM Redfish privileges are configurable at compile time by Yocto's UserAdd and GroupAdd.\n\nDefault Redfish PrivilegeRegistry (C++ codes) will be generated at compile time by parsing the DMTF's privilege registry (I will write a python script) so that the Redfish server doesn't parse a very large JSON.\n\nAnd yes, requirement 8 is somewhat making requirement 1 and 2 working at compile time."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 177,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 189,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Can you describe more?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 189,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, I added a section in line #510 to explicitly explain this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 189,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 296,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "To check my comprehension: does this mean:\ngroups prefixed with openbmc-rfr- and openbmc-rfp- will not be allowed to change at runtime, and\ngroups prefixed with openbmc-orfr- and openbmc-orfp- will be allowed to change at runtime."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 296,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes. Openbmc-rfr- and openbmc-rfp- will not be allowed to change at runtime in the scope of this design. Because any changes at runtime regarding roles or privileges are \"OEM\"."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 296,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 301,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I don't think the Redfish spec allows Redfish clients to write to OEM Privileges.\nSee DSP0266 > Security > Privilege model > \"custom client-defined privilege\".\nHowever, I think we could change the spec to allow it."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 301,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, this has been discussed in previous thread. If we look into the Permission annotation of the PrivilegeRegistry, we will find all of them are read-only.\n\nHowever, DMTF already noticed the limitation. https://github.com/DMTF/Redfish/issues/5262#issuecomment-1239678254. In their proposed design to solve this, one of the option is to make PrivilegeRegistry fully editable, which is aligned with this design.\n\n> However, I think we could change the spec to allow it.\n\nYes, I already started the conversation."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 301,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 336,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Do we need an operation to modify a Role?  I think a \"Modify Role\" operation is needed to support PATCH to an existing Role in the Redfish Role collection.\nNote: Performing a \"Modify Role\" operation via Delete followed by Create is problematic if that role is already in use."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 336,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Do we need an operation to modify a Role?\n\nNot at this moment. We can extend this if there is a strong usecase.\n\nBut in Google's use case, no, we don't need to modify a role. We only need to add a role or modify the PrivilegeRegistry (grant an OEM privilege of an existing role to a new resource)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 336,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Okay, we can add this later if it is needed."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 336,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 428,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Is this more clear?: The operation to check if a user is authorized to perform a Redfish operation ..."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 428,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes. Done."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 444,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Can the design briefly discuss what contributes to the size limit and why you think it will take 100Kbytes?  I assume this size is for the current mapping, and it will grow as Redfish adds new schemas."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 444,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes. It will grow as Redfish adds new schemas. But I have left some margins already. Please take a look at the words that I added now which explains why 100KB is chosen. Please let me know if it makes sense.\n\nI haven't write the code yet. So this is just my estimation."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 444,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Thanks for explaining!"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 444,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 454,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Does this mean the C++ code to handle a specific Redfish operation (like PATCH ManagerAccount Password property) will still need custom code to call a funcrtion to check property overrides?  Or will that check be performed after the handler is done and the HTTP response is ready to be returned to the client."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 454,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, good question. Please take at the execution flow below,\n\nThat check will be performed after the handler is done and the HTTP response is ready to be returned to the client. Otherwise we don't know if a handler will return a property or not, right?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 454,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "(Correctly handling property overrides is tricky.)\nI don't think the flow explains what is needed.  The property override check cannot be performed after the operation handler has already constructed the HTTP response body.  There are two reasons:\n1. At this point, the operation handler has already performed the action, invoked, D-Bus APIs, etc.  So it is too late to check authority.\n2. The operation handler may return properties which were not PATCHed.  For example, it may return a value as if the GET operation was used.  If we perform the property override check at this point, it would see all properties, and give incorrect results.\n\nI think this is how and when the property override check needs to be done:\nWhen a client is performing a PATCH operation, the HTTPS request body will have the properties they are trying to PATCH (like JSON {\"Password\":\"mypassword\"}).  BMCWeb should check for property overrides *before* invoking the operation handler."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 454,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "That's a really good question. I believe it relies on the method (modify or read) being used. For read request, we don't know whether the property exist or not, right?\n\nI updated the diagram so it's for GET. I added a paragraph for modification methods as well and reused what you have suggested.\n\n```\nMost part of the Authorization codes run before resource handlers. However,\nPropertyOverrides for read operation can only be executed when response is\nready since we need to inspect the response attributes. PropertyOverrides for\nwrite operator shall still run before the handler codes: the authorization code\ninspect the request payload and corresponding properties, and look them up in\nthe Operation-to-Privilege Mapping in-memory Data Structure.\n```\n\nPTAL."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 454,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Joseph +1 the change. Marked as resolved."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 507,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I don't comprehend what this is saying.  This persistent data is stored as Linux users and groups.  Why would BMCWeb need to store it?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 507,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "There are two piece of data need to be stored, one is OEM Roles and OEM Privilegse which is stored as Linux users and groups, the other is modified Operation-to-Privilege mappings.\n\nI have reordered so that \"###PATCH on PrivilegeRegistry\" comes first.\n\nLet me know if it makes sense."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 507,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I got it.  But I have a different question below."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 507,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Addressed in the different thread."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 602,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 616,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "7d185933b443c484e0c66888423e288f06b87a59",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/17",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1663175861,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Thanks for answering my questions!  I have a couple more..."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 558,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I don't think this is the appropriate place to store this data.\nThe bmcweb_persistent_data.json file is only written when BMCWeb exits normally.  For example, it may not be written if BMCWeb dumps, BMC crashes, etc.  If we are going to store a sequence of PrivilegeRegistry PATCH requests, I think the file needs to be written when the PATCH request is being processed.\n\nInstead of writing a sequence of PATCHes, can BMCWeb instead simply write the new PrivilegeRegistry to a file?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 558,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Instead of writing a sequence of PATCHes, can BMCWeb instead simply write the new PrivilegeRegistry to a file?\n\nThis was my original proposal but rejected by Ed. He has concerns about reading a large file at daemon startup. He was also worried about we increase the persistent data that BMCWeb keeps.\n\nSo I proposed to store only changes on top of the Base Registry so that BMCWeb stores less data. I proposed to populate Base Registry at compile time as C++ codes to eliminate the need of reading a big file. \n\n> I don't think this is the appropriate place to store this data.\n\nHmm, this is also suggested by Ed. I proposed a separate data file but Ed wants to use the existing one. It makes sense to me to just keep a single file for all the states.\n\n> The bmcweb_persistent_data.json file is only written when BMCWeb exits normally.  For example, it may not be written if BMCWeb dumps, BMC crashes, etc.  If we are going to store a sequence of PrivilegeRegistry PATCH requests, I think the file needs to be written when the PATCH request is being processed.\n\nYes, good point. This will change now. BMCWeb has to write changes to disk before it returns okay to clients' PATCH on PrivilegeRegistry. I have written this down explicitly in the doc now."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 558,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Joseph +1 the change. Marked as resolved."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 606,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 620,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "705b2fc4079873c280ccd7bfb4c539c6a0773af6",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/18",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1663201190,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "The design looks good to me.  Thanks for tackling this!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is much better than the last version I reviewed, there's still some hiccups, but that's a symptom of this lasting quite long, and going into a lot of specific line-by-line implementation details that are better handled in code review.\n\nGreat job!  and thank you for putting this together."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Part of the reason we have the existing role mapping is because people need these rules to interop between IPMI and Redfish.  This design would break that mapping if redfish roles now use a totally different namespace.\n\nThis design hiccup I think needs solved, but I don't think we should hold up the overall design because of it.  I suspect this is just a missing requirement \"must be able to map IPMI roles to Redfish roles\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "+1, Can we add an exmaple here how the creation of the IPMI users gets mapped?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, see line 290 that I added in the latest patch-set. It basically works as before with hardcoding."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 286,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Do we need to extend this too so that LDAP group should be mappable to multiple redfish groups?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 286,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> LDAP group should be mappable to multiple redfish groups\n\nThis is already done if we map an LDAP group to a Redfish role as written. A Redfish role then will be mapped to multiple Redfish privilege group."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 286,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 291,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Should we just say the privilege of a user? Why we are calling out the \"Redfish Privilege\" here?"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 291,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Removed \"Redfish\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 358,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Can you use the same example here too?\nopenbmc-orfr-power\n     openbmc-rfp-configureself"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 358,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Apologize, what do you mean? You want me to change \"OemAddPowerService\" to \"openbmc-orfr-power\". I don't believe it's necessary. How we store redfish privileges can be different from the actual string representation in Redfish domain.\n\n> openbmc-rfp-configureself\n\nIn Redfish domain, the spec clearly said this privilege is \"ConfigureSelf\""
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 358,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 403,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Just a note, this is something I'd like to see, and solves a lot of other issues.  We need to figure out how to handle the 404 behavior, but that's an implementation detail."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 408,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not sure this can be implemented as-written, but lets follow up in patchsets.  This level of detail isn't great for a design doc.\n\nThe key things for me are:\n1. Can people write these definitions correctly by looking at the standard.\n2. Are these definitions maintainable over the life of the standard as these things change.\n\nWe can answer both of these in the gerrit reviews.  I suspect we need to generate these from the schemas, but lets figure it out."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 411,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Keep in mind, there are \"non redfish\" routes within the redfish url namespace.  Again, this is best covered in implementation, but something to consider when writing code."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 413,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This needs discussed outside this patch, and there are patches that propose this.  but this is something in implementation we should look at, although I probably agree that these days they should be required."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 413,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 413,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, I am aware of the change you referred to. I have reviewed that change"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 424,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Do we have estimates of how big this will be or how much memory it will take to generate?  There have been significant things like MessageRegistries that were once stored in ram maps, that have moved to RODATA.  Please consider storing large, compile-time generated maps in ram as an anti-pattern, although I agree, storing the DIFFs of the tree in ram is unavoidable."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 424,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "We probably don't need hash at all. Just an array is enough to perform lookup. This is implementation details. I can go back and fix this document when an implementation is done."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 424,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 437,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This already exists, so, yeah, seems reasonable to do. \ud83d\ude0a"
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 444,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is VERY large.  Lets talk through this and see if we can get this down.  100KB compressed would be several major features worth of binary size in bmcweb.  I'm pretty sure we can do 10X better than this."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 452,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Here's where we hit some issues.  Everything in http/* should ideally not contain any references to dbus or Redfish, to keep the openbmc webserver able to be reused over time.  Redfish (and in the future dbus) are optional.\n\nLets treat this as an implementation detail."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 613,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 627,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "6a4df414109ffc74acbc15e5474c5c8cdb93c595",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/19",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1663873555,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "what's is the benefits of OEM Redfish privileges?\n\nIt seems like the new bmcweb changes will replace the existing Redfish privilege with a dynamic one going though the Operation-to-Privilege Mapping.\n\nI guess this is just in case the Role -> Privileges are not flexible enough.\n\nIs there any restriction on creating OEM Redfish privileges? since it is just pretty much a string... all the interesting stuff is updating operation-to-privilege mappings."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> what's is the benefits of OEM Redfish privileges?\n\nIf you are asking why we still need OEM Redfish privileges given that we have proposed OEM Redfish role, the answer is to keep compatible with the spec. If someday Redfish published that we can do authorization based on roles, we don't really need OEM Redfish privileges for Google's use case.\n\n> I guess this is just in case the Role -> Privileges are not flexible enough.\n\nSeveral OEM Roles can own the same OEM Privileges.\n\nThis is one of the reasons that OEM Privileges can be useful.\n\nThe base Privileges are too broad.\n\n> Is there any restriction on creating OEM Redfish privileges? since it is just pretty much a string... all the interesting stuff is updating operation-to-privilege mappings.\n\nNo restriction besides some format checking (e.g. string is too long)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 158,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "Ack. make sense. Thanks."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "How are we managing who is able to update the roles?\n\nSeems like it is by `phosphor-user-manager`, but what does it use to see which dbus client make the call and update the roles?\n\nI am just trying to see at what level we are restricting updates. It seems like adding role/privileges doesn't matter and can have no restriction.\n\nHow is modifying operation-to-privilege mappings managed? Is it just if the current use have access to PrivilegeRegistry/RoleCollection/ManagerAccountCollection then they have access? With that, can we update the role/privilege for PrivilegeRegistry/RoleCollection/ManagerAccountCollection?\n\n(not sure if that too deep into implementation detail, or need to be determine now)."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "That's a good question. For Google, we have the gRPC service to install configurations and do dbus calls.\n\nFor users that only have Redfish interfaces, we can start with tight restriction: e.g., only users have ConfigureManager privilege can modify the privilege registry.\n\n> How is modifying operation-to-privilege mappings managed? Is it just if the current use have access to PrivilegeRegistry/RoleCollection/ManagerAccountCollection then they have access? With that, can we update the role/privilege for PrivilegeRegistry/RoleCollection/ManagerAccountCollection?\n\nI believe this is answered in the following example sections."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 162,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "ok, sounds good. I guess the caller and dbus stuff are more implementation detail and can be different.\n\n---\n\nack, found it. thanks."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "this is bmcweb crash? I am assuming that it will not persist across reboots."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 172,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "What I have in mind now is that BMCWeb commit the changes immediately when the PrivilegeRegistry is modified. The implementation will try to be as atomic as possible.\n\nIf the file is stored in rwfs, I believe it will persist across reboot. The existing bmcweb-persistent-data.json does persist."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 485,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "nit: missing space."
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "line": 485,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 620,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 634,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "00ea90f50aa08a25f98f0a4636988e0e40aa7f8f",
            "parents": [
                "33940c031b314aa683e8d414fad81df1c7beeb33"
            ],
            "ref": "refs/changes/01/56401/20",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1665107935,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "@Nan, it would be good to mark all comments as resolved before you merge this.  I think you've responded adequately to them."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Thank you!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 620,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 634,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "8fd98f1375d834217c34602204b7c0ad581c846a",
            "parents": [
                "9c70ea066312dd316fe54ee7091a0b0fc914395f"
            ],
            "ref": "refs/changes/01/56401/21",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1665163140,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-authorization.md",
                    "type": "ADDED",
                    "insertions": 620,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 634,
            "sizeDeletions": 0
        }
    ]
}