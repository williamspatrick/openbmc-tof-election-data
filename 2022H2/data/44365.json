{
    "project": "openbmc/openbmc",
    "branch": "master",
    "topic": "pci.ids",
    "id": "I448f1a4b9d18d30bce45cfddd2b5a85fa0146737",
    "number": 44365,
    "subject": "pci-ids: add recipe",
    "owner": {
        "name": "Andrei Kartashev",
        "email": "a.kartashev@yadro.com",
        "username": "alatarum"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openbmc/+/44365",
    "hashtags": [],
    "createdOn": 1624431995,
    "lastUpdated": 1665685761,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1624431995,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1624432053,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624432064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/4845/"
        },
        {
            "timestamp": 1624432865,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/4845/ : SUCCESS"
        },
        {
            "timestamp": 1624433144,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Topic set to pci.ids"
        },
        {
            "timestamp": 1624434163,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1624447473,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624481620,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624483435,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624489646,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)\n\nI commented a little below, but I'll add it here for emphasis;  It would be great to get a good description in the commit message as to why this mechanism is better than what already exists."
        },
        {
            "timestamp": 1624526334,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624533663,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624533881,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624533979,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624534414,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624534681,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624534968,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1624538559,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1625067908,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1630157843,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1630574254,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665685761,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "235897216ff576d01f0c51520fac303184527fbc",
            "parents": [
                "aaecf6b84b0f227dd4329060026064e59b56c1a5"
            ],
            "ref": "refs/changes/65/44365/1",
            "uploader": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "createdOn": 1624431995,
            "author": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Doesn't systemd-hwdb already have this information as part of the udev implementation?  Can we just get it from there?\n\n(I just picked a random device string to test out from the pci-ids list.)\n\n```\n$ systemd-hwdb query pci:v00001000d00000001      \nID_VENDOR_FROM_DATABASE=Broadcom / LSI\nID_MODEL_FROM_DATABASE=53c810\n```"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Interesting, I will take a look.\nDid you try this on BMC? \nOn my system it seems to be empty:\n\n> # systemd-hwdb query pci:v00001000d00000001\n> #"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I did it on my dev system, not a BMC.  I suspect it not working on the BMC is caused by:\n\n  conf/distro/include/phosphor-base.inc:BAD_RECOMMENDATIONS += \"udev-hwdb\"\n\nOn the BMC our hwdb.bin is pretty small compared to my system:\n```\n-r--r--r--    1 root     root     105 Jan  1  1970 hwdb.bin\n-r--r--r--    1 root     root 9135404 Jun 23 13:32 hwdb.bin\n```\n\nIt seems like the hwdb.bin on my system is similar in size to your proposed pickup of pci.ids, so that's why I'm suggesting using the hwdb instead.\n\nI think we could change the phosphor-base.inc based on a machine feature if having the peci-pcie information is useful."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I did it on my dev system, not a BMC.  I suspect it not working on the BMC is caused by:\n> \n>   conf/distro/include/phosphor-base.inc:BAD_RECOMMENDATIONS += \"udev-hwdb\"\n\nIf I remember right (this was a long time ago) hwdb requires some initial first-boot startup step, which required a lot of BMC cpu on first boot.\n\n> \n> On the BMC our hwdb.bin is pretty small compared to my system:\n> ```\n> -r--r--r--    1 root     root     105 Jan  1  1970 hwdb.bin\n> -r--r--r--    1 root     root 9135404 Jun 23 13:32 hwdb.bin\n\n9MB?  That seems kinda big?\n\n> ```\n> \n> It seems like the hwdb.bin on my system is similar in size to your proposed pickup of pci.ids, so that's why I'm suggesting using the hwdb instead.\n> \n> I think we could change the phosphor-base.inc based on a machine feature if having the peci-pcie information is useful.\n\nWe should really add the peci-pcie maintainers here if this change is meant to help them as opposed to the fixed custom tooling they already have.  If I remember properly, the existing peci-pcie stuff compiles to c structs which end up pretty small, and have almost no impact at runtime to access.  If we're going to change those, we should probably put some reasoning in the commit message for why this way is better than what's there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "> I did it on my dev system, not a BMC.  I suspect it not working on the BMC is caused by\n\nOn my dev and home systems I don't have systemd (there is OpenRC used instead), so I can't test, but I can try to build BMC with udev-hwdb. However I definitely agree with Ed - 9MB is too big. The pci.ids is about 1.2MB and it is text file, so with squashfs it archived to 200-250KB.\n\n> If we're going to change those, we should probably put some reasoning in the commit message for why this way is better than what's there.\n\nI propose this as alternative, so platform can decide whether to use  small and fast built-in implementation or full/custom pci.ids base.\nMain advantage of the pci.ids is that it contains device models, while built-in base only have vendors list."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> 9MB is too big.\n\nI suspect the hwdb is large on my development machine because it also contains all the USB devices in the world as well.  If it were just PCIe it should be the same size or smaller than pci.ids.  I'm not sure if we are able to get it to only have the PCIe content though, so that would be a reason to rule it out.\n\n> Main advantage of the pci.ids is that it contains device models, while built-in base only have vendors list.\n\nWhat do you mean by this?  I think `ID_MODEL_FROM_DATABASE` is the model information you're expecting."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> If I remember right (this was a long time ago) hwdb requires some initial first-boot startup step, which required a lot of BMC cpu on first boot.\n\nYes, it is possible that the hwdb.bin is created from a bunch of data elsewhere on first boot.  I'd think you could create that offline though.\n\n```\n$ equery b /etc/udev/hwdb.bin    \n * Searching for /etc/udev/hwdb.bin ... \n```\n\nSo gentoo doesn't believe it is owned by a particular package, which means it was created at runtime and not at build time.\n\nIt appears like `systemd-hwdb update` is what creates it via `/lib/systemd/system/systemd-hwdb-update.service`"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "There is this commit from 2014 which implies systemd-hwdb can support static building of hwdb.bin though: https://cgit.freedesktop.org/systemd/systemd/commit/?id=33488f19793dc0a86fdee27266c5319b5b78d695"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "> What do you mean by this?  I think `ID_MODEL_FROM_DATABASE` is the model information you're expecting.\n\nIt was about peci-pcie built-in base which is used today."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> 9MB is too big.\n\nI did a little experimentation with `systemd-hwdb update` which allows you to create the output in a separate root tree (using -r) and if we only include the PCIe class and device information it is a lot smaller.\n\n```\n-r--r--r-- 1 apwillia apwillia 4159420 Jun 24 06:28 hwdb.bin\n-rw-r--r-- 1 apwillia apwillia 1274465 Jun 24 06:28 pci.ids\n-r--r--r-- 1 apwillia apwillia 484680 Jun 24 06:28 hwdb.bin.xz\n-rw-r--r-- 1 apwillia apwillia 224104 Jun 24 06:28 pci.ids.xz\n```\n\npci-ids still wins out, so if we're only ever going to use it for this information that's probably the better approach from a purely size standpoint."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "> So gentoo doesn't believe it is owned by a particular package, which means it was created at runtime and not at build time.\n\nAnd what about pci.ids on your system? On my it is 'https://github.com/gentoo/hwids.git' which actually contains the pci.ids file from https://github.com/pciutils/pciids.git.\n\n> ~ equery b /usr/share/misc/pci.ids.gz\n>  * Searching for /usr/share/misc/pci.ids.gz ... \n> sys-apps/hwids-20201207 (/usr/share/misc/pci.ids.gz)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Yes, it does seem that Gentoo has the hwids package and it is used by a lot of other packages directly rather than going through the systemd-hwdb (probably because not everyone uses systemd).\n\nLooking at our Yocto tree, it seems like pciutils-ids already supplies this as well, but we might not be shipping in.\n\n/home/apwillia/local/builds/lf-build-bletchley/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/pciutils/3.7.0-r0/packages-split/pciutils-ids/usr/share/pci.ids.gz\n\nWe probably can just RDEPEND on pciutils-ids and not make our own recipe?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If there's a way to solve the large binary and first boot-generation issues, I don't have a strong opinion which way we should go.  I wasn't aware of that systemd patch;  Kinda neat they thought of that."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "As I recall there were 3 issues.   The cpu to rebuild, the USB, but also the runtime download of the latest upstream data taking space in the limited rwfs with different compression choices.\n\nWhat level of detail is really desirable in the inventory?   Should the lookup be moved to the client?  Would having just the class useful?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "> What level of detail is really desirable in the inventory?   Should the lookup be moved to the client?  Would having just the class useful?\n\nIn our system we intend to provide PCIe device name on Hardware Status page in webui, that's why we use pci.ids for lookup."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-extended/pci-ids/pci-ids_git.bb",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 0
        }
    ]
}