{
    "project": "openbmc/meta-facebook",
    "branch": "master",
    "id": "I1c376cfe4e74c6d74dc6de3af40cd009d7687f5f",
    "number": 37567,
    "subject": "meta-facebook: Service added to Set BMC time from Host",
    "owner": {
        "name": "Sumit Kumar",
        "email": "kumar.sumi@hcl.com",
        "username": "sumithcl2020"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/meta-facebook/+/37567",
    "hashtags": [],
    "createdOn": 1603285675,
    "lastUpdated": 1665685810,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1603285675,
            "reviewer": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1603285694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1603285701,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-meta/1467/"
        },
        {
            "timestamp": 1603286000,
            "reviewer": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1603290905,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-meta/1467/ : SUCCESS"
        },
        {
            "timestamp": 1603374708,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1603807005,
            "reviewer": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1604345501,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1604345501,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\nIs there a repository we can do this as real code rather than as bash scripts?  I'd really rather not see a whole bunch of shell scripts be the way we implement these kinds of functions because you can't do good error checking."
        },
        {
            "timestamp": 1604345507,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1604647863,
            "reviewer": {
                "name": "HCLOpenBMC",
                "email": "HCL_OpenBMC@hcl.com",
                "username": "HCLOpenBMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> Is there a repository we can do this as real code rather than as bash scripts?  I'd really rather not see a whole bunch of shell scripts be the way we implement these kinds of functions because you can't do good error checking.\n\nHello Patrick,\nWe have opted for bash scripts, because of the following reasons:\n1. Having a script to get time from host instead of source code will be easy to maintain and modify.\n2. We can support different commands in script for different platforms without modifying the source code.\n3. We have seen similar approach in other repository (phosphor-bmc-code-mgmt).\n\nHostTime Sync functionality can be implemented through source code in phosphor-time-manager service but we don't expect that, it will be allowed to have platform specific code in phosphor-time-manager.so we have implemented time sync with script"
        },
        {
            "timestamp": 1604656634,
            "reviewer": {
                "name": "HCLOpenBMC",
                "email": "HCL_OpenBMC@hcl.com",
                "username": "HCLOpenBMC"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > Is there a repository we can do this as real code rather than as bash scripts?  I'd really rather not see a whole bunch of shell scripts be the way we implement these kinds of functions because you can't do good error checking.\n> \n> Hello Patrick,\n> We have opted for bash scripts, because of the following reasons:\n> 1. Having a script to get time from host instead of source code will be easy to maintain and modify.\n> 2. We can support different commands in script for different platforms without modifying the source code.\n> 3. We have seen similar approach in other repository (phosphor-bmc-code-mgmt).\n> \n> HostTime Sync functionality can be implemented through source code in phosphor-time-manager service but we don't expect that, it will be allowed to have platform specific code in phosphor-time-manager.so we have implemented time sync with script\n\nsorry, comment from wrong id."
        },
        {
            "timestamp": 1604659326,
            "reviewer": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> Is there a repository we can do this as real code rather than as bash scripts?  I'd really rather not see a whole bunch of shell scripts be the way we implement these kinds of functions because you can't do good error checking.\n\nHello Patrick,\nWe have opted for bash scripts, because of the following reasons:\n1. Having a script to get time from host instead of source code will be easy to maintain and modify.\n2. We can support different commands in script for different platforms without modifying the source code.\n3. We have seen similar approach in other repository (phosphor-bmc-code-mgmt).\n\nHostTime Sync functionality can be implemented through source code in phosphor-time-manager service but we don't expect that, it will be allowed to have platform specific code in phosphor-time-manager.so we have implemented time sync with script"
        },
        {
            "timestamp": 1605055265,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1605055265,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 2:\n\n> 3. We have seen similar approach in other repository (phosphor-bmc-code-mgmt).\n\nFWIW we are planning on migrating these scripts to c++ someday.\n\n> HostTime Sync functionality can be implemented through source code in phosphor-time-manager service but we don't expect that, it will be allowed to have platform specific code\n\nPlatform specific code probably would not be allowed, no...but a \"feature\" that syncs time with the (or one of the) host(s), and pulls platform specific data from entity manager or a config file seems more than reasonable..."
        },
        {
            "timestamp": 1605055283,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1605418387,
            "reviewer": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > 3. We have seen similar approach in other repository (phosphor-bmc-code-mgmt).\n> \n> FWIW we are planning on migrating these scripts to c++ someday.\n> \n> > HostTime Sync functionality can be implemented through source code in phosphor-time-manager service but we don't expect that, it will be allowed to have platform specific code\n> \n> Platform specific code probably would not be allowed, no...but a \"feature\" that syncs time with the (or one of the) host(s), and pulls platform specific data from entity manager or a config file seems more than reasonable...\n\nHi Brad,\nFor each platform there is a different command to get time from host and subsequently the output will also be different, thus configuration option seems to be a similar approach as script.\nIn configuration file also we need to provide a command to get time from host and also the parsing logic to get the time from command output.\n\nWe can create a C++ executable having the same logic as script and we can call this executable from the service instead of a script."
        },
        {
            "timestamp": 1605533487,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 2:\n\n> For each platform there is a different command to get time from host and subsequently the output will also be different\n\nCan you elaborate?  Why would a vendor make the command (and its output) to get the time different on each of their platforms?  Do you mean vendor specific?\n\nAnyway, yes I agree - BMC implementations have lots of platform specific things.  But this is what tools like entity-manager are designed to solve.\n \n> We can create a C++ executable having the same logic as script and we can call this executable from the service instead of a script.\n\nThis wasn't really the goal behind my comment, so don't do this unless you think its a good idea."
        },
        {
            "timestamp": 1605533487,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1665685810,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "725670cdd34b6083fbed5125a01550c1f728f3ff",
            "parents": [
                "66b327f6b7b70c3ed3752ed89b9b18de463b3c36"
            ],
            "ref": "refs/changes/67/37567/1",
            "uploader": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "createdOn": 1603285675,
            "author": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "We follow https://chris.beams.io/posts/git-commit/ for commit messages and its 7 rules: \n\n\n    Separate subject from body with a blank line\n    Limit the subject line to 50 characters\n    Capitalize the subject line\n    Do not end the subject line with a period\n    Use the imperative mood in the subject line\n    Wrap the body at 72 characters\n    Use the body to explain what and why vs. how\n\nCan you rewrite the subject as 50 characters or less with a blank line after the subject and before the body?\n\nThanks!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/tiogapass/SetTimeBmc.sh",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/yosemitev2/SetTimeBmc.sh",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/bmc-set-time.service",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager_%.bbappend",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "recipes-fb/packagegroups/packagegroup-fb-apps.bb",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 65,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "91bc445a164eaabf99ee391db54e62919abdf6e4",
            "parents": [
                "66b327f6b7b70c3ed3752ed89b9b18de463b3c36"
            ],
            "ref": "refs/changes/67/37567/2",
            "uploader": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "createdOn": 1603807005,
            "author": {
                "name": "Sumit Kumar",
                "email": "kumar.sumi@hcl.com",
                "username": "sumithcl2020"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/tiogapass/SetTimeBmc.sh",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/yosemitev2/SetTimeBmc.sh",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager/bmc-set-time.service",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "recipes-phosphor/datetime/phosphor-time-manager_%.bbappend",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "recipes-fb/packagegroups/packagegroup-fb-apps.bb",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 71,
            "sizeDeletions": 0
        }
    ]
}