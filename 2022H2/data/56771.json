{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Icc71049cd844a4f7ba5def3f43e0d66d522c9bbe",
    "number": 56771,
    "subject": "Conditional verify certificate check in HttpClient",
    "owner": {
        "name": "AppaRao Puli",
        "email": "apparao.puli@intel.com",
        "username": "apuli1"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56771",
    "hashtags": [],
    "createdOn": 1661433461,
    "lastUpdated": 1662995806,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1661433461,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1661433563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661433563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1661434079,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49887/ : SUCCESS"
        },
        {
            "timestamp": 1661437922,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1661437996,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1661442401,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1661444393,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1661450490,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1661450554,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661450554,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1661450971,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1661451065,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49892/ : SUCCESS"
        },
        {
            "timestamp": 1661708229,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1661708283,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1661708847,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2: Code-Review-1"
        },
        {
            "timestamp": 1661713373,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1661723977,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1661724095,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1662978763,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1662995806,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "28d7e4700db38fab51b4969df4eee094f899d8cb",
            "parents": [
                "0442ef92689d7719c89474a4fc81fbdaca7a4a96"
            ],
            "ref": "refs/changes/71/56771/1",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1661433461,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We can NEVER check in something on master that doesn't verify certificates chains.  That would be an immediate CVE."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "I will update commit message and also clean up the patch a bit.\n\n\nI am currently working on implementing the \"Certificates\" & \"VerifyCertificate\" which are part of DMTF EventService schema. But for now, I disabled the certificate verification till it implemented.\n\nAlso as per DTMF redfish schema description, default value for \"VerifyCertificate\" is \"false\". So till it is implemented, We assume the default value as \"false\". But this code need some clean-up which i will do it.\n\nAs per \"VerifyCertificate\" schema description:\n\"This property shall indicate whether whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event. If this property is not supported by the service or specified by the client in the create request, it shall be assumed to be `false`.\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I will update commit message and also clean up the patch a bit.\n> \n> \n> I am currently working on implementing the \"Certificates\" & \"VerifyCertificate\" which are part of DMTF EventService schema. But for now, I disabled the certificate verification till it implemented.\n\nFYI, any codebase you do this in will have a security MITM vulnerability.  Just so you're aware, you shouldn't check this in anywhere, but feel free to use it for testing on your own machine.\n\n> \n> Also as per DTMF redfish schema description, default value for \"VerifyCertificate\" is \"false\". So till it is implemented, We assume the default value as \"false\".\n> But this code need some clean-up which i will do it.\n> \n> As per \"VerifyCertificate\" schema description:\n> \"This property shall indicate whether whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event. If this property is not supported by the service or specified by the client in the create request, it shall be assumed to be `false`.\"\n\n\nI wasn't aware of that, thanks for bringing it to my attention.  I think this is a conflict of project security principals (namely secure by default) against what the Redfish spec is saying.  I've asked for clarification from DMTF on what the intent of that is.\n\n\n\nFrom an OpenBMC perspective, lets just support the parameter as input from the user, and then I think this problem becomes moot."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Agree with your point. I modified the http client code in such a way that its passed from caller to http client and so that http client code is clean.\n\nAdd code in EventService to pass VerifyCertificate to client. In Event service code, Its set to default value as per redfish schema description."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Agree with your point. I modified the http client code in such a way that its passed from caller to http client and so that http client code is clean.\n> \n> Add code in EventService to pass VerifyCertificate to client. In Event service code, Its set to default value as per redfish schema description.\n\nI've discussed with DMTF, what's implemented here is not the intent of that parameter.  Please see the discussion on the Redfish repo for more information."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, in looking at this, there were a lot of bugs that I saw in the retry behavior.  My intent is to finish:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/56711\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/56735\n\nWhich would make this patch no longer required, but this is pretty simple, so lets get it cleaned up and merged."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Sure, I will clean this patch. Just an FYI:\n\nI will review other two patches by today"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "My patches are WIP, so there's no rush to review them (they're still pretty rough).  I just wanted to make you aware of them so you know there's a larger direction I'm looking at going here, and to get your opinion on it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Sure Ed, I will check and my opinion."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this branch needed?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Do you mean why sslConn check needed? If so, We would like to make sure setup SSL connection is successfully created. If not, state is set to sslInitFailed and and appropriate action (Terminate subscription) is taken care accordingly."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No, why is the if (!sslConn) waitAndRetry() branch needed?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can't this just be\n\nif (sslConn){\n   setupSSLConn();\n}\n\nand omit the useSSL variable entirely?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "It can't be relied on if(sslConn) {setupSSLConn() }, because during sslConn itself is set during connect. We tried( In previous patch sets where we discussed it) moving the setupSSLConn() to construction of ConnectionInfo but that did gave error. So we need to relay on useSSL flag to setup the connection and if SSLConn fails, It should return error."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 219,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Understood.  Please take a look at my patches that move these connection objects to the same model we have in http server, where connection objects destroy when they're completed or errored instead of restarting.  I think that saves quite a bit of code."
                },
                {
                    "file": "include/ssl_key_handler.hpp",
                    "line": 510,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Remove.  This looks like debug code."
                },
                {
                    "file": "include/ssl_key_handler.hpp",
                    "line": 510,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "This is currently breaking the http client SSL connections with certificate error. So added it as quick fix. I will clean this up."
                },
                {
                    "file": "include/ssl_key_handler.hpp",
                    "line": 510,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "include/ssl_key_handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -26
                }
            ],
            "sizeInsertions": 73,
            "sizeDeletions": 27
        },
        {
            "number": 2,
            "revision": "adc2ba87b31d700d2e7e7f2965f07d2c8985448c",
            "parents": [
                "0442ef92689d7719c89474a4fc81fbdaca7a4a96"
            ],
            "ref": "refs/changes/71/56771/2",
            "uploader": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "createdOn": 1661450490,
            "author": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As written, this patch\nA. doesn't meet the intent of the redifsh spec.  See discussion on the github about what VerifyCertificate is supposed to represent for more details.\nB. Causes a security issue.  SSL verification is set by a user per-subscription, but the connection pooling is currently global for all of bmcweb, so a simple way to bypass verification would be\n\n1. Create a subscription with VerifyCertificate = false\n2. Send a test event.\n3. Create a subscription to the same url with VerifyCertificate = true\n4. send a test event.\n\nThe second event will be sent without certificate verification, which a security problem."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "should've read \"which is a security problem\"\n\ndidn't mean to open this as resolved."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Hmm Yeah, I see the what you are saying.\n\nI am working on adding support for VerifyCertificate so that user can 1) Upload certificate per individual subscriptions 2) Can enabled/disable verifyCertificate as per need.\n\nSince that VerifyCertificate is not implemented fully in bmcweb, It uses the default value as \"false\" which is what done here. \n\n\n> A. doesn't meet the intent of the redifsh spec.  See discussion on the github about what VerifyCertificate is supposed to represent for more details.\n\nI referred the Redfish schema: https://redfish.dmtf.org/schemas/EventDestination_v1.xml\n\n<Property Name=\"VerifyCertificate\" Type=\"Edm.Boolean\">\n<Annotation Term=\"OData.Permissions\" EnumMember=\"OData.Permission/ReadWrite\"/>\n<Annotation Term=\"OData.Description\" String=\"An indication of whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event.\"/>\n<Annotation Term=\"OData.LongDescription\" String=\"This property shall indicate whether whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event. If this property is not supported by the service or specified by the client in the create request, it shall be assumed to be `false`.\"/>\n</Property>\n\nCan you please point me to github link which you are talking? May be i am missing something here."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Hmm Yeah, I see the what you are saying.\n> \n> I am working on adding support for VerifyCertificate so that user can 1) Upload certificate per individual subscriptions 2) Can enabled/disable verifyCertificate as per need.\n> \n> Since that VerifyCertificate is not implemented fully in bmcweb, It uses the default value as \"false\" which is what done here. \n\nVerifyCertificate = False does not mean \"Do no verification on the certificate\" it means \"don't verify the certificate against the subscriptions certificate list\" which are very different.  The latest spec clarifies that.\n\nOtherwise, we would have a situation where we would default to insecure, which is against our security principles.\n\n> \n> \n> > A. doesn't meet the intent of the redifsh spec.  See discussion on the github about what VerifyCertificate is supposed to represent for more details.\n> \n> I referred the Redfish schema: https://redfish.dmtf.org/schemas/EventDestination_v1.xml\n> \n> <Property Name=\"VerifyCertificate\" Type=\"Edm.Boolean\">\n> <Annotation Term=\"OData.Permissions\" EnumMember=\"OData.Permission/ReadWrite\"/>\n> <Annotation Term=\"OData.Description\" String=\"An indication of whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event.\"/>\n> <Annotation Term=\"OData.LongDescription\" String=\"This property shall indicate whether whether the service will verify the certificate of the server referenced by the Destination property prior to sending the event. If this property is not supported by the service or specified by the client in the create request, it shall be assumed to be `false`.\"/>\n> </Property>\n\nI helped write the addendum to that description that makes that more clear.  It will likely be released in the next version of the spec.  Please take a look at the in-development tree.\n\n> \n> Can you please point me to github link which you are talking? May be i am missing something here.\n\nhttps://github.com/dmtf/redfish contains the new language."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/event_service_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                },
                {
                    "file": "include/ssl_key_handler.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": -3
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 51,
                    "deletions": -32
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 38
        }
    ]
}