{
    "project": "openbmc/phosphor-objmgr",
    "branch": "master",
    "id": "I1083c027ab12238249cffc67fb29a8ffef6baf83",
    "number": 58214,
    "subject": "add Associations endpoints change delay timer",
    "owner": {
        "name": "Pawe\u0142 Kallas",
        "email": "pawel.kallas@intel.com",
        "username": "randomnezz"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-objmgr/+/58214",
    "hashtags": [],
    "createdOn": 1666788973,
    "lastUpdated": 1669846032,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1666788973,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1666790435,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1666790435,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1666790815,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/54148/ : SUCCESS"
        },
        {
            "timestamp": 1667335738,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667384803,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667387544,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 1:\n\n(8 comments)"
        },
        {
            "timestamp": 1667403402,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1667466320,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1667485830,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1667486031,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1667486031,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1667486414,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/54585/ : SUCCESS"
        },
        {
            "timestamp": 1667487894,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1667547690,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 2:\n\n(7 comments)"
        },
        {
            "timestamp": 1667547939,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1667548010,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1667548010,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1667548193,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1667548389,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/54675/ : SUCCESS"
        },
        {
            "timestamp": 1668725118,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1669747753,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669798244,
            "reviewer": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1669846023,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 3: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1669846032,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "78b6a365a08f7f3ec97362f83a49890c25f895a2",
            "parents": [
                "48248203c6cef3c90e8bcbd8e1c424fc0f0d973c"
            ],
            "ref": "refs/changes/14/58214/1",
            "uploader": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "createdOn": 1666788973,
            "author": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "It would be useful to explain 'before' and 'after' behavior more clearly. It took me some time to understand, that what you're referring to is updating \"endpoints\" array."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "+1"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "What is your actual use case that adds over 100 association endpoints at once?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Pawe\u0142 Kallas",
                        "email": "pawel.kallas@intel.com",
                        "username": "randomnezz"
                    },
                    "message": "One of Intel's services is actually creating over 4000 Sensor objects. They are loaded from memory at startup (or service restart), so they are created/removed at the same time. Each sensor needs Association to be listed on bmcweb and mapped to HW."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "So you aren't talking about them all coming from the createAssociation() function in d-bus sensors, which does one at a time?  What application is it then?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Pawe\u0142 Kallas",
                        "email": "pawel.kallas@intel.com",
                        "username": "randomnezz"
                    },
                    "message": "I updated the commit message, I hope it is more clear now. Our service is doing something similar to dbus-sensors, i.e. adding many interfaces and spamming Interfaces Added signal. When I wrote \"at the same time\" I meant they are created on our service start, but they are still created one by one.\n> What application is it then?\nUnfortunately, I can't share details about our application yet."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 3,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "It's better to include the most specific header for given task at hand. (io_context.hpp, ***_timer.hpp etc..)"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 3,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Dependency on posix_time should be removed when timer type will be changed."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Still not removed"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "What if association was removed in the meantime (delay time) ? In other words - what if ifaces[assocPath] is empty by then.. will the logic behave correctly?"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Pawe\u0142 Kallas",
                        "email": "pawel.kallas@intel.com",
                        "username": "randomnezz"
                    },
                    "message": "There is currently no code that removes members from \"ifaces\". If there is one added it would have to take care of removing interface from dbus. For now, this function won't do anything in such case."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "NIT\n\nThis looks like function is just an encapsulation from code previously inlined in other places, right?\n\nI'm not the maintainer, so I don't know what style of PR-s are expected, but usually changes like yours can be divided into handy series:\n\n1..n-1) Refactor of existing code without changing behavior to prepare 'pieces' to be used or modified later.\nn...) Actual changes in behavior.\n\nIt makes it so much easier to review if refactoring is not mixed with new/changed behavior. HOWEVER - I'm not familiar with the code, so I can only blame myself for this kind of problems:)"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "in this case I'm OK with it being in this commit."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "boost::asio::deadline_timer is prone to error on systems where system time might change asynchronously. In BMC it's quite common for time to be updated on start with NTP or other. In case system time is updated before timer expiration it might 'fire' much later than expected, or never.\n\nSome background here:\nhttps://stackoverflow.com/questions/14845682/boostdeadline-timer-can-fail-when-system-clock-is-modified\n\nYou can use https://www.boost.org/doc/libs/1_80_0/doc/html/boost_asio/reference/steady_timer.html instead"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "std::map<T,K>::contains seems more verbose,\n\nhowever - you do a lookup twice below ({timers[assocPath]}), which is not optimal. You could replace this 'if' condition with std::map<T,K>::find, and use resultant iterator further to reference the entry.\n\nHowever, see further comment below with suggestion on how to make implementation less clunky.."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "A common associations usecase is adding the chassis/sensors one from dbus-sensors, which gets added one at a time, so the mapper would get a single change from each InterfacesAdded signal.\n\n\nSince I don't think your change recognizes the change in the endpoints size, it would add them to the chassis endpoints as normal until it hit 100, and start creating a 1s delay for each one added after that, even if they came in substantially later and just 1 at a time still.\n\nSo unless I'm missing something, maybe there's a way to do it that helps both cases: when the mapper is getting spammed with IA signals, and when it finds lots of endpoints on the initial introspect."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "for the life of me, I'm not coming up with anything better.\nAlso, I see that the check for delayedUpdatePaths prevents multiple timers for the same path."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Keeping map of timers in static variable is quite counterintuitive for me. Perhaps you could keep `std::set<std::string> delayedUpdates` to properly name and track active delayed association updates.\n\nTimer could be then created as unique_ptr (or shared_ptr) on stack, and bound to async_wait handler in capture list."
                },
                {
                    "file": "src/associations.cpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "https://godbolt.org/z/M77zGGnrK example"
                },
                {
                    "file": "src/associations.cpp",
                    "line": 61,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/processing.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "src/processing.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -5
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 98,
                    "deletions": -55
                },
                {
                    "file": "src/associations.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -8
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -22
                },
                {
                    "file": "src/test/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -22
                },
                {
                    "file": "src/test/name_change.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -4
                },
                {
                    "file": "src/test/interfaces_added.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 232,
            "sizeDeletions": 118
        },
        {
            "number": 2,
            "revision": "04ecfd940fe205ae7cf9f72811664eb340946fce",
            "parents": [
                "48248203c6cef3c90e8bcbd8e1c424fc0f0d973c"
            ],
            "ref": "refs/changes/14/58214/2",
            "uploader": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "createdOn": 1667485830,
            "author": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "One minor leftover to be addressed"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/processing.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "src/processing.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -5
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 101,
                    "deletions": -55
                },
                {
                    "file": "src/associations.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -8
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -22
                },
                {
                    "file": "src/test/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -22
                },
                {
                    "file": "src/test/name_change.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -4
                },
                {
                    "file": "src/test/interfaces_added.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 239,
            "sizeDeletions": 118
        },
        {
            "number": 3,
            "revision": "5b4357da283bb924e6ce8e94f594c42b17eda39c",
            "parents": [
                "48248203c6cef3c90e8bcbd8e1c424fc0f0d973c"
            ],
            "ref": "refs/changes/14/58214/3",
            "uploader": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "createdOn": 1667547939,
            "author": {
                "name": "Pawe\u0142 Kallas",
                "email": "pawel.kallas@intel.com",
                "username": "randomnezz"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "My stylistic inputs were addressed. "
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "I think I'm ok with this change but one question to explore first...\n\nShould we consider deferring all endpoint updates and not just once we reach the 100 endpoint threshold?  Would that remove a lot of unnecessary context switches?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pawe\u0142 Kallas",
                        "email": "pawel.kallas@intel.com",
                        "username": "randomnezz"
                    },
                    "message": "I believe common Associations use case is having one or a few endpoints. Creating timers and delaying those \"small\" interfaces could actually decrease performance.\nThis 100 as threshold was chosen arbitrarily, it's roughly the number of endpoints that would take more than 1 second when processed one by one on my system. I am open to change this threshold or the timeout value, but I think we shouldn't delay all interfaces."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Brad Bishop",
                        "email": "bradleyb@fuzziesquirrel.com",
                        "username": "bradbishop"
                    },
                    "message": "I'm not sure how less dbus traffic and less context switches could decrease performance.  It would certainly increase latency, but I sort of wonder how much code there is that would even notice or care about that...\n\nwith that said, what you have here works - someone else can pursue something more general if they want."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/processing.hpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                },
                {
                    "file": "src/processing.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -5
                },
                {
                    "file": "src/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 100,
                    "deletions": -55
                },
                {
                    "file": "src/associations.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -8
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -22
                },
                {
                    "file": "src/test/associations.cpp",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": -22
                },
                {
                    "file": "src/test/name_change.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -4
                },
                {
                    "file": "src/test/interfaces_added.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 238,
            "sizeDeletions": 118
        }
    ]
}