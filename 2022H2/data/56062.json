{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I5c860c01534e7d5b1a37c95f75be5b3c1f695816",
    "number": 56062,
    "subject": "Aggregation: Prepare for routing requests",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56062",
    "hashtags": [],
    "createdOn": 1659386389,
    "lastUpdated": 1661293114,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1659386389,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1659386432,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659386432,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1659386760,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48152/ : FAILURE"
        },
        {
            "timestamp": 1659386964,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1659387012,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659387012,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1659387152,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1659387508,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48153/ : SUCCESS"
        },
        {
            "timestamp": 1659462795,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(11 comments)"
        },
        {
            "timestamp": 1659471808,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1659482753,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1659482844,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659482844,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1659483338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48244/ : SUCCESS"
        },
        {
            "timestamp": 1659485976,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(8 comments)"
        },
        {
            "timestamp": 1659541575,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(8 comments)"
        },
        {
            "timestamp": 1659546304,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1659556579,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1659565155,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1659565170,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1659565187,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659565188,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1659565619,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1659565677,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659565678,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48334/ : ABORTED"
        },
        {
            "timestamp": 1659565683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1659566177,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48335/ : SUCCESS"
        },
        {
            "timestamp": 1659566857,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1659569867,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 6:\n\n(3 comments)"
        },
        {
            "timestamp": 1659633105,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1659633167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659633167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1659633732,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48510/ : SUCCESS"
        },
        {
            "timestamp": 1659633849,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1659634194,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1659634232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659634232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1659634930,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48511/ : SUCCESS"
        },
        {
            "timestamp": 1659640037,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1659645665,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1659647652,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1660194389,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1660194944,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(8 comments)"
        },
        {
            "timestamp": 1660592420,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1660592454,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660592455,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1660592835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/49163/ : FAILURE"
        },
        {
            "timestamp": 1660594278,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1660594297,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660594298,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1660595106,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49168/ : SUCCESS"
        },
        {
            "timestamp": 1660596199,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 10:\n\n(7 comments)"
        },
        {
            "timestamp": 1660679177,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1660755304,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1660843146,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 11: Patch Set 10 was rebased."
        },
        {
            "timestamp": 1660843190,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660843191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1660843696,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49387/ : SUCCESS"
        },
        {
            "timestamp": 1660850790,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1660851157,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1660852400,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1660852463,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1660852595,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1660867844,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 12: Patch Set 11 was rebased."
        },
        {
            "timestamp": 1660867862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660867862,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1660868064,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 13: Commit message was updated."
        },
        {
            "timestamp": 1660868344,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1660868367,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49434/ : SUCCESS"
        },
        {
            "timestamp": 1660917784,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1660920985,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1660921031,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660921032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1660921090,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/49515/ : FAILURE"
        },
        {
            "timestamp": 1660921891,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1660921925,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660921925,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1660922417,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49518/ : SUCCESS"
        },
        {
            "timestamp": 1661199050,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 16: New patch set was added with same tree, parent, and commit message as Patch Set 15."
        },
        {
            "timestamp": 1661199072,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1"
        },
        {
            "timestamp": 1661199074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661199074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1661199581,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49593/ : SUCCESS"
        },
        {
            "timestamp": 1661291454,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 17: Patch Set 16 was rebased."
        },
        {
            "timestamp": 1661291480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661291480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1661291694,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17: Code-Review+2\n\n(3 comments)"
        },
        {
            "timestamp": 1661292047,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49734/ : SUCCESS"
        },
        {
            "timestamp": 1661293114,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "57e1a52e07bb6cc94863c9b9d13f195c16d074c8",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659386389,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 125,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 35
        },
        {
            "number": 2,
            "revision": "5b2e6765e809089033b63aa3a3518d92febda9f0",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659386964,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 221,
            "sizeDeletions": 35
        },
        {
            "number": 3,
            "revision": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659387152,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Partial review."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why did this need to move?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Ultimately I was trying to limit the amount of code that I needed to account for due to #ifdef's.\n\nIt did not seem like it mattered in what order we perform this check and the \"OData-Version\" check.  I moved this one first because I only wanted to write the \"OData-Version\" to the header if we're not supposed to forward a request to a satellite BMC."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I reverted this in patchset 4."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What am I looking at here?  Doesn't anything within the redfish tree require the OData-Version headers?  Presumably because we're eventually going to rewrite them, it doesn't really hurt to have our parameters here?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I thought we wanted completely to avoid writing anything to the response if it was later going to be overwritten by the response from the satellite BMC?  If that's not the case then I can restore this to its previous behavior."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've preemptively restored this in patchset 4"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I thought we wanted completely to avoid writing anything to the response\n\nGenerally this rule applies to things where we expect differences between handlers;  Everything within the Redfish tree should be setting Odata.Version, so I have a minor preference for simpler code here, but it's not strong.\n\nThe main places we tend to get bugs are when people overwrite status codes, and overwrite json objects."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Understood.  I'm going to mark this as resolved now that I've reverted the initial change."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Having this variable inside the ifdef makes this code really hard to read.  Is it required?  Couldn't we just return on line 48 and get the same result?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I don't think we can return early at line 48 because we need to process the query params at the end of this function.\n\nIt is awkward with the variable inside of the #ifdef.  I can clean this up a lot by introducing the variable outside of the #ifdef.  It'll also get cleaner if you confirm in the above thread that it is alright to write to the response when we are going to later overwrite it with the response from the satellite BMC."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How about this?\n\nbool needToCallHandlers = true;\n\n#ifdef BMCWEB_ENABLE_REDFISH_AGGREGATION\n    needToCallHandlers = RedfishAggregator::getInstance().beginAggregation(req, asyncResp) !=\n        Result::NoLocalHandle;\n    \n        // The request should be forwarded to a satellite BMC.  Don't write\n        // anything to the asyncResp since it will get overwritten later.\n#endif\n\n    // If this isn't a get, no need to do anything with parameters\n    if (req.method() != boost::beast::http::verb::get)\n    {\n        return needToCallHandlers;\n    }\n\n    delegated = query_param::delegate(queryCapabilities, *queryOpt);\n    std::function<void(crow::Response&)> handler =\n        asyncResp->res.releaseCompleteRequestHandler();\n    asyncResp->res.setCompleteRequestHandler(\n        [&app, handler(std::move(handler)),\n         query{*queryOpt}](crow::Response& resIn) mutable {\n        processAllParams(app, query, handler, resIn);\n    });\n\n    return needToCallHandlers;\n\n\nI think it gives the same logic, but removes a bunch of ifdefs, and makes the double negative on the bool go away.\n\nWDYT?"
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> I think it gives the same logic, but removes a bunch of ifdefs, and makes the double negative on the bool go away.\n> \n> WDYT?\nI was really wanting to avoid adding any code outside of #ifdef's, but I think it doing so just makes everything so much cleaner.  I'll implement your suggestion."
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Unintentional copy."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "It was intentional.  I wanted to end up with boost::urls::segments instead of boost::urls::segments_view because segments allow me to perform array style lookup while segments_view requires using an iterator.  I wasn't able to get boost::urls::segments from boost::urls::url_view so that's why I made this copy."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "..... I'm not quite following, and would really prefer we not copy.  Even if we have to do iterator++; 3 times, that seems better than making a complete copy, although it really surprises me that there's this limitation in boost url."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Even if we have to do iterator++; 3 times, that seems better than making a complete copy,\nI can go that route, but boost::urls::segments_view is read only so I will not be able to normalize the path and simplify the comparisons as mentioned below https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56062/comments/6fa9dfe1_513e1873.\n\nWhat if just create a vector of strings to represent up to the first 5 segments?\n\n> although it really surprises me that there's this limitation in boost url.\nI'm possible I'm not doing it correctly, but this is the only method I've been able to come up with to create boost::urls::segments when starting with boost::urls::url_view."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Even if we have to do iterator++; 3 times, that seems better than making a complete copy,\n> I can go that route, but boost::urls::segments_view is read only so I will not be able to normalize the path and simplify the comparisons as mentioned below https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56062/comments/6fa9dfe1_513e1873.\n> \n> What if just create a vector of strings to represent up to the first 5 segments?\n\nGroan... I didn't think about that.  Yeah, normalization requires the copy, and is probably worth it.\n\nSure if you wanted a string array, that would work too.\n\n> \n> > although it really surprises me that there's this limitation in boost url.\n> I'm possible I'm not doing it correctly, but this is the only method I've been able to come up with to create boost::urls::segments when starting with boost::urls::url_view."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> Sure if you wanted a string array, that would work too.\nI'm going to opt for that since I ultimately need strings anyway, I can remove this initial copy, and I'll still get to normalize the path."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 247,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we normalize these two options first?  something like\n// change checks\nif (thisUrl.segments.back() == \"/\"){\n   // I think this API exists?\n   thisUrl.segments().pop_back();\n}"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Yeah that general idea is supported by the API and normalizing would make things waaaay easier to deal with.  I assumed there was a reason the URI had had not been previously normalized so I was trying to preserve it as is.  If that's not a concern then I'll add normalization to make this easier to follow."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "it\u2019s not normalized because there\u2019s literally one use case where ending with a / has to return different behavior than without a /.  otherwise we would\u2019ve fixed this in the core long ago."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "ACK.  I'll normalize and clean up the comparisons."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've normalized and cleaned up the comparisons.  That might be temporary though.  It directly depends on the outcome of this thread https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56062/comments/a9eabfe1_d33c9cc5.  \n\nI'll leave this thread open until that one is resolved."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "That thread was resolved by creating an array of strings to represent the segments.  That allowed me to still normalize the path and simplify the comparisons."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 253,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Possible nullptr dereference.  Range check your requests please."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 253,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I do check it.  The \"segments.size() == 4\" gets checked before \"segments[3].empty()\""
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 253,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes you do....  ignore.  I was reviewing quickly and missed it."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Aren't there several things in the ServiceRoot definition that aren't Collections?  Hardcoding update service here seems error prone."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "There definitely are, however the later patch that implements aggregating collections will ignore responses that do not contain a \"Members\" array so that's enough to catch false positives.  UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n\nThis is ultimately the right way to handle determining what is and isn't a collection https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  When that's finished then it will provide a more reliable method of determining what is and isn't a collection.  The hard coding can go away."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> There definitely are, however the later patch that implements aggregating collections will ignore responses that do not contain a \"Members\" array so that's enough to catch false positives. \n\nACK.\n\n> UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n\nI'm not following this.  Aren't there other collections that might exist 2 levels deep?\n\n> \n> This is ultimately the right way to handle determining what is and isn't a collection https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  When that's finished then it will provide a more reliable method of determining what is and isn't a collection.  The hard coding can go away.\n\nACK."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n> I'm not following this.  Aren't there other collections that might exist 2 levels deep?\nThere are some other collections that exist 2 or more levels deep, but I don't think we'd want to aggregate those.  A number of them exist within another collection (e.g. Sensors under a Chassis).  Roles and Accounts exist under Account Service.  I figured we'd need to implement some special handling if we want to correctly enable satellite Roles and Accounts."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n> > I'm not following this.  Aren't there other collections that might exist 2 levels deep?\n> There are some other collections that exist 2 or more levels deep, but I don't think we'd want to aggregate those.\n\nWhy not?\n\n>  A number of them exist within another collection (e.g. Sensors under a Chassis).  Roles and Accounts exist under Account Service.  I figured we'd need to implement some special handling if we want to correctly enable satellite Roles and Accounts.\n\nAgreed, Roles and Accounts is weird, and probably shouldn't be aggregated at all, but I'd much rather we make a list of \"things that don't make sense to aggregate\" and then just aggregate all the rest.  That seems far less brittle than an allow list."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> I'd much rather we make a list of \"things that don't make sense to aggregate\" and then just aggregate all the rest.  That seems far less brittle than an allow list.\nI'm not sure I agree that an allow list is that brittle.  It's certainly not preferable for long term viability, but there's a better solution for that in the pipeline.\n\nWe'll catch /redfish/v1/<not collection>/ by virtue of the later aggregating collections patch that will ignore \"collection\" responses that don't include a Members array.  We're really just concerned about URIs that deviate from the general form of /redfish/v1/<collection>/<id>.\n\nI think a block list would become a massive headache and it might even be more brittle.  We can't individually identify for certain if a request is for a collection.  It wouldn't be sufficient for the block list to just contain the non-top level collections that we don't want to aggregate.  We would end up with a massive number of false positives.  \n\nLet's say we have a URI like /redfish/v1/Chassis/Phony.  It doesn't have a prefix so we know it's not for a satellite resource.  Phony doesn't show up in the list of blocked collections so we'd send the request to the satellite.\n\nAnother consideration is a block list would be much larger than an allow list.  That could introduce significant latency due to all of the additional string comparisons."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > I'd much rather we make a list of \"things that don't make sense to aggregate\" and then just aggregate all the rest.  That seems far less brittle than an allow list.\n> I'm not sure I agree that an allow list is that brittle.  It's certainly not preferable for long term viability, but there's a better solution for that in the pipeline.\n> \n> We'll catch /redfish/v1/<not collection>/ by virtue of the later aggregating collections patch that will ignore \"collection\" responses that don't include a Members array.\n\nbut for say, /redfish/v1/Facilities that the bmc doesn't implement, we won't have a \"members\" to check, right?\n\n>  We're really just concerned about URIs that deviate from the general form of /redfish/v1/<collection>/<id>.\n> \n> I think a block list would become a massive headache and it might even be more brittle.  We can't individually identify for certain if a request is for a collection.  It wouldn't be sufficient for the block list to just contain the non-top level collections that we don't want to aggregate.  We would end up with a massive number of false positives.\n> \n> Let's say we have a URI like /redfish/v1/Chassis/Phony.  It doesn't have a prefix so we know it's not for a satellite resource.  Phony doesn't show up in the list of blocked collections so we'd send the request to the satellite.\n\nACK.  The above makes sense to me.\n\n\n> \n> Another consideration is a block list would be much larger than an allow list.  That could introduce significant latency due to all of the additional string comparisons.\n\nOne thing I realized is that UpdateService needs explicit handling right?  The elements within the collection needs special handling to support the HttpPushURI I think?  Is the thing here that we just need explicit code for in the future, and this hardcoded bit goes away?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > > I'd much rather we make a list of \"things that don't make sense to aggregate\" and then just aggregate all the rest.  That seems far less brittle than an allow list.\n> > I'm not sure I agree that an allow list is that brittle.  It's certainly not preferable for long term viability, but there's a better solution for that in the pipeline.\n> > \n> > We'll catch /redfish/v1/<not collection>/ by virtue of the later aggregating collections patch that will ignore \"collection\" responses that don't include a Members array.\n> but for say, /redfish/v1/Facilities that the bmc doesn't implement, we won't have a \"members\" to check, right?\nRight.  /redfish/v1/Facilities is not a collection, but it'll get forwarded like it is one.  However, when we process the response we just need to make sure the response has a \"Members\" array.  It won't since it's not a collection and that'll be our cue that we should ignore the response.\n\nIt's a slight issue that we send the request in the first place, but for the most part I think it's unavoidable until that patch I linked earlier in the thread where we'll be able to generate a list of all valid collections at runtime.  We could hard code that list ourselves, but we don't want to go down that road as discussed before.\n\n> One thing I realized is that UpdateService needs explicit handling right?  The elements within the collection needs special handling to support the HttpPushURI I think?  Is the thing here that we just need explicit code for in the future, and this hardcoded bit goes away?\nI think you're referring to this discussion https://discord.com/channels/775381525260664832/855566794994221117/991035841633718395?  We wouldn't have to do anything special for HttpPushURI since it's only supposed to work on the local BMC.  We'd have to do something special for MultipartHttpPushUri whenever support for that is added.  The handling for that might not even go in this aggregation flow.  So yes we'll need explicit code for it in the future, but I think the UpdateService hard coding will go away"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> It won't since it's not a collection and that'll be our cue that we should ignore the response.\n\nAh, I didn't realize we were relying on the other systems response.  Sure, this seems somewhat reasonable.\n\n> It's a slight issue that we send the request in the first place\n\nAgreed, and agree with the conclusion.  ACK."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Maybe an enum would be better here?  false and true aren't very descriptive, and having a tristate seems a lot more readable\n\nSomething like\n\nenum class Result {\n    AggregationStarted,\n    AggregationStartedBmcStillNeeded,\n    AggregationNotRequired,\n}\n\n?  \n\n\nThose names are kinda lame, but you get the idea."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "An enum would be more descriptive, but it's not really a tristate.  There are three paths like you mention, but really there are only two end results: do or don't handle request locally.  \"AggregationStartedBmcStillNeeded\" and \"AggregationNotRequired\" would still be handled the same way by whatever calls beginAggregation().\n\nIn future patches we will call the forward request or forward collection request methods before we actually hit these return statements.\n\nIf still prefer an enum then I think it should just be something like \"LocalHandle\", \"NoLocalHandle\".  Either way, for an enum are you suggesting I would just have this function return the enum itself instead of the bool?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> An enum would be more descriptive, but it's not really a tristate.  There are three paths like you mention, but really there are only two end results: do or don't handle request locally.  \"AggregationStartedBmcStillNeeded\" and \"AggregationNotRequired\" would still be handled the same way by whatever calls beginAggregation().\n> \n> In future patches we will call the forward request or forward collection request methods before we actually hit these return statements.\n> \n> If still prefer an enum then I think it should just be something like \"LocalHandle\", \"NoLocalHandle\".  Either way, for an enum are you suggesting I would just have this function return the enum itself instead of the bool?\n\nI still would like the enum, even if it's two state, as it makes this code more readable.  bool is error prone for things that aren't \"this is an error\""
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> I still would like the enum, even if it's two state, as it makes this code more readable.  bool is error prone for things that aren't \"this is an error\"\nAlright no problem.  I've added an enum and now we return the enum instead of the bool.  Let me know if this looks acceptable."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 266,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LGTM"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "how can we avoid all this special casing?  It seems fairly brittle in that it's not coming from the standard.  As a perfect example, FirmwareInventory wasn't added to the standard until later."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "The way will be when this patch is completed https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  At that point we'll always be able to know what the collections are without having to implement all of this special hard coding."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 273,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "common error #12."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I didn't think I was violating that error because I'm making sure the segment begins with \"aggregated\" rather than checking if find() returns true like in that example.  I'll just switch to std::string::starts_with()."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what is the device is fooaggregated_node ? Won't this code fail?\n\nI suspect you want boost::starts_with, then to set pos by hand."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "No it would handle it correctly if seg4 is \"fooaggregated_node\".  find(\"aggregated\") returns the starting position of \"aggregated\" so for that example it would be 3.  pos can only be 0 when \"aggregated\" appears at the start of the string."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, good point, but I'm still going to hold the position that starts_with declares your intent better, and it's what we should use here.  std::string::starts_with I'm pretty sure is what we should be doing."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 331,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "That's fine, I've changed these instances of find() to starts_with()."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 32,
                    "deletions": -6
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 221,
            "sizeDeletions": 35
        },
        {
            "number": 4,
            "revision": "e45eae78af8c563fb5b2bdfb11641070bb375d05",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659482753,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 126,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 29
        },
        {
            "number": 5,
            "revision": "f11723426fe3ec13aa48f262146ad48cdf9b7495",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659565155,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 219,
            "sizeDeletions": 29
        },
        {
            "number": 6,
            "revision": "298e877b87005e607fc5b2c4bce6846e31bcb2fa",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/6",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659565619,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 29
        },
        {
            "number": 7,
            "revision": "c12810a2a40108e66d9bb22829b8e5c8ab53dbe3",
            "parents": [
                "4c7d4d33a7c5697460f4bc57015551f599fc6f54"
            ],
            "ref": "refs/changes/62/56062/7",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659633105,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 221,
            "sizeDeletions": 31
        },
        {
            "number": 8,
            "revision": "179e26aa447c503310a45b26c6c1209d93aeeae4",
            "parents": [
                "81584abe2616373033281ab2ec75407fc50306d1"
            ],
            "ref": "refs/changes/62/56062/8",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1659634194,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Haven't reviewed the latest;  Will try to get to it today or tomorrow."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looking pretty good."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't look used anymore?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 251,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Yeah I just missed removing that.  When I changed back to using strings.  It's gone now."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 265,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, I think this can be\n\nsegments.emplace_back(*it));\n\nor if that doesn't work\n\nsegments.emplace_back(std::string_view(it->data(), it->size()));\n\n\nBoth will prevent the string copy."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 265,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 277,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Duplicate?  Maybe make this a real example?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 277,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "That was a leftover from when I wasn't sanitizing the path before parsing it.  I likely intended to delete the entire line and instead only deleted the trailing slash.  I've changed it to an example path."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We can review here or in my review, but I don't want to continue the pattern of allowing easy hardcoding of these things.  I can live with something temporary while we discuss the other patch so long as we're in agreement that this needs to change in short order after merge."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I think that's acceptable to unblock these patches.  That means the temporary solution is there will be at most one satellite BMC and it will be assigned the prefix \"aggregated0\".\n\nThat will be replaced by something like https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56340 where the prefixes will be not be hardcoded and be as predictable."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Do we have a conclusion in this thread?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep.  This patchset can use aggregated, so long as we have agreement  that something resembling https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56340 follows it up in the next week before people pull it in and start hardcoding ids"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 317,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done.  Patchset now uses a fixed, random-looking number."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 337,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Do we need to make string copies of all these?  at the very least can we use string_view?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 337,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Actually all of those can just go away.  I meant to get rid of those by changing the later conditionals to use segments[] directly.  I've removed them."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 347,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is there a way to deduplicate this a little with 310?  we already do most of these comparisons up there, and it looks like the logic could be combined?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 347,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've created a singular function which checks if the provided path is associated with one of the collections under UpdateService.  I now call that function to performs the checks in the locations you pointed out."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 348,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "as written this needs to be starts_with(\"aggregated_\") (notice the extra underscore) right?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 348,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "No because the prefix will be \"aggregated0_\".  In this location we're only checking if the request is for an aggregated resource.  We'll check if the entire prefix is known later in the flow after we retrieve the config information from D-Bus."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 348,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 31
        },
        {
            "number": 9,
            "revision": "766e47b4bf0df9f792c18fe47ff344bf765106a9",
            "parents": [
                "5c9fb2d6a1cddabc22af7603f11efd2850a05a80"
            ],
            "ref": "refs/changes/62/56062/9",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1660592420,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 225,
            "sizeDeletions": 31
        },
        {
            "number": 10,
            "revision": "cc34ff0910047ccdcb559c7dc3cb1201f138fc91",
            "parents": [
                "c21c64b6523d882c927c0e3e29d65c364b3aa1d5"
            ],
            "ref": "refs/changes/62/56062/10",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1660594278,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "This is all great stuff, anyway we could get the design doc merged here? \n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/44547\n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, that doc has outlived its usefulness, and got a lot less engagement than actually just starting to build the damn thing.\n\nFWIW, design docs are intended to make sure that someone doesn't waste their time in implementation on something that's a non-starter (like the mentioned \"use libredfish\" pattern in the original design).  The original author of that doc hasn't been related to the implementation in a while, so that's I think some of the confusion.\n\nAt this point, I think we need documentation in Redfish.md (which yes, Carson should build some portion of as part of this series), but in terms of the design, we have something that several from the community have attempted to use, and used successfully, based on pretty incremental patches to existing functions.  That seems like a win to me.  I think we got the right result in lieu of our design doc process being a mess, and I think the right approach is to start commenting on this series and pushing patches on top if there are folks interested in the implementation."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 31
        },
        {
            "number": 11,
            "revision": "aabf4000757b4af1fd6cebd446010014d67dc59d",
            "parents": [
                "b0d3a8562bb11ac9279aa234ce60cf619b64ca6a"
            ],
            "ref": "refs/changes/62/56062/11",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1660843146,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Do you want to add this special case in the commit message?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It's in the code, which is part of the patch.  i don't think it needs to be in the commit message."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Going to close this out.  Nan, I'm always happy to talk, and I'm happy to make whatever changes are needed here to this comment, but I think this is the last open and I don't want to hold up 10 patches on a commit message, so I'm going to close it."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "nit: you already have a class defined; could this be part of the class method to limit the scope further?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I can try and see.  I've had failures before due to trying to make functions like these to be class member functions rather than static free functions"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Making it static member function should work, right? What's the error like?"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This class no longer exists in the latest implementation. \n\nDone."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 31
        },
        {
            "number": 12,
            "revision": "c7a59af1df3dd4029134060cff42afa7b8e7ab9b",
            "parents": [
                "60a86d6c3d0d7afce431e7ae6b1299e7ea7cbb8c"
            ],
            "ref": "refs/changes/62/56062/12",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660867844,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 220,
            "sizeDeletions": 31
        },
        {
            "number": 13,
            "revision": "88e8ebc6ae88200a52c50aedf0daf01bd3788cea",
            "parents": [
                "60a86d6c3d0d7afce431e7ae6b1299e7ea7cbb8c"
            ],
            "ref": "refs/changes/62/56062/13",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660868064,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 221,
            "sizeDeletions": 31
        },
        {
            "number": 14,
            "revision": "97fbf8c59a461c0caad11940178a572a4d508b8c",
            "parents": [
                "0ec21a04729944d1325af62e720439306e584c56"
            ],
            "ref": "refs/changes/62/56062/14",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660920985,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 170,
            "sizeDeletions": 31
        },
        {
            "number": 15,
            "revision": "317bfc6058138752080b5f7b206a22ea17eef01d",
            "parents": [
                "0ec21a04729944d1325af62e720439306e584c56"
            ],
            "ref": "refs/changes/62/56062/15",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660921891,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 31
        },
        {
            "number": 16,
            "revision": "ee7255cc5f6561f2035ce95c9d9a6ff5054efbbc",
            "parents": [
                "2811a0b12f29decb197ee006748df44833d45dac"
            ],
            "ref": "refs/changes/62/56062/16",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1661199050,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 31
        },
        {
            "number": 17,
            "revision": "05916cef0fce4dd2532e1e7e33f6abc4dcf339be",
            "parents": [
                "7f8d8fa938f521d18278e9cb5673bacd83217d09"
            ],
            "ref": "refs/changes/62/56062/17",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1661291454,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/query.hpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": -2
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": -29
                }
            ],
            "sizeInsertions": 173,
            "sizeDeletions": 31
        }
    ]
}