{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I44b03f65c8d77934870fa219f40de3219e0c2b5c",
    "number": 57809,
    "subject": "gpio: initialize gpios",
    "owner": {
        "name": "DelphineCCChiu",
        "email": "Delphine_CC_Chiu@wiwynn.com",
        "username": "DelphineCCChiu"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/57809",
    "hashtags": [],
    "createdOn": 1665472059,
    "lastUpdated": 1668129634,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1665472059,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1665472118,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1665472898,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665586651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665586651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1665586674,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53414/ : SUCCESS"
        },
        {
            "timestamp": 1665586823,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665651672,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665651963,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665653578,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665737980,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665742653,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1666169093,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1666172059,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1666752871,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1666832754,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1666832828,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1666832828,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1666832850,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/54164/ : SUCCESS"
        },
        {
            "timestamp": 1666832871,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1666836132,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1666836170,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1666836183,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1667227720,
            "reviewer": {
                "name": "Michael Garner",
                "email": "garnermic@gmail.com",
                "username": "garnermic"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1667243768,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1667292773,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1667293121,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1667381491,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1667390035,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1667795964,
            "reviewer": {
                "name": "Peter Delevoryas",
                "email": "peter@pjd.dev",
                "username": "peterdelevoryas"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668129634,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Abandoned\n\nExecute the initialization of each GPIO in corresponding repo instead of this service."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "a82526dc88c8795bf36e7ed61359a5815c1fb98e",
            "parents": [
                "8fd98f1375d834217c34602204b7c0ad581c846a"
            ],
            "ref": "refs/changes/09/57809/1",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1665472059,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "While it doesn't seem to be spelled out explicitly here as far as I can see, I assume the idea here is that the one-shot service would exit after performing the GPIO initialization described by the config file?\n\nIf so, that doesn't sound like a great fit with the \"modern\" (non-legacy) kernel GPIO interface, under which I believe GPIO state is undefined after the process exits (or the relevant file descriptors are closed).  Depending on implementation details of the underlying components (kernel/drivers, hardware), whatever initialization had been performed might just be immediately reverted.\n\n(And alternately, if the process sticks around to maintain the specified GPIO state I think that would prevent anything else from being able to access those GPIOs, which also probably isn't what we'd want -- if you just want GPIOs tied statically, a device-tree gpio-hog could achieve that.)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It appears that you've deleted significant portions of the design document template.  Please don't do that.\n\nWhat are the repositories you're expecting to be affected by this feature?  Or are you requesting a new repository?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "While it doesn't seem to be spelled out explicitly here as far as I can see, I assume the idea here is that the one-shot service would exit after performing the GPIO initialization described by the config file?\n\nReply:\nYes, this is a one-shot service and would exit after performing the GPIO initialization described by the config file.\n\nIf so, that doesn't sound like a great fit with the \"modern\" (non-legacy) kernel GPIO interface, under which I believe GPIO state is undefined after the process exits (or the relevant file descriptors are closed).  Depending on implementation details of the underlying components (kernel/drivers, hardware), whatever initialization had been performed might just be immediately reverted.\n\n(And alternately, if the process sticks around to maintain the specified GPIO state I think that would prevent anything else from being able to access those GPIOs, which also probably isn't what we'd want -- if you just want GPIOs tied statically, a device-tree gpio-hog could achieve that.)\n\nReply:\nWe have surveyed device-tree gpio-hog, but after implementing it, the resource would be occupied causing that other clients couldn't access specific gpio.\nCurrently, we are discussing with upstream. \nHowever, for short-term solution, we provided a service that not only could initialize gpios but also any clients could access all gpios."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "It appears that you've deleted significant portions of the design document template.  Please don't do that.\n\nReply:\nWe will add all the indispensable portions to the design document.\n\nWhat are the repositories you're expecting to be affected by this feature?  Or are you requesting a new repository?\n\nReply:\nYes, we are requesting a new repository for gpio initialization."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> However, for short-term solution, we provided a service that not only could initialize gpios but also any clients could access all gpios.\n\nBut the problem there is that the /dev/gpiochip API (what libgpiod uses internally) doesn't allow that model to work -- if the process that does the initialization exits, the state of the GPIOs it initialized may well change back to what they started out as (or something else entirely -- it doesn't guarantee anything)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Could you provide more detail about the model that you mentioned?\n\nCould you provide some examples for the behavior that the state of GPIOs may change back to what they started out as after the process exits?\n\nIn our user cases, we do initialization for GPIO which direction is output and not open-drain pin\nFurthermore, after our testing, the process could works."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Unfortunately I haven't been able to find much in the way of actual documentation, but note the warning in the output of `gpioset --help`, which is from the libgpiod repo (emphasis added):\n\n```\n$ gpioset --help\nUsage: gpioset [OPTIONS] <chip name/number> <offset1>=<value1> <offset2>=<value2> ...\n\nSet GPIO line values of a GPIO chip and maintain the state ***until the process exits***\n\n...\n\nNote: the state of a GPIO line controlled over the character device reverts to default\nwhen the last process referencing the file descriptor representing the device file exits.\nThis means that it's wrong to run gpioset, have it exit and expect the line to continue\nbeing driven high or low. It may happen if given pin is floating but it must be interpreted\nas undefined behavior.\n```\n\n(Thanks @arj for the pointer on that.)\n\nFrom a bit of digging through the kernel code, I think that undefined-ness may stem at least in part from the `gc->free()` callback here: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpio/gpiolib.c?id=v6.0#n2029\n\nSo, it's not surprising that it may happen to work on your particular system, but it's not guaranteed and we probably shouldn't be relying on it (it may well vary between different devices & drivers, e.g. due to differences in the `->free()` callback linked above)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "We have validated the driver code but we didn't see that gc->free() be called after our service exits."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "We think gc->free() is called in driver porting phase, so after the gpio driver is successfully probed, gc->free() could't be called in application layer when we use any gpio related drivers."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Minor fix-ups in formatting to resolve."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "I don't think the \"set gpio state and exit\" problem has really been resolved here (and frankly I don't see any clear way it could be)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Before discuss the \"set gpio state and exit\" solution, do you agree the concept that gc->free() could't be called in application layer when users use any gpio related drivers.\n\nOr do you have any other concern on that concept?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "That's an implementation detail, and hence not really something I think should be a central focus of discussion.  The crux of the problem is the aspect described in the bit of `gpioset --help` output quoted above, which as far as I can see renders the whole approach proposed in this document unworkable."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "The service that we implemented uses the API in libgpiod not \"gpioset\" tool.\n\nMoreover, after checking the API in libgpiod, the value wouldn't restore to default after using the API."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> The service that we implemented uses the API in libgpiod not \"gpioset\" tool.\n\nWhile the message quoted above was printed by the gpioset command-line tool, the warning applies equally to a program using the libgpiod API, because it would be doing exactly the same thing as gpioset internally: calling a function in the libgpiod API to set the state of a GPIO, and then exiting.  It's not that the gpioset tool is doing some weird that makes that usage pattern not work; it's a fundamental property of the underlying (kernel-level) API.\n\n> Moreover, after checking the API in libgpiod, the value wouldn't restore to default after using the API.\n\nIf I'm understanding you correctly here, you're describing the results of testing you did?  If so, that doesn't really help, because while it may appear to work on the specific hardware and kernel version you tested on, it's not a guaranteed property of the API, and hence may behave completely differently for someone running different hardware, or might change in a future kernel release."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Peter Delevoryas",
                        "email": "peter@pjd.dev",
                        "username": "peterdelevoryas"
                    },
                    "message": "Zev is right, the issue is that this service is a \"oneshot\" service and libgpiod doesn't support that. The level is not guaranteed to persist.\n\nLike Zev suggested, we should use a gpio-hog in the dts for lines that we want to set and forget. See the documentation here: https://www.kernel.org/doc/Documentation/devicetree/bindings/gpio/gpio.txt.\n\nIf we actually have some important logic that needs to run to determine how to set the GPIO's, then that should be a long-running service that controls the GPIO through libgpiod. For those, I think we should include the actual data center use-case that we're targeting."
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 27,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Please wrap all lines at the allowed length of 80 characters."
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 27,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "GPIO.  Capitalization of GPIO needs to be consistent in this doc except when it is in a command or file name."
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 57,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "- ChipId: This is the device name.  It is either offset (\"0\") or the complete GPIO device (\"gpiochip0\")."
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 59,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "GPIO"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 60,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 61,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "GPIO"
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "line": 61,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Revised the format issue"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "type": "ADDED",
                    "insertions": 62,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 74,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "40fed31696879dfcb66cd07077c07e8957a051e7",
            "parents": [
                "8fd98f1375d834217c34602204b7c0ad581c846a"
            ],
            "ref": "refs/changes/09/57809/2",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1666832754,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michael Garner",
                        "email": "garnermic@gmail.com",
                        "username": "garnermic"
                    },
                    "message": "Looks OK from a Meta greatlakes platform perspective."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-initialization-service.md",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        }
    ]
}