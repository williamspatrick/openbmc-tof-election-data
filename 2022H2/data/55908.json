{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I3dc3009a367a61fa6d25b24d1978c23d4ac785ed",
    "number": 55908,
    "subject": "Handle redfish 404 for non-GET requests",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55908",
    "hashtags": [],
    "createdOn": 1658794590,
    "lastUpdated": 1662567108,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1658794590,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1658794668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658794668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1658794690,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/47785/ : FAILURE"
        },
        {
            "timestamp": 1658794876,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1658794927,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658794932,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1658795421,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47786/ : SUCCESS"
        },
        {
            "timestamp": 1658802713,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1658807131,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1658877875,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1658877949,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1659720658,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1659720747,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1662567108,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Abandoned\n\nAbandoning this CL now that the proper fix has been merged https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55937"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "9143b94dbc13f64c76b106052b0ba8c0a358943f",
            "parents": [
                "0d7702c0246c5948caf12a3e441f74952c7d0ccf"
            ],
            "ref": "refs/changes/08/55908/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1658794590,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_v1.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "2ab3b2a9f02cef9aeeceb6a600f7b0f9ecc44c36",
            "parents": [
                "0d7702c0246c5948caf12a3e441f74952c7d0ccf"
            ],
            "ref": "refs/changes/08/55908/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1658794876,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is already supported I thought, but clearly it's not working in your case.  Can we get a better explanation of what you're trying to accomplish?\n\nhttps://github.com/openbmc/bmcweb/blob/45248ba327bcf330fd2e49f90a59159fdf8ebecc/http/routing.hpp#L1268\n\nI suspect in this case the handling needs to be aggregation specific?\n\n\nAlso, POST/PUT/PATCH/DELETE can still return 404, so as written, I think this doesn't do the right thing in RESTFUL semantics."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> This is already supported I thought, but clearly it's not working in your case.  Can we get a better explanation of what you're trying to accomplish?\nFrom my testing, it only works for GET requests.  Ultimately I need to\ncall setUpRedfishRouteWithDelegation() when handling requests since that is where the hook for Redfish Aggregation will be located.  In BMCWeb's current state that section of code you linked to will catch all endpoing and method combinations that are not explicitly covered by an instance of BMCWEB_ROUTE.\n\n> https://github.com/openbmc/bmcweb/blob/45248ba327bcf330fd2e49f90a59159fdf8ebecc/http/routing.hpp#L1268\n> \n> I suspect in this case the handling needs to be aggregation specific?\nYeah that's the spot that gets called when we send a non-GET request to a URI that we do not support in BMCWeb.  I didn't want to add a hook there since it would involve editing an http file and we've had previous discussions about not adding Redfish specific code to any of those files.  Also, the lack of a verb list for handling \"/redfish/<path>\" seems to indicate that this was supposed to catch all verbs rather than just GET.\n\n> Also, POST/PUT/PATCH/DELETE can still return 404, so as written, I think this doesn't do the right thing in RESTFUL semantics.\nI did that preserve the current behavior.  We call redfish404() only when we handle a GET request to an unrecognized URI."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > This is already supported I thought, but clearly it's not working in your case.  Can we get a better explanation of what you're trying to accomplish?\n> From my testing, it only works for GET requests.\n\nHMMM... this isn't the intent.  I wonder if we broke something in the router at some point.\n\n>  Ultimately I need to\n> call setUpRedfishRouteWithDelegation() when handling requests since that is where the hook for Redfish Aggregation will be located.  In BMCWeb's current state that section of code you linked to will catch all endpoing and method combinations that are not explicitly covered by an instance of BMCWEB_ROUTE.\n\nhmmmmm.... this needs thought through better so we don't regress our passing redfish-protocol-validator.  Just so we can agree on intent:\n\n1. Any url that doesn't have any handlers registered, or the aggregated resource returns 404, needs to return 404\n2. Any url that has any verb handled, needs to return method not allowed.\n\n> \n> > https://github.com/openbmc/bmcweb/blob/45248ba327bcf330fd2e49f90a59159fdf8ebecc/http/routing.hpp#L1268\n> > \n> > I suspect in this case the handling needs to be aggregation specific?\n> Yeah that's the spot that gets called when we send a non-GET request to a URI that we do not support in BMCWeb.  I didn't want to add a hook there since it would involve editing an http file and we've had previous discussions about not adding Redfish specific code to any of those files.  Also, the lack of a verb list for handling \"/redfish/<path>\" seems to indicate that this was supposed to catch all verbs rather than just GET.\n> \n> > Also, POST/PUT/PATCH/DELETE can still return 404, so as written, I think this doesn't do the right thing in RESTFUL semantics.\n> I did that preserve the current behavior.  We call redfish404() only when we handle a GET request to an unrecognized URI.\n\n\nif I POST /redfish/v1/foobar, does it return 404?  It looks like it's going to return 405?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Setting as WIP for now since a different patch should fix these errors https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55937.\n\nThis patch will get abandoned once that patch gets merged."
                },
                {
                    "file": "redfish-core/lib/redfish_v1.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm confused why we'd make an explicit verb list here.  These are all the common verbs, but if we send TRACE /redfish/v1 we should still get 404."
                },
                {
                    "file": "redfish-core/lib/redfish_v1.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "When we don't have an explicit verb list then it seems to default to only accepting GET.  I chose these verbs because from what I can tell those are the only verbs we use with the other instances of BMCWEB_ROUTE.  Sending TRACE to /redfish/v1 should actually result in a 405 produced by the section of code linked in your above comment."
                },
                {
                    "file": "redfish-core/lib/redfish_v1.hpp",
                    "line": 148,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> When we don't have an explicit verb list then it seems to default to only accepting GET.\n\nThat's a bug, and now how these are intended to work.\n\n>  I chose these verbs because from what I can tell those are the only verbs we use with the other instances of BMCWEB_ROUTE.  Sending TRACE to /redfish/v1 should actually result in a 405 produced by the section of code linked in your above comment.\n\nNot quite.  TRACE /redfish/v1 should return 405 (because /redfish/v1 exists)\n\nTRACE /redfish/v1/Foobar should return 404."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/lib/redfish_v1.hpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 38,
            "sizeDeletions": 1
        }
    ]
}