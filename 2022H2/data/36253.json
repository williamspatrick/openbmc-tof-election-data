{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I40edc99e11ec0664bdd31c4fb3948c16ba0deb7c",
    "number": 36253,
    "subject": "Design: Redfish event generation proposal",
    "owner": {
        "name": "Ratan Gupta",
        "email": "ratankgupta31@gmail.com",
        "username": "ratagupt"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/36253",
    "hashtags": [],
    "createdOn": 1599224389,
    "lastUpdated": 1665657989,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1599224389,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1599460019,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1599551847,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(6 comments)\n\nThis design has been tried before by several before you.  There was one attempt in bmcweb, and it was the whole premise behind go-redfish and its dbus interface to Redfish conversion.  In both cases, it didn't scale to more than a simple 1:1 example, and given how complex our dbus structure is, the complexity of the match definitions exploded to the point where you were probably better off writing code.\n\nSee my comment on line 75.  If this were my feature to get done, that's what I would be looking into."
        },
        {
            "timestamp": 1599744129,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1599790567,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1599790967,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1599791830,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1599814214,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1599837860,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1599961005,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nAnother recommendation:\nWhen starting with examples, use a non-trivial schema, like the Thermal schema for example, that will ensure that your design will work properly, and scale to OpenBMCs needs."
        },
        {
            "timestamp": 1600184374,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1600186631,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1600218109,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601108939,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1604333209,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1604333649,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1605619768,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1607012035,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(3 comments)\n\nAre you going to update with the caching of the properties approach ?"
        },
        {
            "timestamp": 1610977884,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> (3 comments)\n> \n> Are you going to update with the caching of the properties approach ?\n\nIt is already pasted above, The POC is for cacche based approach 38059"
        },
        {
            "timestamp": 1620310638,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\nIs there any update on this commit?"
        },
        {
            "timestamp": 1665657989,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "21306cfca189a06b093b97770416e80f161b1225",
            "parents": [
                "f6ebb02fe8998ed6f0c71dde355008bcb382af30"
            ],
            "ref": "refs/changes/53/36253/1",
            "uploader": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "createdOn": 1599224389,
            "author": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "4cda440c21757d7ec8f64f4cfef7e666c831700b",
            "parents": [
                "f6ebb02fe8998ed6f0c71dde355008bcb382af30"
            ],
            "ref": "refs/changes/53/36253/2",
            "uploader": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "createdOn": 1599460019,
            "author": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Shouldn't this be under designs/ ?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 0,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "will move it over there.."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 7,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Capitilize ?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "trailing spaces"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "based? run this through a spell checker / grammar checker  like grammarly.com or Microsoft word or a lot of others?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please see DEVELOPING.md for rules on why you're not allowed to do that.  Startup times matter in these contexts."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the above design you're making the critical flaw that Redfish resources map 1:1 with dbus resources.  This is in no way the case.  If it were, the Node-specific handler code would not exist, and could be replaced with a simple map.\n\nI think you're oversimplifying the problem.\n\n\nAlso, the above is going to generate a lot of DBus matches for what is used rarely, which will reduce system performance overall."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can you start with some more complex examples, like a sensor threshold?  I think you'll find what I\"m talking about above about over simplifying this."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "There was a design for this once a long time ago.  Nothing was fundamentally wrong with the idea side from the added memory usage, and that's probably doable to optimize.\n\n\nThere was another design that intended to create a new dbus-interface class such that every Resource GET could track the dbus calls and properties that were required to create that response, then you could add watch expressions for them.  That way, we could continue to use our existing dbus->resource code for generating event properties.\n\nThis is still a hard problem, but at least we're not hardcoding a static list of matches.  If it were up to me, this would be the one I would try to tackle this, as it scales with the resource code in bmcweb, and doesn't require every author to go edit this config file."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Thanks Ed for the quick comment/other thought on the same.Let me get back to you on the same"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "> There was a design for this once a long time ago.  Nothing was fundamentally wrong with the idea side from the added memory usage, and that's probably doable to optimize.\n\nI agree on the same.\n\n> There was another design that intended to create a new dbus-interface class such that every Resource GET could track the dbus calls and properties that were required to create that response,\n\nYou mean to say that in bmcweb, we can write this dbus-interface class and whenever any resource get operation happens, it has to go through with this class and then we can add the watch expression for them.\n\nIn that case we need to have to do GET request on all the redfish endpoints before bmcweb- comes up, so that bmcweb can start watching all the required D-bus endpoints.\n\nor \n\ndo you want to merge both the approach.\n\n1) Cache the properties\n2) When the bmcweb comes up it has to fill those properties so it needs to make the D-bus calls to fill these properties.\n\nOne more thing we have to do reverse mapping to get the Redfish Resource/ property from the Dbus events, To handle this- whenever resource get happens- Each Resource can provide its Redfish specific deatils(Redfish Resource Path, Redfish Property etc)."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > There was a design for this once a long time ago.  Nothing was fundamentally wrong with the idea side from the added memory usage, and that's probably doable to optimize.\n> \n> I agree on the same.\n> \n> > There was another design that intended to create a new dbus-interface class such that every Resource GET could track the dbus calls and properties that were required to create that response,\n> \n> You mean to say that in bmcweb, we can write this dbus-interface class and whenever any resource get operation happens, it has to go through with this class and then we can add the watch expression for them.\n> \n> In that case we need to have to do GET request on all the redfish endpoints before bmcweb- comes up, so that bmcweb can start watching all the required D-bus endpoints.\n\nThis is what I meant, although you don't need to do this on startup, only when the EventService is connected or subscribed to, and only for the resources that have been subscribed.  It's not perfect, I'll admit, but it means we're writing the dbus->json code once, not twice, and we don't have to rewrite everything we have (which took a long time to do).\n\n> \n> or \n> \n> do you want to merge both the approach.\n> \n> 1) Cache the properties\n> 2) When the bmcweb comes up it has to fill those properties so it needs to make the D-bus calls to fill these properties.\n\nThat's one possible solution that would work.\n\n> \n> One more thing we have to do reverse mapping to get the Redfish Resource/ property from the Dbus events, To handle this- whenever resource get happens- Each Resource can provide its Redfish specific deatils(Redfish Resource Path, Redfish Property etc).\n\nYour property cache would become your mapping to a Resource.  There are multiple DBus properties that make up any given Redfish property, and a few DBUS properties couple apply to multiple redfish properties simultaneously.   The biggest hurdle becomes the mapper, so you might have to watch for those events as well and invalidate the cache on changes?\n\nThis is once of the harder problems in computer science in general.  I'd recommend looking into go-redfish to see how it solved it, so we can either copy it, or use it as learning."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "is this https://github.com/stmcginnis/gofish correct one?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like it moved to here:\nhttps://github.com/sailfishdell/sailfish"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, I took a look on the above repo, I didn't get how they plugged the back end. The documentation is very minimal.\n\nhttps://github.com/sailfishdell/sailfish/blob/master/doc/hld.txt#L41\n\nThe strategy for maintaining this internal data\nstore is by listening to a stream of events that represent all of the\nactions/activity happening in the system.  This stream of events is produced\nby the sailfish pump and injected into the localhost/internal http api\nendpoint. This stream of events is currently encoded in JSON (see the pump HLD\nsection)\n\nThe sailfish server listens on the internal-only HTTP endpoint /api/EventInject\nand takes all events submitted and puts them onto the internal event bus.\n\nNot sure where I can get the sailfish pump code.\n\nI want to know the format of the message which is coming to this internal HTTP endpoint.. \n\nThey had it something for openBMC as it is written here https://github.com/sailfishdell/sailfish#where-to-start\n\nBut I didn't find the plugins/obmc/bmc.go file which can help.\n\nDo you have any idea on the same?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nope, I had nothing to do with go-redfish (or sailfish as it is now).  You might consider emailing the authors, or seeing if anyone is on the mailing list."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "I would do the same and meanwhile, should I proceed with caching of the properties approach as we discussed above?\nI can start with log services and thermal redfish resources."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please avoid focusing on the Redfish Node class.  This will need to exist outside the conventional Request-Response callbacks, which is what the Node class encapsulates.\n\nAlso, I'd like to see the Node class deprecated at some point.  It does very little today."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "I thought we can leverage the Node class here to move the common code in the Node class, anyways we are discussing on the alternate way at line no 75."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Even if you were sticking with this plan, the Node class is the wrong place to do it.  It has a concept of routes (which include wildcards), not resources."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What about for the resources not based on redfish properties?"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "I didn't get this.\n\nDo you mean to say that D-bus Resources not based on the redfish properties?\n  for us those D-bus objects are not interested objects.\n\nDo you mean to say that Redfish Resources not based on the D-bus ?\n   Those cases can be handled in the bmcweb code itself and we don't need any watch expressions on them.\n\nIf these are not the cases, please get me an example."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "No, I mean to say there are Redfish resources that are not based on DBus.\n\nLog services for example, reads from a file:\nhttps://github.com/openbmc/bmcweb/blob/d206b437e3fb79a89205a9fbe748b017d312ddfa/redfish-core/lib/log_services.hpp"
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, I am doing some experiments with this approach(caching approach), I am starting with logservices.."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Ed, I have pushed the pull request for getting the feedback, Can you please take a look?\nhttps://github.com/openbmc/bmcweb/pull/163."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I already closed your pull request.  Please open a gerrit review."
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "line": 77,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "Hi Ed, I opened the gerrit review https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/38059"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "redfish-event-generation-proposal.md",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 93,
            "sizeDeletions": 0
        }
    ]
}