{
    "project": "openbmc/openbmc",
    "branch": "master",
    "id": "Ia87944b9bfa93b433b0351e7ad0b0de890e7b092",
    "number": 4199,
    "subject": "Add dbus->ipmi hookups for Zaius by writing config.yaml.",
    "owner": {
        "name": "Emily Shaffer",
        "email": "emilyshaffer@google.com",
        "username": "nasamuffin"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openbmc/+/4199",
    "hashtags": [],
    "createdOn": 1494630165,
    "lastUpdated": 1665685815,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1494630165,
            "reviewer": {
                "name": "Emily Shaffer",
                "email": "emilyshaffer@google.com",
                "username": "nasamuffin"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1494630194,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1495049251,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Ok-To-Test+1"
        },
        {
            "timestamp": 1495049578,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(4 comments)"
        },
        {
            "timestamp": 1495049862,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started https://openpower.xyz/job/openbmc-build-gerrit-trigger-multi/3630/"
        },
        {
            "timestamp": 1495050463,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-build-gerrit-trigger-multi/3630/ : SUCCESS"
        },
        {
            "timestamp": 1495050477,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started \n\nReal hardware build started"
        },
        {
            "timestamp": 1495052111,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Failed \n\nhttps://jenkins-openbmc.github.io/openbmc-logs/change-4199/patchset-1 : Real hardware test failed"
        },
        {
            "timestamp": 1496953295,
            "reviewer": {
                "name": "Emily Shaffer",
                "email": "emilyshaffer@google.com",
                "username": "nasamuffin"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1498011546,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1522241244,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1:\n\nHi Emily.  Was the equivalent function for Zaius done elsewhere?  Wondering if we can clean this up."
        },
        {
            "timestamp": 1665685815,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ae7bde83fe04badfe22c3fc1a9eefdbd5dad4b6f",
            "parents": [
                "750717767c658ea91faca4b1e44372784e2278fe"
            ],
            "ref": "refs/changes/99/4199/1",
            "uploader": {
                "name": "Emily Shaffer",
                "email": "emilyshaffer@google.com",
                "username": "nasamuffin"
            },
            "createdOn": 1494630165,
            "author": {
                "name": "Emily Shaffer",
                "email": "emilyshaffer@google.com",
                "username": "nasamuffin"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Would prefer zaius: on this as well."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Should this be two different commits?  From the code it looks like maybe just a continuation of the title.  Or, that the title is actually the body and the body is actually the title.\n\n\"zaius: add support for UCD90160 voltage readings\" would be a good title?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Emily Shaffer",
                        "email": "emilyshaffer@google.com",
                        "username": "nasamuffin"
                    },
                    "message": "Will reword commit message for next commit"
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/recipes-phosphor/ipmi/zaius-ipmi-sensor-inventory-map/config.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What do these signify?  Is this a \"fixup\" because the rail reading is wrong?  If so, I think we tend to want that done in the hwmon side so it is available for every process."
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/recipes-phosphor/ipmi/zaius-ipmi-sensor-inventory-map/config.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Emily Shaffer",
                        "email": "emilyshaffer@google.com",
                        "username": "nasamuffin"
                    },
                    "message": "Many of the comments you've made can be answered pretty simply by me explaining the IPMI spec further.  Here we go:\n\n- The general flow from `ipmitool sensor list` is 1) request a reservation ID, 2) request info about the SDR, 3) for each sensor 3a) call Get SDR and 3b) call Get Sensor Reading.\n- Get SDR is expected to return some constant information about the sensor, such as type information and scaling coefficients. (These three values are scaling coefficients; see section 36.3 of the spec, \"Sensor Reading Conversion Formula\".)  The scaling information is important because of the limitation on the precision of the result of Get Sensor Reading, and ipmitool applies the formula shown in that spec chapter to the reading.\n- Get Sensor Reading returns exactly one 8-bit unsigned integer.  Obviously, readings from, say, a voltage rail in mV will not fit into this integer.\n- DBus already gives us nicely formatted readings in units - that is, a reading in mV, because it has 64b to work with.\n\nIf we could fit it into the reading, it would be sufficient to not populate these coefficients and just return the value from DBus (at least in the case of the UCD90160).  However, since we can't fit it into the reading, and we know ipmitool will be applying that formula anyway, what we've decided to do is let the user choose their own coefficients based on their knowledge of the expected range of their sensor (hence why multiplierM is different for each of these rails - some range up to 12V and some range up to 1V).  We apply the inverse of the formula above to the (correct) value from DBus, and then provide the coefficients we used to ipmitool via the SDR to basically undo the downscaling we did.  There is also a handy coefficient in that formula that we can use to provide the scale we get from DBus, i.e., indicating that the value given is in mV and not V.\n\nPlease ping me offline if you're not following.  When other users want to set up sensors over IPMI for their boards they will need to understand this too - hence the doc change I put up for review alongside."
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/recipes-phosphor/ipmi/zaius-ipmi-sensor-inventory-map/config.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "meta-phosphor/common/recipes-phosphor/ipmi/phosphor-ipmi-sensor-inventory/config.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why aren't these defaulted-if-unspecified?"
                },
                {
                    "file": "meta-phosphor/common/recipes-phosphor/ipmi/phosphor-ipmi-sensor-inventory/config.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Emily Shaffer",
                        "email": "emilyshaffer@google.com",
                        "username": "nasamuffin"
                    },
                    "message": "Only because I'm not sure how to do it. Will look into it and fix for next commit."
                },
                {
                    "file": "meta-phosphor/common/recipes-phosphor/ipmi/phosphor-ipmi-sensor-inventory/config.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The most recent version of the YAML python script I had updated to use 'foo.get(..., <default value>)' syntax, so the pattern should be pretty obvious as you are doing your rebase."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/recipes-phosphor/ipmi/zaius-ipmi-sensor-inventory-map/config.yaml",
                    "type": "ADDED",
                    "insertions": 168,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/common/recipes-phosphor/ipmi/phosphor-ipmi-sensor-inventory/config.yaml",
                    "type": "MODIFIED",
                    "insertions": 198,
                    "deletions": 0
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/recipes-phosphor/ipmi/zaius-ipmi-sensor-inventory-map-native.bb",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "meta-openbmc-machines/meta-openpower/meta-ingrasys/meta-zaius/conf/machine/zaius.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 397,
            "sizeDeletions": 0
        }
    ]
}