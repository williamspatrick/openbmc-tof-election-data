{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Iad0f1fd232c30aeec046d55d45e82f400a8f7e95",
    "number": 35448,
    "subject": "State.Watchdog: add Expired & ExpiredTimerAction properties",
    "owner": {
        "name": "Jeremy Kerr",
        "email": "jk@ozlabs.org",
        "username": "jk-ozlabs"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/35448",
    "hashtags": [],
    "createdOn": 1596855148,
    "lastUpdated": 1665685109,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1596855148,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1596855157,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1596891920,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 1: Code-Review+1\n\nLGTM.  I like to have one of the ipmi maintainers sign off for ipmi things.  Patrick you can merge as well.  If there isn't any movement by mid week I'll merge this."
        },
        {
            "timestamp": 1597032854,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1597032864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1597032900,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\nv2: default to 'None', not 'Reserved'."
        },
        {
            "timestamp": 1597033261,
            "reviewer": {
                "name": "Deepak Kodihalli",
                "email": "deepak.kodihalli.83@gmail.com",
                "username": "dkodihal"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1597052280,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1597054164,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1597058905,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1597063866,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\n... in fact, we probably also need another boolean property, representing whether the timer has expired (and therefore whether the ExpiredTimerUse and ExpiredTimerAction fields are valid).\n\nI'll send a v3."
        },
        {
            "timestamp": 1597069652,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1597069665,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1597287552,
            "reviewer": {
                "name": "Tom Joseph",
                "email": "rushtotom@gmail.com",
                "username": "tomjoseph83"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1597298133,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1597322487,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1597339083,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1597384775,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1597414121,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\n(I don't have any opinion on this part of the discussion, but just giving information.)"
        },
        {
            "timestamp": 1665685109,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "00ef5e61ade5ee8fe4d187d05cd241f7235cc2dd",
            "parents": [
                "0f5729187d1e271453dc80433ab92814f9fb6393"
            ],
            "ref": "refs/changes/48/35448/1",
            "uploader": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "createdOn": 1596855148,
            "author": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "cb0401f31a500ba40bcc8ab53e888682631d5a36",
            "parents": [
                "0f5729187d1e271453dc80433ab92814f9fb6393"
            ],
            "ref": "refs/changes/48/35448/2",
            "uploader": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "createdOn": 1597032854,
            "author": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "Is this to support the Bit 3:0 in EventData2, timer user at expiration?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "No, this is for assertion offsets 0x00 - 0x03, which indicate the action taken on expiry."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "So I guess we cannot use ExpireAction because that will apply for the next time, GetSensorReading is meant to show the current status."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Yes - just to clarify though: The spec isn't super clear on this, but I believe the Watchdog2 sensor is supposed to only assert states for an *expired* watchdog.\n\nA couple of reasons:\n\n - the eventdata2[3:0] bits are clearly for the \"timer use\" value at the last expiry\n\n - the use of the past-tense of \"expired\" for the definition of offset 0. It follows that the other action offsets should also have the same semantics - ie., showing the action taken on the most recent expired watchdog.\n\nI don't think it makes much sense to reflect the current action value for offsets 0x00 - 0x03, as that information is available from the Get Watchdog Timer IPMI command."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "f52138af0c21dc118101e8bf256d5868bc42d2f9",
            "parents": [
                "0f5729187d1e271453dc80433ab92814f9fb6393"
            ],
            "ref": "refs/changes/48/35448/3",
            "uploader": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "createdOn": 1597069652,
            "author": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "I would rather see the validity expressed directly as part of each value below, that way you can read individual values out of the interface without requiring an atomic GetAll properties call."
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "There's not really a use-case for reading just one of the ExpiredTimerAction / ExpiredTimerUse fields - the ipmi sensor implementation needs both, as does the ipmi watchdog get implementation. So, those will be using the GetAll call anyway.\n\nHowever, I'm fine to add that if it's a requirement. However, I'm not sure how we'd describe the type here in the YAML - are you after something like a dbus `(bs)` type?"
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 52,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I'm not sure how we'd describe the type here in the YAML - are you after something like a dbus `(bs)` type?\n\nYou can use structs/tuples for properties in the YAML if that helps.\nhttps://github.com/openbmc/sdbusplus/blob/master/docs/interface.md#containers"
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "Tom Joseph",
                        "email": "rushtotom@gmail.com",
                        "username": "tomjoseph83"
                    },
                    "message": "nit:ExpiredTimerUse"
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 55,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Ack"
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need a value of \"unknown\" when it cannot be determined what was done?  Is there any case when you cannot determine what the watchdog did?"
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "line": 63,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Not at the moment, no. The service exposing these properties is also the implementation of the watchdog, so it's very likely to know what it did."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/State/Watchdog.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 0
        }
    ]
}